.head 0 +  Application Description: SQLWindows version 5.0 starter application
.head 1 -  Outline Version - 4.0.35
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400010000
0020: 00000000002F0100 002C000000020000 0003000000FFFFFF FFFFFFFFFFFCFFFF
0040: FFE9FFFFFF400000 00240000004C0400 00DD020000010000 0001000000010000
0060: 000F4170706C6963 6174696F6E497465 6D00000000
.enddata
.head 2 -  Outline Window State: Maximized
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003001B00 02000000C9040000 0000081ECD120500 1D00FFFF4D61696E
0020: 001E000000040043 0400000000081ECD 120000F400FFFF43 6C61737365730029
0040: 0001000400CB0300 000000E91E800A00 008600FFFF496E74 65726E616C204675
0060: 6E6374696F6E7300 2000010004006F03 00000000E91E800A 0000DF00FFFF5661
0080: 726961626C657300
.enddata
.data VIEWSIZE
0000: 8800
.enddata
.head 3 -  Left: -0.013"
.head 3 -  Top: 0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: D4181509B80B1A00
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left: 4.15"
.head 3 -  Top: 1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left: 0.225"
.head 3 -  Top: 0.042"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left: 9.275"
.head 3 -  Top: 3.01"
.head 2 -  Fully Qualified External References? No
.head 2 -  Reject Multiple Window Instances? Yes
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 2 -  Edit Fields Read Only On Disable? No
.head 1 +  Libraries
.head 2 -  File Include: salmisc.APL
.head 2 -  !
.head 2 -  !
.head 2 -  ! File Include: salmdi.apl
.head 2 -  ! File Include: salsys.apl
.head 2 -  ! File Include: salmisc.apl
.head 2 -  ! File Include: saldynamic.apl
.head 2 -  !
.head 2 -  !
.head 2 -  File Include: cstste.apl
.head 2 -  File Include: steutl.apl
.head 2 -  ! Twee libraries voor tabs
.head 2 -  File Include: QCKTABS.APL
.head 2 -  ! CTD2000
.head 2 -  !
.head 2 -  File Include: ttmngr.apl
.head 2 -  !
.head 2 -  ! CTD2000
.head 2 -  !
.head 2 -  File Include: erreur.apl
.head 2 -  File Include: shell.apl
.head 2 -  !
.head 2 -  File Include: Mailslots.apl
.head 2 -  File Include: email.apl
.head 2 -  File Include: excel.apl
.head 2 -  File Include: rtf4.apl
.head 2 -  File Include: WinSDKcst.apl
.head 2 -  File Include: WinSDKfct.apl
.head 2 -  File Include: blatmail.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: System Default
.head 4 -  Font Size: System Default
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: System Default
.head 4 -  Font Size: System Default
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: System Default
.head 4 -  Font Size: System Default
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: System Default
.head 4 -  Font Size: System Default
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: dd/MM/yyyy hh:mm
.head 3 -  Date/Time: dd/MM/yyyy
.head 2 +  External Functions
.head 3 -  !
.head 3 -  ! Mis en commentaire et déplacé dans SHELL.APL
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 +  Library name: KERNEL32.DLL
.head 4 -  ThreadSafe: No
.head 4 +  Function: FileTimeToSystemTime
.head 5 -  Description: 
example:
 Call FileTimeToSystemTime( nCreationTime, nYear, nMonth, nDayOfWeek, nDay, nHour, nMinute, nSecond, nMilisecond )
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 6 +  structPointer
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 4 +  Function: GetFileTime
.head 5 -  Description: 
example:
Call GetFileTime( nFile, nCreationTime, nAccessTime, nWriteTime)
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 6 -  Number: LONG
.head 6 -  Number: LONG
.head 6 -  Number: LONG
.head 4 +  Function: OpenFile
.head 5 -  Description: 
example:
Set nStructSize = 136
Set nFile =  OpenFile( psFile, nStructSize ,nDummy,nDummy,nDummy,nDummy, s, 0x00000000 )
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: HANDLE
.head 5 +  Parameters
.head 6 -  String: LPCSTR
.head 6 +  structPointer
.head 7 -  Number: BYTE
.head 7 -  Receive Number: BYTE
.head 7 -  Receive Number: DWORD
.head 7 -  Receive Number: DWORD
.head 7 -  Receive Number: DWORD
.head 7 -  Receive String: char[255]
.head 6 -  Number: UINT
.head 4 -  !
.head 4 +  Function: _lclose
.head 5 -  Description: 
example:
Call _lclose( nFile )
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  Number: HANDLE
.head 3 +  Library name: WSOCK32.DLL
.head 4 -  ThreadSafe: No
.head 4 +  Function: accept
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  ! the listening socket
.head 6 -  Number: INT
.head 6 -  ! the client address
.head 6 -  Receive String: LPVOID
.head 6 -  ! length of the client address
.head 6 -  Receive Number: LPINT
.head 4 +  Function: AcceptEx
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Boolean: BOOL
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  Receive String: LPVOID
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  Receive Number: LPDWORD
.head 6 -  Receive String: LPVOID
.head 4 +  Function: GetAcceptExSockaddrs
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 -  Returns
.head 5 +  Parameters
.head 6 -  String: LPVOID
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  Number: DWORD
.head 6 -  Receive String: LPVOID
.head 6 -  Receive Number: LPINT
.head 6 -  Receive String: LPVOID
.head 6 -  Receive Number: LPINT
.head 4 +  Function: getpeername
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  ! the client address
.head 6 -  Receive String: LPVOID
.head 6 -  ! length of the client address
.head 6 -  Receive Number: LPINT
.head 4 +  Function: bind
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: closesocket
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 4 +  Function: connect
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: gethostbyaddr
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: gethostbyname
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 4 +  Function: gethostname
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 6 -  Number: INT
.head 4 +  Function: getservbyname
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 6 -  String: LPVOID
.head 4 +  Function: getsockname
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  ! the listening socket
.head 6 -  Number: INT
.head 6 -  ! the client address
.head 6 -  Receive String: LPVOID
.head 6 -  ! length of the client address
.head 6 -  Receive Number: LPINT
.head 4 +  Function: htonl
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 4 +  Function: htons
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: SHORT
.head 5 +  Parameters
.head 6 -  Number: SHORT
.head 4 +  Function: inet_addr
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  String: LPSTR
.head 4 +  Function: inet_ntoa
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 4 +  Function: listen
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: ntohl
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 4 +  Function: ntohs
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: SHORT
.head 5 +  Parameters
.head 6 -  Number: SHORT
.head 4 +  Function: recv
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Receive String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: recvfrom
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Receive String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  Receive String: LPVOID
.head 6 -  Receive Number: LPINT
.head 4 +  Function: send
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: sendto
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: setsockopt
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  Receive String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: socket
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 6 -  Number: INT
.head 4 +  Function: WSAAsyncGetHostByName
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Window Handle: HWND
.head 6 -  Number: UINT
.head 6 -  String: LPSTR
.head 6 -  Receive String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: WSAAsyncGetServByName
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: LONG
.head 5 +  Parameters
.head 6 -  Window Handle: HWND
.head 6 -  Number: UINT
.head 6 -  String: LPSTR
.head 6 -  Number: LONG
.head 6 -  Receive String: LPVOID
.head 6 -  Number: INT
.head 4 +  Function: WSAAsyncSelect
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: INT
.head 6 -  Window Handle: HWND
.head 6 -  Number: INT
.head 6 -  Number: LONG
.head 4 +  Function: WSACleanup
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 -  Parameters
.head 4 +  Function: WSAGetLastError
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: SHORT
.head 5 -  Parameters
.head 4 +  Function: WSAStartup
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: WORD
.head 6 +  structPointer
.head 7 -  Receive Number: WORD
.head 7 -  Receive Number: WORD
.head 7 -  Receive String: char[255]
.head 7 -  Receive String: char[1]
.head 7 -  Receive String: char[129]
.head 7 -  Receive Number: USHORT
.head 7 -  Receive Number: USHORT
.head 7 -  Receive Number: LONG
.head 3 +  Library name: KERNEL32.DLL
.head 4 -  ThreadSafe: No
.head 4 +  Function: lstrlen
.head 5 -  Description:
.head 5 -  Export Ordinal: 0
.head 5 +  Returns
.head 6 -  Number: INT
.head 5 +  Parameters
.head 6 -  Number: LONG
.head 4 -  !
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 4 -  ! WINDOW Messages
.head 4 -  Number: WM_CREATE 		= 0x0001
.head 4 -  Number: WM_NCCREATE 			= 0x0081
.head 4 -  ! Number: GWL_STYLE 			= -16
.head 4 -  Number: NO_WS_CAPTION 			= 0xFF3FFFFF
.head 4 -  Number: SM_CXSCREEN			= 0
.head 4 -  Number: SM_CYSCREEN			= 1
.head 4 -  ! -----------------
.head 4 -  Number: WM_SETREDRAW 			= 0x000B
.head 4 -  Number: WM_MOVE 		= 0x0003
.head 4 -  Number: WM_SIZE 		= 0x0005
.head 4 -  Number: WM_ACTIVATE 		= 0x0006
.head 4 -  Number: WM_SETFOCUS 		= 0x0007
.head 4 -  Number: WM_KILLFOCUS 		= 0x0008
.head 4 -  Number: WM_PAINT 		= 0x000F
.head 4 -  Number: WM_CLOSE 		= 0x0010
.head 4 -  Number: WM_ACTIVATEAPP 	= 0x001C
.head 4 -  Number: WM_SETCURSOR        	= 0x0020
.head 4 -  !
.head 4 -  Number: WM_ICONERASEBKGND	= 0x0027
.head 4 -  ! Number: WM_GETFONT		= 0x0031
.head 4 -  !
.head 4 -  Number: WM_WINDOWPOSCHANGED 	= 0x0047
.head 4 -  Number: WM_WINDOWPOSCHANGING 	= 0x0046
.head 4 -  !
.head 4 -  Number: WM_NCPAINT		= 0x0085
.head 4 -  Number: WM_NCACTIVATE 		= 0x0086
.head 4 -  !
.head 4 -  Number: WM_KEYDOWN		= 0x0100
.head 4 -  Number: WM_KEYUP		= 0x0101
.head 4 -  Number: WM_CHAR		= 0x0102
.head 4 -  Number: WM_DEADCHAR		= 0x0103
.head 4 -  Number: WM_SYSKEYDOWN	= 0x0104
.head 4 -  Number: WM_SYSKEYUP		= 0x0105
.head 4 -  Number: WM_SYSCHAR		= 0x0106
.head 4 -  Number: WM_SYSDEADCHAR	= 0x0107
.head 4 -  !
.head 4 -  Number: WM_COMMAND		= 0x0111
.head 4 -  Number: WM_SYSCOMMAND	= 0x0112
.head 4 -  ! Number: WM_HSCROLL 		= 0x0114
.head 4 -  ! Number: WM_VSCROLL 		= 0x0115
.head 4 -  !
.head 4 -  Number: WM_MOUSEMOVE 		= 0x0200
.head 4 -  Number: WM_LBUTTONDOWN      	= 0x0201
.head 4 -  Number: WM_LBUTTONUP        	= 0x0202
.head 4 -  Number: WM_LBUTTONDBLCLK    	= 0x0203
.head 4 -  Number: WM_RBUTTONDOWN     	= 0x0204
.head 4 -  Number: WM_RBUTTONUP        	= 0x0205
.head 4 -  Number: WM_RBUTTONDBLCLK    	= 0x0206
.head 4 -  Number: WM_MBUTTONDOWN      	= 0x0207
.head 4 -  Number: WM_MBUTTONUP        	= 0x0208
.head 4 -  Number: WM_MBUTTONDBLCLK   	= 0x0209
.head 4 -  !
.head 4 -  Number: WM_PARENTNOTIFY 	= 0x0210
.head 4 -  !
.head 4 -  ! /* MDI messages */
.head 4 -  Number: WM_MDICREATE		= 0x0220
.head 4 -  Number: WM_MDIDESTROY		= 0x0221
.head 4 -  Number: WM_MDIACTIVATE		= 0x0222
.head 4 -  Number: WM_MDIRESTORE		= 0x0223
.head 4 -  Number: WM_MDINEXT		= 0x0224
.head 4 -  Number: WM_MDIMAXIMIZE		= 0x0225
.head 4 -  Number: WM_MDITILE		= 0x0226
.head 4 -  Number: WM_MDICASCADE		= 0x0227
.head 4 -  Number: WM_MDIICONARRANGE	= 0x0228
.head 4 -  Number: WM_MDIGETACTIVE	= 0x0229
.head 4 -  Number: WM_MDISETMENU		= 0x0230
.head 4 -  Number: WM_MDIREFRESHMENU	= 0x0234
.head 4 -  !
.head 4 -  Number: WM_USER 		= 0x0400
.head 4 -  !
.head 4 -  ! Number: EM_GETSEL 		= WM_USER + 0
.head 4 -  ! Number: EM_SETSEL 		= WM_USER + 1
.head 4 -  ! Number: EM_FMTLINES 		= WM_USER + 24
.head 4 +  ! Number: EM_SETREADONLY 	= WM_USER + 31
.head 5 -  ! Example, how to set Edit fields (as well as mulitilines) to READ ONLY
READ ONLY allows the user to scroll through the fields (and use 
the scroll bars for multilines) as well as SELECT and COPY the
value of the field to the clipboard.
.head 5 -  ! Call SalSendMsg( hWndField, EM_SETREADONLY, bSet, 0 )
.head 4 -  !
.head 4 -  Number: KKS_METER_INIT 		= WM_USER + 0xBC8
.head 4 -  Number: KKS_METER_SET 		= WM_USER + 3018
.head 4 -  !
.head 4 -  ! -----------------------------------------------------------------------------
.head 4 -  ! Constants for Scrollbars
.head 4 -  ! -----------------------------------------------------------------------------
.head 4 -  Number: SB_LINEUP 		= 0
.head 4 -  Number: SB_LINELEFT 		= 0
.head 4 -  Number: SB_LINEDOWN 		= 1
.head 4 -  Number: SB_LINERIGHT 		= 1
.head 4 -  Number: SB_PAGEUP 		= 2
.head 4 -  Number: SB_PAGELEFT 		= 2
.head 4 -  Number: SB_PAGEDOWN 		= 3
.head 4 -  Number: SB_PAGERIGHT 		= 3
.head 4 -  Number: SB_THUMBPOSITION 	= 4
.head 4 -  Number: SB_THUMBTRACK 		= 5
.head 4 -  Number: SB_TOP 			= 6
.head 4 -  Number: SB_LEFT 			= 6
.head 4 -  Number: SB_BOTTOM 		= 7
.head 4 -  Number: SB_RIGHT 		= 7
.head 4 -  Number: SB_ENDSCROLL 		= 8
.head 4 -  !
.head 4 -  Number: SB_HORZ 		= 0
.head 4 -  Number: SB_VERT	 		= 1
.head 4 -  Number: SB_CTL	 		= 2
.head 4 -  Number: SB_BOTH	 		= 3
.head 4 -  !
.head 4 -  ! WM_ACTIVATE state values
.head 4 -  Number: WA_INACTIVE 		= 0
.head 4 -  Number: WA_ACTIVE 		= 1
.head 4 -  Number: WA_CLICKACTIVE 		= 2
.head 4 -  !
.head 4 -  ! ShowWindow constants
.head 4 -  ! Number: SW_HIDE 		= 0
.head 4 -  ! Number: SW_SHOWNORMAL 	= 1
.head 4 -  ! Number: SW_NORMAL 		= 1
.head 4 -  ! Number: SW_SHOWMINIMIZED 	= 2
.head 4 -  ! Number: SW_SHOWMAXIMIZED 	= 3
.head 4 -  ! Number: SW_MAXIMIZE 		= 3
.head 4 -  ! Number: SW_SHOWNOACTIVATE 	= 4
.head 4 -  ! Number: SW_SHOW 		= 5
.head 4 -  ! Number: SW_MINIMIZE 		= 6
.head 4 -  ! Number: SW_SHOWMINNOACTIVE 	= 7
.head 4 -  ! Number: SW_SHOWNA 		= 8
.head 4 -  ! Number: SW_RESTORE 		= 9
.head 4 -  !
.head 4 -  ! GetWindowWord constants
.head 4 -  Number: GWW_HINSTANCE 	= -6
.head 4 -  Number: GWW_HWNDPARENT 	= -8
.head 4 -  Number: GWW_ID 			= -12
.head 4 -  !
.head 4 -  ! -----------------------------------------------------------------------------
.head 4 -  ! GetWindow constants
.head 4 -  ! -----------------------------------------------------------------------------
.head 4 -  ! Number: GW_HWNDFIRST 		= 0
.head 4 -  ! Number: GW_HWNDLAST 		= 1
.head 4 -  ! Number: GW_HWNDNEXT 		= 2
.head 4 -  ! Number: GW_HWNDPREV 		= 3
.head 4 -  ! Number: GW_OWNER 		= 4
.head 4 -  ! Number: GW_CHILD 		= 5
.head 4 -  !
.head 4 -  Number: GFSR_SYSTEMRESOURCES = 0x0000		! Free space for System resources
.head 4 -  Number: GFSR_GDIRESOURCES 	= 0x0001 		! Free space for GDI resources
.head 4 -  Number: GFSR_USERRESOURCES 	= 0x0002		! Free space for User resources
.head 4 -  !
.head 4 -  Number: HWND_TOP 		= 0
.head 4 -  Number: HWND_BOTTOM 		= 1
.head 4 -  Number: HWND_TOPMOST 		= -1
.head 4 -  Number: HWND_NOTOPMOST 	= -2
.head 4 -  !
.head 4 -  Number: SWP_NOSIZE		= 0x0001
.head 4 -  Number: SWP_NOMOVE		= 0x0002
.head 4 -  Number: SWP_NOZORDER  		= 0x0004
.head 4 -  Number: SWP_NOREDRAW 		= 0x0008
.head 4 -  Number: SWP_NOACTIVATE		= 0x0010
.head 4 -  Number: SWP_FRAMECHANGED   	= 0x0020
.head 4 -  Number: SWP_SHOWWINDOW     	= 0x0040
.head 4 -  Number: SWP_HIDEWINDOW      	= 0x0080
.head 4 -  !
.head 4 -  ! USER.EXE MF_* Menu function flags - the constant values come
  from windows.H
.head 4 -  ! flags for EnableMenuItem()
.head 4 -  Number: MF_Enabled	= 0x0000
.head 4 -  Number: MF_Grayed	= 0x0001
.head 4 -  Number: MF_Disabled	= 0x0002
.head 4 -  !
.head 4 -  ! return flags for GetMenuState()
.head 4 -  Number: MF_Unchecked	= 0x0000
.head 4 -  Number: MF_Checked	= 0x0008
.head 4 -  Number: MF_MenuBarBreak	= 0x0020
.head 4 -  Number: MF_MenuBreak	= 0x0040
.head 4 -  ! Number: MF_Separator	= 0x0800
.head 4 -  !
.head 4 -  ! flags for GetMenuString()
.head 4 -  Number: MF_ByCommand	= 0x0000
.head 4 -  Number: MF_ByPosition	= 0x0400
.head 4 -  !
.head 4 -  ! flags for HiliteMenuItem()
.head 4 -  Number: MF_Unhilite	= 0x0000
.head 4 -  Number: MF_Hilite		= 0x0080
.head 4 -  !
.head 4 -  ! flags for ChangeMenu()
.head 4 -  Number: MF_Change	= 0x0080
.head 4 -  Number: MF_Insert		= 0x0000
.head 4 -  Number: MF_Append	= 0x0100
.head 4 -  Number: MF_Delete	= 0x0200
.head 4 -  Number: MF_Remove	= 0x1000
.head 4 -  Number: MF_BitMap	= 0x0004
.head 4 -  Number: MF_String		= 0x0000
.head 4 -  Number: MF_Popup	= 0x0010
.head 4 -  Number: MF_Help		= 0x4000
.head 4 -  Number: MF_SysMenu	= 0x2000
.head 4 -  Number: MF_MouseSelect	= 0x8000
.head 4 -  !
.head 4 -  ! WM_SYSCOMMAND constants
.head 4 -  Number: SC_MINIMIZE	= 0xF020
.head 4 -  Number: SC_RESTORE	= 0xF120
.head 4 -  Number: SC_CLOSE	= 0xF060
.head 4 -  Number: CP_DIRECT	= 2
.head 4 -  Number: SC_RESTORE_DIRECT = SC_RESTORE | CP_DIRECT 
.head 4 -  !
.head 4 -  ! Responses for Modifying Network Connections
.head 4 -  Number: WN_SUCCESS 		= 0x0000
.head 4 -  Number: WN_NOT_SUPPORTED 	= 0x0001
.head 4 -  Number: WN_NET_ERROR 		= 0x0002
.head 4 -  Number: WN_MORE_DATA 		= 0x0003
.head 4 -  Number: WN_BAD_POINTER 	= 0x0004
.head 4 -  Number: WN_BAD_VALUE 		= 0x0005
.head 4 -  Number: WN_BAD_PASSWORD 	= 0x0006
.head 4 -  Number: WN_ACCESS_DENIED 	= 0x0007
.head 4 -  Number: WN_FUNCTION_BUSY 	= 0x0008
.head 4 -  Number: WN_WINDOWS_ERROR 	= 0x0009
.head 4 -  Number: WN_BAD_USER 		= 0x000A
.head 4 -  Number: WN_OUT_OF_MEMORY 	= 0x000B
.head 4 -  Number: WN_CANCEL 		= 0x000C
.head 4 -  Number: WN_CONTINUE 		= 0x000D
.head 4 -  Number: WN_NOT_CONNECTED 	= 0x0030
.head 4 -  Number: WN_OPEN_FILES 		= 0x0031
.head 4 -  Number: WN_BAD_NETNAME 	= 0x0032
.head 4 -  Number: WN_BAD_LOCALNAME 	= 0x0033
.head 4 -  Number: WN_ALREADY_CONNECTED	= 0x0034
.head 4 -  Number: WN_DEVICE_ERROR 	= 0x0035
.head 4 -  Number: WN_CONNECTION_CLOSED 	= 0x0036
.head 4 -  !
.head 4 -  Number: DRIVE_UNKNOWN 		= 0
.head 4 -  Number: DRIVE_REMOVABLE 	= 2
.head 4 -  Number: DRIVE_FIXED 		= 3
.head 4 -  Number: DRIVE_REMOTE 		= 4
.head 4 -  !
.head 4 -  ! Virtual Key values as seen in wParam when responding to WM_CHAR
.head 4 -  Number: VK_PRIOR 	= 0x21
.head 4 -  Number: VK_NEXT 		= 0x22
.head 4 -  Number: VK_END 		= 0x23
.head 4 -  Number: VK_HOME 	= 0x24
.head 4 -  Number: VK_LBUTTON 	= 0x01
.head 4 -  Number: VK_RBUTTON 	= 0x02
.head 4 -  Number: VK_CANCEL 	= 0x03
.head 4 -  Number: VK_MBUTTON 	= 0x04
.head 4 -  Number: VK_BACK 		= 0x08
.head 4 -  Number: VK_TAB 		= 0x09
.head 4 -  Number: VK_CLEAR 	= 0x0C
.head 4 -  Number: VK_RETURN 	= 0x0D
.head 4 -  Number: VK_SHIFT 	= 0x10
.head 4 -  Number: VK_CONTROL 	= 0x11
.head 4 -  Number: VK_MENU 	= 0x12
.head 4 -  Number: VK_PAUSE 	= 0x13
.head 4 -  Number: VK_CAPITAL 	= 0x14
.head 4 -  Number: VK_ESCAPE 	= 0x1B
.head 4 -  Number: VK_SPACE 	= 0x20
.head 4 -  Number: VK_LEFT 		= 0x25
.head 4 -  Number: VK_UP 		= 0x26
.head 4 -  Number: VK_RIGHT 	= 0x27
.head 4 -  Number: VK_DOWN 	= 0x28
.head 4 -  Number: VK_SELECT 	= 0x29
.head 4 -  Number: VK_PRINT 	= 0x2A
.head 4 -  Number: VK_EXECUTE 	= 0x2B
.head 4 -  Number: VK_SNAPSHOT 	= 0x2C
.head 4 -  Number: VK_INSERT 	= 0x2D
.head 4 -  Number: VK_DELETE 	= 0x2E
.head 4 -  Number: VK_HELP 		= 0x2F
.head 4 -  Number: VK_NUMPAD0 	= 0x60
.head 4 -  Number: VK_NUMPAD1 	= 0x61
.head 4 -  Number: VK_NUMPAD2 	= 0x62
.head 4 -  Number: VK_NUMPAD3 	= 0x63
.head 4 -  Number: VK_NUMPAD4 	= 0x64
.head 4 -  Number: VK_NUMPAD5 	= 0x65
.head 4 -  Number: VK_NUMPAD6 	= 0x66
.head 4 -  Number: VK_NUMPAD7 	= 0x67
.head 4 -  Number: VK_NUMPAD8 	= 0x68
.head 4 -  Number: VK_NUMPAD9 	= 0x69
.head 4 -  Number: VK_MULTIPLY 	= 0x6A
.head 4 -  Number: VK_ADD 		= 0x6B
.head 4 -  Number: VK_SEPARATOR 	= 0x6C
.head 4 -  Number: VK_SUBTRACT 	= 0x6D
.head 4 -  Number: VK_DECIMAL 	= 0x6E
.head 4 -  Number: VK_DIVIDE 	= 0x6F
.head 4 -  ! Number: VK_F1 		= 0x70
.head 4 -  ! Number: VK_F2 		= 0x71
.head 4 -  ! Number: VK_F3 		= 0x72
.head 4 -  ! Number: VK_F4 		= 0x73
.head 4 -  ! Number: VK_F5 		= 0x74
.head 4 -  ! Number: VK_F6 		= 0x75
.head 4 -  ! Number: VK_F7 		= 0x76
.head 4 -  ! Number: VK_F8 		= 0x77
.head 4 -  ! Number: VK_F9 		= 0x78
.head 4 -  ! Number: VK_F10 		= 0x79
.head 4 -  ! Number: VK_F11 		= 0x7A
.head 4 -  ! Number: VK_F12 		= 0x7B
.head 4 -  ! Number: VK_F13 		= 0x7C
.head 4 -  ! Number: VK_F14 		= 0x7D
.head 4 -  ! Number: VK_F15 		= 0x7E
.head 4 -  ! Number: VK_F16 		= 0x7F
.head 4 -  ! Number: VK_F17 		= 0x80
.head 4 -  ! Number: VK_F18 		= 0x81
.head 4 -  ! Number: VK_F19 		= 0x82
.head 4 -  ! Number: VK_F20 		= 0x83
.head 4 -  ! Number: VK_F21 		= 0x84
.head 4 -  ! Number: VK_F22 		= 0x85
.head 4 -  ! Number: VK_F23 		= 0x86
.head 4 -  ! Number: VK_F24 		= 0x87
.head 4 -  Number: VK_NUMLOCK 	= 0x90
.head 4 -  Number: VK_SCROLL 	= 0x91
.head 4 -  ! 
/* VK_A thru VK_Z are the same as their ASCII equivalents: 'A' thru 'Z' */
/* VK_0 thru VK_9 are the same as their ASCII equivalents: '0' thru '0' */

.head 4 -  !
.head 4 -  ! ---------------------------------------------------
.head 4 -  ! Constants for Text
.head 4 -  ! ---------------------------------------------------
.head 4 -  Number: ETO_GRAYED =	0x1
.head 4 -  Number: ETO_OPAQUE =	0x2
.head 4 -  Number: ETO_CLIPPED =	0x4
.head 4 -  !
.head 4 -  Number: TA_CENTER = 	0x6
.head 4 -  Number: TA_LEFT = 	0x0
.head 4 -  Number: TA_RIGHT =	0x2
.head 4 -  Number: TA_BASELINE =	0x18 
.head 4 -  Number: TA_BOTTOM =	0x8
.head 4 -  Number: TA_TOP =		0x0
.head 4 -  Number: TA_NOUPDATECP =	0x0
.head 4 -  Number: TA_UPDATECP =	0x1
.head 4 -  ! ----------------------------------------------------
.head 4 -  Number: MM_TEXT =	0x1
.head 4 -  Number: MM_LOMETRIC =	0x2
.head 4 -  Number: MM_HIHMETRIC =	0x3
.head 4 -  Number: MM_LOENGLISH =	0x4
.head 4 -  Number: MM_HIENGLISH =	0x5
.head 4 -  Number: MM_TWIPS =	0x6
.head 4 -  Number: MM_ISOTROPIC =	0x7
.head 4 -  Number: MM_ANISOTROPIC =0x8
.head 4 -  ! ---------------------------------------------------
.head 4 -  ! Constants for Pens
.head 4 -  ! ---------------------------------------------------
.head 4 -  Number: PS_SOLID = 0
.head 4 -  Number: PS_DASH = 1
.head 4 -  Number: PS_DOT = 2
.head 4 -  Number: PS_DASHDOT =  3
.head 4 -  Number: PS_DASHDOTDOT = 4
.head 4 -  ! ------------------------------------------------------------
.head 4 -  ! Constants for Clipboard
.head 4 -  ! ------------------------------------------------------------
.head 4 -  ! Number: CF_TEXT =		0x1
.head 4 -  ! Number: CF_BITMAP =		0x2
.head 4 -  ! Number: CF_METAFILEPICT =	0x3
.head 4 -  ! Number: CF_SYLK =		0x4
.head 4 -  ! Number: CF_DIF =			0x5
.head 4 -  ! Number: CF_TIFF =			0x6
.head 4 -  ! Number: CF_OEMTEXT =		0x7
.head 4 -  ! Number: CF_DIB =			0x8
.head 4 -  ! Number: CF_PALETTE =		0x9
.head 4 -  ! Number: CF_PENDATATA =		0x10
.head 4 -  ! Number: CF_RIFF =			0x11
.head 4 -  ! Number: CF_WAVE =		0x12
.head 4 -  !
.head 4 -  ! Number: CF_OWNERDISPLAY =	0x0080
.head 4 -  ! Number: CF_DSPTEXT =		0x0081
.head 4 -  ! Number: CF_DSPBITMAP =		0x0082
.head 4 -  ! Number: CF_DSPMETAFILEPICT =	0x0083
.head 4 -  !
.head 4 -  ! ---------------------------------------------------------------
.head 4 -  ! Constants for GlobalAlloc
.head 4 -  ! -----------------------------------------------------------------
.head 4 -  ! Number: GMEM_DDSHARE =		0x2000
.head 4 -  ! Number: GMEM_DISCARDABLE =	0x0100
.head 4 -  ! Number: GMEM_FIXED =		0x0000
.head 4 -  ! Number: GMEM_LOWER =		0x0100
.head 4 -  ! Number: GMEM_MOVEABLE =	0x2000
.head 4 -  ! Number: GMEM_NOCOMPACT =	0x0002
.head 4 -  ! Number: GMEM_NODISCARD =	0x0010
.head 4 -  ! Number: GMEM_NOT_BANKED =	0x0100
.head 4 -  ! Number: GMEM_NOTIFY =		0x4000
.head 4 -  ! Number: GMEM_SHARE =		0x2000
.head 4 -  ! Number: GMEM_ZEROINIT =		0x0040
.head 4 -  ! Number: GHND =			(GMEM_MOVEABLE | GMEM_ZEROINIT)		
.head 4 -  ! Number: GPTR =			(GMEM_FIXED | GMEM_ZEROINIT)		
.head 4 -  !
.head 4 -  ! -----------------------------------------------------------------
.head 4 -  ! Constants for BitBlt
.head 4 -  ! ------------------------------------------------------------------
.head 4 -  Number: BLACKNESS = 		0x00000042
.head 4 -  Number: DSTINVERT = 		0x00550009
.head 4 -  Number: MERGECOPY = 		0x00C000CA
.head 4 -  Number: MERGEPAINT = 		0x00BB0226
.head 4 -  Number: NOTSRCCOPY = 		0x00330008
.head 4 -  Number: NOTSRCERASE = 		0x001100A6
.head 4 -  Number: PATCOPY = 		0x00F00021
.head 4 -  Number: PATINVERT = 		0x005A0049
.head 4 -  Number: PATPAINT = 		0x00FB0A09
.head 4 -  Number: SRCAND = 		0x008800C6
.head 4 -  Number: SRCCOPY = 		0x00CC0020
.head 4 -  Number: SRCERASE = 		0x00440328
.head 4 -  Number: SRCINVERT = 		0x00660046
.head 4 -  Number: SRCPAINT = 		0x00EE0086
.head 4 -  Number: WHITENESS = 		0x00FF0062
.head 4 -  !
.head 4 -  ! PrintDlg
.head 4 -  !
.head 4 -  Number: PD_RETURNDC = 		0x100
.head 4 -  !
.head 4 -  ! ESCAPE
.head 4 -  !
.head 4 -  Number: STARTDOC =		10
.head 4 -  Number: NEWFRAME =		1
.head 4 -  Number: ENDDOC =		11
.head 4 -  !
.head 4 -  ! ---------------------------------------------------------------------------
.head 4 -  ! Constants for GetDeviceCaps
.head 4 -  ! -----------------------------------------------------------------------------
.head 4 -  ! Number: DRIVERVERSION =		0
.head 4 -  ! Number: TECHNOLOGY =		2
.head 4 -  ! Number: HORZSIZE =		4
.head 4 -  ! Number: VERTSIZE =		6
.head 4 -  ! Number: HORZRES =		8
.head 4 -  ! Number: VERTRES =		10
.head 4 -  ! Number: LOGPIXELSX =		88
.head 4 -  Number: LOGPIXELSSY =		90
.head 4 -  ! Number: BITSPIXEL =		12
.head 4 -  ! Number: PLANES =			14
.head 4 -  ! Number: NUMBRUSHES =		16
.head 4 -  ! Number: NUMPENS =		18
.head 4 -  ! Number: NUMMARKERS =		20
.head 4 -  ! Number: NUMFONTS =		22
.head 4 -  ! Number: NUMCOLORS =		24
.head 4 -  ! Number: ASPECTX =		40
.head 4 -  ! Number: ASPECTY =		42
.head 4 -  ! Number: ASPECTXY =		44
.head 4 -  ! Number: PDEVICESIZE =		26
.head 4 -  ! Number: CLIPCAPS =		36
.head 4 -  ! Number: SIZEPALETTE =		104
.head 4 -  ! Number: NUMRESERVED =		106
.head 4 -  ! Number: COLORRES =		108
.head 4 -  ! Number: RASTERCAPS =		38
.head 4 -  ! Number: CURVECAPS =		28
.head 4 -  ! Number: LINECAPS =		30
.head 4 -  ! Number: POLYGONALCAPS =		32
.head 4 -  ! Number: TEXTCAPS =		34
.head 4 -  !
.head 4 -  ! ------------------------------------------------------------------------------------
.head 4 -  ! Constants for CreateFont
.head 4 -  ! --------------------------------------------------------------------------------------
.head 4 -  Number: DEFAULT_PITCH = 		0x00
.head 4 -  Number: FIXED_PITCH =		0x01
.head 4 -  Number: VARIABLE_PITCH = 		0x02
.head 4 -  !
.head 4 -  Number: FF_DECORATIVE = 		0x50
.head 4 -  Number: FF_DONTCARE =		0x00
.head 4 -  Number: FF_MODERN =		0x30
.head 4 -  Number: FF_ROMAN =		0x10
.head 4 -  Number: FF_SCRIPT =		0x40
.head 4 -  Number: FF_SWISS =		0x20
.head 4 -  !
.head 4 -  Number: OUT_DEFAULT_PRECIS = 0
.head 4 -  Number: OUT_STRING_PRECIS = 1
.head 4 -  Number: OUT_CHARACTER_PRECIS = 2
.head 4 -  Number: OUT_STROKE_PRECIS = 3
.head 4 -  Number: OUT_TT_PRECIS = 4
.head 4 -  Number: OUT_DEVICE_PRECIS = 5
.head 4 -  Number: OUT_RASTER_PRECIS = 6
.head 4 -  Number: OUT_TT_ONLY_PRECIS = 7
.head 4 -  !
.head 4 -  Number: ANSI_CHARSET = 0
.head 4 -  Number: DEFAULT_CHARSET = 1
.head 4 -  Number: SYMBOL_CHARSET = 2
.head 4 -  Number: SHIFTJIS_CHARSET = 128
.head 4 -  Number: HANGEUL_CHARSET = 129
.head 4 -  Number: CHINESEBIG5_CHARSET = 136
.head 4 -  Number: OEM_CHARSET = 255
.head 4 -  !
.head 4 -  Number: CLIP_DEFAULT_PRECIS =	0x00
.head 4 -  Number: CLIP_CHARACTER_PRECIS = 0x01
.head 4 -  Number: CLIP_STROKE_PRECIS =	0x02
.head 4 -  Number: CLIP_MASK =		0x0F
.head 4 -  Number: CLIP_LH_ANGLES =	0x10
.head 4 -  Number: CLIP_TT_ALWAYS = 	0x20
.head 4 -  Number: CLIP_EMBEDDED =		0x80
.head 4 -  !
.head 4 -  Number: DEFAULT_QUALITY = 	0
.head 4 -  Number: DRAFT_QUALITY = 		1
.head 4 -  Number: PROOF_QUALITY = 	2
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  ! Constants for sndPlaySound function in MMSYSTEM.DLL
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  ! Number: SND_SYNC =		 0	! does not return till sound is played in full
.head 4 -  ! Number: SND_ASYNC =		 1	! returns once sound is started
.head 4 -  ! Number: SND_NODEFAULT =	 2	! if sound not found, do not play default sound
.head 4 -  ! Number: SND_MEMORY =		 4	! first parameter points to a sound image in memory
.head 4 -  ! Number: SND_LOOP =		 8	! play sound repeatedly in a continuous loop, use with SND_ASYNC
.head 4 -  ! Number: SND_NOSTOP =		16	! don't play sound if another sound is currently playing
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  ! Constants for COMBO BOX messages
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  Number: CB_SETEDITSEL     = 	WM_USER+2
.head 4 -  Number: CB_SHOWDROPDOWN  = 	WM_USER+15
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  ! Constants for COMBO BOX notification codes
.head 4 -  ! -----------------------------------------------------------------------------------------------
.head 4 -  Number: CBN_EDITCHANGE = 	5
.head 4 -  Number: CBN_EDITUPDATE = 	6
.head 4 -  ! Sql Error handling constants
.head 4 -  Number: ERROR_InvalidUserName		= 00405
.head 4 -  Number: ERROR_InvalidPassword 		= 00404
.head 4 -  Number: ERROR_CannotOpenDatabase 	= 00401
.head 4 -  Number: ERROR_DeadLock	 		= 01801
.head 4 -  Number: ERROR_TimeOut	 		= -1805
.head 4 -  Number: ERROR_DuplicateKey		= 00805
.head 4 -  Number: ERROR_InvalidRowID		= 00806
.head 4 -  Number: ERROR_CannotDelete_DependentRows	= 00383
.head 4 -  !
.head 4 -  ! Sql Windows Constants
.head 4 -  Number: IT_FormWindow 		= 1
.head 4 -  Number: IT_TableWindow 		= 2
.head 4 -  Number: IT_ChildTableWindow 	= 3
.head 4 -  Number: IT_DataField 		= 4
.head 4 -  Number: IT_MultiLineField		= 5 
.head 4 -  Number: IT_PushButton		= 6
.head 4 -  Number: IT_RadioButton		= 7
.head 4 -  Number: IT_CheckBox		= 8
.head 4 -  Number: IT_BackgroundText		= 12
.head 4 -  Number: IT_Column 		= 13
.head 4 -  Number: IT_ListBox			= 14
.head 4 -  Number: IT_ComboBox 		= 15
.head 4 -  Number: IT_MDIWindow 		= 19
.head 4 -  Number: IT_OptionButton		= 20
.head 4 -  Number: IT_DialogBox 		= 66
.head 4 -  Number: IT_ChildQuestTable		= 273
.head 4 -  Number: IT_QuestTableWindow	= 274
.head 4 -  !
.head 4 -  ! Undocumented columns flags for Table Window Columns
.head 4 -  Number: COL_Visible 	= 0x0001
.head 4 -  Number: COL_Invisible 	= 0x0010
.head 4 -  Number: COL_DimTitle 	= 0x0020
.head 4 -  Number: COL_ReadOnly 	= 0x0200
.head 4 -  Number: COL_UpperCase 	= 0x0400
.head 4 -  Number: COL_LowerCase 	= 0x0800
.head 4 -  ! Menu flags for Add/Check/EnableMenuItem().
.head 4 -  ! Number: MF_INSERT		= 0x0000
.head 4 -  ! Number: MF_CHANGE		= 0x0080
.head 4 -  ! Number: MF_APPEND		= 0x0100
.head 4 -  ! Number: MF_DELETE		= 0x0200
.head 4 -  ! Number: MF_REMOVE		= 0x1000
.head 4 -  ! Number: MF_BYCOMMAND		= 0x0000
.head 4 -  ! Number: MF_ByPosition		= 0x0400
.head 4 -  ! Number: MF_SEPARATOR		= 0x0800
.head 4 -  ! Number: MF_ENABLED		= 0x0000
.head 4 -  ! Number: MF_GRAYED		= 0x0001
.head 4 -  ! Number: MF_DISABLED		= 0x0002
.head 4 -  ! Number: MF_UNCHECKED		= 0x0000
.head 4 -  ! Number: MF_CHECKED		= 0x0008
.head 4 -  ! Number: MF_USECHECKBITMAPS	= 0x0200
.head 4 -  Number: MF_STRING		= 0x0000
.head 4 -  ! Number: MF_BITMAP		= 0x0004
.head 4 -  ! Number: MF_OWNERDRAW		= 0x0100
.head 4 -  Number: MF_POPUP		= 0x0010
.head 4 -  ! Number: MF_MENUBARBREAK	= 0x0020
.head 4 -  ! Number: MF_MENUBREAK		= 0x0040
.head 4 -  ! Number: MF_UNHILITE		= 0x0000
.head 4 -  ! Number: MF_HILITE			= 0x0080
.head 4 -  ! Number: MF_SYSMENU		= 0x2000
.head 4 -  ! Number: MF_HELP			= 0x4000
.head 4 -  ! Number: MF_MOUSESELECT		= 0x8000
.head 3 +  User
.head 4 -  ! Not included in the SDK but useful nonetheless
.head 4 -  Number: VK_UNDERSCORE = 0x5F
.head 4 -  Number: VK_LINEFEED = 0x0A
.head 4 -  ! User defined messages
.head 4 -  Number: PAM_ModuleWndInfo 	= PAM_Wim_User + 10
.head 4 -  Number: PAM_WndInfo 		= PAM_ModuleWndInfo + 1
.head 4 -  ! Beginnummer voor boodschappen in deze apl
.head 4 -  Number: PAM_User_DynSql		= PAM_Wim_User + 5
.head 4 -  !
.head 4 -  Number: PAM_NavigateRecord	= PAM_User_DynSql
.head 4 -  Number: NAV_FirstRecord		= 1
.head 4 -  Number: NAV_PreviousRecord	= 2
.head 4 -  Number: NAV_NextRecord		= 3
.head 4 -  Number: NAV_LastRecord		= 4
.head 4 -  !
.head 4 -  Number: PAM_Actions		= PAM_User_DynSql + 1
.head 4 -  Number: ACT_Clear			= 1
.head 4 -  Number: ACT_Retrieve		= 2
.head 4 -  Number: ACT_ApplyChanges		= 3
.head 4 -  Number: ACT_UndoChanges		= 4
.head 4 -  Number: ACT_DeleteRecord		= 5
.head 4 -  Number: ACT_NewRecord		= 6
.head 4 -  Number: ACT_Refresh		= 7
.head 4 -  Number: ACT_DeleteAllDetails	= 8
.head 4 -  Number: ACT_Commit		= 9
.head 4 -  Number: ACT_Rollback		= 10
.head 4 -  !
.head 4 -  ! Constants used with the function AutoAttach
.head 4 -  Number: DS_Select			=   1
.head 4 -  Number: DS_Update		=   2
.head 4 -  Number: DS_Insert			=   4
.head 4 -  Number: DS_SelectWhereEqual	=   8
.head 4 -  Number: DS_UpdateWhereEqual	= 16
.head 4 -  Number: DS_DeleteWhereEqual	= 32
.head 4 -  !
.head 4 -  ! Constants used for inserting in table windows
.head 4 -  Number: INSERT_Before		= 0
.head 4 -  Number: INSERT_After			= 1
.head 4 -  Number: INSERT_Top			= 2
.head 4 -  Number: INSERT_Bottom		= 3
.head 4 -  !
.head 4 -  ! WERKEN MET RECORDS:  6 MODES, bijgehouden in variable inSqlMode
.head 4 -  Number: SQLMODE_Empty		= 1
.head 4 -  Number: SQLMODE_EmptyModified	= 2
.head 4 -  Number: SQLMODE_New		= 3
.head 4 -  Number: SQLMODE_NewModified	= 4
.head 4 -  Number: SQLMODE_Modified		= 5
.head 4 -  Number: SQLMODE_NotModified	= 6
.head 4 -  ! Beginnummer voor boodschappen in deze apl
.head 4 -  Number: PAM_User_Clear		= PAM_Wim_User + 1
.head 4 -  Number: PAM_Clear		= PAM_User_Clear
.head 4 -  Number: PAM_Dirty			= PAM_User_Clear + 1
.head 4 -  ! The TAB constant is a quoted TAB character.
.head 4 -  String: TAB = '	' 
.head 4 -  ! SQL Reserved Words
.head 4 -  String: COMMA				= ', '
.head 4 -  String: DOT				= '.'
.head 4 -  String: COLON				= ':'
.head 4 -  String: QUOTE                                		= '\''
.head 4 -  String: DOUBLEQUOTE                         		= '"'
.head 4 -  String: OPEN_PAR				= ' ( '
.head 4 -  String: CLOSE_PAR			= ' ) '
.head 4 -  String: EQUAL                                		= ' = '
.head 4 -  String: NOT_EQUAL			= ' != '
.head 4 -  String: S_AND				= ' AND '
.head 4 -  String: ASC                         			= ' ASC '
.head 4 -  String: BETWEEN                              		= ' BETWEEN '
.head 4 -  String: COMMIT                  	          		= 'COMMIT '
.head 4 -  String: DELETE_FROM                 		= 'DELETE FROM '
.head 4 -  String: DESC                           	      		= ' DESC '
.head 4 -  String: DISTINCT                             		= ' DISTINCT '
.head 4 -  String: FOR_UPDATE_OF			= ' FOR UPDATE OF '
.head 4 -  String: FROM                          	     		= ' FROM '
.head 4 -  String: GROUP_BY                              		= ' GROUP BY '
.head 4 -  String: IN					= ' IN '
.head 4 -  String: INTO                      	          		= ' INTO '
.head 4 -  String: INSERT_INTO      	            		= 'INSERT ' || INTO
.head 4 -  String: IS_NOT_NULL			= ' IS NOT NULL '
.head 4 -  String: IS_NULL				= ' IS NULL '
.head 4 -  String: LIKE                           	      		= ' LIKE '
.head 4 -  String: NOT_IN				= ' NOT IN '
.head 4 -  String: NOT_LIKE				= ' NOT LIKE '
.head 4 -  String: S_OR				= ' OR '
.head 4 -  String: ORDER_BY                             		= ' ORDER BY '
.head 4 -  String: OUTERJOIN				= ' (+) '
.head 4 -  String: ROLLBACK                             		= 'ROLLBACK '
.head 4 -  String: SELECT				= ' SELECT '
.head 4 -  String: S_SET                               		= ' SET '
.head 4 -  String: UNION				= ' UNION '
.head 4 -  String: UPDATE                               		= 'UPDATE '
.head 4 -  String: VALUES                              		= ' VALUES '
.head 4 -  String: WHERE                                		= ' WHERE '
.head 4 -  String: SYSDATETIME                  		= ' SYSDATETIME '
.head 4 -  String: USER                          	 		= ' USER '
.head 4 -  String: SYSADM                              	 	= 'SYSADM'
.head 4 -  String: LOWER                              	 	= ' < '
.head 4 -  String: LOWER_EQUAL                              	 = ' <= '
.head 4 -  String: GREATER                              	 	= ' > '
.head 4 -  String: GREATER_EQUAL                              	 = ' >= '
.head 4 -  ! Message for translation
.head 4 -  Number: PAM_Language			 = PAM_Wim_User + 100
.head 4 -  Number: PAM_MenuLanguage		 = PAM_Wim_User + 101
.head 4 -  Number: PAM_TabLabelLanguage		 = PAM_Wim_User + 102
.head 4 -  Number: PAM_TranslateTabLabels		 = PAM_Wim_User + 103
.head 4 -  ! Return values of function PalSqlTrans
.head 4 -  Number: TRANS_Ok		= 1
.head 4 -  Number: TRANS_Error		= 2
.head 4 -  Number: TRANS_Retry		= 3
.head 4 -  Number: TRANS_Cancel		= 4
.head 4 -  !
.head 4 -  !
.head 4 -  ! LS : 18/06/2001
.head 4 -  Number: WM_TEST_PRGM			= 0x13FE
.head 4 -  !
.head 4 -  ! /@@@@@ LS : 30/11/1999
.head 4 -  ! Constantes pour l'enregistrement des positions dans un tableau
.head 4 -  Number: cSitSave				= 1
.head 4 -  Number: cSitLoad				= 2
.head 4 -  ! \@@@@@ LS : 30/11/1999
.head 4 -  !
.head 4 -  ! /##### LS : 05/11/2002
.head 4 -  ! Constante pour la gestion des touches de raccourcis
.head 4 -  !
.head 4 -  ! Message pour l'utilisation des touches ALT et + pour l'ajout de données
.head 4 -  Number: PAM_ActiveKey			= PAM_Wim_User_End - 1
.head 4 -  Number: PAL_VK_Plus			= 1
.head 4 -  Number: PAL_VK_Moins			= 2
.head 4 -  Number: PAL_VK_Fois			= 3
.head 4 -  ! \##### LS : 05/11/2002
.head 4 -  ! ! Application messages:
.head 4 -  Number: PM_FORM_RESIZED		= PAM_Wim_User + 50	! if 50 conflicts with your app, choose another number
.head 4 -  !
.head 4 -  !
.head 4 -  ! /##### LS : 17/10/2003
.head 4 -  Number: PAM_DisableField		= PAM_Wim_User + 0x0070
.head 4 -  ! \##### LS : 17/10/2003
.head 4 -  !
.head 4 -  !
.head 4 -  ! /##### LS : 20/11/2003
.head 4 -  ! Message pour la traduction des menus
.head 4 -  Number: PAM_TranslateMenu		= PAM_Stesud_User + 30
.head 4 -  Number: PAL_TranslateMenuInit	= 1
.head 4 -  Number: PAL_TranslateMenuClose	= 2
.head 4 -  Number: PAL_TranslateMenuSys	= 0
.head 4 -  ! \##### LS : 20/11/2003
.head 4 +  Number: WM_MOUSEWHEEL                   	= 0x020A
.head 5 -  ! Description:	Sent to a window when a the scroll wheel is used
wParam:		Low word: the keys ( MK_CONTROL... )
		High word: the Delta
.head 4 -  ! Number: MK_CONTROL			= 0x0008
.head 4 -  ! Number: WHEEL_DELTA 		= 120
.head 4 -  ! Number: MK_SHIFT			= 0x0004
.head 3 -  Enumerations
.head 2 +  Resources
.head 3 +  Bitmap: resMoveUp
.head 4 -  File Name: c:\p_lib32.2005\resource\MOVEUP.BMP
.head 3 +  Bitmap: resMoveDown
.head 4 -  File Name: c:\p_lib32.2005\resource\MOVEDOWN.BMP
.head 3 +  Bitmap: resSortAsc
.head 4 -  File Name: c:\p_lib32.2005\resource\SORTASC.BMP
.head 3 +  Bitmap: resSortDesc
.head 4 -  File Name: c:\p_lib32.2005\resource\SORTDESC.BMP
.head 3 +  Bitmap: resRetrieve
.head 4 -  File Name: c:\p_lib32.2005\resource\RETRIEVE.BMP
.head 2 +  Variables
.data RESOURCE 0 0 1 943353789
0000: 84010000A5000000 0000000000000000 0200000C0000003A 0500001019000000
0020: 010000FE00FFA353 050019B5000100FF FF086C0500040000 00E102000000FF3F
0040: 70055A00190001FB 00FF8F890500D619 0001FE00FFA3A205 0004A10001020000
0060: FF078001000000FF 68A605001900E901 0000FF3FBF051A00 04000102FB007F80
0080: F20100008FC30500 9619000100FE00FF A3DC050004B10001 0200FF2780010000
00A0: FF68E005000400ED 0200FF3FE4055A00 040002FB00FF0F
.enddata
.head 3 -  Window Handle: gwhTrackPopupMenu
.head 3 -  ! /@@@@@ LS : 30/11/1999
.head 3 -  ! Variable pour l'enregistrement des positions des colonnes
.head 3 -  String: gtsColName
.head 3 -  Number: gtnNbrCol
.head 3 -  Window Handle: gtwhTabCol[*]
.head 3 -  Number: gtnTabColSize[*]
.head 3 -  Boolean: gbSauverPositionColonnes
.head 3 -  ! \@@@@@ LS : 30/11/1999
.head 3 -  ! WndInfo Parameters
.head 3 -  Boolean: gParamWndInfoIconize
.head 3 -  ! Boolean: si TRUE, les colonnes utilisées pour trier un table window sont mises automatiquement au début du table window
.head 3 -  Boolean: gbPosColumnsDependingOrderBy
.head 3 -  Boolean: gbSplitTblWhenInsert
.head 3 -  !
.head 3 -  !
.head 3 -  ! /@@@@@ LS  : 29/10/99
.head 3 -  String: gsIdPrgm
.head 3 -  ! \@@@@@ LS : 29/10/99
.head 3 -  FunctionalVar: gCacheMgr
.head 4 -  Class: clsCachePool
.head 3 -  ! Variable voor debug: indien TRUE, dan wordt sql-statement getoond in een messagebox alvorens 
het sql-statement uitgevoerd wordt.
.head 3 -  Boolean: gbDynSqlDebug
.head 3 -  String: gsIniFilePathAndName
.head 3 -  String: gsIniFilePathAndNameMenu
.head 3 -  ! /@@@@@ LS : 13/12/1999
.head 3 -  String: gsIniFilePathAndModuleName
.head 3 -  String: gsLocalIniFilePathAndName
.head 3 -  ! \@@@@@ LS : 13/12/1999
.head 3 -  !
.head 3 -  String: gsUserName
.head 3 -  String: gsUserPassword
.head 3 -  String: gsDatabaseName
.head 3 -  String: gsDatabaseNameEuro
.head 3 -  !
.head 3 -  Boolean: gbShowOnlyModAndInsRows
.head 3 -  !
.head 3 -  ! Boolean: gbConnectionEstablished
.head 3 -  ! Sql Handle: ghSqlMain
.head 3 -  ! Sql Handle: ghSqlError
.head 3 -  ! String: gsPath
.head 3 -  ! Number: gnError
.head 3 -  ! Number: gnErrorPos
.head 3 -  !
.head 3 -  !
.head 3 -  ! String: gsCamera
.head 3 -  ! String: gsErrorMessage
.head 3 -  !
.head 3 -  ! String: gsCurrentShift
.head 3 -  ! String: gsPrisonNl
.head 3 -  ! String: gsPrisonFr
.head 3 -  ! String: gsPrisonCode
.head 3 -  !
.head 3 -  Number: gnHelpContext
.head 3 -  !
.head 3 -  ! Number: gnParamArray[5]
.head 3 -  ! Nodig voor items in combobox van bezoekerstypes te beperken volgens gebruikersgroep
.head 3 -  ! String: gsVType
.head 3 -  ! String: gsSelectVTyp
.head 3 -  ! String: gsInVTypes
.head 3 -  ! Number: gnReturn
.head 3 -  !
.head 3 -  ! Nr van classement (komt uit ini file)
.head 3 -  ! String: gsClassement
.head 3 -  !
.head 3 -  ! String: gsArrDetScroll[*]
.head 3 -  ! String: gsArrPersScroll[*]
.head 3 -  ! String: gsArrVisrScroll[*]
.head 3 -  ! Permissies
.head 3 -  String: gsErrorLogFileName
.head 3 -  String: gsErrorLog
.head 3 -  String: gsErrorEMail
.head 3 -  String: gsErrorApplication
.head 3 -  String: gsErrorIdClient
.head 3 -  String: gsErrorApp
.head 3 -  String: gsErrorINS
.head 3 -  String: gsErrorLocalite
.head 3 -  Long String: gsErrorSqlStmt
.head 3 -  String: gsApplicationName
.head 3 -  String: SourceDate
.head 3 -  String: SourceVersion
.head 3 -  ! Number: gnLanguage
.head 3 -  ! Number: gnLanguage2
.head 3 -  Boolean: gbConnectionEstablished
.head 3 -  Sql Handle: ghSqlMain
.head 3 -  Sql Handle: ghSqlError
.head 3 -  String: gsPath
.head 3 -  Number: gnError
.head 3 -  Number: gnErrorPos
.head 3 -  Boolean: gbRollback
.head 3 -  String: gsErrorMessage
.head 3 -  Long String: gsErrorSqlStatement
.head 3 -  ! /@@@@@ LS : 26/11/1997
.head 3 -  String: gsPalSqlName
.head 3 -  ! \@@@@@ LS : 26/11/1997
.head 3 -  !
.head 3 -  !
.head 3 -  ! LS : 18/06/2001
.head 3 -  ! String: sPrgKey
.head 3 -  ! String: sRcvKey
.head 3 -  ! !
.head 3 -  ! ! Tableau contenant les permissions d'accès à des fonctionnalités
.head 3 -  Number: gnTabPermissions[*]
.head 3 -  Number: gnPermBasePermission
.head 3 -  Number: gnPermMin
.head 3 -  ! !
.head 3 -  ! ! Contrôle que l'année est clôturée
.head 3 -  Boolean: gbAnneeCloturee
.head 3 -  ! !
.head 3 -  ! !
.head 3 -  FunctionalVar: TradMenu
.head 4 -  Class: clsTranslateMenu
.head 2 +  Internal Functions
.head 3 +  Function: SetParamWndInfoIconize
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Boolean: pbParamWndInfoIconize
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set gParamWndInfoIconize = pbParamWndInfoIconize
.head 3 +  Function: PalSqlConnect
.head 4 -  Description: Connection à la DB
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Receive Sql Handle: prhSql
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  Set lbOk = SqlConnect( prhSql )
.head 5 +  If lbOk
.head 6 -  Call SqlSetIsolationLevel( prhSql, 'RL' )
.head 6 +  If SalStrLength( gsIdPrgm ) > 0
.head 7 -  Call SqlSetParameterAll( prhSql, 3024, 0, gsIdPrgm, FALSE )
.head 6 -  Call SqlSetParameter( prhSql, DBP_PRESERVE, TRUE, '' )
.head 5 -  Return lbOk
.head 3 +  Function: PalSqlConnectTransaction
.head 4 -  Description: Connection à la DB
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Receive Sql Handle: prhSql
.head 5 -  String: psTransaction
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  ! Set lbOk = SqlConnectTransaction( prhSql, psTransaction )
.head 5 -  Set lbOk = SqlConnect( prhSql )
.head 5 +  If lbOk
.head 6 -  Call SqlSetIsolationLevel( prhSql, 'RL' )
.head 6 +  If SalStrLength( gsIdPrgm ) > 0
.head 7 -  Call SqlSetParameterAll( prhSql, 3024, 0, gsIdPrgm, FALSE )
.head 6 -  Call SqlSetParameter( prhSql, DBP_PRESERVE, TRUE, '' )
.head 5 -  Return lbOk
.head 3 +  Function: PalLayoutTblEditable
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: phWndTbl
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  ! Layout
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SuppressLastColLine, TRUE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SuppressRowLines, FALSE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SingleSelection, TRUE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_HScrollByCols, FALSE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SizableCols, FALSE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_MovableCols, TRUE )
.head 5 -  Call SalTblDefineRowHeader( phWndTbl, '', 16, TBL_RowHdr_MarkEdits | TBL_RowHdr_Visible, hWndNULL )
.head 5 -  Call SalColorSet( phWndTbl, COLOR_IndexWindow, COLOR_SysWindow )
.head 5 -  !
.head 3 +  Function: PalLayoutTblNotEditable
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: phWndTbl
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  ! Layout
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SuppressLastColLine, TRUE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SuppressRowLines, TRUE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SingleSelection, TRUE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_HScrollByCols, FALSE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_SizableCols, FALSE )
.head 5 -  Call SalTblSetTableFlags( phWndTbl, TBL_Flag_MovableCols, TRUE )
.head 5 -  Call SalTblDefineRowHeader( phWndTbl, '', 0, 0, hWndNULL )
.head 5 -  Call SalColorSet( phWndTbl, COLOR_IndexWindow, COLOR_3DFace )
.head 5 -  !
.head 3 +  Function: SqlGetServerSystemDate
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Receive Date/Time: pdtSysDate
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Sql Handle: lhSql
.head 5 -  String: lsDate
.head 5 -  Number: lnReturn
.head 4 +  Actions
.head 5 +  If SqlConnect( lhSql )
.head 6 +  When SqlError
.head 7 -  Set gnError = SqlError( lhSql )
.head 7 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 7 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || 'SELECT DISTINCT SYSDATE FROM SYSTABLES INTO :pdtSysDate'   )
.head 7 -  Return FALSE
.head 6 +  If SqlPrepareAndExecute( lhSql, 'SELECT DISTINCT SYSDATE FROM SYSTABLES INTO :pdtSysDate' )
.head 7 +  If SqlFetchNext( lhSql, lnReturn )
.head 8 -  Call SalDateToStr( pdtSysDate , lsDate)
.head 8 -  Return TRUE
.head 6 -  Call SqlDisconnect( lhSql )
.head 5 -  Return FALSE
.head 3 +  Function: SqlGetServerSystemDateTime
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Receive Date/Time: pdtSysDate
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Sql Handle: lhSql
.head 5 -  String: lsDate
.head 5 -  Number: lnReturn
.head 4 +  Actions
.head 5 +  If SqlConnect( lhSql )
.head 6 +  When SqlError
.head 7 -  Set gnError = SqlError( lhSql )
.head 7 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 7 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || 'SELECT DISTINCT SYSDATETIME FROM SYSTABLES INTO :pdtSysDate'   )
.head 7 -  Return FALSE
.head 6 +  If SqlPrepareAndExecute( lhSql, 'SELECT DISTINCT SYSDATETIME FROM SYSTABLES INTO :pdtSysDate' )
.head 7 +  If SqlFetchNext( lhSql, lnReturn )
.head 8 -  Call SalDateToStr( pdtSysDate , lsDate)
.head 8 -  Return TRUE
.head 6 -  Call SqlDisconnect( lhSql )
.head 5 -  Return FALSE
.head 3 +  Function: PalGetItemName
.head 4 -  Description: Returns the window name from a window handle.
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Window Handle: phWnd
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsItemName
.head 4 +  Actions
.head 5 +  If SalGetItemName( phWnd, lsItemName )
.head 6 -  Return lsItemName
.head 5 +  Else
.head 6 -  Return ''
.head 3 +  Function: PalMessageBox
.head 4 -  Description: Variant van SalMessageBox voor NL en FR tekst.
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: psTextNL
.head 5 -  String: psTextFR
.head 5 -  String: psTitleNL
.head 5 -  String: psTitleFR
.head 5 -  Number: pnFlags
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  Select Case gnLanguage
.head 6 -  Case Language_DE
.head 6 +  Case Language_NL
.head 7 -  Return SalMessageBox( psTextNL, psTitleNL, pnFlags )
.head 7 -  Break
.head 6 +  Case Language_FR
.head 7 -  Return SalMessageBox( psTextFR, psTitleFR, pnFlags )
.head 7 -  Break
.head 6 +  Default
.head 7 -  Return SalMessageBox( 'Language not supported in function PalMessageBox', 'Development Error', pnFlags )
.head 7 -  Break
.head 3 +  Function: PalDateToStrX
.head 4 -  Description: Converts a date/time value to a string value.
Returns a null string ('') if you specify DATETIME_Null as a parameter.
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Date/Time: pdtDateTime
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsStr
.head 4 +  Actions
.head 5 +  If SalDateToStr( pdtDateTime, lsStr ) >= 0
.head 6 -  Return lsStr
.head 5 +  Else
.head 6 -  Return ''
.head 3 +  Function: PalStrToStrRawX
.head 4 -  Description: Returns the string in uppercase and without: blancs, delimiters, ...
Only letters and digits are in the result string.
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psOrig
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If psOrig != ''
.head 6 -  Set psOrig = SalStrTrimX( psOrig )
.head 6 -  Set psOrig = SalStrUpperX( psOrig )
.head 6 -  !
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ' ', '' )
.head 6 -  !
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '~', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '!', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '@', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '#', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '$', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '%', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '^', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '&', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '*', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '(', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ')', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '_', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '+', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '-', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '=', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '|', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '\\', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '[', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ']', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '{', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '}', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ':', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '"', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '\'', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ';', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '?', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, ',', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '.', '' )
.head 6 -  Set psOrig = VisStrSubstitute( psOrig, '/', '' )
.head 6 -  !
.head 5 -  Return psOrig
.head 3 +  Function: PalTblFindString
.head 4 -  Description: Zoals VisTblFindString maar de kolom moet volledig overeenkomen met de gezochte string. 
In VisTblFindString wordt een rij gezocht die de gezochte string BEVAT.

Er wordt enkel gezocht in de opgegeven kolom.
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Window Handle: phWndTable
.head 5 -  Number: pnStartRow
.head 5 -  Window Handle: phWndColumn
.head 5 -  String: psString
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnRow
.head 5 -  String: lsColText
.head 4 +  Actions
.head 5 +  If phWndColumn = hWndNULL
.head 6 -  Call SalMessageBox( 'Column must be specified', 'Error using function PalTblFindString', MB_Ok )
.head 6 -  Return FALSE
.head 5 +  While SalTblFindNextRow( phWndTable, pnStartRow, 0, 0 )
.head 6 -  Call SalTblSetContext( phWndTable, pnStartRow )
.head 6 -  Call SalTblGetColumnText( phWndTable, SalTblQueryColumnID( phWndColumn ), lsColText )
.head 6 +  If lsColText = psString
.head 7 -  Return pnStartRow
.head 5 -  Return -1
.head 3 +  Function: PalDateYearDay
.head 4 -  Description: Conversion d'une date en jours.
.head 4 +  Returns
.head 5 -  Number: nNbrJour
.head 4 +  Parameters
.head 5 -  Date/Time: dtDateToConvert
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return dtDateToConvert - SalDateYearBegin( dtDateToConvert )
.head 3 +  Function: PalSplitString
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: psInit
.head 5 -  String: psSeparator
.head 5 -  Number: pnMaxLength
.head 5 -  Receive String: psSplittedString
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnPos
.head 4 +  Actions
.head 5 +  If SalStrLength( psInit ) > pnMaxLength
.head 6 -  Set lnPos = VisStrScanReverse( psInit, pnMaxLength - 1 , ',' )
.head 6 -  Set psSplittedString = 
	VisStrPad( SalStrLeftX( psInit, lnPos + 1 ), pnMaxLength ) ||
	SalStrMidX( psInit, lnPos + 1, SalStrLength( psInit ) - ( lnPos + 1) )
.head 5 +  Else
.head 6 -  Set psSplittedString = psInit
.head 3 +  Function: PalPermissionsOk
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: pnFunctionCode
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: pnValue
.head 4 +  Actions
.head 5 -  ! LS 12/05/2000 : Retrait de la table FUNCTIONS du FROM dans le select: elle ne servait à rien et ne se trouvait pas dans le WHERE
.head 5 -  Set lsSelect = 
	SELECT || 'count(*)' ||
	FROM || 'users, grp_user, groups, grp_fun' ||
	WHERE || '@UPPER(users.user_login)' || EQUAL || '@UPPER(USER)' || 
	S_AND || 'users.user_cod' || EQUAL || 'grp_user.user_cod' ||
	S_AND || 'groups.grp_cod' || EQUAL || 'grp_user.grp_cod' ||
	S_AND || 'groups.grp_cod' || EQUAL || 'grp_fun.grp_cod' ||
	S_AND || 'grp_fun.fun_cod' || EQUAL || SalNumberToStrX( pnFunctionCode, 0 ) ||
	INTO || ':pnValue'
.head 5 +  If gbDynSqlDebug
.head 6 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, lsSelect, TRUE )
.head 5 +  If SqlImmediate(lsSelect)
.head 6 +  If pnValue > 0 
.head 7 -  Return TRUE
.head 5 -  Return FALSE
.head 3 +  Function: PalGetApplParm
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psParName
.head 5 -  Receive String: psValue
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsValue
.head 5 -  String: lsSelect
.head 5 -  Number: lnReturn
.head 4 +  Actions
.head 5 -  ! HIER SOMS ONVERKLAARBARE PROBLEMEN
.head 5 -  Set lsSelect = 'select value from appl_parm into :psValue where name = ' || QUOTE|| psParName || QUOTE
.head 5 +  When SqlError
.head 6 -  Set gnError = SqlError( ghSqlMain )
.head 6 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 6 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || lsSelect  )
.head 6 -  Return FALSE
.head 5 +  If SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 +  If SqlFetchNext( ghSqlMain, lnReturn )
.head 7 -  Return TRUE
.head 5 -  Return FALSE
.head 5 -  ! Return SqlImmediate(lsSelect)
.head 3 +  Function: PalGetApplParmN
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psParName
.head 5 -  Receive Number: rpnValue
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsValue
.head 5 -  String: lsSelect
.head 5 -  Number: lnReturn
.head 5 -  String: s1
.head 4 +  Actions
.head 5 -  ! HIER SOMS ONVERKLAARBARE PROBLEMEN
.head 5 -  Set lsSelect = 'select value from appl_parm into :s1 where name = ' || QUOTE|| psParName || QUOTE
.head 5 +  When SqlError
.head 6 -  Set gnError = SqlError( ghSqlMain )
.head 6 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 6 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || lsSelect  )
.head 6 -  Return FALSE
.head 5 +  If SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 +  If SqlFetchNext( ghSqlMain, lnReturn )
.head 7 -  Set rpnValue = SalStrToNumber( s1 )
.head 7 -  Return TRUE
.head 5 -  Return FALSE
.head 5 -  ! Return SqlImmediate(lsSelect)
.head 3 +  Function: PalNextValueApplParm
.head 4 -  Description: Sets the parameter to the next value and returns this value.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psParName
.head 5 -  Receive String: psValue
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Sql Handle: lhSql
.head 5 -  String: lsSql
.head 5 -  Number: lnReturn
.head 5 -  Boolean: lbSuccess
.head 5 -  Number: lnError
.head 5 -  String: lsErrorMessage
.head 4 +  Actions
.head 5 -  Set lbSuccess = TRUE
.head 5 +  If Not SqlConnect( lhSql ) And lbSuccess
.head 6 -  Set lbSuccess = FALSE
.head 5 -  Set lsSql = UPDATE || 'appl_parm' || 
		S_SET || 'value' || EQUAL ||  '@STRING(@VALUE(value) + 1, 0 )' || 
		WHERE || 'name' || EQUAL || QUOTE || psParName || QUOTE
.head 5 +  When SqlError
.head 6 -  Set lnError = SqlError( lhSql )
.head 6 -  Call SqlGetErrorText( lnError, lsErrorMessage )
.head 6 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || lsErrorMessage || ' 
SQL: ' || lsSql  )
.head 6 -  Return FALSE
.head 5 +  If Not SqlPrepareAndExecute( lhSql, lsSql ) And lbSuccess
.head 6 -  Set lbSuccess = FALSE
.head 5 -  Set lsSql = SELECT || 'value' || 
		INTO || ':psValue' || FROM || 'appl_parm' || 
		WHERE ||  'name' || EQUAL || QUOTE || psParName || QUOTE
.head 5 +  When SqlError
.head 6 -  Set lnError = SqlError( lhSql )
.head 6 -  Call SqlGetErrorText( lnError, lsErrorMessage )
.head 6 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || lsErrorMessage || ' 
SQL: ' || lsSql  )
.head 6 -  Return FALSE
.head 5 +  If Not SqlPrepareAndExecute( lhSql, lsSql ) And lbSuccess
.head 6 -  Set lbSuccess = FALSE
.head 5 +  If Not SqlFetchNext( lhSql, lnReturn ) And lbSuccess
.head 6 -  Set lbSuccess = FALSE
.head 5 +  If lnReturn != FETCH_Ok And lbSuccess
.head 6 -  Set lbSuccess = FALSE
.head 5 +  If lbSuccess
.head 6 +  If Not SqlCommit( lhSql )
.head 7 -  Set lbSuccess = FALSE
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( lhSql, 'ROLLBACK' )
.head 5 +  If lbSuccess and Not SqlDisconnect( lhSql )
.head 6 -  Set lbSuccess = FALSE
.head 5 -  Return lbSuccess
.head 3 +  Function: PalNextValueSidisFiles
.head 4 -  Description: Sets the parameter to the next value and returns this value.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Date/Time: pdtDate
.head 5 -  Receive String: psValue
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Sql Handle: lhSql
.head 5 -  String: lsSql
.head 5 -  Number: lnReturn
.head 5 -  Boolean: lbSuccess
.head 5 -  Date/Time: ldtDateCurrent
.head 5 -  String: lsDatePrevious
.head 5 -  String: lsDateCurrent
.head 5 -  String: lsValue
.head 5 -  Number: lnError
.head 5 -  String: lsErrorMessage
.head 4 +  Actions
.head 5 -  Call PalGetApplParm( 'PAR0005', lsDatePrevious )
.head 5 -  Set lsDateCurrent = PalDateToStrX( pdtDate )
.head 5 -  Set lbSuccess = TRUE
.head 5 +  If lsDateCurrent != lsDatePrevious
.head 6 +  If Not SqlConnect( lhSql ) And lbSuccess
.head 7 -  Set lbSuccess = FALSE
.head 6 -  Set lsSql = UPDATE || 'appl_parm' || 
		S_SET || 'value' || EQUAL ||  QUOTE || lsDateCurrent || QUOTE || 
		WHERE || 'name' || EQUAL || QUOTE || 'PAR0005' || QUOTE
.head 6 +  When SqlError
.head 7 -  Set lnError = SqlError( lhSql )
.head 7 -  Call SqlGetErrorText( lnError, lsErrorMessage )
.head 7 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || lsErrorMessage || ' 
SQL: ' || lsSql  )
.head 7 -  Return FALSE
.head 6 +  If Not SqlPrepareAndExecute( lhSql, lsSql ) And lbSuccess
.head 7 -  Set lbSuccess = FALSE
.head 6 -  Set lsSql = UPDATE || 'appl_parm' || 
		S_SET || 'value' || EQUAL ||  QUOTE || '0' || QUOTE || 
		WHERE || 'name' || EQUAL || QUOTE || 'PAR0004' || QUOTE
.head 6 +  When SqlError
.head 7 -  Set lnError = SqlError( lhSql )
.head 7 -  Call SqlGetErrorText( lnError, lsErrorMessage )
.head 7 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || lsErrorMessage || ' 
SQL: ' || lsSql  )
.head 7 -  Return FALSE
.head 6 +  If Not SqlPrepareAndExecute( lhSql, lsSql ) And lbSuccess
.head 7 -  Set lbSuccess = FALSE
.head 6 +  If lbSuccess
.head 7 +  If Not SqlCommit( lhSql )
.head 8 -  Set lbSuccess = FALSE
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( lhSql, 'ROLLBACK' )
.head 6 +  If lbSuccess and Not SqlDisconnect( lhSql )
.head 7 -  Set lbSuccess = FALSE
.head 5 +  If PalNextValueApplParm( 'PAR0004', lsValue )
.head 6 -  Set psValue = lsValue
.head 5 +  Else
.head 6 -  Set lbSuccess = FALSE
.head 5 -  Return lbSuccess
.head 3 +  Function: PalCheckDigitMod97
.head 4 -  Description: Returns TRUE if the last two digits are equal to modulo 97 of the other digits
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psNumber
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnNumber
.head 5 -  Number: lnCheckDigit
.head 5 -  Number: lnModulo
.head 4 +  Actions
.head 5 -  Set psNumber = PalStrToStrRawX( psNumber )
.head 5 -  Set lnNumber = SalStrToNumber( SalStrMidX( psNumber, 0, SalStrLength( psNumber )  - 2 ) )
.head 5 -  Set lnCheckDigit = SalStrToNumber(  SalStrMidX( psNumber, SalStrLength( psNumber )  - 2 , 2) )
.head 5 -  Set lnModulo = SalNumberMod( lnNumber, 97 )
.head 5 -  Return lnModulo = lnCheckDigit
.head 3 +  Function: PalDoubleSQuote
.head 4 -  Description: Elke single quote wordt vervangen door twee single quotes
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psStr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return VisStrSubstitute( psStr, '\'', '\'\'' )
.head 3 +  Function: PalDoubleY
.head 4 -  Description: Elke single quote wordt vervangen door twee single quotes
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psStr
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 4 +  Actions
.head 5 -  Set s = VisStrSubstitute( psStr, 'Y', 'YY' )
.head 5 -  Return VisStrSubstitute( s, 'y', 'yy' )
.head 3 +  Function: PalUndoDoubleSQuote
.head 4 -  Description: Elke single quote wordt vervangen door twee single quotes
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psStr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return VisStrSubstitute( psStr, '\'\'',  '\'' )
.head 3 +  Function: PalGetPrgmDirectory
.head 4 -  Description: Retourne le répertoire contenant le programme
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sRepPrgm
.head 4 +  Actions
.head 5 -  Set sRepPrgm = strArgArray[ 0 ]
.head 5 +  If sRepPrgm != ''
.head 6 +  While ( SalStrLength( sRepPrgm ) > 0 ) and ( SalStrRightX( sRepPrgm, 1 ) != '\\' )
.head 7 -  Set sRepPrgm = SalStrLeftX( sRepPrgm, SalStrLength( sRepPrgm ) - 1 )
.head 6 +  If ( SalStrLength( sRepPrgm ) > 0 ) and ( SalStrRightX( sRepPrgm, 1 ) = '\\' )
.head 7 -  Set sRepPrgm = SalStrLeftX( sRepPrgm, SalStrLength( sRepPrgm ) - 1 )
.head 5 -  Return sRepPrgm
.head 3 +  Function: PalGetPrgmName
.head 4 -  Description: Retourne le nom du programme (sans l'extension)
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sRepPrgm
.head 5 -  Number: nPos
.head 4 +  Actions
.head 5 -  Set sRepPrgm = strArgArray[ 0 ]
.head 5 +  If sRepPrgm != ''
.head 6 -  Set nPos = SalStrScan( sRepPrgm, '\\\\' )
.head 6 +  While nPos >= 0
.head 7 -  Set sRepPrgm = SalStrMidX( sRepPrgm, nPos+1,SalStrLength( sRepPrgm ) )
.head 7 -  Set nPos = SalStrScan( sRepPrgm, '\\\\' )
.head 6 -  Set nPos = SalStrScan( sRepPrgm, '.' )
.head 6 -  Set sRepPrgm = SalStrMidX( sRepPrgm, 0, nPos )
.head 5 -  Return sRepPrgm
.head 3 +  Function: GetTransactionName
.head 4 -  Description: Fonction retournant un nom de transaction unique
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: ComputerName
.head 5 -  Date/Time: dt
.head 5 -  String: str
.head 4 +  Actions
.head 5 -  Call SalGetProfileString( 'Network', 'ComputerName', '', ComputerName, 'system.ini' )
.head 5 -  Set dt = SalDateCurrent(  )
.head 5 -  Set str = SalFmtFormatDateTime( dt, "yyyyMMddhhhhmmss" )
.head 5 -  Set str = ComputerName || str
.head 5 -  Return str
.head 3 +  Function: PalGetApplParmNo
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: pnParName
.head 5 -  Number: pnLength
.head 5 -  Receive String: psValue
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsValue
.head 5 -  String: lsSelect
.head 4 +  Actions
.head 5 -  ! HIER SOMS ONVERKLAARBARE PROBLEMEN
.head 5 -  Set lsSelect = 'select value from appl_parm into :psValue where name = ' || QUOTE|| 'PAR' || SalStrRightX( SalStrRepeatX( '0', pnLength ) || SalNumberToStrX( pnParName , 0 ), pnLength ) || QUOTE
.head 5 -  Return SqlImmediate(lsSelect)
.head 3 +  Function: PalPermissions
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: pnFunctionCode
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: pnValue
.head 4 +  Actions
.head 5 -  Set pnValue = 0
.head 5 -  Set lsSelect = 
	SELECT || 'count(*)' ||
	FROM || 'users, grp_user, groups, grp_fun, functions' ||
	WHERE || '@UPPER(users.user_login)' || EQUAL || '@UPPER(USER)' || 
	S_AND || 'users.user_cod' || EQUAL || 'grp_user.user_cod' ||
	S_AND || 'groups.grp_cod' || EQUAL || 'grp_user.grp_cod' ||
	S_AND || 'groups.grp_cod' || EQUAL || 'grp_fun.grp_cod' ||
	S_AND || 'grp_fun.fun_cod' || EQUAL || SalNumberToStrX( pnFunctionCode, 0 ) ||
	INTO || ':pnValue'
.head 5 +  If gbDynSqlDebug
.head 6 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, lsSelect, TRUE )
.head 5 +  If SqlImmediate(lsSelect)
.head 6 +  ! If pnValue > 0 
.head 7 -  Return TRUE
.head 5 -  ! Return FALSE
.head 5 -  Return pnValue
.head 3 +  Function: PalGetWindowsDirectory
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 4 +  Actions
.head 5 -  Set s = SalStrRepeatX( ' ', 254 )
.head 5 -  Call GetWindowsDirectoryA( s, 254 )
.head 5 +  If SalStrRightX( s, 1 ) != '\\'
.head 6 -  Set s = s || '\\'
.head 5 -  Return s
.head 3 +  Function: PalGetSystemDirectory
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 4 +  Actions
.head 5 -  Set s = SalStrRepeatX( ' ', 254 )
.head 5 -  Call GetSystemDirectoryA( s, 254 )
.head 5 +  If SalStrRightX( s, 1 ) != '\\'
.head 6 -  Set s = s || '\\'
.head 5 -  Return s
.head 3 +  Function: PalGetPrgmNameDef
.head 4 -  Description: Retourne le nom du programme (sans l'extension)
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psDef
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sRepPrgm
.head 5 -  Number: nPos
.head 4 +  Actions
.head 5 -  Set sRepPrgm = strArgArray[ 0 ]
.head 5 +  If sRepPrgm != ''
.head 6 -  Set nPos = SalStrScan( sRepPrgm, '\\\\' )
.head 6 +  While nPos >= 0
.head 7 -  Set sRepPrgm = SalStrMidX( sRepPrgm, nPos+1,SalStrLength( sRepPrgm ) )
.head 7 -  Set nPos = SalStrScan( sRepPrgm, '\\\\' )
.head 6 -  Set nPos = SalStrScan( sRepPrgm, '.' )
.head 6 -  Set sRepPrgm = SalStrMidX( sRepPrgm, 0, nPos )
.head 5 +  Else
.head 6 -  Set sRepPrgm = psDef
.head 5 -  Return sRepPrgm
.head 3 +  Function: PalLogErrorInFile
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psLine
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: lhFile
.head 5 -  Date/Time: ldtDateTime
.head 5 -  String: lsDateTime
.head 5 -  String: lsSeparator
.head 4 +  Actions
.head 5 +  If gsErrorLog = 'Y' Or gsErrorLog = 'y'
.head 6 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Exist )
.head 7 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Create | OF_Write )
.head 8 -  Call SalMessageBox( 'Error opening file ' || gsErrorLogFileName, 'Error', MB_Ok )
.head 8 -  Return FALSE
.head 6 +  Else
.head 7 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Append )
.head 8 -  Call SalMessageBox( 'Error opening file ' || gsErrorLogFileName, 'Error', MB_Ok )
.head 8 -  Return FALSE
.head 6 -  !
.head 6 -  Call SqlGetServerSystemDateTime( ldtDateTime )
.head 6 -  Set lsDateTime = SalFmtFormatDateTime( ldtDateTime, 'dd/MM/yyyy HH:mm' )
.head 6 -  Set psLine  = lsDateTime ||  ' - ' || gsApplicationName || ' (' || SourceDate || ', ' || SourceVersion || ')'  || ' - ' || gsUserName || ' - ' || SqlUser || ' -
ERROR: ' || psLine
.head 6 -  !
.head 6 -  Set lsSeparator = '
----------------------------------------------------------------------------------------------------'
.head 6 -  Set psLine  = psLine || lsSeparator
.head 6 -  !
.head 6 -  Call SalFilePutStr( lhFile, psLine )
.head 6 -  !
.head 6 -  Call SalFileClose( lhFile )
.head 3 +  Function: PalLogWarningInFile
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psLine
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: lhFile
.head 5 -  Date/Time: ldtDateTime
.head 5 -  String: lsDateTime
.head 5 -  String: lsSeparator
.head 4 +  Actions
.head 5 +  If gsErrorLog = 'Y' Or gsErrorLog = 'y'
.head 6 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Exist )
.head 7 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Create | OF_Write )
.head 8 -  Call SalMessageBox( 'Error opening file ' || gsErrorLogFileName, 'Error', MB_Ok )
.head 8 -  Return FALSE
.head 6 +  Else
.head 7 +  If Not SalFileOpen( lhFile, gsErrorLogFileName, OF_Append )
.head 8 -  Call SalMessageBox( 'Error opening file ' || gsErrorLogFileName, 'Error', MB_Ok )
.head 8 -  Return FALSE
.head 6 -  !
.head 6 -  Call SqlGetServerSystemDateTime( ldtDateTime )
.head 6 -  Set lsDateTime = SalFmtFormatDateTime( ldtDateTime, 'dd/MM/yyyy HH:mm' )
.head 6 -  Set psLine  = lsDateTime ||  ' - ' || gsApplicationName || ' (' || SourceDate || ', ' || SourceVersion || ')'  || ' - ' || gsUserName || ' - 
Warning: ' || psLine
.head 6 -  !
.head 6 -  Set lsSeparator = '
----------------------------------------------------------------------------------------------------'
.head 6 -  Set psLine  = psLine || lsSeparator
.head 6 -  !
.head 6 -  Call SalFilePutStr( lhFile, psLine )
.head 6 -  !
.head 6 -  Call SalFileClose( lhFile )
.head 3 +  Function: SetMainMenuLanguageText
.head 4 -  Description: Set a menu text in appropriate language. 
Call SalDrawMenuBar for displaying the modified menu.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phWndFrm
.head 5 -  Number: pnMainMenuItemPos
.head 5 -  String: psLanguageText
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Window Handle: lhMainMenu
.head 5 -  Window Handle: lhSubMenu
.head 4 +  Actions
.head 5 -  ! Bepaal de handle en ID van het menu item.
.head 5 -  Set lhMainMenu = GetMenu (phWndFrm)
.head 5 +  If lhMainMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetMainMenuLanguageText: 
Window has no menu ! ', 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lhSubMenu = GetSubMenu (lhMainMenu, pnMainMenuItemPos)
.head 5 +  If lhSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetMainMenuLanguageText: 
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  ! Wijzig de text van het menu.
.head 5 +  If ModifyMenuA (SalWindowHandleToNumber( lhMainMenu ), pnMainMenuItemPos, MF_ByPosition | MF_POPUP, SalWindowHandleToNumber( lhSubMenu ), psLanguageText)
.head 6 -  Call SalDrawMenuBar (phWndFrm)
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: SetSubMenuItemLanguageText
.head 4 -  Description: Set a menu item text in appropriate language.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phWndFrm
.head 5 -  Number: pnMainMenuItemPos
.head 5 -  Number: pnSubMenuItemPos
.head 5 -  String: psLanguageText
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Window Handle: lhSubMenu
.head 5 -  Window Handle: lhMainMenu
.head 5 -  Number: lnMenuItemID
.head 4 +  Actions
.head 5 -  ! Bepaal de handle en ID van het menu item.
.head 5 -  Set lhMainMenu = GetMenu (phWndFrm)
.head 5 +  If lhMainMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubMenuItemLanguageText:
Window has no menu ! ', 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lhSubMenu = GetSubMenu (lhMainMenu, pnMainMenuItemPos)
.head 5 +  If lhSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lnMenuItemID = GetMenuItemID (SalWindowHandleToNumber( lhSubMenu), pnSubMenuItemPos)
.head 5 +  If lnMenuItemID = 0xFFFFFFFF
.head 6 -  Call SalMessageBox( 'Function SetSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 )  || ',' || SalNumberToStrX( pnSubMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  ! Wijzig de text van het menu item.
.head 5 +  If ModifyMenuA (SalWindowHandleToNumber( lhSubMenu), pnSubMenuItemPos, MF_ByPosition | MF_STRING, lnMenuItemID, psLanguageText)
.head 6 -  Call SalDrawMenuBar (phWndFrm)
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: SetSubSubMenuItemLanguageText
.head 4 -  Description: Set a menu item text in appropriate language.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phWndFrm
.head 5 -  Number: pnMainMenuItemPos
.head 5 -  Number: pnSubMenuItemPos
.head 5 -  Number: pnSubSubMenuItemPos
.head 5 -  String: psLanguageText
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Window Handle: lhMainMenu
.head 5 -  Window Handle: lhSubMenu
.head 5 -  Window Handle: lhSubSubMenu
.head 5 -  Number: lnMenuItemID
.head 4 +  Actions
.head 5 -  ! Bepaal de handle en ID van het menu item.
.head 5 -  Set lhMainMenu = GetMenu (phWndFrm)
.head 5 +  If lhMainMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubMenuItemLanguageText:
Window has no menu ! ', 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lhSubMenu = GetSubMenu (lhMainMenu, pnMainMenuItemPos)
.head 5 +  If lhSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lhSubSubMenu = GetSubMenu (lhSubMenu, pnSubMenuItemPos)
.head 5 +  If lhSubSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ) || ','  || SalNumberToStrX( pnSubMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  Set lnMenuItemID = GetMenuItemID (SalWindowHandleToNumber( lhSubSubMenu), pnSubSubMenuItemPos)
.head 5 +  If lnMenuItemID = 0xFFFFFFFF
.head 6 -  Call SalMessageBox( 'Function SetSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 )  || ',' || SalNumberToStrX( pnSubMenuItemPos, 0 )  || ',' || SalNumberToStrX( pnSubSubMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  ! Wijzig de text van het menu item.
.head 5 +  If ModifyMenuA(SalWindowHandleToNumber( lhSubSubMenu), pnSubSubMenuItemPos, MF_ByPosition | MF_STRING, lnMenuItemID, psLanguageText)
.head 6 -  Call SalDrawMenuBar (phWndFrm)
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: SetSubSubSubMenuItemLanguageText
.head 4 -  Description: Set a menu item text in appropriate language.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phWndFrm
.head 5 -  Number: pnMainMenuItemPos
.head 5 -  Number: pnSubMenuItemPos
.head 5 -  Number: pnSubSubMenuItemPos
.head 5 -  Number: pnSubSubSubMenuItemPos
.head 5 -  String: psLanguageText
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Window Handle: lhMainMenu
.head 5 -  Window Handle: lhSubMenu
.head 5 -  Window Handle: lhSubSubMenu
.head 5 -  Window Handle: lhSubSubSubMenu
.head 5 -  Number: lnMenuItemID
.head 4 +  Actions
.head 5 -  ! Bepaal de handle en ID van het menu item.
.head 5 -  Set lhMainMenu = GetMenu (phWndFrm)
.head 5 +  If lhMainMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubSubMenuItemLanguageText:
Window has no menu ! ', 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  !
.head 5 -  Set lhSubMenu = GetSubMenu (lhMainMenu, pnMainMenuItemPos)
.head 5 +  If lhSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  !
.head 5 -  Set lhSubSubMenu = GetSubMenu (lhSubMenu, pnSubMenuItemPos)
.head 5 +  If lhSubSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ) || ','  || SalNumberToStrX( pnSubMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  !
.head 5 -  Set lhSubSubSubMenu = GetSubMenu (lhSubSubMenu, pnSubSubMenuItemPos)
.head 5 +  If lhSubSubSubMenu = hWndNULL
.head 6 -  Call SalMessageBox( 'Function SetSubSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 ) || ','  || SalNumberToStrX( pnSubMenuItemPos, 0) || ','  || SalNumberToStrX( pnSubSubMenuItemPos, 0 ), 'Development error', MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  !
.head 5 -  Set lnMenuItemID = GetMenuItemID (SalWindowHandleToNumber( lhSubSubSubMenu) , pnSubSubSubMenuItemPos)
.head 5 +  If lnMenuItemID = 0xFFFFFFFF
.head 6 -  Call SalMessageBox( 'Function SetSubSubSubMenuItemLanguageText:
Cannot find menu item: ' || SalNumberToStrX( pnMainMenuItemPos, 0 )  || ',' || SalNumberToStrX( pnSubMenuItemPos, 0 )  || ',' || SalNumberToStrX( pnSubSubMenuItemPos, 0) || ',' || SalNumberToStrX( pnSubSubSubMenuItemPos, 0 ), 'Development error', 
MB_Ok | MB_IconExclamation )
.head 6 -  Return FALSE
.head 5 -  ! Wijzig de text van het menu item.
.head 5 +  If ModifyMenuA (SalWindowHandleToNumber( lhSubSubSubMenu ), pnSubSubSubMenuItemPos, MF_ByPosition | MF_STRING, lnMenuItemID, psLanguageText)
.head 6 -  Call SalDrawMenuBar (phWndFrm)
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: GetLabelLanguage
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: hWndObject
.head 5 -  Number: pnLanguage
.head 5 -  Receive String: sLabel
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bFound
.head 4 +  Actions
.head 5 -  Set sLabel = ''
.head 5 +  Select Case pnLanguage
.head 6 +  Case Language_NL
.head 7 -  Call SalWindowGetProperty( hWndObject,"LABELN", sLabel )
.head 7 -  Break
.head 6 +  Case Language_FR
.head 7 -  Call SalWindowGetProperty( hWndObject,"LABELF", sLabel )
.head 7 -  Break
.head 6 +  Case Language_EN
.head 7 -  Call SalWindowGetProperty( hWndObject,"LABELE", sLabel )
.head 7 -  Break
.head 6 +  Case Language_DE
.head 7 -  Call SalWindowGetProperty( hWndObject,"LABELD", sLabel )
.head 7 -  Break
.head 6 +  Default
.head 7 -  Set sLabel = ''
.head 7 -  Break
.head 5 -  Set bFound = Not (sLabel = '')
.head 5 -  Return bFound
.head 3 +  Function: TranslateMonth
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: nMonthNumber
.head 5 -  Number: pnLanguage
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sMonth
.head 4 +  Actions
.head 5 +  Select Case nMonthNumber
.head 6 +  Case 1
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Januari'
.head 8 +  Case Language_FR
.head 9 -  Return 'Janvier'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 2
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Februari'
.head 8 +  Case Language_FR
.head 9 -  Return 'Février'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 3
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Maart'
.head 8 +  Case Language_FR
.head 9 -  Return 'Mars'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 4
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'April'
.head 8 +  Case Language_FR
.head 9 -  Return 'Avril'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 5
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Mei'
.head 8 +  Case Language_FR
.head 9 -  Return 'Mai'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 6
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Juni'
.head 8 +  Case Language_FR
.head 9 -  Return 'Juin'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 7
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Juli'
.head 8 +  Case Language_FR
.head 9 -  Return 'Juillet'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 8
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Augustus'
.head 8 +  Case Language_FR
.head 9 -  Return 'Août'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 9
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'September'
.head 8 +  Case Language_FR
.head 9 -  Return 'Septembre'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 10
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'Oktober'
.head 8 +  Case Language_FR
.head 9 -  Return 'Octobre'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 11
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'November'
.head 8 +  Case Language_FR
.head 9 -  Return 'Novembre'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Case 12
.head 7 +  Select Case pnLanguage
.head 8 +  Case Language_NL
.head 9 -  Return 'December'
.head 8 +  Case Language_FR
.head 9 -  Return 'Décembre'
.head 8 +  Default
.head 9 -  Return 'TranslateMonth Error'
.head 7 -  Break
.head 6 +  Default
.head 7 -  Return 'TranslateMonth Error'
.head 3 +  Function: SqlConnection
.head 4 -  Description: This function takes a SQL Handle, database, user and password as parameters for 
establishing a connection. It it connects the cursor successfully, it will then set some default
values for various database parameters.
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Receive Sql Handle: phSqlParm
.head 5 -  String: psDatabaseName
.head 5 -  String: psUserName
.head 5 -  String: psPassword
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set SqlDatabase = psDatabaseName
.head 5 -  Set SqlUser = psUserName
.head 5 -  Set SqlPassword = psPassword
.head 5 +  When SqlError
.head 6 -  Call SqlExtractArgs( wParam, lParam, ghSqlError, gnError, gnErrorPos )
.head 6 +  If gnError = 405
.head 7 -  Call SalMessageBox(
	'Invalid username: ' || psUserName ,
	'Error', MB_Ok | MB_IconStop ) 
.head 7 -  Return FALSE
.head 6 +  If gnError = 404
.head 7 -  Call SalMessageBox(
	'Invalid password',
	'Error', MB_Ok | MB_IconStop ) 
.head 7 -  Return FALSE
.head 6 +  If gnError = 401
.head 7 -  Call SalMessageBox(
	'Cannot open database ' || psDatabaseName,
	'Error', MB_Ok | MB_IconStop ) 
.head 7 -  Return FALSE
.head 5 +  If SqlConnect(phSqlParm)
.head 6 -  ! Call SqlSetIsolationLevel( phSqlParm, 'RL' )
.head 6 -  Call SqlSetParameter( phSqlParm, DBP_PRESERVE, TRUE, '' )
.head 6 -  Call SqlSetParameter( phSqlParm, DBP_ROLLBACKONTIMEOUT, TRUE, '' )
.head 6 -  Call SqlSetParameter( phSqlParm, DBP_AUTOCOMMIT, FALSE, '' )
.head 6 -  Call SqlSetLockTimeout( phSqlParm, 10 )
.head 6 -  Call SqlCommit( phSqlParm )
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  ! Call SalMessageBox( 
	'Cannot connect to database ' || psDatabaseName || ' as user ' || psUserName || '/' ||  psPassword,
	'Error', MB_Ok | MB_IconExclamation )
.head 6 -  Call SalQuit(  )
.head 3 +  Function: HandleSQLError
.head 4 -  Description: This function displays the app message, text, cause and remedy in a dialog box.
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  ! Get the Sql Handle, error number and position of the last error
.head 5 -  Call SqlExtractArgs( wParam, lParam, ghSqlError, gnError, gnErrorPos )
.head 5 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || SqlGetErrorTextX( gnError ) || '
' || gsErrorSqlStatement )
.head 5 -  ! See if the system initiated any rollback.
.head 5 -  ! hSqlError would be invalid if the error occurred during first SqlConnect.
.head 5 +  If gnError != ERROR_InvalidUserName 
And gnError != ERROR_InvalidPassword 
And gnError != ERROR_CannotOpenDatabase 
.head 6 -  Call SqlGetRollbackFlag( ghSqlError, gbRollback )
.head 6 +  If Not gbRollback
.head 7 -  ! Rollback the transaction so that we release any locks held before we display the dialog box
.head 7 -  Call SqlPrepareAndExecute( ghSqlError, 'ROLLBACK' )
.head 7 -  Set gsErrorMessage = 'The transaction has been rolledback.'
.head 7 +  Select Case gnError
.head 8 +  Case ERROR_InvalidRowID
.head 9 -  Set gsErrorMessage = gsErrorMessage || 'This record has been updated since you fetched it.
Please refresh and try again.'
.head 9 -  Break
.head 8 +  Case ERROR_TimeOut
.head 9 -  Set gsErrorMessage = gsErrorMessage || 'Timed out waiting for a lock.
Please try again.You have to refresh after that.'
.head 9 -  Break
.head 8 +  Default
.head 9 -  Set gsErrorMessage = gsErrorMessage || 'Please refresh'
.head 7 -  ! Call SalMessageBox(  gsErrorMessage, 'Attention', MB_Ok | MB_IconExclamation )
.head 5 +  Else
.head 6 -  Set gsErrorMessage = 'Enter the correct values and try again.'
.head 5 +  Select Case gnError
.head 6 +  Case ERROR_DuplicateKey
.head 7 -  Call PalMessageBox(  'De sleutel werd reeds gebruikt.',  'La clé est déjà utilisé.', 
	'Opgelet', 'Attention', MB_Ok | MB_IconExclamation )
.head 7 -  Break
.head 6 +  Default
.head 7 -  ! Call SalMessageBox(  gsErrorMessage, 'Attention', MB_Ok | MB_IconExclamation )
.head 7 -  Call SalModalDialog(dlgSqlError, hWndNULL, gnError, gsErrorMessage, gsErrorSqlStmt)
.head 7 -  ! Call SalModalDialog(dlgSqlError, hWndForm, gnError, gsErrorMessage)
.head 7 -  Break
.head 5 -  !
.head 3 +  Function: PalSqlTrans
.head 4 -  Description: Naar voorbeeld in boek 'Using gupta...' p72
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Sql Handle: phSql
.head 5 -  String: psSqlStmt
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsCurrentSqlStmt
.head 5 -  Number: lnStatusCode
.head 5 -  Number: lnSqlError
.head 5 -  Number: lnErrorPos
.head 5 -  Boolean: lbSuccess
.head 5 -  Boolean: lbContinue
.head 5 -  File Handle: lfh
.head 5 -  String: ls
.head 4 +  Actions
.head 5 -  Call SalStrTrim( psSqlStmt, lsCurrentSqlStmt )
.head 5 -  !
.head 5 -  Set lnStatusCode = TRANS_Ok
.head 5 -  !
.head 5 +  If gbDynSqlDebug
.head 6 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, psSqlStmt, TRUE )
.head 5 -  Set lbSuccess = FALSE
.head 5 -  Set lbContinue = TRUE
.head 5 +  While Not lbSuccess And lbContinue
.head 6 -  Set lbSuccess = FALSE
.head 6 -  Set lbContinue = TRUE
.head 6 -  ! /@@@@@ LS : 26/11/1997
.head 6 +  If SalStrTrimX( gsPalSqlName ) != ''
.head 7 +  If not SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 8 -  Call SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_Create | OF_ReadWrite | OF_Text )
.head 8 -  Call SalFileClose( lfh )
.head 7 +  If SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 8 -  Set ls = SalFmtFormatDateTime( SalDateCurrent(  ), 'yyyy/MM/dd hh:mm:ss' )
.head 8 -  Call SalFilePutStr( lfh, ls )
.head 8 -  Call SalFilePutStr( lfh, SalStrRepeatX( '-', SalStrLength( ls ) ) )
.head 8 -  Call SalFilePutStr( lfh, psSqlStmt )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFilePutStr( lfh, SalStrRepeatX( '*', 50 ) )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFileClose( lfh )
.head 6 -  ! \@@@@@ LS : 26/11/1997
.head 6 +  When SqlError
.head 7 -  Set gnError = SqlError( phSql )
.head 7 -  Set gsErrorSqlStmt = psSqlStmt
.head 7 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 7 -  Call SqlExtractArgs( wParam, lParam, ghSqlError, lnSqlError, lnErrorPos )
.head 7 -  ! /@@@@@ LS : 26/11/1997
.head 7 +  If SalStrTrimX( gsPalSqlName ) != ''
.head 8 +  If SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 9 -  Call SalFilePutStr( lfh, 'Error : ' || SalFmtFormatNumber( lnSqlError, '0' ) || ' - ' || SqlGetErrorTextX( lnSqlError ) )
.head 9 -  Call SalFilePutStr( lfh, '' )
.head 9 -  Call SalFilePutStr( lfh, '' )
.head 9 -  Call SalFileClose( lfh )
.head 7 -  ! \@@@@@ LS : 26/11/1997
.head 7 +  Select Case lnSqlError
.head 8 +  Case ERROR_TimeOut
.head 9 +  If PalLockTimeOut(psSqlStmt, ERROR_TimeOut)
.head 10 -  ! Retry
.head 10 -  Set lnStatusCode = TRANS_Retry
.head 9 +  Else
.head 10 -  ! Cancel
.head 10 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Een andere gebruiker is deze gegevens aan het aanpassen (time out). Probeer later opnieuw.
Un autre utilisateur est occupé à modifier les données  (time out). Essayez plus tard. '
 )
.head 10 -  Set lnStatusCode = TRANS_Cancel
.head 9 -  Break
.head 8 +  Case ERROR_DeadLock
.head 9 +  If PalLockTimeOut(psSqlStmt, ERROR_TimeOut)
.head 10 -  ! Retry
.head 10 -  Set lnStatusCode = TRANS_Retry
.head 9 +  Else
.head 10 -  ! Cancel
.head 10 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Een andere gebruiker is deze gegevens aan het aanpassen (deadlock). Probeer later opnieuw.
Un autre utilisateur est occupé à modifier les données  (deadlock). Essayez plus tard. '
 )
.head 10 -  Set lnStatusCode = TRANS_Cancel
.head 9 -  Break
.head 8 +  Case ERROR_InvalidRowID
.head 9 -  Call PalMessageBox( 'Deze gegeven kunnen momenteel niet gewijzigd worden. Een andere gebruiker heeft deze gegevens intussen gewijzigd. 
Haal de gegevens opnieuw op om de wijzigingen te zien en voer uw wijzigingen uit.',
'Les données ne peuvent pas être modifiées maintenant. Les données sont modifiées par un autre utilisateur.
Rechargez les données et refaites vos modifications.' ,
'Database Warning', 'Database Warning', MB_Ok | MB_IconHand)
.head 9 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Deze gegeven kunnen momenteel niet gewijzigd worden. Een andere gebruiker heeft deze gegevens intussen gewijzigd. 
Haal de gegevens opnieuw op om de wijzigingen te zien en voer uw wijzigingen uit.
Les données ne peuvent pas être modifiées maintenant. Les données sont modifiées par un autre utilisateur.
Rechargez les données et refaites vos modifications.' 
 )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Break
.head 8 +  Case ERROR_CannotDelete_DependentRows
.head 9 -  Call PalMessageBox( 'Verwijderen van het record is onmogelijk. Er zijn referenties naar het betreffende record.', 
	'Suppression impossible. Cette valeur est toujours utilisée.', 'Opgelet', 'Attention', MB_Ok | MB_IconExclamation )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Verwijderen van het record is onmogelijk. Er zijn referenties naar het betreffende record.
Suppression impossible. Cette valeur est toujours utilisée.' 
 )
.head 9 -  Break
.head 8 +  Default
.head 9 -  Call PalLogErrorInFile( 
SalNumberToStrX( lnSqlError, 0 ) || ' - ' || PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
' 
 )
.head 9 -  Call HandleSQLError(  )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Break
.head 7 -  Call SqlPrepareAndExecute( phSql, 'ROLLBACK' )
.head 7 -  Return FALSE
.head 6 +  If SqlPrepareAndExecute( phSql, psSqlStmt )
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lbContinue = FALSE
.head 6 +  Else
.head 7 -  Set lbSuccess = FALSE
.head 7 +  Select Case lnStatusCode
.head 8 +  Case TRANS_Cancel
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 8 +  Case TRANS_Retry
.head 9 -  Set lbContinue = TRUE
.head 9 -  Break
.head 8 +  Case TRANS_Error
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 8 +  Case TRANS_Ok
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 5 -  Return lnStatusCode
.head 3 +  Function: PalSqlPrepare
.head 4 -  Description: Naar voorbeeld in boek 'Using gupta...' p72
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Sql Handle: phSql
.head 5 -  String: psSqlStmt
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsCurrentSqlStmt
.head 5 -  Number: lnStatusCode
.head 5 -  Number: lnSqlError
.head 5 -  Number: lnErrorPos
.head 5 -  Boolean: lbSuccess
.head 5 -  Boolean: lbContinue
.head 5 -  File Handle: lfh
.head 5 -  String: ls
.head 4 +  Actions
.head 5 -  Call SalStrTrim( psSqlStmt, lsCurrentSqlStmt )
.head 5 -  !
.head 5 -  Set lnStatusCode = TRANS_Ok
.head 5 -  !
.head 5 +  If gbDynSqlDebug
.head 6 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, psSqlStmt, TRUE )
.head 5 -  Set lbSuccess = FALSE
.head 5 -  Set lbContinue = TRUE
.head 5 +  While Not lbSuccess And lbContinue
.head 6 -  Set lbSuccess = FALSE
.head 6 -  Set lbContinue = TRUE
.head 6 -  ! /@@@@@ LS : 26/11/1997
.head 6 +  If SalStrTrimX( gsPalSqlName ) != ''
.head 7 +  If not SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 8 -  Call SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_Create | OF_ReadWrite | OF_Text )
.head 8 -  Call SalFileClose( lfh )
.head 7 +  If SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 8 -  Set ls = SalFmtFormatDateTime( SalDateCurrent(  ), 'yyyy/MM/dd hh:mm:ss' )
.head 8 -  Call SalFilePutStr( lfh, ls )
.head 8 -  Call SalFilePutStr( lfh, SalStrRepeatX( '-', SalStrLength( ls ) ) )
.head 8 -  Call SalFilePutStr( lfh, psSqlStmt )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFilePutStr( lfh, SalStrRepeatX( '*', 50 ) )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFilePutStr( lfh, '' )
.head 8 -  Call SalFileClose( lfh )
.head 6 -  ! \@@@@@ LS : 26/11/1997
.head 6 +  When SqlError
.head 7 -  Set gnError = SqlError( phSql )
.head 7 -  Set gsErrorSqlStmt = psSqlStmt
.head 7 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 7 -  Call SqlExtractArgs( wParam, lParam, ghSqlError, lnSqlError, lnErrorPos )
.head 7 -  ! /@@@@@ LS : 26/11/1997
.head 7 +  If SalStrTrimX( gsPalSqlName ) != ''
.head 8 +  If SalFileOpen( lfh, SalStrTrimX( gsPalSqlName ), OF_ReadAppend | OF_Text )
.head 9 -  Call SalFilePutStr( lfh, 'Error : ' || SalFmtFormatNumber( lnSqlError, '0' ) || ' - ' || SqlGetErrorTextX( lnSqlError ) )
.head 9 -  Call SalFilePutStr( lfh, '' )
.head 9 -  Call SalFilePutStr( lfh, '' )
.head 9 -  Call SalFileClose( lfh )
.head 7 -  ! \@@@@@ LS : 26/11/1997
.head 7 +  Select Case lnSqlError
.head 8 +  Case ERROR_TimeOut
.head 9 +  If PalLockTimeOut(psSqlStmt, ERROR_TimeOut)
.head 10 -  ! Retry
.head 10 -  Set lnStatusCode = TRANS_Retry
.head 9 +  Else
.head 10 -  ! Cancel
.head 10 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Een andere gebruiker is deze gegevens aan het aanpassen (time out). Probeer later opnieuw.
Un autre utilisateur est occupé à modifier les données  (time out). Essayez plus tard. '
 )
.head 10 -  Set lnStatusCode = TRANS_Cancel
.head 9 -  Break
.head 8 +  Case ERROR_DeadLock
.head 9 +  If PalLockTimeOut(psSqlStmt, ERROR_TimeOut)
.head 10 -  ! Retry
.head 10 -  Set lnStatusCode = TRANS_Retry
.head 9 +  Else
.head 10 -  ! Cancel
.head 10 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Een andere gebruiker is deze gegevens aan het aanpassen (deadlock). Probeer later opnieuw.
Un autre utilisateur est occupé à modifier les données  (deadlock). Essayez plus tard. '
 )
.head 10 -  Set lnStatusCode = TRANS_Cancel
.head 9 -  Break
.head 8 +  Case ERROR_InvalidRowID
.head 9 -  Call PalMessageBox( 'Deze gegeven kunnen momenteel niet gewijzigd worden. Een andere gebruiker heeft deze gegevens intussen gewijzigd. 
Haal de gegevens opnieuw op om de wijzigingen te zien en voer uw wijzigingen uit.',
'Les données ne peuvent pas être modifiées maintenant. Les données sont modifiées par un autre utilisateur.
Rechargez les données et refaites vos modifications.' ,
'Database Warning', 'Database Warning', MB_Ok | MB_IconHand)
.head 9 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Deze gegeven kunnen momenteel niet gewijzigd worden. Een andere gebruiker heeft deze gegevens intussen gewijzigd. 
Haal de gegevens opnieuw op om de wijzigingen te zien en voer uw wijzigingen uit.
Les données ne peuvent pas être modifiées maintenant. Les données sont modifiées par un autre utilisateur.
Rechargez les données et refaites vos modifications.' 
 )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Break
.head 8 +  Case ERROR_CannotDelete_DependentRows
.head 9 -  Call PalMessageBox( 'Verwijderen van het record is onmogelijk. Er zijn referenties naar het betreffende record.', 
	'Suppression impossible. Cette valeur est toujours utilisée.', 'Opgelet', 'Attention', MB_Ok | MB_IconExclamation )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Call PalLogWarningInFile( 
PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
User got the message: 
Verwijderen van het record is onmogelijk. Er zijn referenties naar het betreffende record.
Suppression impossible. Cette valeur est toujours utilisée.' 
 )
.head 9 -  Break
.head 8 +  Default
.head 9 -  Call PalLogErrorInFile( 
SalNumberToStrX( lnSqlError, 0 ) || ' - ' || PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || psSqlStmt || '
' 
 )
.head 9 -  Call HandleSQLError(  )
.head 9 -  Set lnStatusCode = TRANS_Error
.head 9 -  Break
.head 7 -  Call SqlPrepareAndExecute( phSql, 'ROLLBACK' )
.head 7 -  Return FALSE
.head 6 +  If SqlPrepare( phSql, psSqlStmt )
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lbContinue = FALSE
.head 6 +  Else
.head 7 -  Set lbSuccess = FALSE
.head 7 +  Select Case lnStatusCode
.head 8 +  Case TRANS_Cancel
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 8 +  Case TRANS_Retry
.head 9 -  Set lbContinue = TRUE
.head 9 -  Break
.head 8 +  Case TRANS_Error
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 8 +  Case TRANS_Ok
.head 9 -  Set lbContinue = FALSE
.head 9 -  Break
.head 5 -  Return lnStatusCode
.head 3 +  Function: PalLockTimeOut
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psSqlStmt
.head 5 -  Number: pnError
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return SalModalDialog( dlgTimeOut, hWndForm, psSqlStmt, pnError )
.head 3 -  !
.head 3 -  !
.head 3 -  ! Fonctions qui trouvaient dans les librairies externes redéfiniesp pour comptabilité
.head 3 -  !
.head 3 -  !
.head 3 +  Function: AnsiUpper
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 -  Actions
.head 3 +  Function: FindWindow
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Window Handle:
.head 4 +  Parameters
.head 5 -  String: psNomClass
.head 5 -  String: psNomWindow
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return FindWindowA( psNomClass, psNomWindow )
.head 3 +  Function: CtrlWindow
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: psArr[*]
.head 5 -  Number: pnNbr
.head 5 -  Boolean: pbCaseSensitive
.head 5 -  Boolean: pbActivate
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Window Handle: hWnd
.head 5 -  String: sStr
.head 5 -  Boolean: b
.head 5 -  Boolean: tb[*]
.head 5 -  Number: i
.head 5 -  Number: c
.head 4 +  Actions
.head 5 -  Set c = 0
.head 5 -  Set hWnd = GetTopWindow( GetDesktopWindow( ) )
.head 5 +  While ( hWnd != hWndNULL ) and ( c = 0 )
.head 6 -  Call SalStrSetBufferLength( sStr, 256 )
.head 6 -  Call GetWindowTextA( hWnd, sStr, 256 )
.head 6 +  If SalStrLength( SalStrTrimX( sStr ) ) > 0
.head 7 -  Set i = pnNbr
.head 7 +  While i
.head 8 -  Set i = i - 1
.head 8 -  Set tb[i] = TRUE
.head 8 +  If pbCaseSensitive
.head 9 +  If SalStrScan( sStr, psArr[i] ) >= 0
.head 10 -  Set tb[i] = FALSE
.head 8 +  Else
.head 9 +  If SalStrScan( SalStrUpperX( sStr ), SalStrUpperX( psArr[i] ) ) >= 0
.head 10 -  Set tb[i] = FALSE
.head 7 -  Set i = pnNbr
.head 7 -  Set b = FALSE
.head 7 +  While i
.head 8 -  Set i = i - 1
.head 8 -  Set b = b or tb[i]
.head 7 +  If not b
.head 8 -  ! Set sStr = SalStrRepeatX( ' ', 26 )
.head 8 -  ! Call GetModuleFileName_LS( GetClassWord_LS( hWnd, -16 ), sStr, 24 )
.head 8 -  ! If SalStrUpperX( SalStrRightX( sStr, 4 ) ) = '.EXE'
.head 8 -  Set c = c + 1
.head 7 +  If ( c > 0  ) and pbActivate
.head 8 -  Call ShowWindow( hWnd, 3 )
.head 8 -  Call SalBringWindowToTop( hWnd )
.head 6 -  Set hWnd = GetWindow( hWnd, 2 )
.head 5 -  Return c
.head 3 -  !
.head 3 -  !
.head 3 -  ! Fonctions pour la gestion des permissions
.head 3 -  !
.head 3 +  Function: PalPermissionCons
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: pnFonctionnalite
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  ! Initialisation
.head 5 -  Set lbOk = FALSE
.head 5 +  If gnPermMin = NUMBER_Null
.head 6 -  Set gnPermMin = 1000
.head 5 -  ! Cas des fonctionnalites communes à tous les programmes
.head 5 +  If ( 0 < pnFonctionnalite ) and ( pnFonctionnalite <= gnPermMin )
.head 6 +  If gnTabPermissions[ pnFonctionnalite ] = NUMBER_Null
.head 7 +  If PalPermissionsOk( pnFonctionnalite )
.head 8 -  Set gnTabPermissions[ pnFonctionnalite ] = 1
.head 7 +  Else
.head 8 -  Set gnTabPermissions[ pnFonctionnalite ] = 0
.head 6 -  Set lbOk = ( gnTabPermissions[ pnFonctionnalite ] = 1 )
.head 5 -  ! Cas des fonctionnalites propres à un programme
.head 5 +  Else If ( pnFonctionnalite > gnPermBasePermission )
.head 6 +  If gnTabPermissions[ pnFonctionnalite - gnPermBasePermission + gnPermMin ] = NUMBER_Null
.head 7 +  If PalPermissionsOk( pnFonctionnalite )
.head 8 -  Set gnTabPermissions[ pnFonctionnalite - gnPermBasePermission + gnPermMin ] = 1
.head 7 +  Else
.head 8 -  Set gnTabPermissions[ pnFonctionnalite - gnPermBasePermission + gnPermMin ] = 0
.head 6 -  Set lbOk = ( gnTabPermissions[ pnFonctionnalite - gnPermBasePermission + gnPermMin ] = 1 )
.head 5 -  Return lbOk
.head 3 +  Function: PalPermissionConsBetween
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: pnFonctionnalite1
.head 5 -  Number: pnFonctionnalite2
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = pnFonctionnalite1
.head 5 +  While i <= pnFonctionnalite2
.head 6 -  Call PalPermissionCons( i )
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i = i + 1
.head 3 +  Function: PalPermissionModif
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: pnFonctionnalite
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  ! Set i = 200
.head 5 +  ! While i
.head 6 -  Set i = i - 1
.head 6 -  Call DispatchMessage(  )
.head 5 +  If gbAnneeCloturee
.head 6 -  Set lbOk = FALSE
.head 5 +  Else
.head 6 -  Set lbOk = PalPermissionCons( pnFonctionnalite )
.head 5 -  Return lbOk
.head 3 +  Function: PalPermissionInit
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: pnNbr
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = gnPermMin + pnNbr
.head 5 +  While i
.head 6 -  Set gnTabPermissions[ i ] = NUMBER_Null
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i = i - 1
.head 3 +  Function: PalAnneeCloturee
.head 4 -  Description: Contrôle que l'année en cours en clôturée
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psAnnee
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsClot
.head 4 +  Actions
.head 5 -  Set lsClot = ''
.head 5 -  Call SqlImmediate( 'select ann_cloturee from annee where ann_annee = :psAnnee into :lsClot' )
.head 5 +  If lsClot = '1'
.head 6 -  Set gbAnneeCloturee = TRUE
.head 5 +  Else
.head 6 -  Set gbAnneeCloturee = FALSE
.head 5 -  Call SqlClearImmediate( )
.head 5 -  Return gbAnneeCloturee
.head 3 -  !
.head 3 -  !
.head 3 +  Function: PalIfSetDateTime
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Date/Time:
.head 4 +  Parameters
.head 5 -  Boolean: psBool
.head 5 -  Date/Time: pdtDateTime1
.head 5 -  Date/Time: pdtDateTime2
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If psBool
.head 6 -  Return pdtDateTime1
.head 5 +  Else
.head 6 -  Return pdtDateTime2
.head 3 +  Function: PalIfSetNumber
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Boolean: psBool
.head 5 -  Number: pnNum1
.head 5 -  Number: pnNum2
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If psBool
.head 6 -  Return pnNum1
.head 5 +  Else
.head 6 -  Return pnNum2
.head 3 +  Function: PalIfSetBoolean
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Boolean: psBool
.head 5 -  Boolean: pb1
.head 5 -  Boolean: pb2
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If psBool
.head 6 -  Return pb1
.head 5 +  Else
.head 6 -  Return pb2
.head 3 +  Function: PalIfSetString
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Boolean: psBool
.head 5 -  String: psStr1
.head 5 -  String: psStr2
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If psBool
.head 6 -  Return psStr1
.head 5 +  Else
.head 6 -  Return psStr2
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 +  Function: PalMyDisableWindow
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Window Handle: phWnd
.head 5 -  Boolean: pbSet
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnType
.head 5 -  Window Handle: wh
.head 4 +  Actions
.head 5 -  Set lnType = SalGetType( phWnd )
.head 5 +  Select Case lnType
.head 6 -  Case TYPE_DataField
.head 6 +  Case TYPE_MultilineText
.head 7 +  If pbSet
.head 8 -  ! Call SalDisableWindow( phWnd )
.head 7 +  Else
.head 8 -  Call SalEnableWindow( phWnd )
.head 7 -  Call SalSendMsg( phWnd, 0x00CF, pbSet, 0 )
.head 7 -  Break
.head 6 +  Case TYPE_ComboBox
.head 7 +  If pbSet
.head 8 -  Call SalDisableWindow( phWnd )
.head 8 -  Set wh = GetWindow( phWnd, GW_CHILD )
.head 8 +  If wh != hWndNULL
.head 9 -  Call SalEnableWindow( wh )
.head 9 -  Call SalSendMsg( wh, 0x00CF, 1, 0 )
.head 7 +  Else
.head 8 -  Call SalEnableWindow( phWnd )
.head 7 -  Break
.head 6 +  ! Case TYPE_ListBox
.head 7 +  If pbSet
.head 8 -  Call VisWinSetFlags( phWnd, WF_DisplayOnly, TRUE )
.head 7 +  Else 
.head 8 -  ! Call SalEnableWindow( phWnd )
.head 8 -  Call VisWinSetFlags( phWnd, WF_DisplayOnly, FALSE )
.head 7 -  Break 
.head 6 -  Case TYPE_RadioButton
.head 6 +  Case TYPE_CheckBox
.head 7 +  If pbSet
.head 8 -  Call VisWinSetFlags( phWnd, WF_DisplayOnly, TRUE )
.head 7 +  Else
.head 8 -  ! Call SalEnableWindow( phWnd )
.head 8 -  Call VisWinSetFlags( phWnd, WF_DisplayOnly, FALSE )
.head 7 -  Break
.head 6 +  Default
.head 7 +  If pbSet
.head 8 -  Call SalDisableWindow( phWnd )
.head 7 +  Else
.head 8 -  Call SalEnableWindow( phWnd )
.head 5 -  Return lnType
.head 3 +  Function: PalDisableWindow
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Window Handle: phWnd
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return PalMyDisableWindow( phWnd, TRUE )
.head 3 +  Function: PalEnableWindow
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Window Handle: phWnd
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Return PalMyDisableWindow( phWnd, FALSE )
.head 3 -  !
.head 3 -  !
.head 3 +  Function: PalTblQueryRowFlag
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Window Handle: phWnd
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnRow
.head 5 -  Number: lnRet
.head 5 -  Number: ln1
.head 4 +  Actions
.head 5 -  Set lnRet = -2
.head 5 -  If SalGetType( phWnd ) = TYPE_TableWindow
.head 5 -  Set lnRet = -1
.head 5 -  Set lnRow = SalTblQueryContext( phWnd )
.head 5 +  If ( lnRow >= 0 ) and ( lnRow < TBL_MaxRow )
.head 6 -  Set lnRet = -3
.head 6 -  Set ln1 = ROW_New
.head 6 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 7 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_Edited
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_Hidden
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_HideMarks
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_MarkDeleted
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_Selected
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_UnusedFlag1
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  If lnRet = -3
.head 7 -  Set ln1 = ROW_UnusedFlag2
.head 7 +  If SalTblQueryRowFlags( phWnd, lnRow, ln1 )
.head 8 -  Set lnRet = ln1
.head 6 +  ! If lnRet = -3
.head 7 -  Set lnRet = ROW_Selected
.head 5 -  Return lnRet
.head 3 +  Function: PalUserLanguage
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Sql Handle: phSql
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: ln
.head 5 -  Number: lnRet
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute( phSql, 'select user_lng from users where @upper( user_login ) = @upper( USER ) into :ln ' )
.head 5 +  If SqlFetchNext( phSql, lnRet )
.head 6 +  Select Case lnRet
.head 7 +  Case FETCH_Ok
.head 8 -  Break
.head 7 +  Default
.head 8 -  Set ln = Language_FR
.head 5 +  Else
.head 6 -  Set ln = Language_FR
.head 5 -  Return ln
.head 3 +  Function: PalCheck97
.head 4 -  Description: Vérification modulo 97.

Cette fonction vérifie que les deux derniers chiffres du nombre sont
le reste modulo 97 des premiers.
Si le modulo est égal à 0, on peut donner 00 ou 97 comme valeur

Ce controle est utilisé pour les comptes en banque, le registre national, ...
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: npNum
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nMod
.head 5 -  Number: nReste
.head 5 -  Number: nChiffre
.head 4 +  Actions
.head 5 -  Set nReste = SalNumberMod( npNum, 100 )
.head 5 -  Set nChiffre = (npNum - nReste ) /100
.head 5 -  Set nMod = SalNumberMod( nChiffre, 97 )
.head 5 -  !
.head 5 -  ! /##### LS : 13/09/96 - 0900
.head 5 -  ! Modif à la demande de Christian pour le CPAS d'Uccle
.head 5 +  If nMod = 0
.head 6 -  Set nMod = 97
.head 5 +  ! If nMod = 0
.head 6 -  Return ( nReste = 0 ) or ( nReste = 97 )
.head 5 -  ! \##### LS : 13/09/96 - 0900
.head 5 -  Return nReste = nMod
.head 3 +  Function: PalCheckCpt97
.head 4 -  Description: Vérification du complément au modulo 97.

Cette fonction vérifie que les deux derniers chiffres du nombre sont
97 moins modulo 97 des premiers.
Si le modulo est égal à 0, il devient 97.

Ce controle est utilisé pour la T.V.A., ...
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: npNum
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nMod
.head 5 -  Number: nReste
.head 5 -  Number: nChiffre
.head 4 +  Actions
.head 5 -  Set nReste = SalNumberMod( npNum, 100 )
.head 5 -  Set nChiffre = (npNum - nReste ) /100
.head 5 -  Set nMod = 97 - SalNumberMod( nChiffre, 97 )
.head 5 -  !
.head 5 -  ! ??? Faut il effectuer le changement.
.head 5 -  !
.head 5 -  ! /##### LS : 13/09/96 - 0900
.head 5 -  ! Modif à la demande de Christian pour le CPAS d'Uccle
.head 5 +  ! If nMod = 0
.head 6 -  Set nMod = 97
.head 5 +  If nMod = 0
.head 6 -  Return ( nReste = 0 ) or ( nReste = 97 )
.head 5 -  ! \##### LS : 13/09/96 - 0900
.head 5 -  Return nReste = nMod
.head 3 +  Function: PalFormatCptBqe
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psCptBqe
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  String: s1
.head 5 -  String: s2
.head 4 +  Actions
.head 5 -  Set s1 = ''
.head 5 -  Set i = 0
.head 5 +  While i < SalStrLength( psCptBqe )
.head 6 -  Set s2 = SalStrMidX( psCptBqe, i, 1 )
.head 6 +  If ( s2 >= '0' ) and ( s2 <= '9' ) 
.head 7 -  Set s1 = s1 || s2
.head 6 -  Set i = i + 1
.head 5 -  Set s2 = SalStrMidX( s1, 0, 3 )
.head 5 -  Set s2 = s2 || '-' || SalStrMidX( s1, 3, 7 )
.head 5 -  Set s2 = s2 || '-' || SalStrMidX( s1, 10, 2 )
.head 5 -  Return s2
.head 3 +  ! Function: SalScrollOnWheel
.head 4 -  Description: author:	Didier Tourneur (i think)
date:	???
version:	1.00

For scrolling by mouswheel. Replaces the old SalTblScrollOnWheel function
The function must be called On WM_MOUSEWHEEL.

parameter:
phWnd :      The window/ control you want to scroll

Ex:

Child Table: ctbl1
On WM_MOUSEWHEEL
	Call SalScrollOnWheel(hWndItem,wParam,lParam)

ListBox: lb
On WM_MOUSEWHEEL
	Call SalScrollOnWheel(hWndItem,wParam,lParam)

Form Window: frm1
On WM_MOUSEWHEEL
	Call SalScrollOnWheel(hWndItem,wParam,lParam)

.head 4 +  Returns 
.head 5 -  Number: 
.head 4 +  Parameters 
.head 5 +  Window Handle: phWnd
.head 6 -  ! The window/ control you want to scroll
.head 5 +  Number: wParam
.head 6 -  ! wParam of current On WM_MOUSEWHEEL
.head 5 +  Number: lParam
.head 6 -  ! lParam of current On WM_MOUSEWHEEL
.head 4 +  Static Variables 
.head 5 -  Number: s_nDeltaAcc
.head 4 +  Local variables 
.head 5 -  Number: nScrollUnits
.head 5 -  Number: nwParam
.head 5 -  Number: nKeys
.head 5 -  Number: nDelta
.head 4 +  Actions 
.head 5 -  Set nKeys = SalNumberLow( wParam )
.head 5 -  Set nDelta = SalNumberHigh( wParam )
.head 5 +  If nDelta > 32767
.head 6 -  Set nDelta = nDelta - 65536
.head 5 -  Set s_nDeltaAcc = s_nDeltaAcc + nDelta
.head 5 -  Set nScrollUnits = SalNumberTruncate( s_nDeltaAcc / WHEEL_DELTA, 3, 0 )
.head 5 -  Set s_nDeltaAcc = SalNumberMod( s_nDeltaAcc, WHEEL_DELTA )
.head 5 +  If nScrollUnits < 0
.head 6 +  If nKeys & MK_CONTROL
.head 7 +  ! If nKeys & MK_SHIFT
.head 8 -  Set nwParam = SB_ENDSCROLL
.head 7 -  ! Else
.head 7 -  Set nwParam = SB_PageDown
.head 6 +  Else 
.head 7 -  Set nwParam = SB_LineDown
.head 6 -  Set nScrollUnits = SalNumberAbs( nScrollUnits )
.head 5 +  Else 
.head 6 +  If nKeys & MK_CONTROL
.head 7 +  ! If nKeys & MK_SHIFT
.head 8 -  Set nwParam = SB_TOP
.head 7 -  ! Else
.head 7 -  Set nwParam = SB_PageUp
.head 6 +  Else 
.head 7 -  Set nwParam = SB_LineUp
.head 5 +  While nScrollUnits
.head 6 -  Call SalSendMsg( phWnd, WM_VSCROLL, nwParam, 0 )
.head 6 -  Set nScrollUnits = nScrollUnits - 1
.head 5 -  Return nScrollUnits
.head 3 +  Function: SalFileGetDate
.head 4 -  Description: author: 	Catalin
date:	7.10.2002
version:	1.00 function implemented

description:
Queries the file dates

example:
Call SalFileGetDate('C:\\autoexec.bat', dCreate, dAccess, dWrite )
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psFile
.data INHERITPROPS
0000: 0100
.enddata
.head 5 -  Receive Date/Time: rdCreateTime
.data INHERITPROPS
0000: 0100
.enddata
.head 5 -  Receive Date/Time: rdLastAccesTime
.data INHERITPROPS
0000: 0100
.enddata
.head 5 -  Receive Date/Time: rdWriteTime
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nFile
.head 5 -  Number: nStructSize
.head 5 -  Number: nDummy
.head 5 -  Number: nCreationTime
.head 5 -  Number: nAccessTime
.head 5 -  Number: nWriteTime
.head 5 -  Number: nYear
.head 5 -  Number: nMonth
.head 5 -  Number: nDayOfWeek
.head 5 -  Number: nDay
.head 5 -  Number: nHour
.head 5 -  Number: nMinute
.head 5 -  Number: nSecond
.head 5 -  Number: nMilisecond
.head 5 -  String: s
.head 4 +  Actions
.head 5 -  Set nStructSize = 136
.head 5 -  Set nFile =  OpenFile( psFile, nStructSize ,nDummy,nDummy,nDummy,nDummy, s, 0x00000000 )
.head 5 +  If nFile !=-1
.head 6 -  Set nCreationTime =  CStructAllocFarMem( 8)
.head 6 -  Set nAccessTime =  CStructAllocFarMem( 8)
.head 6 -  Set nWriteTime =  CStructAllocFarMem( 8)
.head 6 -  Call GetFileTime( nFile, nCreationTime, nAccessTime, nWriteTime)
.head 6 -  !
.head 6 -  Call FileTimeToSystemTime( nCreationTime, nYear, nMonth, nDayOfWeek, nDay, nHour, nMinute, nSecond, nMilisecond )
.head 6 -  Set rdCreateTime = SalDateConstruct( nYear, nMonth, nDay,  nHour, nMinute, nSecond)
.head 6 -  !
.head 6 -  Call FileTimeToSystemTime( nAccessTime, nYear, nMonth, nDayOfWeek, nDay, nHour, nMinute, nSecond, nMilisecond )
.head 6 -  Set rdLastAccesTime = SalDateConstruct( nYear, nMonth, nDay,  nHour, nMinute, nSecond)
.head 6 -  !
.head 6 -  Call FileTimeToSystemTime( nWriteTime, nYear, nMonth, nDayOfWeek, nDay, nHour, nMinute, nSecond, nMilisecond )
.head 6 -  Set rdWriteTime = SalDateConstruct( nYear, nMonth, nDay,  nHour, nMinute, nSecond)
.head 6 -  !
.head 6 -  Call _lclose( nFile )
.head 6 -  Call CStructFreeFarMem( nCreationTime )
.head 6 -  Call CStructFreeFarMem( nAccessTime )
.head 6 -  Call CStructFreeFarMem( nWriteTime )
.head 6 -  Return TRUE
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: SteTraiterMailSlotMsg
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Long String: psMsg
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 5 -  Number: lnNbrItem
.head 5 -  String: lsItems[*]
.head 5 -  Number: n
.head 5 -  String: s
.head 4 +  Actions
.head 5 -  Set lbOk = FALSE
.head 5 -  Set lnNbrItem = SalStrTokenize( psMsg, '', '|', lsItems )
.head 5 +  If lnNbrItem > 0
.head 6 +  If SalStrTrimX( SalStrUpperX( lsItems[0] ) ) = 'CMD'
.head 7 -  ! on a une commande
.head 7 +  If SalStrTrimX( SalStrUpperX( lsItems[1] ) ) = 'HALT'
.head 8 +  If lnNbrItem >= 3
.head 9 -  Set n = SalStrToNumber( lsItems[2] )
.head 9 +  If lnNbrItem >= 4
.head 10 -  Set s = lsItems[3]
.head 9 +  Else
.head 10 -  Set s = ''
.head 9 -  Call SalCreateWindow( dlgCmdArret, hWndForm, n, s )
.head 9 -  Set lbOk = TRUE
.head 5 -  Return lbOk
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 +  Function: SalSysGetComputerName
.head 4 -  Description: 
author: ???
date:     ???
version: 1.00

desc:
Returns the computername

example:
Set sComputername =  SalSysGetComputerName()
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nSize
.head 5 -  String: sCOMPUTERNAME
.head 4 +  Actions
.head 5 -  Set nSize = 250
.head 5 -  Call SalStrSetBufferLength( sCOMPUTERNAME, nSize + 1 )
.head 5 -  Call GetComputerNameA( sCOMPUTERNAME, nSize )
.head 5 -  Set sCOMPUTERNAME = SalStrLeftX( sCOMPUTERNAME, nSize )
.head 5 -  Return sCOMPUTERNAME
.head 3 +  Function: SalSysGetIP
.head 4 -  Description: 
author: 	??? (extracted from winsock.apl)
date:	???
version:

desc:
Returns the IP address of a given hostname

example:
Set lsIP = SalSysGetIP('MyComputer_NT')
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: spHostName
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  !
.head 5 -  Number: nLowVersion
.head 5 -  Number: nHighVersion
.head 5 -  Number: nMaxSockets
.head 5 -  Number: nMaxUp
.head 5 -  Number: nlpVendorInfo
.head 5 -  String: sSystemStatus
.head 5 -  String: sDescription
.head 5 -  String: sNull
.head 5 -  !
.head 5 -  Number: nStructPointer
.head 5 -  String: sIP
.head 5 -  String: spMem
.head 5 -  String: sStr
.head 5 -  !
.head 5 -  Number: nFarPointer
.head 5 -  Number: nLen
.head 4 +  Actions
.head 5 -  ! Init
.head 5 +  If WSAStartup(257,nLowVersion,nHighVersion,
	sDescription,sNull,sSystemStatus,
	nMaxSockets,nMaxUp,nlpVendorInfo ) != 0
.head 6 -  Return ''
.head 5 -  !
.head 5 -  Set nStructPointer = gethostbyname( spHostName )
.head 5 +  If nStructPointer = NUMBER_Null or nStructPointer = 0
.head 6 -  ! Call SalMessageBox( 'Connection failed - ' || SalNumberToStrX( WSAGetLastError(  ), 0 ), 'Error', 0 )
.head 6 -  Return ''
.head 5 -  !
.head 5 -  Call SalStrSetBufferLength( spMem, 1000 )
.head 5 -  Call CStructCopyFromFarMem( nStructPointer, spMem, 1000 )
.head 5 -  !
.head 5 -  Set nFarPointer = CStructGetFarPointer( spMem, 12 )
.head 5 -  !
.head 5 -  Call SalStrSetBufferLength( sStr, 4 )
.head 5 -  Call CStructCopyFromFarMem( nFarPointer, sStr, 4 )
.head 5 -  Set nFarPointer = CStructGetFarPointer( sStr, 0 )
.head 5 -  Call SalStrSetBufferLength( sStr, 4 )
.head 5 -  Call CStructCopyFromFarMem( nFarPointer, sStr, 4 )
.head 5 -  Set nFarPointer = CStructGetFarPointer( sStr, 0 )
.head 5 -  !
.head 5 -  Set nFarPointer = inet_ntoa( nFarPointer )
.head 5 -  Set nLen = lstrlen( nFarPointer ) + 1
.head 5 -  Call SalStrSetBufferLength( sIP, nLen )
.head 5 -  Call CStructCopyFromFarMem( nFarPointer, sIP, nLen )
.head 5 -  ! Close
.head 5 -  Call WSACleanup(  )
.head 5 -  !
.head 5 -  Return sIP
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  ! Fonctions pour l'exportation d'une table
.head 3 -  !
.head 3 +  Function: TableWindowToSlk
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phTable
.head 5 -  String: psFileName
.head 5 -  Number: pn1
.head 5 -  Number: pn2
.head 5 -  Boolean: pbTitre
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  FunctionalVar: slk
.head 6 -  Class: TExcel
.head 5 -  File Handle: fh
.head 5 -  Number: lnRow
.head 5 -  Number: lnRowContext
.head 5 -  Number: i
.head 5 -  Window Handle: lwhCol
.head 5 -  String: s
.head 5 -  Number: n
.head 5 -  Date/Time: d
.head 5 -  Number: y
.head 4 +  Actions
.head 5 -  Set y = SalGetType( phTable )
.head 5 +  If y = TYPE_ChildTable		
.head 6 +  If SalFileOpen( fh, psFileName, OF_Create | OF_ReadWrite | OF_Text  )
.head 7 -  Call slk.InitFile( fh )
.head 7 -  Set y = 1
.head 7 +  If pbTitre
.head 8 -  Set i = 1
.head 8 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 +  While lwhCol != hWndNULL
.head 9 -  Call SalTblGetColumnTitle( lwhCol, s, 254 )
.head 9 -  Call SalGetItemName( lwhCol, s )
.head 9 -  Call slk.WriteString( fh, y, i, s, -1, XLS_Bold )
.head 9 -  Set i = i + 1
.head 9 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 -  Set y = y + 1
.head 7 -  Set lnRowContext = SalTblQueryContext( phTable )
.head 7 -  Set lnRow = TBL_MinRow
.head 7 +  While SalTblFindNextRow( phTable, lnRow, pn1, pn2 )
.head 8 -  Call SalTblSetContext( phTable, lnRow )
.head 8 -  Set i = 1
.head 8 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 +  While lwhCol != hWndNULL
.head 9 +  Select Case SalGetDataType( lwhCol )
.head 10 +  Case DT_Boolean
.head 11 -  ! Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  ! Call slk.WriteString( fh, y, i, s, -1, -1 )
.head 11 -  ! Break
.head 10 +  Case DT_DateTime
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Call slk.WriteString( fh, y, i, s, -1, -1 )
.head 11 -  Break
.head 10 +  Case DT_Number
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Call slk.WriteNumber( fh, y, i, SalStrToNumber( s ), 9, -1, -1 )
.head 11 -  Break
.head 10 +  Default
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Call slk.WriteString( fh, y, i, s, -1, -1 )
.head 9 -  Set i = i + 1
.head 9 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 -  Set y = y + 1
.head 7 -  Call SalTblSetContext( phTable, lnRowContext )
.head 7 -  Call slk.TermFile( fh )
.head 7 -  Call SalFileClose( fh )
.head 3 +  Function: TableWindowToTxt
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phTable
.head 5 -  String: psFileName
.head 5 -  Number: pn1
.head 5 -  Number: pn2
.head 5 -  Boolean: pbTitre
.head 5 -  String: psFieldSep
.head 5 -  String: psRecSep
.head 5 -  String: psStringSep
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: fh
.head 5 -  Number: lnRow
.head 5 -  Number: lnRowContext
.head 5 -  Number: i
.head 5 -  Window Handle: lwhCol
.head 5 -  String: s
.head 5 -  Number: n
.head 5 -  Date/Time: d
.head 5 -  Number: y
.head 5 -  Number: lnRowCurrent
.head 5 -  Window Handle: whCurCell
.head 4 +  Actions
.head 5 -  Set y = SalGetType( phTable )
.head 5 +  If y = TYPE_ChildTable		
.head 6 +  If SalFileOpen( fh, psFileName, OF_Create | OF_ReadWrite | OF_Text  )
.head 7 -  Call SalTblQueryFocus( phTable, lnRowCurrent, whCurCell )
.head 7 -  Set y = 1
.head 7 +  If pbTitre
.head 8 -  Set i = 1
.head 8 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 +  While lwhCol != hWndNULL
.head 9 -  ! Call SalTblGetColumnTitle( lwhCol, s, 254 )
.head 9 -  Call SalGetItemName( lwhCol, s )
.head 9 +  If i > 1
.head 10 -  Call SalFileWrite( fh, psFieldSep, SalStrLength( psFieldSep ) )
.head 9 -  Call SalFileWrite( fh, s, SalStrLength( s ) )
.head 9 -  Set i = i + 1
.head 9 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 -  Call SalFileWrite( fh, psRecSep, SalStrLength( psRecSep ) )
.head 8 -  Set y = y + 1
.head 7 -  Set lnRowContext = SalTblQueryContext( phTable )
.head 7 -  Set lnRow = TBL_MinRow
.head 7 +  While SalTblFindNextRow( phTable, lnRow, pn1, pn2 )
.head 8 -  Call SalTblSetContext( phTable, lnRow )
.head 8 -  Call SalTblSetFocusRow( phTable, lnRow )
.head 8 -  Set i = 1
.head 8 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 +  While lwhCol != hWndNULL
.head 9 +  If i > 1
.head 10 -  Call SalFileWrite( fh, psFieldSep, SalStrLength( psFieldSep ) )
.head 9 +  Select Case SalGetDataType( lwhCol )
.head 10 +  Case DT_Number
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Set s = SalFmtFormatNumber( SalStrToNumber( s ), '' )
.head 11 -  Call SalFileWrite( fh, s, SalStrLength( s ) )
.head 11 -  Break
.head 10 +  Case DT_DateTime
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Call SalFileWrite( fh, s, SalStrLength( s ) )
.head 11 -  Break
.head 10 +  Case DT_Boolean
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Call SalFileWrite( fh, s, SalStrLength( s ) )
.head 11 -  Break
.head 10 +  Default
.head 11 -  Call SalGetWindowText( lwhCol, s, 254 )
.head 11 -  Set s = psStringSep || s || psStringSep
.head 11 -  Call SalFileWrite( fh, s, SalStrLength( s ) )
.head 9 -  Set i = i + 1
.head 9 -  Set lwhCol = SalTblGetColumnWindow( phTable, i, COL_GetID )
.head 8 -  Call SalFileWrite( fh, psRecSep, SalStrLength( psRecSep ) )
.head 8 -  Set y = y + 1
.head 7 -  Call SalTblSetContext( phTable, lnRowContext )
.head 7 -  Call SalFileClose( fh )
.head 7 -  Call SalTblSetFocusRow( phTable, lnRowCurrent )
.head 3 +  Function: menuExportTableWindowToCsv
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phTable
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 5 -  String: strFilters[*]
.head 5 -  Number: nFilters
.head 5 -  String: strFile
.head 5 -  String: strPath
.head 5 -  Number: nIndex
.head 5 -  String: sList
.head 5 -  FunctionalVar: Reg
.head 6 -  Class: cBTRegistry
.head 4 +  Actions
.head 5 -  Set nIndex = 1
.head 5 -  Set nFilters = 0
.head 5 -  Set strFilters[ nFilters ] = 'CSV'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.csv'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  Select Case gnLanguage
.head 6 +  Case Language_NL
.head 7 -  Set strFilters[ nFilters ] = 'Alles'
.head 7 -  Break
.head 6 +  Default
.head 7 -  Set strFilters[ nFilters ] = 'Tous'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.*'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  If SalDlgSaveFile( phTable, 'Save file...', strFilters, nFilters, nIndex, strFile, strPath )
.head 6 -  Call Reg.SetRootKey( HKEY_CURRENT_USER )
.head 6 +  If Reg.OpenKey( '\\Control Panel\\International', FALSE )
.head 7 -  If Reg.ReadString( 'sList', sList )
.head 7 +  Else
.head 8 -  Set sList = ';'
.head 7 -  Call Reg.CloseKey( )
.head 6 -  Call TableWindowToTxt( phTable, strPath, 0, 0, TRUE, sList, '
', '"' )
.head 3 +  Function: menuExportTableWindowToTxt
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phTable
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 5 -  String: strFilters[*]
.head 5 -  Number: nFilters
.head 5 -  String: strFile
.head 5 -  String: strPath
.head 5 -  Number: nIndex
.head 4 +  Actions
.head 5 -  Set nIndex = 1
.head 5 -  Set nFilters = 0
.head 5 -  Set strFilters[ nFilters ] = 'Text'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.txt'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  Select Case gnLanguage
.head 6 +  Case Language_NL
.head 7 -  Set strFilters[ nFilters ] = 'Alles'
.head 7 -  Break
.head 6 +  Default
.head 7 -  Set strFilters[ nFilters ] = 'Tous'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.*'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  If SalDlgSaveFile( phTable, 'Save file...', strFilters, nFilters, nIndex, strFile, strPath )
.head 6 -  Call TableWindowToTxt( phTable, strPath, 0, 0, TRUE, '	', '
', '' )
.head 3 +  Function: menuExportTableWindowToSlk
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Window Handle: phTable
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: s
.head 5 -  String: strFilters[*]
.head 5 -  Number: nFilters
.head 5 -  String: strFile
.head 5 -  String: strPath
.head 5 -  Number: nIndex
.head 4 +  Actions
.head 5 -  Set nIndex = 1
.head 5 -  Set nFilters = 0
.head 5 -  Set strFilters[ nFilters ] = 'Excel'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.slk;*.xls'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  Select Case gnLanguage
.head 6 +  Case Language_NL
.head 7 -  Set strFilters[ nFilters ] = 'Alles'
.head 7 -  Break
.head 6 +  Default
.head 7 -  Set strFilters[ nFilters ] = 'Tous'
.head 5 -  Set nFilters = nFilters + 1
.head 5 -  Set strFilters[ nFilters ] = '*.*'
.head 5 -  Set nFilters = nFilters + 1
.head 5 +  If SalDlgSaveFile( phTable, 'Save file...', strFilters, nFilters, nIndex, strFile, strPath )
.head 6 -  Call TableWindowToSlk( phTable, strPath, 0, 0, TRUE )
.head 3 -  !
.head 3 -  !
.head 2 +  Named Menus
.head 3 +  Menu: menuExportTableWindow
.head 4 -  Resource Id: 45277
.head 4 -  Title:
.head 4 -  Description:
.head 4 -  Enabled when:
.head 4 -  Status Text:
.head 4 -  Menu Item Name:
.head 4 +  Menu Item: &Copy
.head 5 -  Resource Id: 45278
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalTblCopyRows( hWndItem, ROW_Selected, 0 )
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: -> &Excel
.head 5 -  Resource Id: 45279
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call menuExportTableWindowToSlk( gwhTrackPopupMenu )
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: -> &Text
.head 5 -  Resource Id: 34567
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call menuExportTableWindowToTxt( gwhTrackPopupMenu )
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: -> C&sv
.head 5 -  Resource Id: 43451
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call menuExportTableWindowToCsv( gwhTrackPopupMenu )
.head 5 -  Menu Item Name:
.head 2 +  Class Definitions
.data RESOURCE 0 0 1 1754435328
0000: C40B000055050000 0000000000000000 0200001A00FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F3E003C00 000A63006C734261
0040: 7365436F006C9A00 00000500001E0004 0000C20002000000 FF7F04B3000400F6
0060: 0200FF1F080000AC 00040002FD00FF07 0C00000019080000 0001000000FFFFC1
0080: 2500000019DA0001 00FF7F0180803A00 00000100F0000D63 6C01446644617465
00A0: 84B00000000400B7 1900F60400FFDF19 AC00040002FD00FF 071D000000044300
00C0: 01020000FFC90100 0001DE0001C00021 00000019DA000100 FF7F01C880210000
00E0: 02F00011636C7F54 00696D6566000000 0378000000196B00 0400FFFFCD190004
0100: DA000200FF7F1D33 00040001F602009F 0100EC0001000D01 0001802133000300
0120: 0C04636C43616368 6540506F6F6C6600 00F6030004840000 0107000082000100
0140: B405001E00800100 FC00009B040004B5 000300FFFF660800 1900ED0100FF3F01
0160: 8064040000040018 12636C624D75006C 74694C616E677500 6167652200000001
0180: 7A0000046B000200 FFFF310180040005 C30018636C006869 6C6454626C4DFE75
01A0: 7F00F4010000D604 0002FE00FF630180 0400800600000013 636CF56F4DFF4700
01C0: 0100006F0400ED02 00FF3F0180460400 0700001E136D624D FF7F00F4010000D6
01E0: 040002FE00FF6301 800400E6080012F0 44664D75FFA30001 0000B70400F60200
0200: FF1F018004030009 000000130F6C674D 75FF3F00017A0000 046B000200FFFF31
0220: 018004000A700000 001346F0726D4D75 FFA300010000B704 00F60200FF1F0180
0240: 0403000B00000012 C74C624DFF1F0001 00BD0004B5000200 FFFF18018004000C
0260: 003900134D64F869 4D75FFD100010000 5B040002FB00FF8F 01800481000D0000
0280: 0012E76C4DFF8F00 0100DE0004DA0002 00FF7F010C800400 0E00001C00124F62
02A0: 4DFF7F00F4010000 D6040002FE00FF63 01800400E00F0000 0012F850624DFFA3
02C0: 00010000B70400F6 0200FF1F01800403 00100000001D0463 6C51756573741C43
02E0: 68576E64FC4D75FF E800010000AD0400 02FD00FFC7018004 C000110000001D3F
0300: 5461E0626C65576E FF3F00017A000004 6B000200FFFF3101 8004001260000000
0320: 126352FC624DFFD1 000100005B040002 FB00FF8F01800401 00130000001363D3
0340: 54624DFF1F000100 BD0004B5000200FF FF20018013010014 000000000F634465
0360: 736B00746F704C69 737442A06F784E01 000BBD0019A50001 0000FFFF66190019
0380: 00ED0100FF3F3200 580000190001FB00 FF0F4B000000D619 0001FE00FF836400
03A0: 000019B5000100FF FF607D0000001900 ED0100FF3F960058 0000190001FB00FF
03C0: 0FAF000000D61900 01FE00FF83C80000 0019B5000100FFFF 60E10000001900ED
03E0: 0100FF3FFA005800 00190001FB00FF0F 0180640001001500 00000B63E0446972
0400: 4C69837C00000004 BD0019A500010000 FFFF6619001900ED 0100FFBF32590019
0420: 0001FB00FF6F4B00 D6190001FE00FF43 01804B0000E21600 000F81547265654C
0440: 690F5E000000F603 009619000100FE00 FF9B190019B50001 00FFFF6632001900
0460: ED0100FF3F018004 AF00001700000080 0C6346696C654C1F D60000EC0007002D
0480: 19000100FD00FF37 1900196B000100FF FFCD320019DA0001 00FF7F4BB3001900
04A0: F60100FFDF64AC00 190001FD00FF377D 00196B000100FFFF CD960019DA000100
04C0: FF7F0108807D0000 18000000000D6352 6164696F7C4C699A B200000500B71900
04E0: F4010000FFDF19AC 00190001FD00FF37 3200196B000100FF FFCD4B0019DA0001
0500: 00FF7F64B3001900 F60100FF1F018081 3000000019000800 63514F456D61696C
0520: 60C000000006006F 1900E9010000FFBF 195900190001FB00 FF6F3200D6190001
0540: FE00FF9B4B0019B5 000100FFFF666400 1900ED0100FFBF7D 190004000102FB00
0560: 7F80F20100000F
.enddata
.head 3 -  !
.head 3 +  Functional Class: igcActiveKeyData
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: whAcc
.head 5 -  Window Handle: whWnd
.head 5 -  Number: nMsg
.head 5 -  Number: nKeyDownState
.head 5 -  Number: nVirtualKey
.head 5 -  Number: nValue
.head 4 -  Functions
.head 3 +  Functional Class: gcActiveKey
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! /##### LS : 05/11/2002
.head 5 -  ! Number: iwhActiveKey[*]
.head 5 -  FunctionalVar: iActiveKey[ * ]
.head 6 -  Class: igcActiveKeyData
.head 5 -  Number: inNbrActiveKey
.head 5 -  ! \##### LS : 05/11/2002
.head 4 +  Functions
.head 5 -  ! /##### LS : 05/11/2002
.head 5 +  Function: Add
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Window Handle: pwhHandle
.head 7 -  Number: pnMsg
.head 7 -  Number: pnKeyDownState
.head 7 -  Number: pnVirtualKey
.head 7 -  Number: pnValue
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nWh
.head 6 +  Actions
.head 7 -  Set nWh = VisWinLoadAccelerator( pwhHandle, pnMsg, pnKeyDownState, pnVirtualKey, pnValue )
.head 7 +  If nWh != NUMBER_Null
.head 8 -  Set iActiveKey[ inNbrActiveKey ].whAcc = nWh
.head 8 -  Set iActiveKey[ inNbrActiveKey ].whWnd = pwhHandle
.head 8 -  Set iActiveKey[ inNbrActiveKey ].nMsg = pnMsg
.head 8 -  Set iActiveKey[ inNbrActiveKey ].nKeyDownState = pnKeyDownState
.head 8 -  Set iActiveKey[ inNbrActiveKey ].nVirtualKey = pnVirtualKey
.head 8 -  Set iActiveKey[ inNbrActiveKey ].nValue = pnValue
.head 8 -  Set inNbrActiveKey = inNbrActiveKey + 1
.head 8 -  Return nWh
.head 7 +  Else
.head 8 -  Return nWh
.head 5 +  Function: Del
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnWh
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: j
.head 6 +  Actions
.head 7 -  Set j = inNbrActiveKey
.head 7 +  While j
.head 8 +  If iActiveKey[ j - 1 ].whAcc = pnWh
.head 9 -  Break
.head 7 +  If j
.head 8 -  Set j = j - 1
.head 8 -  Call VisWinFreeAccelerator( pnWh  )
.head 8 +  While j < ( inNbrActiveKey - 1 )
.head 9 -  ! Set iActiveKey[ j ] = iActiveKey[ j + 1 ]
.head 9 -  Set iActiveKey[ j ].whAcc = iActiveKey[ j + 1 ].whAcc
.head 9 -  Set iActiveKey[ j ].whWnd = iActiveKey[ j + 1 ].whWnd
.head 9 -  Set iActiveKey[ j ].nMsg = iActiveKey[ j + 1 ].nMsg
.head 9 -  Set iActiveKey[ j ].nKeyDownState = iActiveKey[ j + 1 ].nKeyDownState
.head 9 -  Set iActiveKey[ j ].nVirtualKey = iActiveKey[ j + 1 ].nVirtualKey
.head 9 -  Set iActiveKey[ j ].nValue = iActiveKey[ j + 1 ].nValue
.head 9 -  Set j = j + 1
.head 8 -  Set inNbrActiveKey = inNbrActiveKey - 1
.head 5 +  Function: Erase
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 6 +  Actions
.head 7 +  While inNbrActiveKey
.head 8 -  Set inNbrActiveKey = inNbrActiveKey - 1
.head 8 -  Call VisWinFreeAccelerator( iActiveKey[ inNbrActiveKey ].whAcc )
.head 5 +  Function: Load
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nWh
.head 6 +  Actions
.head 7 -  Set i = inNbrActiveKey
.head 7 +  While i
.head 8 -  Set i = i - 1
.head 8 -  Set nWh = VisWinLoadAccelerator( iActiveKey[ i ].whWnd, iActiveKey[ i ].nMsg, iActiveKey[ i ].nKeyDownState, iActiveKey[ i ].nVirtualKey, iActiveKey[ i ].nValue )
.head 8 -  Set iActiveKey[ i ].whAcc = nWh
.head 5 +  Function: Free
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 6 +  Actions
.head 7 -  Set i = inNbrActiveKey
.head 7 +  While i
.head 8 -  Set i = i - 1
.head 8 -  Call VisWinFreeAccelerator( iActiveKey[ i ].whAcc )
.head 8 -  Set iActiveKey[ i ].whAcc = NUMBER_Null
.head 5 -  ! \##### LS : 05/11/2002
.head 3 -  ! ====================================================================
.head 3 -  ! BASE CLASSES
.head 3 -  ! ====================================================================
.head 3 +  Background Text Class: clsBaseBgdText
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Title:
.head 4 -  Justify: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBgdMultiLanguage
.head 3 +  Child Table Class: clsBaseCTblMaster
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 5000
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  ! Class: clsClearableCTbl
.head 5 -  Class: clsChildTblMultiLanguage
.head 5 -  Class: clsCtblDynSqlMaster
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: i
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCTbl, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 -  Call SalSendClassMessageNamed( clsCTblDynSql, SAM_Close, wParam, lParam )
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( clsCTblDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! /@@@@@ LS : 30/11/1999
.head 6 -  Call SalSendMsgToChildren( hWndItem, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! \@@@@@ LS : 30/11/1999
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsChildTblMultiLanguage, PAM_Language, wParam, lParam )
.head 5 -  ! /@@@@@ LS : 29/11/1999
.head 5 +  On SAM_CornerDoubleClick
.head 6 -  ! Call SalTblCopyRows( hWndItem, ROW_Selected, 0 )
.head 6 -  Set gwhTrackPopupMenu = hWndForm
.head 6 -  Call SalTrackPopupMenu( hWndForm, 'menuExportTableWindow', TPM_CursorX | TPM_CursorY, 0, 0 )
.head 5 -  ! \@@@@@ LS : 29/11/1999
.head 5 -  ! /@@@@@ LS : 30/11/1999
.head 5 +  ! On PAM_Situation_Table
.head 6 +  If wParam = cSitSave
.head 7 -  Call SalSetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol' , '0', PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Set gtnNbrCol = 0
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, lParam )
.head 6 +  Else If wParam = cSitLoad
.head 7 -  Set gtnNbrCol = SalGetProfileInt( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol', 0, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 7 -  Set i = 0
.head 7 +  While i < gtnNbrCol
.head 8 -  Set i = i + 1
.head 8 -  ! Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), String, String, String, String )
.head 8 -  Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'col' || SalNumberToStrX( i, 0 ), '', gtsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, i )
.head 5 +  On PAM_Situation_Table
.head 6 +  If gbSauverPositionColonnes
.head 7 +  If wParam = cSitSave
.head 8 -  Call SalSetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol' , '0', PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Set gtnNbrCol = 0
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, lParam )
.head 7 +  Else If wParam = cSitLoad
.head 8 -  Set gtnNbrCol = SalGetProfileInt( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol', 0, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 8 -  Set i = 0
.head 8 +  ! While i < gtnNbrCol
.head 9 -  Set i = i + 1
.head 9 -  ! Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), String, String, String, String )
.head 9 -  Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'col' || SalNumberToStrX( i, 0 ), '', gtsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Set i = gtnNbrCol
.head 8 +  While i >= 0
.head 9 -  Set gtwhTabCol[i] = hWndNULL
.head 9 -  Set i = i - 1
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, i )
.head 8 -  Set i = 1
.head 8 +  While i <= gtnNbrCol
.head 9 +  If gtwhTabCol[ i ] != hWndNULL
.head 10 -  Call SalTblSetColumnPos( gtwhTabCol[ i ], i )
.head 9 -  Set i = i + 1
.head 5 -  ! \@@@@@ LS : 30/11/1999
.head 3 +  Child Table Class: clsBaseCTblDetail
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 5000
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  ! Class: clsClearableCTbl
.head 5 -  Class: clsChildTblMultiLanguage
.head 5 -  Class: clsCtblDynSqlDetail
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: i
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCTbl, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 -  Call SalSendClassMessageNamed( clsCTblDynSql, SAM_Close, wParam, lParam )
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( clsCTblDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! /@@@@@ LS : 30/11/1999
.head 6 -  Call SalSendMsgToChildren( hWndItem, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! \@@@@@ LS : 30/11/1999
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsChildTblMultiLanguage, PAM_Language, wParam, lParam )
.head 5 -  ! /@@@@@ LS : 29/11/1999
.head 5 +  On SAM_CornerDoubleClick
.head 6 -  ! Call SalTblCopyRows( hWndItem, ROW_Selected, 0 )
.head 6 -  Set gwhTrackPopupMenu = hWndForm
.head 6 -  Call SalTrackPopupMenu( hWndForm, 'menuExportTableWindow', TPM_CursorX | TPM_CursorY, 0, 0 )
.head 5 -  ! \@@@@@ LS : 29/11/1999
.head 5 -  ! /@@@@@ LS : 30/11/1999
.head 5 +  ! On PAM_Situation_Table
.head 6 +  If wParam = cSitSave
.head 7 -  Call SalSetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol' , '0', PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Set gtnNbrCol = 0
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, lParam )
.head 6 +  Else If wParam = cSitLoad
.head 7 -  Set gtnNbrCol = SalGetProfileInt( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol', 0, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 7 -  Set i = 0
.head 7 +  While i < gtnNbrCol
.head 8 -  Set i = i + 1
.head 8 -  ! Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), String, String, String, String )
.head 8 -  Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'col' || SalNumberToStrX( i, 0 ), '', gtsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, i )
.head 5 +  ! On PAM_Situation_Table
.head 6 +  If wParam = cSitSave
.head 7 -  Call SalSetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol' , '0', PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Set gtnNbrCol = 0
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, lParam )
.head 6 +  Else If wParam = cSitLoad
.head 7 -  Set gtnNbrCol = SalGetProfileInt( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol', 0, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 7 -  Set i = 0
.head 7 +  ! While i < gtnNbrCol
.head 8 -  Set i = i + 1
.head 8 -  ! Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), String, String, String, String )
.head 8 -  Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'col' || SalNumberToStrX( i, 0 ), '', gtsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, i )
.head 5 +  On PAM_Situation_Table
.head 6 +  If gbSauverPositionColonnes
.head 7 +  If wParam = cSitSave
.head 8 -  Call SalSetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol' , '0', PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Set gtnNbrCol = 0
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, lParam )
.head 7 +  Else If wParam = cSitLoad
.head 8 -  Set gtnNbrCol = SalGetProfileInt( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'nbrcol', 0, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 8 -  Set i = 0
.head 8 +  ! While i < gtnNbrCol
.head 9 -  Set i = i + 1
.head 9 -  ! Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), String, String, String, String )
.head 9 -  Call SalGetProfileString( PalGetItemName( SalParentWindow( hWndForm ) ) || '.' || PalGetItemName( hWndItem ), 'col' || SalNumberToStrX( i, 0 ), '', gtsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Set i = gtnNbrCol
.head 8 +  While i >= 0
.head 9 -  Set gtwhTabCol[i] = hWndNULL
.head 9 -  Set i = i - 1
.head 8 -  Call SalSendMsgToChildren( hWndItem, PAM_Situation_Colonne, wParam, i )
.head 8 -  Set i = 1
.head 8 +  While i <= gtnNbrCol
.head 9 +  If gtwhTabCol[ i ] != hWndNULL
.head 10 -  Call SalTblSetColumnPos( gtwhTabCol[ i ], i )
.head 9 -  Set i = i + 1
.head 5 -  ! \@@@@@ LS : 30/11/1999
.head 3 +  Check Box Class: clsBaseCb
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsCbMultiLanguage
.head 5 -  Class: clsClearableCb
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LBFDisableInit
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bEtat
.head 6 +  Actions
.head 7 -  Call clsDisableField.LBFDisableInit( )
.head 7 -  Set bEtat = FALSE
.head 7 -  Call DisableSetBackgroundColor( bEtat, COLOR_Default )
.head 7 -  Set bEtat = TRUE
.head 7 -  Call DisableSetBackgroundColor( bEtat, COLOR_Default )
.head 4 +  Message Actions
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsCbMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableCb, SAM_Click, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCb, PAM_Clear, wParam, lParam )
.head 3 +  ! Check Box Class: clsBaseCb3S
.winattr
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.end
.head 4 -  Description: 
.head 4 +  Derived From 
.head 5 -  Class: clsBaseCb
.head 4 -  Class Variables 
.head 4 -  Instance Variables 
.head 4 +  Functions 
.head 5 +  Function: IsIndeterminated
.head 6 -  Description: 
.head 6 +  Returns 
.head 7 -  Boolean: 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  Number: n
.head 6 +  Actions 
.head 7 -  Set n = SalSendMsg( hWndItem, BM_GETSTATE, 0, 0 )
.head 7 -  Return ( n  & BST_INDETERMINATE ) != 0
.head 5 +  Function: SetIndeterminate
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  Number: n
.head 6 +  Actions 
.head 7 -  Call SalSendMsg( hWndItem, BM_SETSTATE, BST_INDETERMINATE, 0 )
.head 4 +  Message Actions 
.head 5 +  On WM_NCCREATE
.head 6 -  Call SetWindowLongA( hWndItem, GWL_STYLE, GetWindowLongA( hWndItem, GWL_STYLE )  | BS_3STATE )
.head 3 +  Check Box Class: clsBaseCbReadOnly
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsCbMultiLanguage
.head 5 -  Class: clsClearableCb
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsCbMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableCb, SAM_Click, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCb, PAM_Clear, wParam, lParam )
.head 5 +  On WM_KEYDOWN
.head 6 -  Return FALSE
.head 5 +  On WM_KEYUP
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONDOWN
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONUP
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONDBLCLK
.head 6 -  Return FALSE
.head 3 +  Column Class: clsBaseCol
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsColMultiLanguage
.head 5 -  Class: clsClearableCol
.head 5 -  Class: clsDisableField
.head 4 +  Class Variables
.head 5 -  String: lsFrmName
.head 5 -  String: lsTblName
.head 5 -  String: lsColName
.head 5 -  Number: lnPos
.head 5 -  Number: lnWidth
.head 4 +  Instance Variables
.head 5 -  String: s
.head 5 -  Number: n
.head 5 -  Number: i
.head 5 -  !
.head 5 -  ! Variable indiquant si la position de la colonne doit etre sauvegardee
.head 5 -  Boolean: ibSauverPositionColonne
.head 4 -  Functions
.head 4 -  List Values
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendClassMessageNamed( clsClearableCol, SAM_AnyEdit, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCol, PAM_Clear, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsColMultiLanguage, PAM_Language, wParam, lParam )
.head 5 -  ! /@@@@@ LS : 30/11/1999
.head 5 +  ! On PAM_Situation_Colonne
.head 6 -  Set lsColName = SalStrRepeatX( ' ', 254 )
.head 6 -  Set lsTblName = SalStrRepeatX( ' ', 254 )
.head 6 -  Set lsFrmName = SalStrRepeatX( ' ', 254 )
.head 6 -  ! Call SalTblGetColumnTitle( hWndItem, lsColName, 254 )
.head 6 -  Set lsColName =  PalGetItemName( hWndItem )
.head 6 -  Set lsTblName =  PalGetItemName( SalParentWindow( hWndItem ) )
.head 6 -  Set lsFrmName = PalGetItemName( SalParentWindow( hWndForm ) )
.head 6 +  If wParam = cSitSave
.head 7 -  Set lnPos = SalTblQueryColumnPos( hWndItem )
.head 7 -  Call SalTblQueryColumnWidth( hWndItem, lnWidth )
.head 7 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, 'col' || SalNumberToStrX( lnPos, 0 ), lsColName, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, 'width' || SalNumberToStrX( lnPos, 0 ), SalNumberToStrX( lnWidth, 4 ), PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 -  Set gtnNbrCol = gtnNbrCol + 1
.head 7 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, 'nbrcol' , SalNumberToStrX( gtnNbrCol, 0 ), PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 6 +  Else If wParam = cSitLoad
.head 7 +  If gtsColName = lsColName
.head 8 -  Call SalTblSetColumnPos( hWndItem, lParam )
.head 8 -  Call SalGetProfileString( lsFrmName || '.' || lsTblName, 'width' || SalNumberToStrX( lParam, 0 ), '1', s, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 8 -  Set n = SalStrToNumber( s )
.head 8 -  Call SalTblSetColumnWidth( hWndItem, n )
.head 5 +  On PAM_Situation_Colonne
.head 6 +  If ibSauverPositionColonne
.head 7 -  Set lsColName = SalStrRepeatX( ' ', 254 )
.head 7 -  Set lsTblName = SalStrRepeatX( ' ', 254 )
.head 7 -  Set lsFrmName = SalStrRepeatX( ' ', 254 )
.head 7 -  ! Call SalTblGetColumnTitle( hWndItem, lsColName, 254 )
.head 7 -  Set lsColName =  PalGetItemName( hWndItem )
.head 7 -  Set lsTblName =  PalGetItemName( SalParentWindow( hWndItem ) )
.head 7 -  Set lsFrmName = PalGetItemName( SalParentWindow( hWndForm ) )
.head 7 +  If wParam = cSitSave
.head 8 -  Set lnPos = SalTblQueryColumnPos( hWndItem )
.head 8 -  Call SalTblQueryColumnWidth( hWndItem, lnWidth )
.head 8 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, lsColName, SalNumberToStrX( lnPos, 0 ), PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, lsColName || '.width' , SalNumberToStrX( lnWidth, 4 ), PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 8 -  Set gtnNbrCol = gtnNbrCol + 1
.head 8 -  Call SalSetProfileString( lsFrmName || '.' || lsTblName, 'nbrcol' , SalNumberToStrX( gtnNbrCol, 0 ), PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini'  )
.head 7 +  Else If wParam = cSitLoad
.head 8 -  ! If gtsColName = lsColName
.head 8 -  ! Call SalTblSetColumnPos( hWndItem, lParam )
.head 8 -  Call SalGetProfileString( lsFrmName || '.' || lsTblName, lsColName, '0', s, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 8 -  Set i = SalStrToNumber( s )
.head 8 -  Set gtwhTabCol[ i ] = hWndItem
.head 8 -  Call SalTblQueryColumnWidth( hWndItem, lnWidth )
.head 8 -  Call SalGetProfileString( lsFrmName || '.' || lsTblName, lsColName || '.width', SalNumberToStrX( lnWidth, 4 ), s, PalGetWindowsDirectory() || PalGetPrgmNameDef( 'config' ) || '.ini' )
.head 8 -  Set n = SalStrToNumber( s )
.head 8 -  Call SalTblSetColumnWidth( hWndItem, n )
.head 8 -  ! Set gtnTabColSize[ i ] = hWndItem
.head 5 +  On SAM_CreateComplete
.head 6 -  Set ibSauverPositionColonne = SalIsWindowVisible( hWndItem )
.head 5 -  ! \@@@@@ LS : 30/11/1999
.head 3 +  Column Class: clsBaseColDate
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Date/Time
.head 4 -  Justify: Center
.head 4 -  Width:  1.2"
.head 4 -  Width Editable? Class Default
.head 4 -  Format: dd/MM/yyyy
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseCol
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Values
.head 4 -  Message Actions
.head 3 +  Column Class: clsBaseColDateTime
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Date/Time
.head 4 -  Justify: Center
.head 4 -  Width:  1.7"
.head 4 -  Width Editable? Class Default
.head 4 -  Format: dd/MM/yyyy hh:mm
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseCol
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Values
.head 4 -  Message Actions
.head 3 +  Column Class: clsBaseColCmb
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableCol
.head 5 -  ! Class: clsColMultiLanguage
.head 5 -  Class: clsColCmbDynSql
.head 5 -  ! Class: clsColCmbCached
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Values
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendClassMessageNamed( clsClearableCol, SAM_AnyEdit, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsColCmbCached, SAM_AnyEdit, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCol, PAM_Clear, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsColCmbCached, PAM_Language, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsColMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsColCmbCached, SAM_Click, wParam, lParam )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendClassMessageNamed( clsColCmbCached, SAM_Create, wParam, lParam )
.head 5 +  ! On PAM_NavigateRecord
.head 6 -  Call SalSendClassMessageNamed( clsColCmbDynSql, PAM_NavigateRecord, wParam, lParam )
.head 3 +  Combo Box Class: clsBaseCmb
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  String Type: Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Always Show List? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableCmb
.head 5 -  ! Class: clsCmbMultiLanguage
.head 5 -  Class: clsCmbDynSql
.head 5 -  ! Class: clsCmbCached
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsCmbMultiLanguage, PAM_Language, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, PAM_Language, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCmb, PAM_Clear, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, SAM_Create, wParam, lParam )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableCmb, SAM_Click, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, SAM_Click, wParam, lParam )
.head 5 +  On PAM_NavigateRecord
.head 6 -  Call SalSendClassMessageNamed( clsCmbDynSql, PAM_NavigateRecord, wParam, lParam )
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendClassMessageNamed( clsClearableCmb, SAM_AnyEdit, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, SAM_AnyEdit, wParam, lParam )
.head 3 +  ! Combo Box Class: clsBaseCmbReadOnly
.winattr
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.2"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\MYDOCU~1\GUPTAA~1\LANGUAGE\QO_LANG.EXE,frmPropertiesLanguage,Translation...,,Y,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.end
.head 4 -  Description: 
.head 4 +  Derived From 
.head 5 -  Class: clsClearableCmb
.head 5 -  ! Class: clsCmbMultiLanguage
.head 5 -  Class: clsCmbDynSql
.head 5 -  ! Class: clsCmbCached
.head 4 -  Class Variables 
.head 4 -  Instance Variables 
.head 4 -  Functions 
.head 4 -  List Initialization 
.head 4 +  Message Actions 
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsCmbMultiLanguage, PAM_Language, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, PAM_Language, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableCmb, PAM_Clear, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, SAM_Create, wParam, lParam )
.head 6 -  ! FOR READONLY
.head 6 -  Call SalSendMsg( GetWindow( hWndItem, GW_CHILD ), EM_SETREADONLY, TRUE, 0 )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableCmb, SAM_Click, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsCmbCached, SAM_Click, wParam, lParam )
.head 5 +  On PAM_NavigateRecord
.head 6 -  Call SalSendClassMessageNamed( clsCmbDynSql, PAM_NavigateRecord, wParam, lParam )
.head 3 +  Data Field Class: clsBaseDf
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  0.825"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableDf
.head 5 -  Class: clsDfMultiLanguage
.head 5 -  Class: cResizeDataField
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendClassMessageNamed( clsClearableDf, SAM_AnyEdit, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableDf, PAM_Clear, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsDfMultiLanguage, PAM_Language, wParam, lParam )
.head 3 +  Data Field Class: clsBaseDfAsLabel
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Class Default
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  0.825"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.208"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseDf
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 -  On SAM_AnyEdit
.head 5 -  ! On PAM_Clear
.head 5 -  On PAM_Dirty
.head 5 -  On PAM_DisableField
.head 5 +  On SAM_Create
.head 6 -  Call DisableAlways( TRUE, 0 )
.head 3 +  Data Field Class: clsBaseDfDateOri
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseDf
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Data Field Class: clsBaseDfDate
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseDf
.head 4 +  Class Variables
.head 5 -  Date/Time: d2
.head 5 -  String: s
.head 5 -  String: Tab[2]
.head 5 -  Number: l
.head 4 +  Instance Variables
.head 5 -  Date/Time: d
.head 5 -  Boolean: ibPost
.head 5 -  Boolean: ibAnnee
.head 5 -  Number: inAnnee
.head 5 -  Number: inAnneePiv
.head 5 -  Boolean: ibConfirme
.head 4 +  Functions
.head 5 +  Function: __InitVar
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set d=SalDateCurrent( )
.head 7 -  Set ibPost = FALSE
.head 7 -  Set ibAnnee = FALSE
.head 7 -  Set inAnnee = SalDateYear( d )
.head 7 -  Set inAnneePiv = 1950
.head 7 -  Set ibConfirme = TRUE
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 +  If not SalIsNull( hWndItem )
.head 7 +  If d=DATETIME_Null
.head 8 -  ! Set d=SalDateCurrent( )
.head 8 -  Call __InitVar( )
.head 7 -  Set l = 4
.head 7 +  If not SalFmtIsValidField( hWndItem )
.head 8 -  Call SalFmtSetPicture( hWndItem, 'dd' )
.head 8 +  If not SalFmtIsValidField( hWndItem )
.head 9 -  Call SalFmtSetPicture( hWndItem, 'dd/MM' )
.head 9 +  If not SalFmtIsValidField( hWndItem )
.head 10 -  Call PalMessageBox ( "Deze datum is onjuist!", "Cette date est incorrecte !","Fout", "Erreur",MB_IconHand)
.head 10 -  ! Call SalClearField (hWndItem)
.head 10 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 10 -  Return VALIDATE_Cancel
.head 9 +  Else
.head 10 -  !
.head 10 -  Call SalFmtFieldToStr( hWndItem, s,TRUE )
.head 10 -  Call SalStrTokenize( s, ' ', '/', Tab )
.head 10 +  If ibAnnee
.head 11 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 10 +  Else
.head 11 +  If ibPost
.head 12 -  ! Nouveau traitement: on prend une date posterieur
.head 12 +  If (SalStrToNumber( Tab[1] )>SalDateMonth(d))
or (SalStrToNumber( Tab[1] )=SalDateMonth(d) and
SalStrToNumber( Tab[0] )>=SalDateDay(d))
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee+1,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 11 +  Else
.head 12 -  ! Ancien traitement: on prend une date anterieur
.head 12 +  If (SalStrToNumber( Tab[1] )<SalDateMonth(d))
or (SalStrToNumber( Tab[1] )=SalDateMonth(d) and
SalStrToNumber( Tab[0] )<=SalDateDay(d))
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee-1,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 10 -  Set s=SalFmtFormatDateTime( d2, 'dd/MM/yyyy' )
.head 10 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 10 -  Call SalFmtStrToField( hWndItem, s, TRUE )
.head 8 +  Else
.head 9 -  Call SalFmtFieldToStr( hWndItem, s,TRUE )
.head 9 +  If ibAnnee
.head 10 +  If inAnnee != SalDateYear( d )
.head 11 +  If inAnnee > SalDateYear( d )
.head 12 -  Set d2= SalDateConstruct( inAnnee,
1, SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 -  Set d2= SalDateConstruct( inAnnee,
12, SalStrToNumber( s ), 0, 1, 1 )
.head 10 +  Else
.head 11 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 9 +  Else
.head 10 +  If ibPost
.head 11 -  ! Nouveau traitement: on prend une date posterieure
.head 11 +  If SalStrToNumber( s )>=SalDateDay(d)
.head 12 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 +  If SalDateMonth(d)=12
.head 13 -  Set d2= SalDateConstruct( inAnnee+1,
1, SalStrToNumber( s ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d)+1, SalStrToNumber( s ), 0, 1, 1 )
.head 10 +  Else
.head 11 -  ! Ancien traitement: on prend une date anterieure
.head 11 +  If SalStrToNumber( s )<=SalDateDay(d)
.head 12 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 +  If SalDateMonth(d)=1
.head 13 -  Set d2= SalDateConstruct( inAnnee-1,
12, SalStrToNumber( s ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d)-1, SalStrToNumber( s ), 0, 1, 1 )
.head 9 -  Set s=SalFmtFormatDateTime( d2, 'dd/MM/yyyy' )
.head 9 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 9 -  Call SalFmtStrToField( hWndItem, s, TRUE )
.head 7 +  Else
.head 8 -  Call SalFmtFieldToStr( hWndItem, s,TRUE )
.head 8 -  Call SalStrTokenize( s, ' ', '/', Tab )
.head 8 -  Set l = SalStrLength( Tab[2] )
.head 7 +  If inAnneePiv > SalDateYear( MyValue )
.head 8 +  If ibConfirme
.head 9 +  ! If SalMessageBox( "L'année est antérieur à " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Est ce correcte ?", "Question", MB_YesNo | MB_DefButton1 | MB_IconQuestion ) = IDYES
.head 10 -  Return VALIDATE_Ok
.head 9 +  If PalMessageBox( "Het jaar valt vroeger dan   " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Is dat juist?", "L'année est antérieur à " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Est ce correcte ?", "Vraag", "Question", MB_YesNo | MB_DefButton1 
| MB_IconQuestion ) = IDYES
.head 10 -  Return VALIDATE_Ok
.head 9 +  Else
.head 10 -  ! Return VALIDATE_Cancel
.head 10 -  Set MyValue = SalDateConstruct( SalDateYear( MyValue ) + 100, SalDateMonth( MyValue ), SalDateDay( MyValue ), 0, 0, 0 )
.head 10 -  Return VALIDATE_Ok
.head 8 +  Else
.head 9 -  Set MyValue = SalDateConstruct( SalDateYear( MyValue ) + 100, SalDateMonth( MyValue ), SalDateDay( MyValue ), 0, 0, 0 )
.head 7 -  Return VALIDATE_Ok
.head 6 +  Else
.head 7 -  Return VALIDATE_Ok
.head 5 +  On SAM_Create
.head 6 -  ! Call SalSendClassMessage( SAM_Create, wParam, lParam )
.head 6 -  Call __InitVar( )
.head 3 +  Data Field Class: clsBaseDfDateTime
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  1.7"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy hh:mm
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBaseDf
.head 4 +  Class Variables
.head 5 -  Date/Time: d2
.head 5 -  String: s
.head 5 -  String: Tab[2]
.head 4 +  Instance Variables
.head 5 -  Date/Time: d
.head 5 -  Boolean: ibPost
.head 5 -  Boolean: ibAnnee
.head 5 -  Number: inAnnee
.head 5 -  Number: inAnneePiv
.head 5 -  Boolean: ibConfirme
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 +  If not SalIsNull( hWndItem )
.head 7 +  If d=DATETIME_Null
.head 8 -  Set d=SalDateCurrent( )
.head 7 +  If not SalFmtIsValidField( hWndItem )
.head 8 -  Call SalFmtSetPicture( hWndItem, 'dd' )
.head 8 +  If not SalFmtIsValidField( hWndItem )
.head 9 -  Call SalFmtSetPicture( hWndItem, 'dd/MM' )
.head 9 +  If not SalFmtIsValidField( hWndItem )
.head 10 -  ! Call SalMessageBox ("Cette date est incorrecte !","Erreur",MB_IconHand)
.head 10 -  Call PalMessageBox ( "Deze datum is onjuist!", "Cette date est incorrecte !","Fout", "Erreur",MB_IconHand)
.head 10 -  ! Call SalClearField (hWndItem)
.head 10 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 10 -  Return VALIDATE_Cancel
.head 9 +  Else
.head 10 -  !
.head 10 -  Call SalFmtFieldToStr( hWndItem, s,TRUE )
.head 10 -  Call SalStrTokenize( s, ' ', '/', Tab )
.head 10 +  If ibAnnee
.head 11 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 10 +  Else
.head 11 +  If ibPost
.head 12 -  ! Nouveau traitement: on prend une date posterieur
.head 12 +  If (SalStrToNumber( Tab[1] )>SalDateMonth(d))
or (SalStrToNumber( Tab[1] )=SalDateMonth(d) and
SalStrToNumber( Tab[0] )>=SalDateDay(d))
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee+1,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 11 +  Else
.head 12 -  ! Ancien traitement: on prend une date anterieur
.head 12 +  If (SalStrToNumber( Tab[1] )<SalDateMonth(d))
or (SalStrToNumber( Tab[1] )=SalDateMonth(d) and
SalStrToNumber( Tab[0] )<=SalDateDay(d))
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee-1,
SalStrToNumber(Tab[1]), SalStrToNumber( Tab[0] ), 0, 1, 1 )
.head 10 -  Set s=SalFmtFormatDateTime( d2, 'dd/MM/yyyy' )
.head 10 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 10 -  Call SalFmtStrToField( hWndItem, s, TRUE )
.head 8 +  Else
.head 9 -  Call SalFmtFieldToStr( hWndItem, s,TRUE )
.head 9 +  If ibAnnee
.head 10 +  If inAnnee != SalDateYear( d )
.head 11 +  If inAnnee > SalDateYear( d )
.head 12 -  Set d2= SalDateConstruct( inAnnee,
1, SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 -  Set d2= SalDateConstruct( inAnnee,
12, SalStrToNumber( s ), 0, 1, 1 )
.head 10 +  Else
.head 11 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 9 +  Else
.head 10 +  If ibPost
.head 11 -  ! Nouveau traitement: on prend une date posterieure
.head 11 +  If SalStrToNumber( s )>=SalDateDay(d)
.head 12 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 +  If SalDateMonth(d)=12
.head 13 -  Set d2= SalDateConstruct( inAnnee+1,
1, SalStrToNumber( s ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d)+1, SalStrToNumber( s ), 0, 1, 1 )
.head 10 +  Else
.head 11 -  ! Ancien traitement: on prend une date anterieure
.head 11 +  If SalStrToNumber( s )<=SalDateDay(d)
.head 12 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d), SalStrToNumber( s ), 0, 1, 1 )
.head 11 +  Else
.head 12 +  If SalDateMonth(d)=1
.head 13 -  Set d2= SalDateConstruct( inAnnee-1,
12, SalStrToNumber( s ), 0, 1, 1 )
.head 12 +  Else
.head 13 -  Set d2= SalDateConstruct( inAnnee,
SalDateMonth(d)-1, SalStrToNumber( s ), 0, 1, 1 )
.head 9 -  Set s=SalFmtFormatDateTime( d2, 'dd/MM/yyyy' )
.head 9 -  Call SalFmtSetPicture( hWndItem, 'dd/MM/yyyy' )
.head 9 -  Call SalFmtStrToField( hWndItem, s, TRUE )
.head 7 +  If inAnneePiv > SalDateYear( MyValue )
.head 8 +  If ibConfirme
.head 9 +  ! If SalMessageBox( "L'année est antérieur à " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Est ce correcte ?", "Question", MB_YesNo | MB_DefButton1 | MB_IconQuestion ) = IDYES
.head 10 -  Return VALIDATE_Ok
.head 9 +  If PalMessageBox( "Het jaar valt vroeger dan   " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Is dat juist?", "L'année est antérieur à " || SalFmtFormatNumber( inAnneePiv, '0' ) || ". Est ce correcte ?", "Vraag", "Question", MB_YesNo | MB_DefButton1 
| MB_IconQuestion ) = IDYES
.head 10 -  Return VALIDATE_Ok
.head 9 +  Else
.head 10 -  ! Return VALIDATE_Cancel
.head 10 -  Set MyValue = SalDateConstruct( SalDateYear( MyValue ) + 100, SalDateMonth( MyValue ), SalDateDay( MyValue ), 0, 0, 0 )
.head 10 -  Return VALIDATE_Ok
.head 8 +  Else
.head 9 -  Set MyValue = SalDateConstruct( SalDateYear( MyValue ) + 100, SalDateMonth( MyValue ), SalDateDay( MyValue ), 0, 0, 0 )
.head 7 -  Return VALIDATE_Ok
.head 6 +  Else
.head 7 -  Return VALIDATE_Ok
.head 5 +  On SAM_Create
.head 6 -  Set d=SalDateCurrent( )
.head 6 -  Set ibPost = FALSE
.head 6 -  Set ibAnnee = FALSE
.head 6 -  Set inAnnee = SalDateYear( d )
.head 6 -  Set inAnneePiv = 1950
.head 6 -  Set ibConfirme = TRUE
.head 3 +  Dialog Box Class: clsBaseDlg
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modal
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 +  Contents
.head 5 +  Pushbutton: pbInvisibleHelp
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 1
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Window Location and Size
.head 7 -  Left: Default
.head 7 -  Top: Default
.head 7 -  Width:  Default
.head 7 -  Width Editable? Yes
.head 7 -  Height: Default
.head 7 -  Height Editable? Yes
.head 6 -  Visible? No
.head 6 -  Keyboard Accelerator: F1
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Picture File Name:
.head 6 -  Picture Transparent Color: None
.head 6 -  Image Style: Single
.head 6 -  Text Color: Default
.head 6 -  Background Color: Default
.head 6 -  Button Appearance: Standard
.head 6 +  Message Actions
.head 7 +  On SAM_Click
.head 8 -  Call SalWinHelp( hWndMDI, 'c:\\Accessj\\Help.hlp', HELP_Context, gnHelpContext, '' )
.head 4 +  Derived From
.head 5 -  Class: clsDlgDynSql
.head 5 -  Class: clsDlgMultiLanguage
.head 5 -  Class: clsDlgWndInfoForm
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: inHelpContextPrevious
.head 5 -  String: isTmpTitle
.head 5 -  String: isTmpName
.head 5 -  ! /##### LS : 05/11/2002
.head 5 -  FunctionalVar: ActiveKey
.head 6 -  Class: gcActiveKey
.head 5 -  ! \##### LS : 05/11/2002
.head 4 +  Functions
.head 5 -  ! /##### LS : 05/11/2002
.head 5 +  Function: LBFActiveKeyLoad
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lwh
.head 6 +  Actions
.head 7 -  Call ActiveKey.Load( )
.head 5 +  Function: LBFActiveKeyFree
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call ActiveKey.Free( )
.head 5 -  ! \##### LS : 05/11/2002
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableDlg, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 +  If SalSendClassMessageNamed( clsDlgDynSql, SAM_Close, wParam, lParam ) = 0
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 +  If SalSendClassMessageNamed( clsDlgWndInfoForm, SAM_Close, wParam, lParam ) = 0
.head 8 -  Return FALSE
.head 6 -  ! /##### LS : 05/11/2002
.head 6 -  Call ActiveKey.Erase( )
.head 6 -  ! \##### LS : 05/11/2002
.head 5 +  On SAM_CreateComplete
.head 6 -  Set inHelpContextPrevious = gnHelpContext
.head 6 -  Call SalSendClassMessageNamed( clsDlgWndInfoForm, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsDlgDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! Tonen van naam van de form in de form title
.head 6 +  If gbDynSqlDebug
.head 7 -  Call SalGetWindowText( hWndForm, isTmpTitle, 100 )
.head 7 -  Call SalGetItemName( hWndForm, isTmpName )
.head 7 -  Call SalSetWindowText( hWndForm, isTmpTitle || '     [ ' || isTmpName || ' ]' )
.head 6 -  ! /##### LS : 05/11/2002
.head 6 -  ! Set inNbrActiveKey =0
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_ADD, PAL_VK_Plus )
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_DELETE, PAL_VK_Moins )
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_MULTIPLY, PAL_VK_Fois )
.head 6 -  ! \##### LS : 05/11/2002
.head 5 +  On SAM_Create
.head 6 -  Call SalSendMsg( hWndForm, PAM_Language, gnLanguage, 0 )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsDlgMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On SAM_Destroy
.head 6 -  Set gnHelpContext = inHelpContextPrevious
.head 6 -  Call SalSendClassMessageNamed( clsGenDynSql, SAM_Destroy, wParam, lParam )
.head 5 -  ! /##### LS : 05/11/2002
.head 5 +  On SAM_Activate
.head 6 -  ! Call SalSendClassMessageNamed( clsDlgMultiLanguage, SAM_Activate, wParam, lParam )
.head 6 +  If wParam = TRUE
.head 7 -  Call ..LBFActiveKeyLoad( )
.head 6 +  Else
.head 7 -  Call ..LBFActiveKeyFree( )
.head 5 -  ! \##### LS : 05/11/2002
.head 3 +  Dialog Box Class: clsBaseDlgTabs
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Class Default
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  5.275"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 3.208"
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 2
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Class Default
.head 6 -  Location? Class Default
.head 6 -  Visible? Class Default
.head 6 -  Size: Class Default
.head 6 -  Size Editable? Class Default
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Class Default
.head 6 -  Font Size: Class Default
.head 6 -  Font Enhancement: Class Default
.head 6 -  Text Color: Class Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 +  Contents
.head 5 +  Picture: picTabs
.data CLASSPROPS
0000: 546162546F704D61 7267696E00020030 0000546162466F72 6D50616765730001
0020: 0000005461624472 61775374796C6500 0B0057696E393553 74796C6500005461
0040: 62426F74746F6D4D 617267696E000200 3000005461625061 6765436F756E7400
0060: 0200310000546162 4C6162656C730007 004C6162656C3000 005461624E616D65
0080: 730006004E616D65 3000005461625269 6768744D61726769 6E00020030000054
00A0: 616243757272656E 740006004E616D65 3000005461624C65 66744D617267696E
00C0: 0002003000000000 0000000000000000 0000000000000000 0000
.enddata
.data CLASSPROPSSIZE
0000: DA00
.enddata
.head 6 -  Class Child Ref Key: 1
.head 6 -  Class ChildKey: 1
.head 6 -  Class: cQuickTabsDialog
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Window Location and Size
.head 7 -  Left: Class Default
.head 7 -  Top: Class Default
.head 7 -  Width:  Class Default
.head 7 -  Width Editable? Class Default
.head 7 -  Height: Class Default
.head 7 -  Height Editable? Class Default
.head 6 -  Visible? Class Default
.head 6 -  Editable? Class Default
.head 6 -  File Name:
.head 6 -  Storage: Class Default
.head 6 -  Picture Transparent Color: Class Default
.head 6 -  Fit: Class Default
.head 6 -  Scaling
.head 7 -  Width:  Class Default
.head 7 -  Height:  Class Default
.head 6 -  Corners: Class Default
.head 6 -  Border Style: Class Default
.head 6 -  Border Thickness: Class Default
.head 6 -  Tile To Parent? Class Default
.head 6 -  Border Color: Class Default
.head 6 -  Background Color: Class Default
.head 6 -  Message Actions
.head 5 +  Pushbutton: pbInvisibleHelp
.head 6 -  Class Child Ref Key: 1
.head 6 -  Class ChildKey: 2
.head 6 -  Class: clsBaseDlg
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Window Location and Size
.head 7 -  Left: Class Default
.head 7 -  Top: Class Default
.head 7 -  Width:  Class Default
.head 7 -  Width Editable? Class Default
.head 7 -  Height: Class Default
.head 7 -  Height Editable? Class Default
.head 6 -  Visible? Class Default
.head 6 -  Keyboard Accelerator: Class Default
.head 6 -  Font Name: Class Default
.head 6 -  Font Size: Class Default
.head 6 -  Font Enhancement: Class Default
.head 6 -  Picture File Name:
.head 6 -  Picture Transparent Color: Class Default
.head 6 -  Image Style: Class Default
.head 6 -  Text Color: Class Default
.head 6 -  Background Color: Class Default
.head 6 -  Button Appearance: Class Default
.head 6 -  Message Actions
.head 4 +  Derived From
.head 5 -  Class: cQuickTabsDialog
.head 5 -  Class: clsBaseDlg
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: __TabsTranslations[*,4]
.head 4 +  Functions
.head 5 +  Function: TranslateTabLabels
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 +  Actions
.head 7 -  Call LockWindowUpdate( hWndForm )
.head 7 -  Call SalArrayGetLowerBound( __TabsTranslations, 1, nMin )
.head 7 -  Call SalArrayGetUpperBound( __TabsTranslations, 1, nMax )
.head 7 -  Set i = nMin
.head 7 +  While i <= nMax
.head 8 -  Call picTabs.SetLabel( i, __TabsTranslations[ i, gnLanguage ], FALSE )
.head 8 -  Set i = i + 1
.head 7 -  Call ..LBFTranslateTabLabels( )
.head 7 -  Call picTabs.Redraw()
.head 7 -  Call LockWindowUpdate( hWndNULL )
.head 5 +  Function: LBFTranslateTabLabels
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 -  Actions
.head 5 +  Function: SetTabTranslation
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnLng
.head 7 -  Number: pnTabs
.head 7 -  String: psLabel
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set __TabsTranslations[ pnTabs, pnLng ] = psLabel
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = clsBaseDlg.LanguageTranslate( pnLanguage )
.head 7 -  Call SalSendMsg( hWndForm, PAM_TranslateTabLabels, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalSendClassMessage( SAM_Create, wParam, lParam )
.head 6 -  Call SalCenterWindow( hWndForm )
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( clsBaseDlg, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendMsg( hWndForm, PAM_Language, gnLanguage, 0 )
.head 5 +  On PAM_TranslateTabLabels
.head 6 -  Call ..TranslateTabLabels( )
.head 3 +  ! Form Window Class: clsBaseFrm
.winattr
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? No
.head 4 -  Visible? Yes
.head 4 -  Display Settings
.head 5 -  Display Style? Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? No
.head 5 -  Initial State: Normal
.head 5 -  Maximizable? No
.head 5 -  Minimizable? Yes
.head 5 -  Allow Child Docking? Yes
.head 5 -  Docking Orientation: Left
.head 5 -  System Menu? No
.head 5 -  Resizable? No
.head 5 -  Window Location and Size
.head 6 -  Left: 0.399"
.head 6 -  Top: 0.001"
.head 6 -  Width:  0.001"
.head 6 -  Width Editable? No
.head 6 -  Height: 0.001"
.head 6 -  Height Editable? Yes
.head 5 -  Form Size
.head 6 -  Width:  0.001"
.head 6 -  Height: 0.001"
.head 6 -  Number of Pages: Dynamic
.head 5 -  Font Name:
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.end
.head 4 -  Description: 
.head 4 +  Derived From 
.head 5 -  Class: clsFrmDynSql
.head 5 -  Class: clsFrmMultiLanguage
.head 5 -  Class: cfrmWndInfoForm
.head 4 -  Menu 
.head 4 +  Tool Bar 
.winattr
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Yes
.head 6 -  Toolbar Docking Orientation: Top | Bottom
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Default
.head 6 -  Resizable? No
.end
.head 5 -  Contents 
.head 4 -  Contents 
.head 4 -  Class Variables 
.head 4 +  Instance Variables 
.head 5 -  String: isTmpTitle
.head 5 -  String: isTmpName
.head 4 -  Functions 
.head 4 +  Message Actions 
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableFrm, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_Close, wParam, lParam )
.head 6 +  If SalSendClassMessageNamed( clsFrmDynSql, SAM_Close, wParam, lParam ) = 0
.head 7 -  Return FALSE
.head 6 +  Else 
.head 7 +  If SalSendClassMessageNamed( cfrmWndInfoForm, SAM_Close, wParam, lParam ) = 0
.head 8 -  Return FALSE
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( cfrmWndInfoForm, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsFrmDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! Tonen van naam van de form in de form title
.head 6 +  If gbDynSqlDebug
.head 7 -  Call SalGetWindowText( hWndForm, isTmpTitle, 100 )
.head 7 -  Call SalGetItemName( hWndForm, isTmpName )
.head 7 -  Call SalSetWindowText( hWndForm, isTmpTitle || '     [ ' || isTmpName || ' ]' )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendMsg( hWndForm, PAM_Language, gnLanguage, 0 )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On SAM_Activate
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_Activate, wParam, lParam )
.head 3 +  Form Window Class: clsBaseFrm
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? No
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? No
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsFrmDynSql
.head 5 -  Class: clsFrmMultiLanguage
.head 5 -  Class: cfrmWndInfoForm
.head 5 -  ! Class: cResizeFormWindow
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isTmpTitle
.head 5 -  String: isTmpName
.head 5 -  Number: inFctPerm
.head 5 -  ! /##### LS : 05/11/2002
.head 5 -  FunctionalVar: ActiveKey
.head 6 -  Class: gcActiveKey
.head 5 -  ! \##### LS : 05/11/2002
.head 4 +  Functions
.head 5 -  ! /##### LS : 05/11/2002
.head 5 +  Function: LBFActiveKeyLoad
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lwh
.head 6 +  Actions
.head 7 -  Call ActiveKey.Load( )
.head 5 +  Function: LBFActiveKeyFree
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call ActiveKey.Erase( )
.head 7 -  Call ActiveKey.Free( )
.head 5 -  ! \##### LS : 05/11/2002
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableFrm, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 -  Call SalSendMsgToChildren( hWndForm, PAM_Situation_Table, cSitSave, 0 )
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_Close, wParam, lParam )
.head 6 +  If SalSendClassMessageNamed( clsFrmDynSql, SAM_Close, wParam, lParam ) = 0
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 +  If SalSendClassMessageNamed( cfrmWndInfoForm, SAM_Close, wParam, lParam ) = 0
.head 8 -  Return FALSE
.head 6 -  ! /##### LS : 05/11/2002
.head 6 -  Call ActiveKey.Erase( )
.head 6 -  ! \##### LS : 05/11/2002
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( cfrmWndInfoForm, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsFrmDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! /@@@@@ LS : 30/11/1999
.head 6 -  ! Call SalSendMsgToChildren( hWndForm, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendMsgToChildren( hWndForm, PAM_Situation_Table, cSitLoad, lParam )
.head 6 -  ! \@@@@@ LS : 30/11/1999
.head 6 -  ! Tonen van naam van de form in de form title
.head 6 +  If gbDynSqlDebug
.head 7 -  Call SalGetWindowText( hWndForm, isTmpTitle, 100 )
.head 7 -  Call SalGetItemName( hWndForm, isTmpName )
.head 7 -  Call SalSetWindowText( hWndForm, isTmpTitle || '     [ ' || isTmpName || ' ]' )
.head 6 -  ! /##### LS : 05/11/2002
.head 6 -  ! Set inNbrActiveKey =0
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_ADD, PAL_VK_Plus )
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_DELETE, PAL_VK_Moins )
.head 6 -  Call ActiveKey.Add( hWndForm, PAM_ActiveKey, KDS_Alt, VK_MULTIPLY, PAL_VK_Fois )
.head 6 -  ! \##### LS : 05/11/2002
.head 5 +  On SAM_Create
.head 6 -  Call SalSendMsg( hWndForm, PAM_Language, gnLanguage, 0 )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, PAM_Language, wParam, lParam )
.head 6 -  Call SalSendMsg( hWndForm, PAM_TranslateTabLabels, wParam, lParam )
.head 5 +  On SAM_Activate
.head 6 -  Call SalSendClassMessageNamed( clsFrmMultiLanguage, SAM_Activate, wParam, lParam )
.head 6 -  ! /##### LS : 05/11/2002
.head 6 +  If wParam = TRUE
.head 7 -  Call ..LBFActiveKeyLoad( )
.head 6 +  Else
.head 7 -  Call ..LBFActiveKeyFree( )
.head 6 -  ! \##### LS : 05/11/2002
.head 5 +  On PAM_Permission
.head 6 +  ! If not PalPermissionModif( inFctPerm )
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Permission, wParam, lParam )
.head 6 +  If not PalPermissionModif( inFctPerm )
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Permission, cPermModif, lParam )
.head 6 +  Else
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Permission, 0, lParam )
.head 5 +  On WM_SIZE
.head 6 -  Call SalSendClassMessage( WM_SIZE, wParam, lParam )
.head 6 -  ! Call SalSendClassMessageNamed( cfrmWndInfoForm, WM_SIZE, wParam, lParam )
.head 6 -  ! Call SalSendClassMessageNamed( cResizeFormWindow, WM_SIZE, wParam, lParam )
.head 6 -  ! Call SalSendMsg( hWndForm, PM_FORM_RESIZED, wParam, lParam )
.head 6 -  ! Call SalSendClassMessage( PM_FORM_RESIZED, wParam, lParam )
.head 6 -  Call SalSendMsgToChildren( hWndForm, PM_FORM_RESIZED, wParam, lParam )
.head 3 +  Form Window Class: clsBaseFrmTabs
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cQuickTabsForm
.head 5 -  Class: clsBaseFrm
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 +  Contents
.head 5 +  Picture: picTabs
.data CLASSPROPS
0000: 5461624C6566744D 617267696E000200 3000005461624375 7272656E74000600
0020: 4E616D6530000054 6162426F74746F6D 4D617267696E0002 0030000054616250
0040: 616765436F756E74 0002003100005461 624C6162656C7300 07004C6162656C30
0060: 00005461624E616D 65730006004E616D 6530000054616252 696768744D617267
0080: 696E000200300000 5461624472617753 74796C65000B0057 696E39355374796C
00A0: 650000546162466F 726D506167657300 0100000054616254 6F704D617267696E
00C0: 0002003000000000 0000000000000000 0000000000000000 0000
.enddata
.data CLASSPROPSSIZE
0000: DA00
.enddata
.head 6 -  Class Child Ref Key: 1
.head 6 -  Class ChildKey: 1
.head 6 -  Class: cQuickTabsForm
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Window Location and Size
.head 7 -  Left: Class Default
.head 7 -  Top: Class Default
.head 7 -  Width:  Class Default
.head 7 -  Width Editable? Class Default
.head 7 -  Height: Class Default
.head 7 -  Height Editable? Class Default
.head 6 -  Visible? Class Default
.head 6 -  Editable? Class Default
.head 6 -  File Name:
.head 6 -  Storage: Class Default
.head 6 -  Picture Transparent Color: Class Default
.head 6 -  Fit: Class Default
.head 6 -  Scaling
.head 7 -  Width:  Class Default
.head 7 -  Height:  Class Default
.head 6 -  Corners: Class Default
.head 6 -  Border Style: Class Default
.head 6 -  Border Thickness: Class Default
.head 6 -  Tile To Parent? Class Default
.head 6 -  Border Color: Class Default
.head 6 -  Background Color: Class Default
.head 6 -  Message Actions
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: __TabsTranslations[*,4]
.head 4 +  Functions
.head 5 +  Function: TranslateTabLabels
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 +  Actions
.head 7 -  Call LockWindowUpdate( hWndForm )
.head 7 -  Call SalArrayGetLowerBound( __TabsTranslations, 1, nMin )
.head 7 -  Call SalArrayGetUpperBound( __TabsTranslations, 1, nMax )
.head 7 -  Set i = nMin
.head 7 +  While i <= nMax
.head 8 -  Call picTabs.SetLabel( i, __TabsTranslations[ i, gnLanguage ], FALSE )
.head 8 -  Set i = i + 1
.head 7 -  Call ..LBFTranslateTabLabels( )
.head 7 -  Call picTabs.Redraw()
.head 7 -  Call LockWindowUpdate( hWndNULL )
.head 5 +  Function: LBFTranslateTabLabels
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 -  Actions
.head 5 +  Function: SetTabTranslation
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnLng
.head 7 -  Number: pnTabs
.head 7 -  String: psLabel
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set __TabsTranslations[ pnTabs, pnLng ] = psLabel
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( clsBaseFrm, SAM_CreateComplete, wParam, lParam )
.head 5 +  On PAM_TranslateTabLabels
.head 6 -  Call ..TranslateTabLabels( )
.head 3 +  Form Window Class: clsBaseFrmUniLanguage
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? No
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? No
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsFrmDynSql
.head 5 -  Class: cfrmWndInfoForm
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isTmpTitle
.head 5 -  String: isTmpName
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableFrm, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Close
.head 6 +  If SalSendClassMessageNamed( clsFrmDynSql, SAM_Close, wParam, lParam ) = 0
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 +  If SalSendClassMessageNamed( cfrmWndInfoForm, SAM_Close, wParam, lParam ) = 0
.head 8 -  Return FALSE
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( cfrmWndInfoForm, SAM_CreateComplete, wParam, lParam )
.head 6 -  Call SalSendClassMessageNamed( clsFrmDynSql, SAM_CreateComplete, wParam, lParam )
.head 6 -  ! Tonen van naam van de form in de form title
.head 6 -  ! Call SalGetWindowText( hWndForm, isTmpTitle, 100 )
.head 6 -  ! Call SalGetItemName( hWndForm, isTmpName )
.head 6 -  ! Call SalSetWindowText( hWndForm, isTmpTitle || '     [ ' || isTmpName || ' ]' )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendMsg( hWndForm, PAM_Language, gnLanguage, 0 )
.head 3 +  Form Window Class: clsBaseFrmTabsUniLanguage
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cQuickTabsForm
.head 5 -  Class: clsBaseFrmUniLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 +  Contents
.head 5 +  Picture: picTabs
.data CLASSPROPS
0000: 5461624C6566744D 617267696E000200 3000005461624375 7272656E74000600
0020: 4E616D6530000054 6162426F74746F6D 4D617267696E0002 0030000054616250
0040: 616765436F756E74 0002003100005461 624C6162656C7300 07004C6162656C30
0060: 00005461624E616D 65730006004E616D 6530000054616252 696768744D617267
0080: 696E000200300000 5461624472617753 74796C65000B0057 696E39355374796C
00A0: 650000546162466F 726D506167657300 0100000054616254 6F704D617267696E
00C0: 0002003000000000 0000000000000000 0000000000000000 0000
.enddata
.data CLASSPROPSSIZE
0000: DA00
.enddata
.head 6 -  Class Child Ref Key: 1
.head 6 -  Class ChildKey: 1
.head 6 -  Class: cQuickTabsForm
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Window Location and Size
.head 7 -  Left: Class Default
.head 7 -  Top: Class Default
.head 7 -  Width:  Class Default
.head 7 -  Width Editable? Class Default
.head 7 -  Height: Class Default
.head 7 -  Height Editable? Class Default
.head 6 -  Visible? Class Default
.head 6 -  Editable? Class Default
.head 6 -  File Name:
.head 6 -  Storage: Class Default
.head 6 -  Picture Transparent Color: Class Default
.head 6 -  Fit: Class Default
.head 6 -  Scaling
.head 7 -  Width:  Class Default
.head 7 -  Height:  Class Default
.head 6 -  Corners: Class Default
.head 6 -  Border Style: Class Default
.head 6 -  Border Thickness: Class Default
.head 6 -  Tile To Parent? Class Default
.head 6 -  Border Color: Class Default
.head 6 -  Background Color: Class Default
.head 6 -  Message Actions
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( clsBaseFrmUniLanguage, SAM_CreateComplete, wParam, lParam )
.head 3 +  Group Box Class: clsBaseGb
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Title:
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 -  Derived From
.head 3 +  List Box Class: clsBaseLb
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Multiple selection? Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableLb
.head 5 -  Class: clsLbMultiLanguage
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsLbMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableLb, PAM_Clear, wParam, lParam )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableLb, SAM_Click, wParam, lParam )
.head 3 +  MDI Window Class: clsBaseMDI
.head 4 -  Title:
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? No
.head 5 -  Initial State: Maximized
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Yes
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Yes
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMdiMultiLanguage
.head 5 -  Class: cmdiWndInfoMDI
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On WM_SIZE
.head 6 -  Call SalSendClassMessageNamed( cmdiWndInfoMDI, WM_SIZE, wParam, lParam )
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalSendClassMessageNamed( cmdiWndInfoMDI, SAM_CreateComplete, wParam, lParam )
.head 5 +  On SAM_Create
.head 6 -  Call SalSendMsg( hWndMDI, PAM_Language, gnLanguage, 0 )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsMdiMultiLanguage, PAM_Language, wParam, lParam )
.head 3 +  Multiline Field Class: clsBaseMl
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  String Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Border? Class Default
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMlMultiLanguage
.head 5 -  Class: clsClearableMl
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendClassMessageNamed( clsClearableMl, SAM_AnyEdit, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableMl, PAM_Clear, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsMlMultiLanguage, PAM_Language, wParam, lParam )
.head 3 +  Radio Button Class: clsBaseRb
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsRbMultiLanguage
.head 5 -  Class: clsClearableRb
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LBFDisableInit
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bEtat
.head 6 +  Actions
.head 7 -  Call clsDisableField.LBFDisableInit( )
.head 7 -  Set bEtat = FALSE
.head 7 -  Call DisableSetBackgroundColor( bEtat, COLOR_Default )
.head 7 -  Set bEtat = TRUE
.head 7 -  Call DisableSetBackgroundColor( bEtat, COLOR_Default )
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableRb, SAM_Click, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsRbMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableRb, PAM_Clear, wParam, lParam )
.head 3 +  Radio Button Class: clsBaseRbReadOnly
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsRbMultiLanguage
.head 5 -  Class: clsClearableRb
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  ! On SAM_Click
.head 6 -  Call SalSendClassMessageNamed( clsClearableRb, SAM_Click, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsRbMultiLanguage, PAM_Language, wParam, lParam )
.head 5 +  On PAM_Clear
.head 6 -  Call SalSendClassMessageNamed( clsClearableRb, PAM_Clear, wParam, lParam )
.head 5 +  On WM_KEYDOWN
.head 6 -  Return FALSE
.head 5 +  On WM_KEYUP
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONDOWN
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONUP
.head 6 -  Return FALSE
.head 5 +  On WM_LBUTTONDBLCLK
.head 6 -  Return FALSE
.head 3 +  Picture Class: clsBasePic
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 1.8"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  File Name:
.head 4 -  Storage: Class Default
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Fit: Size to Fit
.head 4 -  Scaling
.head 5 -  Width:  Class Default
.head 5 -  Height:  Class Default
.head 4 -  Corners: Class Default
.head 4 -  Border Style: Etched
.head 4 -  Border Thickness: Class Default
.head 4 -  Tile To Parent? Class Default
.head 4 -  Border Color: Class Default
.head 4 -  Background Color: 3D Face Color
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearablePic
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Table Window Class: clsBaseTbl
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? No
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: ctblWndInfoTable
.head 5 -  Class: clsTblMultiLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Pushbutton Class: clsBasePbToolbar
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.355"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  ! Class: PB_CS
.head 5 -  Class: DynaToolTipPushbutton
.head 5 -  Class: cResizePushButton
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: SetStatusText
.head 6 -  Description: Change the text displayed on the status bar
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 +  String: p_sText
.head 8 -  ! Text to be displayed on the status bar
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call AddTool( hWndItem, p_sText, p_sText, FALSE )
.head 4 +  Message Actions
.head 5 +  ! On WM_MOUSEMOVE
.head 6 -  Call SalSendClassMessageNamed( PB_CS, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton Class: clsBasePbOnForm
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  ! Class: PB_CS
.head 5 -  Class: clsPbMultiLanguage
.head 5 -  Class: DynaToolTipPushbutton
.head 5 -  Class: cResizePushButton
.head 5 -  Class: clsDisableField
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: SetStatusText
.head 6 -  Description: Change the text displayed on the status bar
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 +  String: p_sText
.head 8 -  ! Text to be displayed on the status bar
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call AddTool( hWndItem, p_sText, p_sText, FALSE )
.head 5 -  ! /##### 17/10/2003
.head 5 +  Function: LBFDisableInit
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bEtat
.head 6 +  Actions
.head 7 -  Set bEtat = FALSE
.head 7 +  If not DisableIsBackgroundColorSet( bEtat )
.head 8 -  Call DisableSetBackgroundColor( bEtat, COLOR_3DFace )
.head 7 +  If not DisableIsTextColorSet( bEtat )
.head 8 -  Call DisableSetTextColor( bEtat, COLOR_Black )
.head 7 -  Set bEtat = TRUE
.head 7 +  If not DisableIsBackgroundColorSet( bEtat )
.head 8 -  Call DisableSetBackgroundColor( bEtat, COLOR_3DFace )
.head 7 +  If not DisableIsTextColorSet( bEtat )
.head 8 -  Call DisableSetTextColor( bEtat, COLOR_Black )
.head 5 -  ! \##### 17/10/2003
.head 4 +  Message Actions
.head 5 +  ! On WM_MOUSEMOVE
.head 6 -  Call SalSendClassMessageNamed( PB_CS, WM_MOUSEMOVE, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  Call SalSendClassMessageNamed( clsPbMultiLanguage, PAM_Language, wParam, lParam )
.head 3 +  Pushbutton Class: clsBasePbToolbarML
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.355"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBasePbToolbar
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On WM_NCCREATE
.head 6 -  Call SetWindowLongA( hWndItem, GWL_STYLE, GetWindowLongA( hWndItem, GWL_STYLE )  | BS_MULTILINE )
.head 3 +  Pushbutton Class: clsBasePbOnFormML
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsBasePbOnForm
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On WM_NCCREATE
.head 6 -  Call SetWindowLongA( hWndItem, GWL_STYLE, GetWindowLongA( hWndItem, GWL_STYLE )  | BS_MULTILINE )
.head 3 -  ! ====================================================================
.head 3 -  !
.head 3 -  ! Classes in TOOLTIPS.APL --------------------------------------------------------------------------------------------
.head 3 +  ! Functional Class: INT_CS_ToolTip
.winattr
.end
.head 4 -  Description: INT_CS_ToolTip interface between tool tip dialog box:
dlgBB_ToolTip and pushbutton (PB_CS) dervied from this class.

Defines class variables used to move tip text and control when
tool tip are displayed.
.head 4 -  Derived From 
.head 4 +  Class Variables 
.head 5 -  Window Handle: cv_hWndToolTip
.head 4 -  Instance Variables 
.head 4 +  Functions 
.head 5 +  Function: M_ShowTip
.head 6 -  Description: [PUBLIC]
M_ShowTip late bound function that notifies tool tip dialog that it
is time to show tip.
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sText
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 -  Actions 
.head 5 -  ! ---------------------------!
.head 5 +  Function: M_HideTip
.head 6 -  Description: [PUBLIC]
M_HideTip late bound function that notifies tool tip dialog that it
is time to hide tip.
.head 6 -  Returns 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 -  Actions 
.head 3 +  ! General Window Class: CWC_CS_ToolTip
.winattr
.end
.head 4 -  Description: CWC_CS_ToolTip by Tool Bar pushbutton classes or other 
graphical classes to allow displaying of Tool Tip like MS Word.

CWC_CS_ToolTip uses a time (SAM_Timer) to control when Tool Tips
are displayed.
.head 4 +  Derived From 
.head 5 -  Class: INT_CS_ToolTip
.head 4 +  Class Variables 
.head 5 -  Number: cv_nMouseX
.head 5 -  ! ---------------------------!
.head 5 -  Number: cv_nMouseY
.head 5 -  ! ---------------------------!
.head 5 -  Boolean: cv_bWait
.head 5 -  ! ---------------------------!
.head 5 -  Boolean: cv_bShowing
.head 5 -  ! ---------------------------!
.head 5 -  Boolean: cv_bDisableToolTips
.head 4 +  Instance Variables 
.head 5 -  String: iv_sTip
.head 4 +  Functions 
.head 5 +  Function: __KillTimer
.head 6 -  Description: [PRIVATE]
__KillTimer is used to kill the timer that drives the polling 
of the mouse position and sending the SAM_Timer message.
 __KillTimer is called in the WM_MOUSEMOVE processing
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  Number: nTimer
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Call SalTimerKill( hWndItem, nTimer )
.head 5 -  ! ---------------------------!
.head 5 +  Function: __MakeLong
.head 6 -  Description: [PRIVATE]
__MakeLong is used to create a LONG value 32 bit.
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  Number: nLow
.head 7 -  Number: nHigh
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Return nHigh * 65536 | nLow
.head 5 -  ! ---------------------------!
.head 5 +  Function: DisableToolTips
.head 6 -  Description: [PUBLIC]
DisableToolTips is used to turn off the displaying of ToolTips.
DisableToolTips set a class variable which turns off ToolTips
for all Pushbuttons on all objects.
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  Boolean: bDisable
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Set cv_bDisableToolTips = bDisable
.head 5 -  ! ---------------------------!
.head 5 +  Function: SetTip
.head 6 -  Description: [PUBLIC]
SetTip is used to set the ToolTip text.
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sText
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Set iv_sTip = sText
.head 5 -  ! ---------------------------!
.head 5 +  Function: GetTip
.head 6 -  Description: [PUBLIC]
GetTip is used to get the current ToolTip text.
.head 6 +  Returns 
.head 7 -  String: 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Return iv_sTip
.head 4 +  Message Actions 
.head 5 -  ! ---------------------------!
.head 5 +  On WM_MOUSEMOVE
.head 6 +  If NOT cv_bDisableToolTips
.head 7 +  If NOT cv_bWait
.head 8 +  If SalTimerSet( hWndItem, 1, 500 )
.head 9 -  Set cv_bWait = TRUE
.head 5 -  ! ---------------------------!
.head 5 +  On SAM_Timer
.head 6 +  If NOT cv_bDisableToolTips
.head 7 -  Call GetCursorPos( cv_nMouseX, cv_nMouseY )
.head 7 +  If hWndItem = WindowFromPoint( __MakeLong(cv_nMouseX, cv_nMouseY) )
.head 8 +  If SalIsWindowVisible(hWndItem)
.head 9 +  If NOT cv_bShowing
.head 10 +  If cv_hWndToolTip = hWndNULL
.head 11 -  Set cv_hWndToolTip = SalCreateWindow( dlgBB_ToolTip, hWndNULL )
.head 10 +  If cv_hWndToolTip != hWndNULL
.head 11 +  If GetTip( ) != ''
.head 12 -  Call cv_hWndToolTip.INT_CS_ToolTip..M_ShowTip( iv_sTip )
.head 12 -  Set cv_bShowing = TRUE
.head 12 -  Call SalTimerSet( hWndItem, 1, 5 )
.head 8 +  Else 
.head 9 +  If cv_hWndToolTip != hWndNULL
.head 10 -  Call cv_hWndToolTip.INT_CS_ToolTip..M_HideTip( )
.head 9 -  Set cv_bShowing = FALSE
.head 9 -  Call __KillTimer( 1 )
.head 9 -  Set cv_bWait = FALSE
.head 7 +  Else 
.head 8 +  If cv_hWndToolTip != hWndNULL
.head 9 -  Call cv_hWndToolTip.INT_CS_ToolTip..M_HideTip( )
.head 8 -  Set cv_bShowing = FALSE
.head 8 -  Call __KillTimer( 1 )
.head 8 -  Set cv_bWait = FALSE
.head 5 -  ! ---------------------------!
.head 5 +  On SAM_Destroy
.head 6 +  If NOT cv_bDisableToolTips
.head 7 +  If cv_bShowing
.head 8 -  Call cv_hWndToolTip.INT_CS_ToolTip..M_HideTip( )
.head 8 -  Set cv_bShowing = FALSE
.head 7 +  If cv_bWait
.head 8 -  Call __KillTimer( 1 )
.head 8 -  Set cv_bWait = FALSE
.head 3 +  ! Dialog Box Class: DLG_CS_ToolTip
.winattr
.head 4 -  Title:
.head 4 -  Accessories Enabled? No
.head 4 -  Visible? Yes
.head 4 -  Display Settings
.head 5 -  Display Style? Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modeless
.head 5 -  Allow Dock to Parent? No
.head 5 -  Docking Orientation: All
.head 5 -  Window Location and Size
.head 6 -  Left: 0.399"
.head 6 -  Top: 0.0"
.head 6 -  Width:  0.001"
.head 6 -  Width Editable? No
.head 6 -  Height: 0.001"
.head 6 -  Height Editable? No
.head 5 -  Absolute Screen Location? No
.head 5 -  Font Name:
.head 5 -  Font Size: 1
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Resizable? No
.head 5 -  Vertical Scroll? No
.head 5 -  Horizontal Scroll? No
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.end
.head 4 -  Description: DLG_CS_ToolTip is Tool Tip Dialog Box that shows up under 
Tool Bar items. This class is designed for Tool Tip support only.
.head 4 +  Tool Bar 
.winattr
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Yes
.head 6 -  Toolbar Docking Orientation: Top | Bottom
.head 6 -  Font Name: Default
.head 6 -  Font Size: 1
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Default
.head 6 -  Resizable? No
.end
.head 5 -  Contents 
.head 4 +  Contents 
.head 5 +  Data Field: dfTip
.winattr
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 1
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Data
.head 7 -  Maximum Data Length: Default
.head 7 -  Data Type: String
.head 7 -  Editable? No
.head 6 -  Display Settings
.head 7 -  Window Location and Size
.head 8 -  Left: 0.0"
.head 8 -  Top: 0.0"
.head 8 -  Width:  3.317"
.head 8 -  Width Editable? Yes
.head 8 -  Height: 0.238"
.head 8 -  Height Editable? Yes
.head 7 -  Visible? Yes
.head 7 -  Border? Yes
.head 7 -  Justify: Left
.head 7 -  Format: Unformatted
.head 7 -  Country: Default
.head 7 -  Font Name: Arial
.head 7 -  Font Size: 8
.head 7 -  Font Enhancement: None
.head 7 -  Text Color: Default
.head 7 -  Background Color: Maize
.head 7 -  Input Mask: Unformatted
.end
.head 6 +  Message Actions 
.head 7 +  On SAM_Create
.head 8 -  ! Call SalColorSet(hWndItem,COLOR_IndexWindow,
COLOR_Yellow)
.head 8 -  Call SalColorSet(hWndItem,COLOR_IndexWindow,
SalColorFromRGB(255,255,90))
.head 8 -  Call SalColorSet(hWndItem,COLOR_IndexWindowText,COLOR_Black)
.head 4 +  Derived From 
.head 5 -  Class: INT_CS_ToolTip
.head 4 -  Class Variables 
.head 4 -  Instance Variables 
.head 4 +  Functions 
.head 5 -  ! ---------------------------!
.head 5 +  Function: M_ShowTip
.head 6 -  Description: [PUBLIC]
M_ShowTip is used to display the Tool Tip for the object the
cursor is currently positioned over.

M_ShowTip is a ..Late Bound function that is invoked when 
a timer (SAM_Timer) indicates the cursor is positioned over
a pushbutton.
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sText
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  Number: nMouseX
.head 7 -  Number: nMouseY
.head 7 -  !
.head 7 -  Number: hDC
.head 7 -  Number: nTextWidth
.head 7 -  Number: nTextHeight
.head 7 -  Number: nScreenWidth
.head 7 -  Number: nScreenHeight
.head 6 +  Actions 
.head 7 -  Set dfTip = sText
.head 7 -  Set nScreenWidth = GetSystemMetrics( SM_CXSCREEN )
.head 7 -  Set nScreenHeight = GetSystemMetrics( SM_CYSCREEN )
.head 7 -  Call SalFmtFieldToStr( dfTip, sText, TRUE )
.head 7 -  ! ------------------------------------------------------- !
.head 7 -  Set hDC = GetDC( dfTip )
.head 7 -  Call SelectObject( hDC, SalNumberLow( SalSendMsg( dfTip, WM_GETFONT, 0, 0 ) ) )
.head 7 -  Set nTextWidth = SalNumberLow( GetTextExtent( hDC, sText, 
		SalStrLength( sText ) + 1 ) ) + 2
.head 7 -  Set nTextHeight = SalNumberHigh( GetTextExtent( hDC, sText, 
		SalStrLength( sText ) + 1 ) ) + 6
.head 7 -  Call ReleaseDC ( dfTip, hDC )
.head 7 -  ! ------------------------------------------------------- !
.head 7 -  Call GetCursorPos( nMouseX, nMouseY )
.head 7 -  ! Make sure the width of tip is not off the screen
.head 7 +  If nMouseX + nTextWidth >= nScreenWidth
.head 8 -  Set nMouseX = nScreenWidth - nTextWidth - 5
.head 7 -  ! Make sure the height of tip is not off the screen
.head 7 +  If nMouseY + nTextHeight + 18 > nScreenHeight
.head 8 -  Set nMouseY = nMouseY - nTextHeight - 30
.head 7 -  Set nMouseX = SalPixelsToFormUnits( hWndNULL, nMouseX - 2, FALSE )
.head 7 -  Set nMouseY = SalPixelsToFormUnits( hWndNULL, nMouseY + 18, TRUE )
.head 7 -  Call SalSetWindowLoc( hWndForm, nMouseX, nMouseY )
.head 7 -  ! Size dialog by data field...
.head 7 -  Set nTextWidth = SalPixelsToFormUnits( dfTip, nTextWidth, FALSE )
.head 7 -  Set nTextHeight = SalPixelsToFormUnits( dfTip, nTextHeight, TRUE ) 
.head 7 -  Call SalSetWindowSize( dfTip, nTextWidth, nTextHeight )
.head 7 -  Call SalSetWindowSize( hWndForm, nTextWidth, nTextHeight )
.head 7 -  ! -------------------------------------------------------- !
.head 7 -  Call ShowWindow( hWndForm, SW_SHOWNOACTIVATE )
.head 5 -  ! ---------------------------!
.head 5 +  Function: M_HideTip
.head 6 -  Description: [PUBLIC]
M_HideTip is used to destroy the instance of the Tool Tip 
dialog.

M_HideTip is invoked when a time (SAM_Timer) indicates
that the cursor is no longer over a pushbutton.
.head 6 -  Returns 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  ! Call SalHideWindow( hWndForm )
.head 7 -  Call SalDestroyWindow(hWndForm)
.head 7 -  Set cv_hWndToolTip  = hWndNULL
.head 4 +  Message Actions 
.head 5 -  ! ---------------------------!
.head 5 +  On WM_NCCREATE
.head 6 -  Call SetWindowLongA ( hWndItem, GWL_STYLE, 
GetWindowLongA (hWndItem, GWL_STYLE) & NO_WS_CAPTION )
.head 5 -  ! ---------------------------!
.head 5 +  On SAM_Create
.head 6 -  Call SalColorSet(hWndItem,COLOR_IndexWindow,
SalColorFromRGB(255,255,90))
.head 6 -  Call SalHideWindow( hWndForm )
.head 3 +  ! Pushbutton Class: PB_CS
.winattr
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? No
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? No
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Standard
.end
.head 4 -  Description: PB_CS base Building Blocks Pushbutton Class. All Pushbuttons
should be derived from the class.
PB_CS derived from Tool Tip class.  Any class derived from or 
object created from this class will have Tool Tip support.
.head 4 +  Derived From 
.head 5 -  ! Class: CWC_CS_ToolTip
.head 4 -  Class Variables 
.head 4 +  Instance Variables 
.head 5 -  String: iv_sStatusText
.head 4 +  Functions 
.head 5 +  Function: GetStatusText
.head 6 -  Description: GetStatusText returns the Text to be displayed in the status bar 
when the mouse move over a Pushbutton of class: PB_CS. 
GetStatusText returns the value set by SetStatusText.

.head 6 +  Returns 
.head 7 -  String: 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Return iv_sStatusText
.head 5 +  Function: SetStatusText
.head 6 -  Description: SetStatusText sets the Text to be displayed in the status bar when the 
mouse moves over  a Pushbutton of class: PB_CS. 
SetStatusText and returns the value set by GetStatusText.

.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sStatusText
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Set iv_sStatusText = sStatusText
.head 7 -  ! Call SetTip( iv_sStatusText )
.head 7 -  Call TTSetStatusText( hWndItem, sStatusText )
.head 7 -  Call TTSetTipText( hWndItem, sStatusText )
.head 4 +  Message Actions 
.head 5 +  ! On WM_MOUSEMOVE
.head 6 -  Call SalSendClassMessage(WM_MOUSEMOVE,wParam,lParam)
.head 6 -  Call SalStatusSetText(hWndForm,GetStatusText())
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  ! Classes in WININFO.APL ---------------------------------------------------------------------------------------------------------
.head 3 -  ! PRIVATE
.head 3 +  Functional Class: cWndInfoStructure
.head 4 -  Description: Definition of a structure for storing information about a MDI window child (form or table window).
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isWindowName
.head 5 -  Number: inChainNumber
.head 5 -  Boolean: ibBaseWindowOfChain
.head 5 -  Window Handle: ihWndWindowHandle
.head 5 -  Number: inWndParmArr[*]
.head 4 -  Functions
.head 3 +  Functional Class: cWndInfoList
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 +  ! List of cWndInfoStructure's
.head 6 -  Each window participating in a chain is listed in this array.
.head 6 -  The variable inWndInfoListUpperBound indicates the number of windows in the list 
(also the next free place in the array)
.head 5 -  FunctionalVar: iWndInfoStructure[*]
.head 6 -  Class: cWndInfoStructure
.head 5 -  Number: inWndInfoListUpperBound
.head 4 +  Functions
.head 5 +  Function: GetUpperBound
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnUpperBound
.head 6 +  Actions
.head 7 -  Call SalArrayGetUpperBound( iWndInfoStructure, 1, lnUpperBound )
.head 7 -  Return lnUpperBound
.head 5 +  Function: GetArrayIndex
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 7 -  Number: lnWndInfoListUpperBound
.head 6 +  Actions
.head 7 -  Set lnTeller = 0
.head 7 -  Set lnWndInfoListUpperBound = GetUpperBound( )
.head 7 +  While lnTeller <= lnWndInfoListUpperBound
.head 8 +  If iWndInfoStructure[lnTeller].isWindowName = psWindowName
.head 9 -  Return lnTeller
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return -1
.head 5 +  Function: WndInfoAddWindow
.head 6 -  Description: Adds a cWndInfoStructure to the list
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Number: pnChainNumber
.head 7 -  Boolean: pbBaseWindowOfChain
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set pWndInfoList.iWndInfoStructure[inWndInfoListUpperBound].isWindowName = psWindowName
.head 7 -  Set pWndInfoList.iWndInfoStructure[inWndInfoListUpperBound].inChainNumber = pnChainNumber
.head 7 -  Set pWndInfoList.iWndInfoStructure[inWndInfoListUpperBound].ibBaseWindowOfChain = pbBaseWindowOfChain
.head 7 -  Set pWndInfoList.inWndInfoListUpperBound = inWndInfoListUpperBound + 1
.head 5 +  Function: GetChainNumber
.head 6 -  Description: Returns, using the window name, the chain number of the window in the receive parameter pnChainNumber. 
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Receive Number: pnChainNumber
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnIndex
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Set pnChainNumber =  pWndInfoList.iWndInfoStructure[lnIndex].inChainNumber
.head 8 -  Return TRUE
.head 5 +  Function: GetWindowHandle
.head 6 -  Description: Lookups the window handle in the Window Info List using the window name.
.head 6 +  Returns
.head 7 -  Window Handle:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnIndex
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return hWndNULL
.head 7 +  Else
.head 8 -  Return pWndInfoList.iWndInfoStructure[lnIndex].ihWndWindowHandle
.head 5 +  Function: GetBaseWindowOfChain
.head 6 -  Description: Lookups the base window of a window chain.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnChainNumber
.head 7 -  Receive String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 7 -  Number: lnWndInfoListUpperBound
.head 6 +  Actions
.head 7 -  Set lnWndInfoListUpperBound  = pWndInfoList.GetUpperBound()
.head 7 +  While lnTeller <= lnWndInfoListUpperBound
.head 8 +  If pWndInfoList.iWndInfoStructure[lnTeller].inChainNumber = pnChainNumber
.head 9 +  If pWndInfoList.iWndInfoStructure[lnTeller].ibBaseWindowOfChain
.head 10 -  Set psWindowName =  pWndInfoList.iWndInfoStructure[lnTeller].isWindowName
.head 10 -  Return TRUE
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return FALSE
.head 5 +  Function: WndInfoSetWindowHandle
.head 6 -  Description: Stores the window handle in the window info list.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Window Handle: phWndWindowHandle
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnIndex
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Set pWndInfoList.iWndInfoStructure[lnIndex].ihWndWindowHandle = phWndWindowHandle
.head 5 +  Function: WndParmArrSetParm
.head 6 -  Description: Stores the window parameters in the window info list.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Number: pnWndParmArr[*]
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnIndex
.head 7 -  Number: lnTellerWndParm
.head 7 -  Number: lnWndParmArrUpperBound
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Call SalArrayGetUpperBound( pnWndParmArr, 1, lnWndParmArrUpperBound )
.head 8 -  Set lnTellerWndParm = 0
.head 8 +  While lnTellerWndParm <= lnWndParmArrUpperBound 
.head 9 -  Set pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr[lnTellerWndParm] = pnWndParmArr[lnTellerWndParm]
.head 9 -  Set lnTellerWndParm = lnTellerWndParm + 1
.head 8 -  Call SalArraySetUpperBound( pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr, 1, lnWndParmArrUpperBound )
.head 8 -  Return TRUE
.head 5 +  Function: WndParmArrGetParm
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Number: psWndParmNr
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnUpperBound
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnIndex
.head 7 -  Number: lnWndParmArrUpperBound
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return NUMBER_Null
.head 7 +  Else
.head 8 -  Call SalArrayGetUpperBound( pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr, 1, lnWndParmArrUpperBound )
.head 8 +  If psWndParmNr > lnWndParmArrUpperBound
.head 9 -  Call SalMessageBox( 'Parameter ' || 
SalNumberToStrX( psWndParmNr, 0 ) || ' cann\'t be used for window ' || psWindowName, 
'Development error', MB_Ok )
.head 9 -  Return NUMBER_Null
.head 8 -  Set lbFound = TRUE
.head 8 -  Return pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr[psWndParmNr]
.head 5 +  Function: WndParmArrGetUpperBound
.head 6 -  Description: Returns upperbound of parameter array
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnIndex
.head 7 -  Number: lnWndParmArrUpperBound
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return NUMBER_Null
.head 7 +  Else
.head 8 -  Call SalArrayGetUpperBound( pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr, 1, lnWndParmArrUpperBound )
.head 8 -  Return lnWndParmArrUpperBound
.head 5 +  Function: WndParmArrClear
.head 6 -  Description: Clears the window parameters in the window info list.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnUpperBound
.head 7 -  Number: lnIndex
.head 7 -  Number: lnWndParmArrUpperBound
.head 6 +  Actions
.head 7 -  Set lnIndex = pWndInfoList.GetArrayIndex(psWindowName)
.head 7 +  If lnIndex < 0
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Call SalArrayGetUpperBound(  pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr, 1, lnWndParmArrUpperBound )
.head 8 -  Call VisArrayFillNumber(  pWndInfoList.iWndInfoStructure[lnIndex].inWndParmArr, NUMBER_Null, lnWndParmArrUpperBound + 1 )
.head 8 -  Return TRUE
.head 3 +  Functional Class: cExistingWndList
.head 4 -  Description: Functional class is a list of window handles of all created form or table windows within a MDI window.
The instance variable inListUpperBound indicates the next free place in the list..
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Window Handle: iExistingWndHandle[*]
.head 5 -  Number: inListUpperBound
.head 4 +  Functions
.head 5 +  Function: AddToList
.head 6 -  Description: This function adds the received window handle at the end of the window list. 
The instance variable inListUpperBound is modified accordingly.
This function may only be called by instances of functional class cExistingWndMasterList.
.head 6 +  Returns
.head 7 -  Boolean: ! TRUE if successfull; otherwise FALSE
.head 6 +  Parameters
.head 7 -  Window Handle: phWndWindowHandle
.head 7 -  String: psWindowName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Add window handle at the end of the list
.head 7 -  Set iExistingWndHandle[ inListUpperBound ] = phWndWindowHandle
.head 7 -  ! Adjust inListUpperBound
.head 7 -  Set inListUpperBound = inListUpperBound + 1
.head 7 -  Return TRUE
.head 5 +  Function: DeleteFromList
.head 6 -  Description: This function finds and deletes the window handle in the list using the window name.
The window handle will be returned in the receive parameter phWndWindowHandle. 
The instance variable inListUpperBound is modified accordingly.
This function may only be called by instances of functional class cExistingWndMasterList.
.head 6 +  Returns
.head 7 -  Boolean: ! TRUE if successfull; otherwise FALSE
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 -  ! Lookup window handle in list
.head 7 -  Set lbFound = FALSE
.head 7 +  While lnTeller < inListUpperBound
.head 8 +  If pWndInfoList.GetWindowHandle(psWindowName, pWndInfoList) = iExistingWndHandle[ lnTeller ]
.head 9 -  Set lbFound = TRUE
.head 8 +  If lbFound
.head 9 -  ! If found, delete window handle by shifting the remaining window handles one position to the left
.head 9 -  Set iExistingWndHandle[ lnTeller ] =  iExistingWndHandle[ lnTeller + 1]
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 +  If lbFound
.head 8 -  Set iExistingWndHandle[ inListUpperBound ] = hWndNULL
.head 8 -  ! Adjust inListUpperBound
.head 8 -  Set inListUpperBound = inListUpperBound - 1
.head 7 -  Return lbFound
.head 5 +  Function: IsInList
.head 6 -  Description: This function finds the window handle in the list using the window name. 
The window handle will be returned in the receive parameter phWndWindowHandle. 
.head 6 +  Returns
.head 7 -  Boolean: ! TRUE if found; otherwise FALSE
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Receive Window Handle: phWndWindowHandle
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 -  Set lbFound = FALSE
.head 7 +  While lnTeller < inListUpperBound And Not lbFound
.head 8 +  If iExistingWndHandle[ lnTeller ] = pWndInfoList.GetWindowHandle(psWindowName, pWndInfoList) 
.head 9 -  Set lbFound = TRUE
.head 8 -  Set phWndWindowHandle =  iExistingWndHandle[ lnTeller ]
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return lbFound
.head 5 +  Function: BringWindowsOfListToTop
.head 6 -  Description: Bring all the windows in the list to top.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < inListUpperBound
.head 8 -  Call ShowWindow( iExistingWndHandle[lnTeller], SW_SHOWNORMAL)
.head 8 -  Call SalBringWindowToTop( iExistingWndHandle[lnTeller] )
.head 8 -  Set lnTeller = lnTeller + 1
.head 5 +  Function: IconizeWindowsOfList
.head 6 -  Description: Iconize all the windows in the list.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < inListUpperBound
.head 8 -  Call ShowWindow(  iExistingWndHandle[lnTeller], SW_SHOWMINIMIZED )
.head 8 -  Set lnTeller = lnTeller + 1
.head 3 +  Functional Class: cExistingWndMasterList
.head 4 -  Description: Functional class defines cWhcMasterList as a list of lists of type cExistingWndList. 
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  FunctionalVar: iExistingWndList[*]
.head 6 -  Class: cExistingWndList
.head 5 -  Number: inMasterListUpperBound
.head 5 -  Number: inNumberOfCreatedWindows
.head 4 +  Functions
.head 5 +  Function: ActivateWindowChain
.head 6 -  Description: This functions brings all the windows of a window chain to top. 
The other windows will be send to background or mimized (parameter gParamWndInfoIconize).
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnMasterListIndex
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < inMasterListUpperBound
.head 8 +  If lnTeller != pnMasterListIndex
.head 9 +  If gParamWndInfoIconize
.head 10 -  Call iExistingWndList[lnTeller].IconizeWindowsOfList()
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Call iExistingWndList[pnMasterListIndex].BringWindowsOfListToTop()
.head 5 +  Function: OpenWindow
.head 6 -  Description: If the window to be created isn't a part of a window chain (this means chain 0), it will be created.
If the window is a part of a window chain, then the window chain will be activated. 
This means that if there are some windows of the chain created, these windows will be brought to 
top; otherwise the base window of the chain will be created. 
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Window Handle: phWndMDI
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 7 -  Number: pnWindowParmArr[*]
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnChainNumber
.head 7 -  String: lsBaseWindowName
.head 7 -  Window Handle: lhWndWindowHandle
.head 6 +  Actions
.head 7 -  Set lbFound = FALSE
.head 7 +  If pWndInfoList.GetChainNumber(psWindowName, lnChainNumber, pWndInfoList)
.head 8 +  If lnChainNumber > 0
.head 9 -  ! Scherm maakt deel uit van een ketting (verschillend van ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].inListUpperBound > 0
.head 10 -  ! Er zijn schermen van de ketting open
.head 10 -  Call ActivateWindowChain( lnChainNumber ) 
.head 10 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 11 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 10 +  Else
.head 11 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 11 -  Set lhWndWindowHandle = SalCreateWindow( psWindowName, phWndMDI )
.head 11 +  If lhWndWindowHandle
.head 12 -  Call pWndInfoList.WndInfoSetWindowHandle(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 12 -  ! NU HIER
.head 9 +  Else
.head 10 -  ! Er zijn geen schermen van de ketting open: create van base window
.head 10 -  Call pWndInfoList.GetBaseWindowOfChain(lnChainNumber, lsBaseWindowName, pWndInfoList)
.head 10 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 10 -  Set lhWndWindowHandle = SalCreateWindow( lsBaseWindowName, phWndMDI )
.head 10 +  If lhWndWindowHandle
.head 11 -  Call pWndInfoList.WndInfoSetWindowHandle(lsBaseWindowName, lhWndWindowHandle, pWndInfoList)
.head 8 +  Else
.head 9 -  ! Scherm maakt geen deel uit van een ketting (dus ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 10 -  Call ShowWindow(lhWndWindowHandle, SW_SHOWNORMAL)
.head 10 -  Call SalBringWindowToTop( lhWndWindowHandle )
.head 9 +  Else
.head 10 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 10 -  Set lhWndWindowHandle = SalCreateWindow( psWindowName, phWndMDI )
.head 10 +  If lhWndWindowHandle
.head 11 -  Call pWndInfoList.WndInfoSetWindowHandle(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 7 +  Else
.head 8 -  Call SalMessageBox( 'Window not specified in MDI function WndInfoInitialise', 'Development Error', MB_Ok )
.head 5 +  Function: OpenWindowLink
.head 6 -  Description: If the window to be created isn't a part of a window chain (this means chain 0), it will be created.
If the window is a part of a window chain, then the window chain will be activated. 
This means that if there are some windows of the chain created, these windows will be brought to 
top; otherwise the base window of the chain will be created. 
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Window Handle: phWndMDI
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 7 -  Number: pnWindowParmArr[*]
.head 7 -  String: psWindowToPen
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnChainNumber
.head 7 -  String: lsBaseWindowName
.head 7 -  Window Handle: lhWndWindowHandle
.head 6 +  Actions
.head 7 -  Set lbFound = FALSE
.head 7 +  If pWndInfoList.GetChainNumber(psWindowName, lnChainNumber, pWndInfoList)
.head 8 +  If lnChainNumber > 0
.head 9 -  ! Scherm maakt deel uit van een ketting (verschillend van ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].inListUpperBound > 0
.head 10 -  ! Er zijn schermen van de ketting open
.head 10 -  Call ActivateWindowChain( lnChainNumber ) 
.head 10 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 11 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 10 +  Else
.head 11 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 11 -  Set lhWndWindowHandle = SalCreateWindow( psWindowToPen, phWndMDI )
.head 11 +  If lhWndWindowHandle
.head 12 -  Call pWndInfoList.WndInfoSetWindowHandle(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 12 -  ! NU HIER
.head 9 +  Else
.head 10 -  ! Er zijn geen schermen van de ketting open: create van base window
.head 10 -  Call pWndInfoList.GetBaseWindowOfChain(lnChainNumber, lsBaseWindowName, pWndInfoList)
.head 10 -  Call pWndInfoList.WndParmArrSetParm(psWindowToPen, pnWindowParmArr, pWndInfoList)
.head 10 -  Set lhWndWindowHandle = SalCreateWindow( psWindowToPen, phWndMDI )
.head 10 +  If lhWndWindowHandle
.head 11 -  Call pWndInfoList.WndInfoSetWindowHandle(lsBaseWindowName, lhWndWindowHandle, pWndInfoList)
.head 8 +  Else
.head 9 -  ! Scherm maakt geen deel uit van een ketting (dus ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 10 -  Call ShowWindow(lhWndWindowHandle, SW_SHOWNORMAL)
.head 10 -  Call SalBringWindowToTop( lhWndWindowHandle )
.head 9 +  Else
.head 10 -  Call pWndInfoList.WndParmArrSetParm(psWindowName, pnWindowParmArr, pWndInfoList)
.head 10 -  Set lhWndWindowHandle = SalCreateWindow( psWindowToPen, phWndMDI )
.head 10 +  If lhWndWindowHandle
.head 11 -  Call pWndInfoList.WndInfoSetWindowHandle(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 7 +  Else
.head 8 -  Call SalMessageBox( 'Window not specified in MDI function WndInfoInitialise', 'Development Error', MB_Ok )
.head 5 +  Function: IsWindowCreated
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbFound
.head 7 -  Number: lnChainNumber
.head 7 -  String: lsBaseWindowName
.head 7 -  Window Handle: lhWndWindowHandle
.head 6 +  Actions
.head 7 -  Set lbFound = FALSE
.head 7 +  If pWndInfoList.GetChainNumber(psWindowName, lnChainNumber, pWndInfoList)
.head 8 +  If lnChainNumber > 0
.head 9 -  ! Scherm maakt deel uit van een ketting (verschillend van ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].inListUpperBound > 0
.head 10 -  ! Er zijn schermen van de ketting open
.head 10 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 11 -  Return TRUE
.head 8 +  Else
.head 9 -  ! Scherm maakt geen deel uit van een ketting (dus ketting 0)
.head 9 +  If iExistingWndList[lnChainNumber].IsInList(psWindowName, lhWndWindowHandle, pWndInfoList)
.head 10 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: IsAnyWindowCreated
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return inNumberOfCreatedWindows > 0
.head 5 +  Function: RegisterWindow
.head 6 -  Description: This function adds a window to the list of created windows. This function has to be called by each 
MDI child window in the SAM_CreateComplete event.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndWindowHandle
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnMasterListIndex
.head 7 -  String: lsWindowName
.head 6 +  Actions
.head 7 -  Call SalGetItemName( phWndWindowHandle, lsWindowName )
.head 7 -  Call pWndInfoList.GetChainNumber(lsWindowName, lnMasterListIndex, pWndInfoList)
.head 7 -  Call iExistingWndList[lnMasterListIndex].AddToList(phWndWindowHandle, lsWindowName)
.head 7 +  If inMasterListUpperBound < lnMasterListIndex + 1
.head 8 -  Set inMasterListUpperBound = lnMasterListIndex + 1
.head 7 -  Set inNumberOfCreatedWindows = inNumberOfCreatedWindows + 1
.head 7 -  Call ActivateWindowChain(lnMasterListIndex)
.head 5 +  Function: UnRegisterWindow
.head 6 -  Description: This function deletes a window to the list of created windows. 
This function has to be called by each top level window in the SAM_Close event.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndWindowHandle
.head 7 -  FunctionalVar: pWndInfoList
.head 8 -  Class: cWndInfoList
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsWindowName
.head 7 -  Number: lnMasterListIndex
.head 6 +  Actions
.head 7 -  Call SalGetItemName( phWndWindowHandle, lsWindowName )
.head 7 -  Call pWndInfoList.GetChainNumber(lsWindowName, lnMasterListIndex, pWndInfoList)
.head 7 -  Call iExistingWndList[lnMasterListIndex].DeleteFromList(lsWindowName, pWndInfoList)
.head 7 -  Set inNumberOfCreatedWindows = inNumberOfCreatedWindows - 1
.head 3 +  General Window Class: cgenWndInfo
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isWindowName
.head 5 -  Number: inWindowChain
.head 5 -  Window Handle: ihWndMDI
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalGetItemName( hWndForm, isWindowName )
.head 6 -  Set ihWndMDI = SalParentWindow( hWndForm )
.head 6 -  Call SalSendMsg( ihWndMDI, PAM_WndInfo, 1, SalWindowHandleToNumber( hWndForm ) )
.head 5 +  On SAM_Close
.head 6 -  Call SalGetItemName( hWndForm, isWindowName )
.head 6 -  Set ihWndMDI = SalParentWindow( hWndForm )
.head 6 -  Call SalSendMsg( ihWndMDI, PAM_WndInfo, 0, SalWindowHandleToNumber( hWndForm ) )
.head 6 -  Return 1
.head 5 +  On WM_SIZE
.head 6 -  Call SalMDIArrangeIcons( hWndMDI )
.head 3 -  ! PUBLIC
.head 3 +  MDI Window Class: cmdiWndInfoMDI
.head 4 -  Title:
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Yes
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Yes
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  FunctionalVar: iExistingWndMasterList
.head 6 -  Class: cExistingWndMasterList
.head 5 -  FunctionalVar: iWndInfoListOfMdi
.head 6 -  Class: cWndInfoList
.head 4 +  Functions
.head 5 +  Function: WndInfoInitialise
.head 6 -  Description: Late Bound Function: must be overwritten by a function in the instance
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsMdiWindowName
.head 6 +  Actions
.head 7 -  Call SalGetItemName( hWndMDI, lsMdiWindowName )
.head 7 -  Call SalMessageBox(  'Window Info List is not initialised for the mdi window ' || lsMdiWindowName ||
'
Redefine late bound function in cmdiWndInfoMDI instance', 
'Development Error', MB_Ok | MB_IconStop )
.head 5 +  Function: PalCreateWindow
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Window Handle: phWndMDI
.head 7 -  Number: pnWndParmArr[*]
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Call LockWindowUpdate( hWndMDI)
.head 7 -  Call iExistingWndMasterList.OpenWindow(psWindowName, phWndMDI, iWndInfoListOfMdi, pnWndParmArr)
.head 7 -  Call LockWindowUpdate( hWndNULL)
.head 7 -  Call VisWaitCursor( FALSE )
.head 5 +  Function: PalCreateWindowLink
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 7 -  Window Handle: phWndMDI
.head 7 -  Number: pnWndParmArr[*]
.head 7 -  String: psWindowToOpen
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Call LockWindowUpdate( hWndMDI)
.head 7 -  Call iExistingWndMasterList.OpenWindowLink(psWindowName, phWndMDI, iWndInfoListOfMdi, pnWndParmArr, psWindowToOpen)
.head 7 -  Call LockWindowUpdate( hWndNULL)
.head 7 -  Call VisWaitCursor( FALSE )
.head 5 +  Function: PalIsWindowCreated
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psWindowName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return iExistingWndMasterList.IsWindowCreated(psWindowName, iWndInfoListOfMdi)
.head 5 +  Function: PalIsAnyWindowCreated
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return iExistingWndMasterList.IsAnyWindowCreated()
.head 5 +  Function: PalGetWndParm
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  String: psWndName
.head 7 -  Number: psWndParmNr
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return iWndInfoListOfMdi.WndParmArrGetParm( psWndName, psWndParmNr, iWndInfoListOfMdi )
.head 5 +  Function: PalGetUpperBoundWndParm
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  String: psWndName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return iWndInfoListOfMdi.WndParmArrGetUpperBound( psWndName, iWndInfoListOfMdi )
.head 5 +  Function: PalSetNoWndParm
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWndName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call iWndInfoListOfMdi.WndParmArrClear( psWndName, iWndInfoListOfMdi )
.head 5 +  Function: PalSetWndParm
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psWndName
.head 7 -  Number: pnWndParmArr[*]
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call iWndInfoListOfMdi.WndParmArrSetParm( psWndName, pnWndParmArr , iWndInfoListOfMdi)
.head 4 +  Message Actions
.head 5 +  On WM_SIZE
.head 6 -  Call SalMDIArrangeIcons( hWndMDI )
.head 5 +  On SAM_CreateComplete
.head 6 -  Call ..WndInfoInitialise()
.head 5 +  On PAM_WndInfo
.head 6 +  If wParam = 1
.head 7 -  Call iExistingWndMasterList.RegisterWindow(SalNumberToWindowHandle( lParam ), iWndInfoListOfMdi )
.head 6 +  Else
.head 7 -  Call iExistingWndMasterList.UnRegisterWindow(SalNumberToWindowHandle( lParam ), iWndInfoListOfMdi )
.head 3 +  Form Window Class: cfrmWndInfoForm
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description: Form will be registered in the Window Handle List
.head 4 +  Derived From
.head 5 -  Class: cgenWndInfo
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Dialog Box Class: clsDlgWndInfoForm
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modal
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Derived From
.head 5 -  Class: cgenWndInfo
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Table Window Class: ctblWndInfoTable
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cgenWndInfo
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  ! Classes in DYNSQL.APL ---------------------------------------------------------------------------------------------------------
.head 3 -  ! PRIVATE
.head 3 +  Functional Class: cDynamicSQL
.head 4 -  Description: Deze class bevat alle informatie ivm met de sql-statements voor een form window, 
child table window of table window.
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! Sql Handles
.head 5 -  Sql Handle: ihSqlSelect
.head 5 -  Sql Handle: ihSqlModify
.head 5 -  !
.head 5 -  ! Onderdelen van sql statements
.head 5 -  ! Delen van select statements
.head 5 -  Long String: isSqlSelectColumns
.head 5 -  Long String: isSqlSelectTables
.head 5 -  Long String: isSqlSelectWhere
.head 5 -  Long String: isSqlSelectOrderBy
.head 5 -  Long String: isSqlSelectInto
.head 5 -  Long String: isSqlSelectWhereEqual
.head 5 -  ! Delen van update statement
.head 5 -  Long String: isSqlUpdateTable
.head 5 -  Long String: isSqlUpdateSet
.head 5 -  Long String: isSqlUpdateWhereEqual
.head 5 -  ! Delen van insert statement
.head 5 -  Long String: isSqlInsertTable
.head 5 -  Long String: isSqlInsertColumns
.head 5 -  Long String: isSqlInsertValues
.head 5 -  ! Delen van delete statement
.head 5 -  Long String: isSqlDeleteTable
.head 5 -  Long String: isSqlDeleteWhereEqual
.head 5 -  !
.head 5 -  ! Volledige sql statements
.head 5 -  Long String: isSelectStmt
.head 5 -  Long String: isSelectEqualStmt
.head 5 -  Long String: isUpdateStmt
.head 5 -  Long String: isInsertStmt
.head 5 -  Long String: isDeleteStmt
.head 5 -  !
.head 5 -  ! Aantal records in result set (wordt pas ingevuld na fetch van laatste record )
.head 5 -  Number: inResultSetCount
.head 5 -  !
.head 5 -  ! Named transaction
.head 5 -  String: isNamedTransaction
.head 5 -  !
.head 5 -  !
.head 4 +  Functions
.head 5 -  !
.head 5 -  ! PUBLIC
.head 5 -  !
.head 5 +  Function: AutoAttach
.head 6 -  Description: Lier un object (data field, combo box, column, ...) à une colonne dans la base de données. 
Ajouter cet objet et la colonne dans les sql-statements correspondants.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psControlName
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 7 -  Number: pnFlags
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If pnFlags & DS_Select
.head 8 +  If Not AddColumnToSqlSelectColumns(psTableName, psColumnName)
.head 9 -  Return FALSE
.head 8 +  If Not AddColumnToSqlSelectInto(psControlName)
.head 9 -  Return FALSE
.head 7 +  If pnFlags & DS_Update
.head 8 +  If Not AddColumnToSqlUpdateSet( psTableName, psColumnName, psControlName)
.head 9 -  Return FALSE
.head 7 +  If pnFlags & DS_Insert
.head 8 +  If Not AddColumnToSqlInsertColumns( psColumnName)
.head 9 -  Return FALSE
.head 8 +  If Not AddColumnToSqlInsertValues( psControlName)
.head 9 -  Return FALSE
.head 7 +  If pnFlags & DS_SelectWhereEqual
.head 8 +  If Not AddColumnToSqlSelectWhereEqual(psTableName, psColumnName, psControlName)
.head 9 -  Return FALSE
.head 7 +  If pnFlags & DS_UpdateWhereEqual
.head 8 +  If Not AddColumnToSqlUpdateWhereEqual(psTableName, psColumnName, psControlName)
.head 9 -  Return FALSE
.head 7 +  If pnFlags & DS_DeleteWhereEqual
.head 8 +  If Not AddColumnToSqlDeleteWhereEqual(psTableName, psColumnName, psControlName)
.head 9 -  Return FALSE
.head 7 -  Return TRUE
.head 5 -  !
.head 5 +  Function: SetSqlSelUpdInsDelTable
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelUpdInsDelTables
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SetSqlSelectTables( psSqlSelUpdInsDelTables )
.head 7 -  Call SetSqlInsertTable( psSqlSelUpdInsDelTables )
.head 7 -  Call SetSqlUpdateTable( psSqlSelUpdInsDelTables )
.head 7 -  Call SetSqlDeleteTable( psSqlSelUpdInsDelTables )
.head 5 -  !
.head 5 +  Function: SetSqlSelectColumns
.head 6 -  Description: Attribution dune valeur: isSqlSelectColumns
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectColumns
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectColumns = psSqlSelectColumns
.head 5 +  Function: SetSqlSelectWhere
.head 6 -  Description: Attribution dune valeur: isSqlSelectWhere
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectWhere
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectWhere = psSqlSelectWhere
.head 5 +  Function: SetSqlSelectTables
.head 6 -  Description: Attribution dune valeur: isSqlSelectTables
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectTables
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectTables = psSqlSelectTables
.head 5 +  Function: SetSqlSelectOrderBy
.head 6 -  Description: Attribution dune valeur: isSqlSelectOrderBy
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectOrderBy
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectOrderBy = psSqlSelectOrderBy
.head 5 +  Function: SetSqlSelectInto
.head 6 -  Description: Attribution dune valeur: isSqlSelectInto
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectInto
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectInto = psSqlSelectInto
.head 5 +  Function: SetSqlSelectWhereEqual
.head 6 -  Description: Attribution dune valeur: isSqlSelectWhereEqual
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlSelectWhereEqual
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlSelectWhereEqual = psSqlSelectWhereEqual
.head 5 -  !
.head 5 +  Function: SetSqlUpdateTable
.head 6 -  Description: Attribution dune valeur: isSqlUpdateTable
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlUpdateTable
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlUpdateTable = psSqlUpdateTable
.head 5 +  Function: SetSqlUpdateSet
.head 6 -  Description: Attribution dune valeur: isSqlUpdateSet
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlUpdateSet
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlUpdateSet = psSqlUpdateSet
.head 5 +  Function: SetSqlUpdateWhereEqual
.head 6 -  Description: Attribution dune valeur: isSqlUpdateWhereEqual
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlUpdateWhereEqual
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlUpdateWhereEqual = psSqlUpdateWhereEqual
.head 5 -  !
.head 5 +  Function: SetSqlInsertTable
.head 6 -  Description: Attribution dune valeur: isSqlInsertTable
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlInsertTable
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlInsertTable = psSqlInsertTable
.head 5 +  Function: SetSqlInsertColumns
.head 6 -  Description: Attribution dune valeur: isSqlInsertColumns
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlInsertColumns
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlInsertColumns = psSqlInsertColumns
.head 5 +  Function: SetSqlInsertValues
.head 6 -  Description: Attribution dune valeur: isSqlInsertValues
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlInsertValues
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlInsertValues = psSqlInsertValues
.head 5 -  !
.head 5 +  Function: SetSqlDeleteTable
.head 6 -  Description: Attribution dune valeur: isSqlDeleteTable
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlDeleteTable
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlDeleteTable = psSqlDeleteTable
.head 5 +  Function: SetSqlDeleteWhereEqual
.head 6 -  Description: Attribution dune valeur: isSqlDeleteWhereEqual
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSqlDeleteWhereEqual
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSqlDeleteWhereEqual = psSqlDeleteWhereEqual
.head 5 -  !
.head 5 +  Function: DoInsertStmt ! NOG NIET VOLLEDIG XXX
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lntmp
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildInsertStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isInsertStmt , lbSuccess)
.head 7 +  If lbSuccess
.head 8 +  ! When SqlError
.head 9 -  Set gnError = SqlError( ihSqlModify )
.head 9 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 9 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || isInsertStmt  )
.head 9 -  ! Return TRUE
.head 9 -  Return FALSE
.head 8 -  Set gsErrorSqlStatement = isInsertStmt
.head 8 -  Set lbSuccess = SqlPrepareAndExecute( ihSqlModify, isInsertStmt )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoDeleteStmt ! NOG NIET VOLLEDIG XXX
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnRecordNr
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: lntmp
.head 7 -  Boolean: lbSuccess
.head 7 -  Number: lnFetchUpdDel
.head 7 -  Number: lnRecordNr
.head 6 +  Actions
.head 7 +  When SqlError
.head 8 +  If SqlError( ihSqlModify ) = ERROR_InvalidRowID
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 9 -  Call SqlFetchRow( ihSqlSelect, pnRecordNr, lnFetchUpdDel )
.head 9 +  If lnFetchUpdDel = FETCH_Update
.head 10 -  Call SalMessageBox( 'Record is updated by another user', 'Warning', MB_Ok )
.head 9 +  Else If lnFetchUpdDel = FETCH_Delete
.head 10 -  Call SalMessageBox( 'Record is deleted by another user', 'Warning', MB_Ok )
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Return FALSE
.head 7 -  Set lnRecordNr = pnRecordNr
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildDeleteStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isDeleteStmt , lbSuccess)
.head 7 +  If lbSuccess
.head 8 +  ! When SqlError
.head 9 -  Set gnError = SqlError( ihSqlModify )
.head 9 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 9 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || isDeleteStmt  )
.head 9 -  ! Return TRUE
.head 9 -  Return FALSE
.head 8 -  Set gsErrorSqlStatement = isDeleteStmt
.head 8 -  Set lbSuccess = SqlPrepareAndExecute( ihSqlModify, isDeleteStmt )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 -  !
.head 5 -  !
.head 5 +  Function: DoRefreshRows
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Sql Handle: phSql
.head 7 -  Long String: psWhere
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Long String: lsReq
.head 7 -  Number: lnReturn
.head 7 -  String: lsTest
.head 6 +  Actions
.head 7 -  Set lnReturn = -1
.head 7 +  If ( psWhere = '' ) or ( psWhere = STRING_Null )
.head 8 -  Call ..DoRefresh( )
.head 8 -  Set lnReturn = 0
.head 7 +  Else
.head 8 -  Set lsReq =	SELECT	|| isSqlSelectColumns ||
			FROM	|| isSqlSelectTables
.head 8 -  Set lsReq = lsReq	||
			WHERE	|| psWhere
.head 8 -  Set lsReq = lsReq	||
			INTO	|| isSqlSelectInto
.head 8 +  If PalSqlTrans ( phSql, lsReq ) = TRANS_Ok
.head 9 -  Call SqlFetchNext ( phSql, lnReturn )
.head 9 -  !
.head 9 -  ! Je vais envoyer un message SAM_Click au tableau plutôt que l'appel à la fonction LBFOnRowGetFocus
.head 9 -  ! Call ..LBFOnRowGetFocus( )
.head 9 -  Call SalPostMsg( hWndItem, SAM_Click, 0, SalTblQueryContext( hWndItem ) )
.head 9 -  ! Call SalGetItemName( hWndItem, lsTest )
.head 9 -  ! Call SalMessageBox( lsTest, '', MB_Ok )
.head 7 -  Return lnReturn
.head 5 -  !
.head 5 -  ! PRIVATE
.head 5 -  !
.head 5 +  Function: DoRefresh
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalMessageBox( "La fonction DoRefresh doit être redéfinie dans les tables dérivées", 'Erreur', MB_Ok )
.head 5 +  ! Function: LBFOnRowGetFocus
.head 6 -  Description: LBF
.head 6 -  Returns 
.head 6 -  Parameters 
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Call SalMessageBox( "La fonction LBFOnRowGetFocus doit être redéfinie dans les tables dérivées", 'Erreur', MB_Ok )
.head 5 +  Function: ConnectSqlHandles
.head 6 -  Description: Connecter ihSqlSelect et ihSqlModify avec named transaction isNamedTransaction. 
Isolation level: RL
DBP_Preserve=TRUE: cursor-context preservation
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If isNamedTransaction = ''
.head 8 -  Call SqlConnect( ihSqlSelect )
.head 8 -  Call SqlConnect( ihSqlModify )
.head 7 +  Else
.head 8 -  Call SqlConnect( ihSqlSelect )
.head 8 -  Call SqlConnect( ihSqlModify )
.head 8 -  ! HIER NORMAAL VOLGENDE REGEL VERWIJDEREN !!!
.head 7 -  Call SqlSetIsolationLevel( ihSqlSelect, 'RL' )
.head 7 +  If SalStrLength( gsIdPrgm ) > 0
.head 8 -  Call SqlSetParameterAll( ihSqlSelect, 3024, 0, gsIdPrgm, FALSE )
.head 7 -  Call SqlSetParameter( ihSqlSelect, DBP_PRESERVE, TRUE, '' )
.head 7 -  Call SqlSetParameter( ihSqlSelect, DBP_AUTOCOMMIT, FALSE, '' )
.head 7 -  Call SqlSetParameter( ihSqlModify, DBP_PRESERVE, TRUE, '' )
.head 7 -  Call SqlSetParameter( ihSqlModify, DBP_AUTOCOMMIT, FALSE, '' )
.head 5 +  Function: DisconnectSqlHandles
.head 6 -  Description: Terminer la connection de ihSqlSelect et ihSqlModify
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! /##### LS : 28/01/2004
.head 7 +  If ihSqlSelect != hWndNULL
.head 8 -  Call SqlDisconnect( ihSqlSelect )
.head 7 +  If ihSqlModify != hWndNULL
.head 8 -  Call SqlDisconnect( ihSqlModify )
.head 7 -  ! \##### LS : 28/01/2004
.head 5 -  !
.head 5 +  Function: AddColumnToSqlSelectColumns
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 +  If SalStrLength( psTableName ) 
.head 8 -  Set lsSel = psTableName || DOT || psColumnName
.head 7 +  Else
.head 8 -  Set lsSel = psColumnName
.head 7 +  If SalStrLength( isSqlSelectColumns )  
.head 8 -  Set lsSel = COMMA || lsSel
.head 7 -  Set isSqlSelectColumns = isSqlSelectColumns || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlSelectInto
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 -  Set lsSel = COLON || psControlName
.head 7 +  If SalStrLength( isSqlSelectInto )  
.head 8 -  Set lsSel = COMMA || lsSel
.head 7 -  Set isSqlSelectInto = isSqlSelectInto || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlSelectWhereEqual
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 +  If SalStrLength( psTableName ) 
.head 8 -  Set lsSel = psTableName || DOT || psColumnName
.head 7 +  Else
.head 8 -  Set lsSel = psColumnName
.head 7 -  Set lsSel = lsSel || EQUAL || COLON || psControlName
.head 7 +  If SalStrLength( isSqlSelectWhereEqual )  
.head 8 -  Set lsSel = S_AND || lsSel
.head 7 -  Set isSqlSelectWhereEqual = isSqlSelectWhereEqual || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlUpdateSet
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 +  If SalStrLength( psTableName ) 
.head 8 -  Set lsSel = psTableName || DOT || psColumnName
.head 7 +  Else
.head 8 -  Set lsSel = psColumnName
.head 7 -  Set lsSel = lsSel || EQUAL || COLON || psControlName
.head 7 +  If SalStrLength( isSqlUpdateSet )  
.head 8 -  Set lsSel = COMMA || lsSel
.head 7 -  Set isSqlUpdateSet = isSqlUpdateSet || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlUpdateWhereEqual
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 +  If SalStrLength( psTableName ) 
.head 8 -  Set lsSel = psTableName || DOT || psColumnName
.head 7 +  Else
.head 8 -  Set lsSel = psColumnName
.head 7 -  Set lsSel = lsSel || EQUAL || COLON || psControlName
.head 7 +  If SalStrLength( isSqlUpdateWhereEqual )  
.head 8 -  Set lsSel = S_AND || lsSel
.head 7 -  Set isSqlUpdateWhereEqual = isSqlUpdateWhereEqual || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlInsertColumns
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psColumnName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 -  Set lsSel = psColumnName
.head 7 +  If SalStrLength( isSqlInsertColumns)  
.head 8 -  Set lsSel = COMMA || lsSel
.head 7 -  Set isSqlInsertColumns = isSqlInsertColumns || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlInsertValues
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 -  Set lsSel = COLON || psControlName
.head 7 +  If SalStrLength( isSqlInsertValues)  
.head 8 -  Set lsSel = COMMA || lsSel
.head 7 -  Set isSqlInsertValues = isSqlInsertValues || lsSel
.head 7 -  Return TRUE
.head 5 +  Function: AddColumnToSqlDeleteWhereEqual
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psColumnName
.head 7 -  String: psControlName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSel
.head 6 +  Actions
.head 7 +  If Not SalStrLength( psColumnName ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength( psControlName ) 
.head 8 -  Return FALSE
.head 7 +  If SalStrLength( psTableName ) 
.head 8 -  Set lsSel = psTableName || DOT || psColumnName
.head 7 +  Else
.head 8 -  Set lsSel = psColumnName
.head 7 -  Set lsSel = lsSel || EQUAL || COLON || psControlName
.head 7 +  If SalStrLength( isSqlDeleteWhereEqual )  
.head 8 -  Set lsSel = S_AND || lsSel
.head 7 -  Set isSqlDeleteWhereEqual = isSqlDeleteWhereEqual || lsSel
.head 7 -  Return TRUE
.head 5 -  !
.head 5 +  Function: BuildSelectStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call ..SetSqlSelectColumns(isSqlSelectColumns)
.head 7 -  Call ..SetSqlSelectWhere(isSqlSelectWhere)
.head 7 -  Call ..SetSqlSelectTables(isSqlSelectTables)
.head 7 -  Call ..SetSqlSelectOrderBy(isSqlSelectOrderBy)
.head 7 -  Call ..SetSqlSelectInto(isSqlSelectInto)
.head 7 -  ! SELECT statement
.head 7 +  If Not SalStrLength( isSqlSelectColumns ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlSelectTables)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlSelectInto)
.head 8 -  Return FALSE
.head 7 -  Set isSelectStmt = SELECT || isSqlSelectColumns || FROM || isSqlSelectTables
.head 7 +  If SalStrLength( isSqlSelectWhere )
.head 8 -  Set isSelectStmt = isSelectStmt || WHERE || isSqlSelectWhere
.head 7 +  If SalStrLength( isSqlSelectOrderBy )
.head 8 -  Set isSelectStmt = isSelectStmt || ORDER_BY || isSqlSelectOrderBy
.head 7 +  If SalStrLength( isSqlSelectInto )
.head 8 -  Set isSelectStmt = isSelectStmt || INTO || isSqlSelectInto
.head 7 -  Return TRUE
.head 5 +  Function: BuildSelectEqualStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call ..SetSqlSelectColumns(isSqlSelectColumns)
.head 7 -  Call ..SetSqlSelectWhereEqual(isSqlSelectWhereEqual)
.head 7 -  Call ..SetSqlSelectTables(isSqlSelectTables)
.head 7 -  Call ..SetSqlSelectOrderBy(isSqlSelectOrderBy)
.head 7 -  Call ..SetSqlSelectInto(isSqlSelectInto)
.head 7 -  ! SELECT statement
.head 7 +  If Not SalStrLength( isSqlSelectColumns ) 
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlSelectTables)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlSelectInto)
.head 8 -  Return FALSE
.head 7 -  Set isSelectEqualStmt = SELECT || isSqlSelectColumns || FROM || isSqlSelectTables
.head 7 +  If SalStrLength( isSqlSelectWhereEqual )
.head 8 -  Set isSelectEqualStmt = isSelectEqualStmt || WHERE || isSqlSelectWhereEqual
.head 7 +  If SalStrLength( isSqlSelectOrderBy )
.head 8 -  Set isSelectEqualStmt = isSelectEqualStmt || ORDER_BY || isSqlSelectOrderBy
.head 7 +  If SalStrLength( isSqlSelectInto )
.head 8 -  Set isSelectEqualStmt = isSelectEqualStmt || INTO || isSqlSelectInto
.head 7 -  Return TRUE
.head 5 +  Function: BuildUpdateStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! UPDATE statement
.head 7 -  Call ..SetSqlUpdateSet( isSqlUpdateSet )
.head 7 -  Call ..SetSqlUpdateTable( isSqlUpdateTable )
.head 7 -  Call ..SetSqlUpdateWhereEqual( isSqlUpdateWhereEqual )
.head 7 +  If Not SalStrLength(isSqlUpdateSet)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlSelectTables)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlUpdateWhereEqual)
.head 8 -  Return FALSE
.head 7 -  Set isUpdateStmt = UPDATE || isSqlUpdateTable || S_SET || isSqlUpdateSet
.head 7 -  Set isUpdateStmt = isUpdateStmt || WHERE || isSqlUpdateWhereEqual
.head 7 -  Return TRUE
.head 5 +  Function: BuildInsertStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call ..SetSqlInsertColumns( isSqlInsertColumns )
.head 7 -  Call ..SetSqlInsertTable( isSqlInsertTable )
.head 7 -  Call ..SetSqlInsertValues( isSqlInsertValues )
.head 7 -  ! INSERT statement
.head 7 +  If Not SalStrLength(isSqlInsertColumns)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlInsertTable)
.head 8 -  Return FALSE
.head 7 +  If Not SalStrLength(isSqlInsertValues)
.head 8 -  Return FALSE
.head 7 -  Set isInsertStmt = INSERT_INTO || isSqlInsertTable || OPEN_PAR || isSqlInsertColumns || CLOSE_PAR
.head 7 -  Set isInsertStmt = isInsertStmt || VALUES || OPEN_PAR || isSqlInsertValues || CLOSE_PAR
.head 7 -  Return TRUE
.head 5 +  Function: BuildDeleteStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call ..SetSqlDeleteTable( isSqlDeleteTable )
.head 7 -  Call ..SetSqlDeleteWhereEqual( isSqlDeleteWhereEqual )
.head 7 -  ! DELETE statement
.head 7 +  If Not SalStrLength(isSqlDeleteTable)
.head 8 -  Return FALSE
.head 7 -  Set isDeleteStmt = DELETE_FROM || isSqlDeleteTable || WHERE || isSqlDeleteWhereEqual
.head 7 -  Return TRUE
.head 5 -  !
.head 5 -  !
.head 3 -  ! PUBLIC
.head 3 +  General Window Class: clsGenDynSql
.head 4 -  Description: Parent voor clsFrmDynSql en clsDlgDynSql
.head 4 +  Derived From
.head 5 -  Class: cDynamicSQL
.head 5 -  ! Class: clsAskToLoseChanges
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: inRecordNr
.head 5 -  Boolean: ibSuccess
.head 5 -  Number: inReturn
.head 5 -  ! SQLMode
.head 5 -  Number: inSqlMode
.head 4 +  Functions
.head 5 +  Function: OkToLoseChangesIfAny
.head 6 -  Description: Vraagt de gebruiker of de aangebrachte wijzingen verloren mogen gaan.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return _OkToLoseChangesIfAny( )
.head 5 +  Function: _OkToLoseChangesIfAny
.head 6 -  Description: Vraagt de gebruiker of de aangebrachte wijzingen verloren mogen gaan.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If ( inSqlMode = SQLMODE_NewModified Or inSqlMode = SQLMODE_Modified Or inSqlMode = SQLMODE_EmptyModified  ) 
And
PalMessageBox( 'De gegevens zijn gewijzigd.
De wijzigingen negeren ?', 'Les données sont modifiées.
Annulation des modifications ?', 
 'Vraag', 'Question', MB_YesNo | MB_IconQuestion | MB_DefButton2  ) = IDNO
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Set inSqlMode = SQLMODE_NotModified
.head 8 -  Return TRUE
.head 5 +  Function: SetSqlModeModified
.head 6 -  Description: Bij het wijzigen van gegevens op het scherm wordt SQL_Mode aangepast.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  Select Case inSqlMode
.head 8 +  Case SQLMODE_Empty
.head 9 -  Set inSqlMode = SQLMODE_EmptyModified
.head 9 -  Break
.head 8 +  Case SQLMODE_EmptyModified
.head 9 -  Break
.head 8 +  Case SQLMODE_Modified
.head 9 -  Break
.head 8 +  Case SQLMODE_New
.head 9 -  Set inSqlMode = SQLMODE_NewModified
.head 9 -  Break
.head 8 +  Case SQLMODE_NewModified
.head 9 -  Break
.head 8 +  Case SQLMODE_NotModified
.head 9 -  Set inSqlMode = SQLMODE_Modified
.head 9 -  Break
.head 5 +  Function: ResetSqlModeModified
.head 6 -  Description: Zet de vlag die het wijzigen van gegevens op het scherm bijhoudt terug op ongewijzigd
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  Select Case inSqlMode
.head 8 +  Case SQLMODE_New
.head 9 -  Break
.head 8 +  Case SQLMODE_NewModified
.head 9 -  Set inSqlMode = SQLMODE_New
.head 9 -  Break
.head 8 +  Case SQLMODE_Empty
.head 9 -  Break
.head 8 +  Case SQLMODE_EmptyModified
.head 9 -  Set inSqlMode = SQLMODE_Empty
.head 9 -  Break
.head 8 +  Case SQLMODE_NotModified
.head 9 -  Break
.head 8 +  Case SQLMODE_Modified
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Break
.head 5 +  Function: IsSqlModeSetModified
.head 6 -  Description: Test of de vlag SqlMode gezet werd.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If ( inSqlMode = SQLMODE_NewModified Or inSqlMode = SQLMODE_Modified Or inSqlMode = SQLMODE_EmptyModified  ) 
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 5 +  Function: DoSelectStmt
.head 6 -  Description: Opbouwen en uitvoeren van een SELECT statement.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnReturn
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildSelectStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectStmt, lbSuccess )
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SqlPrepareAndExecute( ihSqlSelect, isSelectStmt )
.head 8 +  If lbSuccess
.head 9 -  Set gbRollback = FALSE
.head 8 -  ! Set ibSuccess = FirstRecord(lnReturn)
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoSelectEqualStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lntmp
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildSelectEqualStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectEqualStmt, lbSuccess )
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SqlPrepareAndExecute( ihSqlSelect, isSelectEqualStmt )
.head 8 +  If lbSuccess
.head 9 -  Call SqlFetchNext( ihSqlSelect, lntmp )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoUpdateStmt
.head 6 -  Description: Opbouwen en uitvoeren van een UPDATE statement.
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Number: pnRecordNr
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchUpdDel
.head 7 -  Number: lnReturn
.head 7 -  Number: lnRecordNr
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 +  ! When SqlError
.head 8 +  If SqlError( ihSqlModify ) = ERROR_InvalidRowID
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 9 -  Call SqlFetchRow( ihSqlSelect, lnRecordNr, lnFetchUpdDel )
.head 9 +  If lnFetchUpdDel = FETCH_Update
.head 10 -  Call SalMessageBox( 'Record is updated by another user', 'Warning', MB_Ok )
.head 9 +  Else If lnFetchUpdDel = FETCH_Delete
.head 10 -  Call SalMessageBox( 'Record is deleted by another user', 'Warning', MB_Ok )
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Return FALSE
.head 7 -  Set lnRecordNr = pnRecordNr
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildUpdateStmt(  )
.head 7 +  If lbSuccess
.head 8 -  Set lnReturn = PalSqlTrans( ihSqlModify, isUpdateStmt )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lnReturn
.head 5 +  Function: DoApplyChanges
.head 6 -  Description: Deze functie voert een update-statement of een insert-statement uit
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  Number: lnReturn
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess =  TRUE
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_ApplyChanges, 0 )
.head 7 -  Call ..LBFInitFieldsBeforeSave()
.head 7 +  Select Case inSqlMode
.head 8 +  Case SQLMODE_Modified
.head 9 -  Set lnReturn =  DoUpdateStmt( inRecordNr  )
.head 9 +  Select Case lnReturn
.head 10 +  Case TRANS_Ok
.head 11 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 11 -  Call SqlFetchRow( ihSqlSelect, inRecordNr, lnFetchUpdDel )
.head 11 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 11 -  Set inSqlMode = SQLMODE_NotModified
.head 11 -  Break
.head 10 +  Case TRANS_Error
.head 11 -  Call VisWaitCursor( FALSE )
.head 11 -  Return FALSE
.head 11 -  Break
.head 10 +  Case TRANS_Retry
.head 11 -  Break
.head 10 +  Case TRANS_Cancel
.head 11 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 11 -  Call SqlFetchRow( ihSqlSelect, inRecordNr, lnFetchUpdDel )
.head 11 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 11 -  Break
.head 9 -  Break
.head 8 +  Case SQLMODE_Empty
.head 9 -  Break
.head 8 +  Case SQLMODE_EmptyModified
.head 9 -  ! Een leeg scherm waarin de gebruikers gegevens inbrengt, 
aanvaarden we niet als nieuwe gegevens !
.head 9 -  Break
.head 8 +  Case SQLMODE_New
.head 9 -  Set lbSuccess =  DoInsertStmt(  )
.head 9 +  If lbSuccess
.head 10 +  If Not gbRollback
.head 11 -  ! Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 11 -  ! Call SqlFetchNext( ihSqlSelect,  lnFetchUpdDel )
.head 11 -  ! Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 11 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Break
.head 8 +  Case SQLMODE_NewModified
.head 9 -  Set lbSuccess =  DoInsertStmt(  )
.head 9 +  If lbSuccess
.head 10 +  If Not gbRollback
.head 11 -  ! Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 11 -  ! Call SqlFetchNext( ihSqlSelect,  lnFetchUpdDel )
.head 11 -  ! Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 11 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Break
.head 8 +  Case SQLMODE_NotModified
.head 9 -  Break
.head 7 -  Call ..LBFAfterDoApplyChanges()
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoCommitChanges
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, 'COMMIT', TRUE )
.head 7 -  Return SqlCommit( ihSqlModify )
.head 5 +  Function: DoRollbackChanges
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, 'ROLLBACK', TRUE )
.head 7 -  Return SqlPrepareAndExecute( ihSqlModify,  'ROLLBACK' )
.head 5 +  Function: UndoChanges
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchUpdDel
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 +  If inSqlMode = SQLMODE_Modified
.head 8 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 8 -  Call SqlFetchRow( ihSqlSelect, inRecordNr, lnFetchUpdDel )
.head 8 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Set inSqlMode = SQLMODE_NotModified
.head 7 +  Else If inSqlMode = SQLMODE_EmptyModified
.head 8 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_Clear, 0 )
.head 8 -  Set inSqlMode = SQLMODE_Empty
.head 7 +  Else If inSqlMode = SQLMODE_NewModified
.head 8 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_Clear, 0 )
.head 8 -  Set inSqlMode = SQLMODE_Empty
.head 7 +  Else If inSqlMode = SQLMODE_New
.head 8 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_Clear, 0 )
.head 8 -  Set inSqlMode = SQLMODE_Empty
.head 7 -  Call VisWaitCursor( FALSE )
.head 5 -  ! Navigating in result set
.head 5 +  Function: FirstRecord
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnReturn
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = FALSE
.head 7 +  If ..OkToLoseChangesIfAny()
.head 8 -  Set lbSuccess =  SqlFetchRow( ihSqlSelect, 0, pnReturn )
.head 8 +  If Not lbSuccess
.head 9 -  Call SalMessageBeep( 0 )
.head 8 +  Else
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Set inRecordNr = 0
.head 8 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: PreviousRecord
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnReturn
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = FALSE
.head 7 +  If ..OkToLoseChangesIfAny()
.head 8 -  Set lbSuccess =  SqlFetchPrevious( ihSqlSelect, pnReturn )
.head 8 +  If Not lbSuccess
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 8 +  Else
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Set inRecordNr = inRecordNr - 1
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_PreviousRecord, 0 )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: NextRecord
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnReturn
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = FALSE
.head 7 +  If ..OkToLoseChangesIfAny()
.head 8 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 8 -  Set lbSuccess =  SqlFetchNext( ihSqlSelect, pnReturn )
.head 8 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 +  If Not lbSuccess
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_LastRecord, 0 )
.head 8 +  Else
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Set inRecordNr = inRecordNr + 1
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_NextRecord, 0 )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: LastRecord
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnReturn
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = FALSE
.head 7 +  If ..OkToLoseChangesIfAny()
.head 8 -  Call SqlGetResultSetCount( ihSqlSelect, inResultSetCount )
.head 8 -  Set lbSuccess =  SqlFetchRow( ihSqlSelect, inResultSetCount - 1, pnReturn )
.head 8 +  If Not lbSuccess
.head 9 -  Call SalMessageBeep( 0 )
.head 8 +  Else
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_LastRecord, 0 )
.head 8 -  Set inRecordNr = inResultSetCount
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: GoToRecord
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnRecordNr
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 7 -  Number: lnLoopRecords
.head 7 -  Number: lnReturn
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = FALSE
.head 7 +  If ..OkToLoseChangesIfAny()
.head 8 +  If Not SqlFetchRow( ihSqlSelect, pnRecordNr, lnReturn )
.head 9 -  ! Call SalMessageBeep( 0 )
.head 8 +  Else
.head 9 -  Set inSqlMode = SQLMODE_NotModified
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 -  ! LBF functions
.head 5 +  Function: LBFInitFieldsBeforeSave
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFBeforeRetrieve
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterRetrieve
.head 6 -  Description: Late Bound Function wordt opgeroepen na het uitvoeren van een retrieve.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFAfterNewRecord
.head 6 -  Description: Late Bound Function wordt opgeroepen na het invoegen van een nieuw record.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFBeforeClear
.head 6 -  Description: Late Bound Function wordt opgeroepen na het wissen van het scherm: Geen clear indien return FALSE
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterClear
.head 6 -  Description: Late Bound Function wordt opgeroepen na het wissen van het scherm
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFAfterDoApplyChanges
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 -  !
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Set inSqlMode = SQLMODE_Empty
.head 6 -  Call ConnectSqlHandles(  )
.head 5 +  On PAM_NavigateRecord
.head 6 +  Select Case wParam
.head 7 +  Case NAV_FirstRecord
.head 8 +  If FirstRecord(inReturn)
.head 9 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 8 -  Break
.head 7 +  Case NAV_PreviousRecord
.head 8 +  If PreviousRecord(inReturn)
.head 9 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 8 -  Break
.head 7 +  Case NAV_NextRecord
.head 8 +  If NextRecord(inReturn)
.head 9 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 8 -  Break
.head 7 +  Case NAV_LastRecord
.head 8 +  If LastRecord(inReturn)
.head 9 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 8 -  Break
.head 5 +  On SAM_Close
.head 6 +  If ..OkToLoseChangesIfAny()
.head 7 -  Return TRUE
.head 6 +  Else
.head 7 -  Return FALSE
.head 5 +  On SAM_Destroy
.head 6 -  Call DisconnectSqlHandles(  )
.head 5 +  On PAM_Dirty
.head 6 -  Call SetSqlModeModified()
.head 3 +  Form Window Class: clsFrmDynSql
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsGenDynSql
.head 5 -  Class: clsClearableFrm
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Actions
.head 6 +  Select Case wParam
.head 7 +  Case ACT_ApplyChanges
.head 8 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_ApplyChanges, 0 )
.head 8 -  Call DoApplyChanges()
.head 8 -  Break
.head 7 +  Case ACT_Commit
.head 8 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Commit, 0 )
.head 8 -  Call DoCommitChanges()
.head 8 -  Break
.head 7 +  Case ACT_Rollback
.head 8 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Rollback, 0 )
.head 8 -  Call DoRollbackChanges()
.head 8 -  Break
.head 7 +  Case ACT_Clear
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 +  If ..LBFBeforeClear()
.head 10 -  Call Clear()
.head 10 -  Set inSqlMode = SQLMODE_Empty
.head 10 -  Call ..LBFAfterClear()
.head 8 -  Break
.head 7 +  Case ACT_DeleteRecord
.head 8 +  Select Case inSqlMode
.head 9 +  Case SQLMODE_Modified
.head 10 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_DeleteAllDetails, 0 )
.head 10 +  If DoDeleteStmt(inRecordNr )
.head 11 +  If inRecordNr > 0
.head 12 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_PreviousRecord, 0 )
.head 11 +  Else
.head 12 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_NextRecord, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_Empty
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_EmptyModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_New
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_NewModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_NotModified
.head 10 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_DeleteAllDetails, 0 )
.head 10 +  If DoDeleteStmt(inRecordNr )
.head 11 -  ! Call SqlCommit( ihSqlModify )
.head 11 -  ! Call DoRefresh( )
.head 11 +  If Not gbRollback
.head 12 +  If inRecordNr > 0
.head 13 -  Call GoToRecord( inRecordNr - 1)
.head 12 +  Else
.head 13 -  Call GoToRecord( inRecordNr + 1)
.head 10 -  Break
.head 8 -  Break
.head 7 +  Case ACT_NewRecord
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 -  Call Clear()
.head 9 -  Set inSqlMode = SQLMODE_New
.head 9 -  Call ..LBFAfterNewRecord()
.head 8 -  Break
.head 7 +  Case ACT_Retrieve
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 -  Call VisWaitCursor( TRUE )
.head 9 +  If Not ..LBFBeforeRetrieve()
.head 10 -  Return FALSE
.head 9 +  If DoSelectStmt()
.head 10 -  Set inSqlMode = SQLMODE_NotModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 10 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Retrieve, 0 )
.head 10 -  Call ..LBFAfterRetrieve()
.head 9 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_UndoChanges
.head 8 -  Call UndoChanges()
.head 8 -  Break
.head 3 +  Dialog Box Class: clsDlgDynSql
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modal
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 3
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Derived From
.head 5 -  Class: clsGenDynSql
.head 5 -  Class: clsClearableDlg
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Actions
.head 6 +  Select Case wParam
.head 7 +  Case ACT_ApplyChanges
.head 8 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_ApplyChanges, 0 )
.head 8 -  Call DoApplyChanges()
.head 8 -  Break
.head 7 +  Case ACT_Commit
.head 8 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Commit, 0 )
.head 8 -  Call DoCommitChanges()
.head 8 -  Break
.head 7 +  Case ACT_Rollback
.head 8 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Rollback, 0 )
.head 8 -  Call DoRollbackChanges()
.head 8 -  Break
.head 7 +  Case ACT_Clear
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 +  If ..LBFBeforeClear()
.head 10 -  Call Clear()
.head 10 -  Set inSqlMode = SQLMODE_Empty
.head 10 -  Call ..LBFAfterClear()
.head 8 -  Break
.head 7 +  Case ACT_DeleteRecord
.head 8 +  Select Case inSqlMode
.head 9 +  Case SQLMODE_Modified
.head 10 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_DeleteAllDetails, 0 )
.head 10 +  If DoDeleteStmt(inRecordNr )
.head 11 +  If inRecordNr > 0
.head 12 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_PreviousRecord, 0 )
.head 11 +  Else
.head 12 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_NextRecord, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_Empty
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_EmptyModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_New
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_NewModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_Actions, ACT_UndoChanges, 0 )
.head 10 -  Break
.head 9 +  Case SQLMODE_NotModified
.head 10 -  Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_DeleteAllDetails, 0 )
.head 10 +  If DoDeleteStmt(inRecordNr )
.head 11 -  ! Call SqlCommit( ihSqlModify )
.head 11 -  ! Call DoRefresh( )
.head 11 +  If Not gbRollback
.head 12 +  If inRecordNr > 0
.head 13 -  Call GoToRecord( inRecordNr - 1)
.head 12 +  Else
.head 13 -  Call GoToRecord( inRecordNr + 1)
.head 10 -  Break
.head 8 -  Break
.head 7 +  Case ACT_NewRecord
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 -  Call Clear()
.head 9 -  Set inSqlMode = SQLMODE_New
.head 9 -  Call ..LBFAfterNewRecord()
.head 8 -  Break
.head 7 +  Case ACT_Retrieve
.head 8 +  If ..OkToLoseChangesIfAny()
.head 9 -  Call VisWaitCursor( TRUE )
.head 9 +  If Not ..LBFBeforeRetrieve()
.head 10 -  Return FALSE
.head 9 +  If DoSelectStmt()
.head 10 -  Set inSqlMode = SQLMODE_NotModified
.head 10 -  Call SalSendMsg( hWndForm, PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 10 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Retrieve, 0 )
.head 10 -  Call ..LBFAfterRetrieve()
.head 9 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_UndoChanges
.head 8 -  Call UndoChanges()
.head 8 -  Break
.head 3 -  !
.head 3 +  Child Table Class: clsCTblDynSql
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cDynamicSQL
.head 5 -  Class: clsClearableCTbl
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: inRecordNr
.head 5 -  Boolean: ibParamSetAutoSelect
.head 5 -  Number: isArrSortColID[*]
.head 5 -  String: isArrSortColTitle[*]
.head 5 -  String: isArrSortColTableAndColumn[*]
.head 5 -  Number: isArrSortColOrderNr[*]
.head 5 -  Number: inTblFillMode
.head 5 -  Number: inInsertMode
.head 5 -  !
.head 5 -  !
.head 5 -  Window Handle: __whWnd
.head 5 -  !
.head 5 -  ! Variable pour la fonction de recherche de chaine de caractères
.head 5 -  Number: __wnRow
.head 4 +  Functions
.head 5 +  Function: OkToLoseChangesIfAny
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return _OkToLoseChangesIfAny( )
.head 5 +  Function: _OkToLoseChangesIfAny
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If SalTblAnyRows( hWndItem, ROW_Edited | ROW_MarkDeleted | ROW_New, 0) 
.head 8 +  If PalMessageBox( 'De gegevens zijn gewijzigd.
De wijzigingen negeren ?', 'Les données sont modifiées.
Annulation des modifications ?', 
 'Vraag', 'Question', MB_YesNo | MB_IconQuestion | MB_DefButton2  ) = IDNO
.head 9 -  Return FALSE
.head 7 -  Return TRUE
.head 5 +  Function: DoSelectStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lntmp
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BuildSelectStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectStmt, lbSuccess )
.head 7 -  Set gsErrorSqlStatement = isSelectStmt
.head 7 -  Set gsErrorSqlStmt = isSelectStmt
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SqlPrepare( ihSqlSelect, isSelectStmt )
.head 8 +  If lbSuccess
.head 9 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', inTblFillMode )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoSelectEqualStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lntmp
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess =  BuildSelectEqualStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectEqualStmt, lbSuccess )
.head 7 -  Set gsErrorSqlStatement = isSelectEqualStmt
.head 7 -  Set gsErrorSqlStmt = isSelectEqualStmt
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SqlPrepare( ihSqlSelect, isSelectEqualStmt )
.head 8 +  If lbSuccess
.head 9 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', inTblFillMode )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoUpdateStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  ! Number: lnRecordNr
.head 6 +  Actions
.head 7 +  ! When SqlError
.head 8 +  If SqlError( ihSqlModify ) = ERROR_InvalidRowID
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 9 -  Call SqlFetchRow( ihSqlSelect, lnRecordNr, lnFetchUpdDel )
.head 9 +  If lnFetchUpdDel = FETCH_Update
.head 10 -  Call SalMessageBox( 'Record is updated by another user', 'Warning', MB_Ok )
.head 9 +  Else If lnFetchUpdDel = FETCH_Delete
.head 10 -  Call SalMessageBox( 'Record is deleted by another user', 'Warning', MB_Ok )
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Return FALSE
.head 7 -  ! Set lnRecordNr = pnRecordNr
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BeforeDoUpdates() 
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = BuildUpdateStmt(  )
.head 8 +  If gbDynSqlDebug
.head 9 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isUpdateStmt , lbSuccess)
.head 7 +  If lbSuccess
.head 8 +  ! When SqlError
.head 9 -  Set gnError = SqlError( ihSqlModify )
.head 9 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 9 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || isUpdateStmt  )
.head 9 -  Return TRUE
.head 8 -  Set lbSuccess = SqlPrepare( ihSqlModify, isUpdateStmt )
.head 8 +  If lbSuccess
.head 9 -  Set lbSuccess = SalTblDoUpdates( hWndItem, ihSqlModify, FALSE )
.head 7 -  Set lbSuccess = AfterDoUpdates() 
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoDeleteStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  Number: lnSqlError
.head 7 -  Number: lnErrorPos
.head 7 -  Number: lnStatusCode
.head 7 -  ! Number: lnRecordNr
.head 6 +  Actions
.head 7 +  ! When SqlError
.head 8 +  If SqlError( ihSqlModify ) = ERROR_InvalidRowID
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 9 -  Call SqlFetchRow( ihSqlSelect, lnRecordNr, lnFetchUpdDel )
.head 9 +  If lnFetchUpdDel = FETCH_Update
.head 10 -  Call SalMessageBox( 'Record is updated by another user', 'Warning', MB_Ok )
.head 9 +  Else If lnFetchUpdDel = FETCH_Delete
.head 10 -  Call SalMessageBox( 'Record is deleted by another user', 'Warning', MB_Ok )
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Return FALSE
.head 7 -  ! Set lnRecordNr = pnRecordNr
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BeforeDoDeletes()
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = BuildDeleteStmt(  )
.head 8 +  If gbDynSqlDebug
.head 9 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isDeleteStmt , lbSuccess)
.head 7 +  If lbSuccess
.head 8 +  ! When SqlError
.head 9 -  Set gnError = SqlError( ihSqlModify )
.head 9 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 9 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || isDeleteStmt  )
.head 9 -  Return TRUE
.head 8 -  Set lbSuccess = SqlPrepare( ihSqlModify, isDeleteStmt )
.head 8 +  If lbSuccess
.head 9 +  When SqlError
.head 10 -  Call SqlExtractArgs( wParam, lParam, ghSqlError, lnSqlError, lnErrorPos )
.head 10 +  Select Case lnSqlError
.head 11 +  Case ERROR_TimeOut
.head 12 +  If Not PalLockTimeOut(isDeleteStmt, ERROR_TimeOut)
.head 13 -  Set lnStatusCode = TRANS_Cancel
.head 12 +  Else
.head 13 -  Set lnStatusCode = TRANS_Retry
.head 12 -  Break
.head 11 +  Case ERROR_DeadLock
.head 12 +  If Not PalLockTimeOut(isDeleteStmt, ERROR_DeadLock)
.head 13 -  Set lnStatusCode = TRANS_Cancel
.head 12 +  Else
.head 13 -  Set lnStatusCode = TRANS_Retry
.head 12 -  Break
.head 11 +  Case ERROR_InvalidRowID
.head 12 -  Call SalMessageBox( 'This data cannot be updated. Another user has updated while you were reviewing it.
Reselect the data to see those changes and make your own.  ', 
'Database Error', MB_Ok | MB_IconHand)
.head 12 -  Set lnStatusCode = TRANS_Error
.head 12 -  Break
.head 11 +  Case ERROR_CannotDelete_DependentRows
.head 12 -  Call PalMessageBox( 
	'Verwijderen van het record is onmogelijk. 
Er zijn referenties naar het betreffende record.', 
	'Suppression impossible. 
Cette valeur est toujours utilisée.', 
'Opgelet', 'Attention', MB_Ok | MB_IconExclamation )
.head 12 -  Break
.head 11 +  Default
.head 12 -  Call HandleSQLError(  )
.head 12 -  Set lnStatusCode = TRANS_Error
.head 12 -  Break
.head 10 -  Call VisWaitCursor( FALSE )
.head 10 -  Return FALSE
.head 9 -  Set lbSuccess = SalTblDoDeletes( hWndItem, ihSqlModify, ROW_MarkDeleted )
.head 7 -  ! ## MARC 21/11/1997>> on ne fait le AfterDoDeletes () que si lbSuccess = TRUE
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = AfterDoDeletes()
.head 7 -  ! ## MARC 21/11/1997<<
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoInsertStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  ! Number: lnRecordNr
.head 6 +  Actions
.head 7 +  ! When SqlError
.head 8 +  If SqlError( ihSqlModify ) = ERROR_InvalidRowID
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, TRUE, '' )
.head 9 -  Call SqlFetchRow( ihSqlSelect, lnRecordNr, lnFetchUpdDel )
.head 9 +  If lnFetchUpdDel = FETCH_Update
.head 10 -  Call SalMessageBox( 'Record is updated by another user', 'Warning', MB_Ok )
.head 9 +  Else If lnFetchUpdDel = FETCH_Delete
.head 10 -  Call SalMessageBox( 'Record is deleted by another user', 'Warning', MB_Ok )
.head 9 -  Call SqlSetParameter( ihSqlSelect, DBP_FETCHTHROUGH, FALSE, '' )
.head 8 -  Return FALSE
.head 7 -  ! Set lnRecordNr = pnRecordNr
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = BeforeDoInserts() 
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess =  BuildInsertStmt(  )
.head 8 +  If gbDynSqlDebug
.head 9 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isInsertStmt , lbSuccess)
.head 7 +  If lbSuccess
.head 8 +  ! When SqlError
.head 9 -  Set gnError = SqlError( ihSqlModify )
.head 9 -  Call SqlGetErrorText( gnError, gsErrorMessage )
.head 9 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || gsErrorMessage || ' 
SQL: ' || isInsertStmt  )
.head 9 -  Return TRUE
.head 8 -  Set lbSuccess = SqlPrepare( ihSqlModify, isInsertStmt )
.head 8 +  If lbSuccess
.head 9 -  ! /##### LS : 11/09/2003
.head 9 -  Set lbSuccess = SalTblDoInserts( hWndItem, ihSqlModify, FALSE )
.head 9 -  ! Set lbSuccess = SalTblDoInserts( hWndForm, ihSqlModify, FALSE )
.head 9 -  ! \##### LS : 11/09/2003
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = AfterDoInserts()
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoRollbackChanges
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, 'ROLLBACK' , TRUE)
.head 7 -  Return SqlPrepareAndExecute( ihSqlModify,  'ROLLBACK' )
.head 5 +  Function: AfterDoInserts
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_New, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess = ..LBFAfterDoInsertRow()
.head 7 -  Return lbSuccess
.head 5 +  Function: AfterDoUpdates
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_Edited, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess = ..LBFAfterDoUpdateRow()
.head 7 -  Return lbSuccess
.head 5 +  Function: AfterDoDeletes
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_MarkDeleted, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess = ..LBFAfterDoDeleteRow()
.head 7 -  Return lbSuccess
.head 5 +  Function: BeforeDoInserts
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_New, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess =  ..LBFBeforeDoInsertRow()
.head 7 -  Return lbSuccess
.head 5 +  Function: BeforeDoUpdates
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_Edited, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess = ..LBFBeforeDoUpdateRow()
.head 7 -  Return lbSuccess
.head 5 +  Function: BeforeDoDeletes
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRowNum
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lnRowNum = TBL_MinRow
.head 7 +  While SalTblFindNextRow( hWndForm, lnRowNum, ROW_MarkDeleted, 0 ) And lbSuccess
.head 8 -  Call SalTblSetContext( hWndForm, lnRowNum )
.head 8 -  Set lbSuccess = ..LBFBeforeDoDeleteRow()
.head 7 -  Return lbSuccess
.head 5 -  ! LBF functions
.head 5 +  Function: LBFInitFieldsBeforeSave
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFAfterDoApplyChanges
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFBeforeDoDeleteRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterDoDeleteRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFBeforeDoUpdateRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterDoUpdateRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFBeforeDoInsertRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterDoInsertRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFOnRowGetFocus
.head 6 -  Description: LBF
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFBeforeRetrieve
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterRetrieve
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFBeforeRefresh
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return TRUE
.head 5 +  Function: LBFAfterRefresh
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFAfterNewRecord
.head 6 -  Description: Late Bound Function wordt opgeroepen na het invoegen van een nieuw record.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: LBFAfterClear
.head 6 -  Description: Late Bound Function wordt opgeroepen na het wissen van het scherm
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 -  ! Sorteren van een table window
.head 5 +  Function: AddColSort
.head 6 -  Description: Toevoegen van een kolom zodat op de kolom gesorteerd kan worden.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnColID
.head 7 -  String: psTableAndColumn
.head 7 -  Number: pnColSortNr
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnUpperBound
.head 6 +  Actions
.head 7 +  If SalArrayIsEmpty( isArrSortColID )
.head 8 -  Set isArrSortColID[ 0  ] = pnColID
.head 8 -  Set isArrSortColTableAndColumn[ 0 ] = psTableAndColumn
.head 8 -  Set isArrSortColOrderNr[ 0 ] = pnColSortNr
.head 7 +  Else
.head 8 -  Call SalArrayGetUpperBound( isArrSortColID, 1, lnUpperBound )
.head 8 -  Set isArrSortColID[ lnUpperBound + 1 ] = pnColID
.head 8 -  Set isArrSortColTableAndColumn[ lnUpperBound + 1 ] = psTableAndColumn
.head 8 -  Set isArrSortColOrderNr[ lnUpperBound + 1 ] = pnColSortNr
.head 5 +  Function: GetSqlSelectOrderBy
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 7 -  Number: lnUpperBound
.head 7 -  String: lsOrderArr[*]
.head 7 -  Number: lnOrderColumnsDepOrderBy[*]
.head 7 -  String: lsOrderBy
.head 7 -  Number: lnColumnOrder
.head 7 -  String: lsTmp
.head 6 +  Actions
.head 7 -  Call SalArrayGetUpperBound( isArrSortColID, 1, lnUpperBound )
.head 7 -  Set lnTeller  = 0
.head 7 +  While lnTeller <= lnUpperBound
.head 8 +  If isArrSortColOrderNr[lnTeller] < 0
.head 9 -  Set lsOrderArr[SalNumberAbs(isArrSortColOrderNr[lnTeller])] = 'D' ||  isArrSortColTableAndColumn[lnTeller]
.head 8 +  Else If isArrSortColOrderNr[lnTeller] > 0
.head 9 -  Set lsOrderArr[SalNumberAbs(isArrSortColOrderNr[lnTeller])] = 'A' ||  isArrSortColTableAndColumn[lnTeller]
.head 8 +  If gbPosColumnsDependingOrderBy 
.head 9 +  If isArrSortColOrderNr[lnTeller] != 0
.head 10 -  ! Call SalMessageBox( SalNumberToStrX( lnOrderColumnsDepOrderBy[SalNumberAbs(isArrSortColOrderNr[lnTeller])]  , 0 ) ||
	'
' ||  isArrSortColTableAndColumn[lnTeller], SalNumberToStrX( SalNumberAbs(isArrSortColOrderNr[lnTeller]),0 ), MB_Ok )
.head 10 -  Set lnOrderColumnsDepOrderBy[SalNumberAbs(isArrSortColOrderNr[lnTeller])]  = isArrSortColID[lnTeller]
.head 9 +  Else
.head 10 -  Set lnOrderColumnsDepOrderBy[SalNumberAbs(isArrSortColOrderNr[lnTeller])]  = 0
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  ! Call SalArrayGetUpperBound( lsOrderArr, 1, lnUpperBound )
.head 7 -  Set lnTeller  = 0
.head 7 +  While lnTeller <= lnUpperBound
.head 8 +  If lsOrderArr[lnTeller+1] != ''
.head 9 +  If lsOrderBy != ''
.head 10 -  Set lsOrderBy = lsOrderBy || COMMA
.head 9 +  If SalStrLeftX(  lsOrderArr[lnTeller+1], 1 ) = 'A'
.head 10 -  Set lsOrderBy = lsOrderBy || SalStrMidX(  lsOrderArr[lnTeller+1], 1, SalStrLength(  lsOrderArr[lnTeller+1] ) - 1 ) || ASC
.head 9 +  Else
.head 10 -  Set lsOrderBy = lsOrderBy || SalStrMidX(  lsOrderArr[lnTeller+1], 1, SalStrLength(  lsOrderArr[lnTeller+1] ) - 1 ) || DESC
.head 9 -  Set lnColumnOrder = lnColumnOrder + 1
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  !
.head 7 +  If gbPosColumnsDependingOrderBy
.head 8 -  Set lnTeller  = 1
.head 8 -  Set lnColumnOrder =1
.head 8 -  Call SalArrayGetUpperBound( lnOrderColumnsDepOrderBy, 1, lnUpperBound )
.head 8 +  While lnTeller <= lnUpperBound
.head 9 +  If lnOrderColumnsDepOrderBy[lnTeller] != 0
.head 10 -  Call SalTblGetColumnTitle( SalTblGetColumnWindow( hWndForm, lnOrderColumnsDepOrderBy[lnTeller], COL_GetID ) , lsTmp, 40 )
.head 10 -  Call SalMessageBox( '
Title: ' || lsTmp || '
 Column ID: ' || SalNumberToStrX( lnOrderColumnsDepOrderBy[lnTeller]  , 0 ) || '
Column old pos: ' ||  SalNumberToStrX( SalTblQueryColumnPos( SalTblGetColumnWindow( hWndForm, lnOrderColumnsDepOrderBy[lnTeller] , COL_GetID ) ),0 ) || '
Column new pos: ' ||  SalNumberToStrX( lnColumnOrder,0 ) 
, 'Debug', MB_Ok )
.head 10 -  ! If SalTblQueryColumnPos( SalTblGetColumnWindow( hWndForm, lnOrderColumnsDepOrderBy[lnTeller] , COL_GetID ) ) != lnColumnOrder
.head 10 +  If Not SalTblSetColumnPos(  SalTblGetColumnWindow( hWndForm, lnOrderColumnsDepOrderBy[lnTeller] , COL_GetID ), lnColumnOrder  )
.head 11 -  Call SalMessageBeep( 0 )
.head 10 -  Set lnColumnOrder = lnColumnOrder + 1
.head 9 -  Set lnTeller = lnTeller + 1
.head 7 -  Return lsOrderBy
.head 5 -  !
.head 5 +  Function: SetTblFillMode
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnTblFillMode
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set inTblFillMode = pnTblFillMode
.head 5 -  !
.head 5 -  !
.head 5 +  Function: SauverTri
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsFrmName
.head 7 -  String: lsTableName
.head 7 -  Number: i
.head 7 -  Number: lnUpperBound
.head 7 -  String: s
.head 7 -  ! cBTRegistry: reg
.winattr class FunctionalVar:
.head 8 -  Class: cBTRegistry
.end
.head 6 +  Actions
.head 7 -  Set i = 0
.head 7 -  Call SalArrayGetUpperBound( isArrSortColID, 1, lnUpperBound )
.head 7 -  Set lsFrmName = SalStrRepeatX( ' ', 254 )
.head 7 -  Set lsTableName = SalStrRepeatX( ' ', 254 )
.head 7 -  ! ! Call SalTblGetColumnTitle( hWndItem, lsColName, 254 )
.head 7 -  Set lsTableName =  PalGetItemName( hWndItem )
.head 7 -  Set lsFrmName =  PalGetItemName( SalParentWindow( hWndItem ) )
.head 7 -  ! Call SalMessageBox( lsTableName, lsFrmName, MB_Ok )
.head 7 -  Set s = 'sort' || cRegBackSlash || lsFrmName || cRegBackSlash || lsTableName
.head 7 -  ! Call reg.SetRootKey( Number )
.head 7 -  Call RegistryDelete( 'NCCpas', s )
.head 7 -  Call RegistryWriteInteger( 'NCCpas', s, lnUpperBound+1 )
.head 7 +  While i <= lnUpperBound
.head 8 -  ! Call SalSetProfileString( s, 'ColID' || SalNumberToStrX( i, 0 ), SalNumberToStrX( , 0 ), psFileName )
.head 8 -  Call RegistryWriteInteger( 'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'ColID', isArrSortColID[ i ] )
.head 8 -  ! Call SalSetProfileString( s, 'Order' || SalNumberToStrX( i, 0 ), SalNumberToStrX( , 0 ), psFileName )
.head 8 -  Call RegistryWriteInteger( 'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'Order', isArrSortColOrderNr[ i ] )
.head 8 -  ! Call SalSetProfileString( s, 'TableAndColumn' || SalNumberToStrX( i, 0 ),, psFileName )
.head 8 -  Call RegistryWriteString(  'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'TableAndColumn', isArrSortColTableAndColumn[ i ] )
.head 8 -  ! Set = pnColID
.head 8 -  ! Set isArrSortColTableAndColumn[ lnUpperBound + 1 ] = psTableAndColumn
.head 8 -  ! Set isArrSortColOrderNr[ lnUpperBound + 1 ] = pnColSortNr
.head 8 -  Set i = i + 1
.head 5 +  Function: RestaurerTri
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: n
.head 7 -  Number: lnUpperBound
.head 7 -  String: s
.head 7 -  String: lsFrmName
.head 7 -  String: lsTableName
.head 6 +  Actions
.head 7 -  Set i = 0
.head 7 -  Set lsFrmName = SalStrRepeatX( ' ', 254 )
.head 7 -  Set lsTableName = SalStrRepeatX( ' ', 254 )
.head 7 -  Set lsTableName =  PalGetItemName( hWndItem )
.head 7 -  Set lsFrmName =  PalGetItemName( SalParentWindow( hWndItem ) )
.head 7 -  Set s = 'sort' || cRegBackSlash || lsFrmName || cRegBackSlash || lsTableName
.head 7 -  Call RegistryReadInteger( 'NCCpas', s, 0, lnUpperBound )
.head 7 +  If not __VerifOrderTri( lnUpperBound, s )
.head 8 -  Call RegistryDelete( 'NCCpas', s )
.head 7 +  Else
.head 8 +  If lnUpperBound > 0
.head 9 +  While i < lnUpperBound
.head 10 -  ! Set = SalGetProfileInt( s, 'ColID' || SalNumberToStrX( i, 0 ), 0, psFileName )
.head 10 -  Call RegistryReadInteger( 'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'ColID', 0, isArrSortColID[ i ] )
.head 10 -  ! Set n = SalGetProfileInt( s, 'Order' || SalNumberToStrX( i, 0 ), 0, psFileName )
.head 10 -  Call RegistryReadInteger( 'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'Order', 0, n )
.head 10 +  If n > 32767
.head 11 -  Set n = n - 65536
.head 10 -  Set isArrSortColOrderNr[ i ] = n
.head 10 -  ! Call SalGetProfileString( s, 'TableAndColumn' || SalNumberToStrX( i, 0 ), '', phWin.clsCTblDynSql. isArrSortColTableAndColumn[ i ], psFileName )
.head 10 -  Call RegistryReadString( 'NCCpas', s || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'TableAndColumn', '', isArrSortColTableAndColumn[ i ] )
.head 10 -  Set i = i + 1
.head 5 +  Function: __VerifOrderTri
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnUpperBound
.head 7 -  String: psKey
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbOk
.head 7 -  Number: lnColId
.head 7 -  Number: lnBound
.head 7 -  Number: i
.head 7 -  String: lsColName
.head 6 +  Actions
.head 7 -  Set lbOk = TRUE
.head 7 +  If SalArrayGetUpperBound( isArrSortColID, 1, lnBound )
.head 8 +  If lnBound + 1 = pnUpperBound
.head 9 -  Set i = 0
.head 9 +  If pnUpperBound > 0
.head 10 +  While lbOk and ( i < pnUpperBound )
.head 11 -  Call RegistryReadInteger( 'NCCpas', psKey || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'ColID', 0, lnColId )
.head 11 +  If isArrSortColID[ i ] != lnColId
.head 12 -  Set lbOk = FALSE
.head 11 +  If lbOk
.head 12 -  Call RegistryReadString( 'NCCpas', psKey || cRegBackSlash || SalNumberToStrX ( i, 0 ) || cRegBackSlash || 'TableAndColumn', '', lsColName )
.head 12 +  If lsColName != isArrSortColTableAndColumn[ i ]
.head 13 -  Set lbOk = FALSE
.head 11 -  Set i = i + 1
.head 8 +  Else
.head 9 -  Set lbOk = FALSE
.head 7 +  Else
.head 8 -  Set lbOk = FALSE
.head 7 -  Return lbOk
.head 5 -  !
.head 5 -  ! 11/04/2005
.head 5 -  ! Fonction pour obtenir, en chaîne de caractère, le critère de tri de la requête
.head 5 +  Function: GetStringOrder
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: j
.head 7 -  Number: lnUpperBound
.head 7 -  String: lsCol[*]
.head 7 -  String: lsResult
.head 6 +  Actions
.head 7 -  Set i = 0
.head 7 -  Call SalArrayGetUpperBound( isArrSortColID, 1, lnUpperBound )
.head 7 +  While i <= lnUpperBound
.head 8 -  Set j = isArrSortColOrderNr[i]
.head 8 -  Set lsCol[ SalNumberAbs( j ) ] = isArrSortColTableAndColumn[ i ]
.head 8 +  If j < 0
.head 9 -  Set lsCol[ SalNumberAbs( j ) ] = lsCol[ SalNumberAbs( j ) ] || ' desc'
.head 8 -  Set i = i + 1
.head 7 -  Set i = 1
.head 7 -  Set lsResult = ''
.head 7 -  Call SalArrayGetUpperBound( lsCol, 1, lnUpperBound )
.head 7 +  While i <= lnUpperBound
.head 8 +  If i > 1
.head 9 -  Set lsResult = lsResult || ', '
.head 8 -  Set lsResult = lsResult || lsCol[ i ] 
.head 8 -  Set i = i + 1
.head 7 -  Return lsResult
.head 5 -  !
.head 5 -  !
.head 5 -  ! Function de recherche dans la table
.head 5 +  Function: SearchString
.head 6 -  Description: Fonction de recherche d'une ligne dans la table.

Le premier paramètre est la colonne de la table où il faut effectuer la recherche. 
Mettre hWndNULL si la recherche doit se faire dans toutes les colonnes de la table

Le deuxième paramètre est la chaine à rechercher.

Le troisième paramètre retourne le numéro de la ligne trouvée. 
Si la valeur initiale est -1, la recherche commence depuis le début de la table, sinon depuis la valeur fournie.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Window Handle: pwhColumn
.head 7 -  String: psValue
.head 7 -  Receive Number: prnRow
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If psValue = ''
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 +  If prnRow <= -1
.head 9 -  Set __wnRow = 0
.head 8 +  Else
.head 9 -  Set __wnRow = prnRow + 1
.head 8 -  Set __wnRow = VisTblFindString( hWndItem, __wnRow, pwhColumn, psValue || '%' )
.head 8 +  If __wnRow > -1
.head 9 -  ! Call SalTblSetFocusRow( hWndItem, wnRow )
.head 9 -  ! Call SalTblSetContext( hWndItem, wnRow )
.head 9 -  Set prnRow = __wnRow
.head 9 -  Set __wnRow = __wnRow + 1
.head 9 -  Return TRUE
.head 8 +  Else
.head 9 -  ! Call SalMessageBeep( MB_Ok )
.head 9 -  ! Call PalMessageBox( 'Eind van het zoek', 'Fin de la recherche', '', '', MB_Ok )
.head 9 -  Set prnRow = -1
.head 9 -  Return FALSE
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Call ConnectSqlHandles(  )
.head 5 +  On SAM_Close
.head 6 +  If Not ..OkToLoseChangesIfAny()
.head 7 -  Return FALSE
.head 5 +  On SAM_Destroy
.head 6 -  Call DisconnectSqlHandles(  )
.head 5 +  On WM_MOUSEWHEEL
.head 6 -  Call SalScrollOnWheel( hWndItem, wParam, lParam )
.head 5 +  On PAM_Language
.head 6 -  ! Set __whWnd = SalGetFirstChild( hWndForm, TYPE_ChildTable )
.head 6 +  ! While __whWnd != hWndNULL
.head 7 -  Call SalSendMsgToChildren( __whWnd, PAM_Language, wParam, lParam )
.head 7 -  Set __whWnd = SalGetNextChild( hWndForm, TYPE_ChildTable )
.head 6 -  Call SalSendMsgToChildren( hWndForm, PAM_Language, wParam, lParam )
.head 3 +  Child Table Class: clsCtblDynSqlMaster
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsCTblDynSql
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: inRowNum
.head 4 +  Functions
.head 5 +  Function: DoApplyChanges
.head 6 -  Description: Deze functie voert een update-statement of een insert-statement uit
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  Boolean: lbChanged
.head 7 -  Window Handle: lhWndCTblWndDetail
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Call ..LBFInitFieldsBeforeSave()
.head 7 -  ! TOEGEVOEGD OP 11/04/97
.head 7 -  ! Enigste verschil met child table window detail
.head 7 -  Set lhWndCTblWndDetail = SalGetFirstChild( SalParentWindow( hWndForm ), TYPE_ChildTable )
.head 7 +  While lhWndCTblWndDetail != hWndNULL 
.head 8 +  If lhWndCTblWndDetail != hWndForm
.head 9 -  Call SalSendMsg( lhWndCTblWndDetail, PAM_Actions, ACT_ApplyChanges, 0 )
.head 8 -  Set lhWndCTblWndDetail = SalGetNextChild(lhWndCTblWndDetail, TYPE_ChildTable)
.head 7 -  ! TOT HIER 11/04/97
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lbChanged = FALSE
.head 7 -  ! ## MARC 18/09/1997>> j'ai ajouté 'and lbSuccess'  au niveau des ROW_Edited
.head 7 +  If SalTblAnyRows( hWndForm, ROW_MarkDeleted, 0 )
.head 8 -  Set lbSuccess = DoDeleteStmt()
.head 8 -  Set lbChanged = TRUE
.head 8 -  Call SalTblSetFlagsAnyRows( hWndForm, ROW_New | ROW_Edited | ROW_MarkDeleted, FALSE, ROW_MarkDeleted, 0 )
.head 7 +  If SalTblAnyRows( hWndForm, ROW_New, 0 ) And lbSuccess
.head 8 -  Set lbSuccess = DoInsertStmt()
.head 8 -  Set lbChanged = TRUE
.head 8 +  If lbSuccess
.head 9 -  Call SalTblSetFlagsAnyRows( hWndForm, ROW_New | ROW_Edited, FALSE, ROW_New, 0 )
.head 7 +  If SalTblAnyRows( hWndForm, ROW_Edited, 0 ) And lbSuccess
.head 8 -  Set lbSuccess = DoUpdateStmt()
.head 8 -  Set lbChanged = TRUE
.head 8 +  If lbSuccess
.head 9 -  Call SalTblSetFlagsAnyRows( hWndForm, ROW_Edited | ROW_New, FALSE, ROW_Edited | ROW_New, 0 )
.head 7 -  ! ## MARC 18/09/1997<<
.head 7 +  If lbSuccess And lbChanged
.head 8 -  Call SalSendMsg( hWndItem, PAM_Actions, ACT_Refresh, 0 )
.head 7 -  Call ..LBFAfterDoApplyChanges()
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoRefresh
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = TRUE
.head 7 -  ! OORSPRONKELIJK
.head 7 -  ! Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', TBL_FillNormal )
.head 7 -  ! TOT HIER OORSPRONKELIJK
.head 7 -  !
.head 7 -  ! HIER 28/4/97
.head 7 -  ! Normaal is de volgende regel voldoende maar in frmArticlesBudget gaf dit problemen:
.head 7 -  ! Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', TBL_FillNormal )
.head 7 -  ! Wat hier volgt geeft geen problemen, maar SqlPrepare wordt telkens opnieuw uitgevoerd (mindere performantie)
.head 7 +  ! If isSelectStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectStmt(  )
.head 8 +  If lbSuccess
.head 9 -  Set lbSuccess = SqlPrepare( ihSqlSelect, isSelectStmt )
.head 7 +  ! If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', clsCtblDynSqlMaster.inTblFillMode )
.head 7 -  ! TOT HIER 28/4/97
.head 7 -  !
.head 7 -  ! HIER 3/6/97
.head 7 +  ! If isSelectStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectStmt(  )
.head 7 +  ! If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, isSelectStmt, clsCtblDynSqlMaster.inTblFillMode )
.head 7 -  ! TOT HIER 3/6/97
.head 7 -  !
.head 7 -  ! HIER 6/6/97
.head 7 +  If gbShowOnlyModAndInsRows Or  isSelectStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectStmt, lbSuccess )
.head 7 -  Set gsErrorSqlStatement = isSelectStmt
.head 7 -  Set gsErrorSqlStmt = isSelectStmt
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, isSelectStmt, clsCtblDynSqlMaster.inTblFillMode )
.head 7 -  ! TOT HIER 6/6/97
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 4 +  Message Actions
.head 5 +  On PAM_NavigateRecord
.head 6 +  If SalTblAnyRows( hWndForm, 0, 0 )
.head 7 +  Select Case wParam
.head 8 +  Case NAV_FirstRecord
.head 9 -  Set inRowNum =  SalTblSetRow( hWndForm, TBL_SetFirstRow )
.head 9 -  Call ..LBFOnRowGetFocus()
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 9 -  Break
.head 8 +  Case NAV_PreviousRecord
.head 9 -  Set inRowNum = SalTblSetRow( hWndItem, TBL_SetPrevRow )
.head 9 +  If SalTblQueryContext( hWndItem ) = TBL_MinRow
.head 10 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 9 +  Else
.head 10 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_PreviousRecord, 0 )
.head 9 -  Call ..LBFOnRowGetFocus()
.head 9 -  Break
.head 8 +  Case NAV_NextRecord
.head 9 -  Set inRowNum = SalTblSetRow( hWndItem, TBL_SetNextRow )
.head 9 +  If SalTblQueryContext( hWndItem ) = TBL_MaxRow
.head 10 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_LastRecord, 0 )
.head 9 +  Else
.head 10 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_NextRecord, 0 )
.head 9 -  Call ..LBFOnRowGetFocus()
.head 9 -  Break
.head 8 +  Case NAV_LastRecord
.head 9 -  Set inRowNum =  SalTblSetRow( hWndItem, TBL_SetLastRow )
.head 9 -  Call ..LBFOnRowGetFocus()
.head 9 -  Call SalSendMsgToChildren(  SalGetFirstChild( hWndMDI, TYPE_FormToolBar ), PAM_NavigateRecord, NAV_LastRecord, 0 )
.head 9 -  Break
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 5 +  On PAM_Actions
.head 6 +  Select Case wParam
.head 7 +  Case ACT_ApplyChanges
.head 8 -  Call DoApplyChanges()
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Break
.head 7 +  Case ACT_Clear
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call Clear()
.head 8 -  Call ..LBFAfterClear()
.head 8 -  Break
.head 7 +  Case ACT_DeleteRecord
.head 8 +  If SalTblAnyRows( hWndItem, ROW_Selected, 0 )
.head 9 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_MarkDeleted, TRUE, ROW_Selected, 0 )
.head 8 +  Else
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalMessageBox( 'No rows are selected.', 'Error', MB_Ok | MB_IconExclamation )
.head 8 -  Break
.head 7 +  Case ACT_NewRecord
.head 8 -  Call VisWaitCursor( TRUE )
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 5, TRUE )
.head 9 -  Set inRecordNr = SalTblInsertRow( hWndForm,TBL_MinSplitRow )
.head 8 +  Else
.head 9 +  If SalTblAnyRows( hWndForm, 0, 0 )
.head 10 +  Select Case inInsertMode
.head 11 +  Case INSERT_Before
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, SalTblQueryContext( hWndForm ) )
.head 12 -  Break
.head 11 +  Case INSERT_After
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, SalTblQueryContext( hWndForm ) + 1)
.head 12 -  Break
.head 11 +  Case INSERT_Top
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MinRow )
.head 12 -  Break
.head 11 +  Case INSERT_Bottom
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MaxRow )
.head 12 -  Break
.head 9 +  Else
.head 10 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MaxRow )
.head 8 +  If inRecordNr = TBL_Error
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalMessageBox( 'Sorry, could not insert a new row.', 'Error', MB_Ok | MB_IconExclamation )
.head 9 -  Call VisWaitCursor( FALSE )
.head 9 -  Return FALSE
.head 8 -  Call SalTblSetFocusRow( hWndForm, inRecordNr )
.head 8 +  If ibParamSetAutoSelect
.head 9 -  Call SalTblSetFlagsAnyRows( hWndForm, ROW_Selected, FALSE, ROW_Selected, 0 )
.head 9 -  Call SalTblSetRowFlags( hWndForm, inRecordNr, ROW_Selected, TRUE )
.head 8 +  Else
.head 9 -  Call SalTblSetFocusCell( hWndForm, inRecordNr, SalTblGetColumnWindow( hWndForm, 1, COL_GetPos ), 0, 0 )
.head 8 -  Call ..LBFAfterNewRecord()
.head 8 -  Call ..LBFOnRowGetFocus()
.head 8 -  Call SalSendMsg( SalParentWindow( hWndForm ), PAM_Dirty, 0, 0 )
.head 8 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_Retrieve
.head 8 -  Call VisWaitCursor( TRUE )
.head 8 +  If Not ..LBFBeforeRetrieve()
.head 9 -  Return FALSE
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call SetTblFillMode(lParam)
.head 8 +  If DoSelectStmt()
.head 9 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Retrieve, 0 )
.head 9 -  Call SalSendMsg( hWndItem, PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 9 -  Call ..LBFAfterRetrieve()
.head 8 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_UndoChanges
.head 8 -  Call SalSendMsg( hWndItem, PAM_Actions, ACT_Retrieve, 0 )
.head 8 -  Break
.head 7 +  Case ACT_Refresh
.head 8 +  If Not  ..LBFBeforeRefresh()
.head 9 -  Return FALSE
.head 8 -  Call DoRefresh()
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call ..LBFAfterRefresh()
.head 8 -  Break
.head 7 +  Case ACT_DeleteAllDetails
.head 8 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_MarkDeleted, TRUE, 0, 0 )
.head 8 -  Call DoDeleteStmt()
.head 8 -  Break
.head 7 +  Case ACT_Rollback
.head 8 -  Call DoRollbackChanges()
.head 8 -  Break
.head 3 +  Child Table Class: clsCtblDynSqlDetail
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsCTblDynSql
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: DoApplyChanges
.head 6 -  Description: Deze functie voert een update-statement of een insert-statement uit
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchUpdDel
.head 7 -  Boolean: lbSuccess
.head 7 -  Boolean: lbChanged
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Call ..LBFInitFieldsBeforeSave()
.head 7 -  Set lbSuccess = TRUE
.head 7 -  Set lbChanged = FALSE
.head 7 -  ! ## MARC 18/09/1997>> j'ai ajouté 'and lbSuccess' au niveau des ROW_Edited
.head 7 +  If SalTblAnyRows( hWndItem, ROW_MarkDeleted, 0 ) And lbSuccess
.head 8 -  Set lbSuccess = DoDeleteStmt()
.head 8 -  Set lbChanged = TRUE
.head 7 +  If SalTblAnyRows( hWndItem, ROW_New, 0 ) And lbSuccess
.head 8 -  Set lbSuccess = DoInsertStmt()
.head 8 -  Set lbChanged = TRUE
.head 8 +  If lbSuccess
.head 9 -  ! VAN HIER 28/03/97
.head 9 -  ! Call SalTblSetFlagsAnyRows( hWndItem, ROW_Edited, FALSE, ROW_New, 0 )
.head 9 -  ! TOT HIER 28/03/97 vervangen door de volgende lijn:
.head 9 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_New, FALSE, ROW_New, 0 )
.head 7 +  If SalTblAnyRows( hWndItem, ROW_Edited, 0 ) And lbSuccess
.head 8 -  Set lbSuccess = DoUpdateStmt()
.head 8 -  Set lbChanged = TRUE
.head 8 +  If lbSuccess
.head 9 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_Edited | ROW_New, FALSE, ROW_Edited | ROW_New, 0 )
.head 7 -  ! ## MARC 18/09/1997<<
.head 7 +  If lbSuccess And lbChanged
.head 8 -  Call SalSendMsg( hWndItem, PAM_Actions, ACT_Refresh, 0 )
.head 7 -  Call ..LBFAfterDoApplyChanges()
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 5 +  Function: DoRefresh
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: lbSuccess
.head 6 +  Actions
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Set lbSuccess = TRUE
.head 7 -  ! OORSPRONKELIJK
.head 7 -  ! Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', TBL_FillNormal )
.head 7 -  ! TOT HIER OORSPRONKELIJK
.head 7 -  !
.head 7 -  ! HIER 28/4/97
.head 7 -  ! Normaal is de volgende regel voldoende maar in frmArticlesBudget gaf dit problemen:
.head 7 -  ! Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', TBL_FillNormal )
.head 7 -  ! Wat hier volgt geeft geen problemen, maar SqlPrepare wordt telkens opnieuw uitgevoerd (mindere performantie)
.head 7 +  ! If isSelectEqualStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectEqualStmt(  )
.head 8 +  If lbSuccess
.head 9 -  Set lbSuccess = SqlPrepare( ihSqlSelect, isSelectEqualStmt )
.head 7 +  ! If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, '', clsCtblDynSqlDetail.inTblFillMode )
.head 7 -  ! TOT HIER 28/4/97
.head 7 -  !
.head 7 -  ! HIER 3/6/97
.head 7 +  If isSelectEqualStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectEqualStmt(  )
.head 7 -  Set gsErrorSqlStatement = isSelectEqualStmt
.head 7 -  Set gsErrorSqlStmt = isSelectEqualStmt
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, isSelectEqualStmt, clsCtblDynSqlDetail.inTblFillMode )
.head 7 -  ! TOT HIER 3/6/97
.head 7 -  !
.head 7 -  ! HIER 6/6/97
.head 7 +  ! If gbShowOnlyModAndInsRows Or  isSelectEqualStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectEqualStmt(  )
.head 7 +  ! If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectEqualStmt, lbSuccess )
.head 7 +  ! If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, isSelectEqualStmt, clsCtblDynSqlDetail.inTblFillMode )
.head 7 -  ! TOT HIER 6/6/97
.head 7 -  !
.head 7 -  ! HIER 22/7/97
.head 7 +  If isSelectEqualStmt = ''
.head 8 -  Set lbSuccess =  BuildSelectEqualStmt(  )
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, isSelectEqualStmt, lbSuccess )
.head 7 -  Set gsErrorSqlStatement = isSelectEqualStmt
.head 7 -  Set gsErrorSqlStmt = isSelectEqualStmt
.head 7 +  If lbSuccess
.head 8 -  Set lbSuccess = SalTblPopulate( hWndForm, ihSqlSelect, isSelectEqualStmt, clsCtblDynSqlDetail.inTblFillMode )
.head 7 -  ! TOT HIER 22/7/97
.head 7 -  !
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Return lbSuccess
.head 4 +  Message Actions
.head 5 +  On PAM_NavigateRecord
.head 6 +  If DoSelectEqualStmt()
.head 7 -  Call SalTblSetContext( hWndForm, 0 )
.head 7 -  Call ..LBFOnRowGetFocus()
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_NavigateRecord, wParam, lParam )
.head 6 +  Else
.head 7 -  Call SalMessageBox( 'Problem executing DoSelectEqualStmt in class clsCtblDynSqlDetail', 'Serious problem', MB_Ok )
.head 5 +  On PAM_Actions
.head 6 +  Select Case wParam
.head 7 +  Case ACT_ApplyChanges
.head 8 -  Call DoApplyChanges()
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Break
.head 7 +  Case ACT_Clear
.head 8 -  Call Clear()
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call ..LBFAfterClear()
.head 8 -  Break
.head 7 +  Case ACT_DeleteRecord
.head 8 +  If SalTblAnyRows( hWndItem, ROW_Selected, 0 )
.head 9 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_MarkDeleted, TRUE, ROW_Selected, 0 )
.head 8 +  Else
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalMessageBox( 'No rows are selected.', 'Error', MB_Ok | MB_IconExclamation )
.head 8 -  Break
.head 7 +  Case ACT_NewRecord
.head 8 -  Call VisWaitCursor( TRUE )
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 5, TRUE )
.head 9 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MinSplitRow )
.head 8 +  Else
.head 9 +  If SalTblAnyRows( hWndForm, 0, 0 )
.head 10 +  Select Case inInsertMode
.head 11 +  Case INSERT_Before
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, SalTblQueryContext( hWndForm ) )
.head 12 -  Break
.head 11 +  Case INSERT_After
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, SalTblQueryContext( hWndForm ) + 1)
.head 12 -  Break
.head 11 +  Case INSERT_Top
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MinRow )
.head 12 -  Break
.head 11 +  Case INSERT_Bottom
.head 12 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MaxRow )
.head 12 -  Break
.head 9 +  Else
.head 10 -  Set inRecordNr = SalTblInsertRow( hWndForm, TBL_MaxRow )
.head 8 +  If inRecordNr = TBL_Error
.head 9 -  Call SalMessageBeep( 0 )
.head 9 -  Call SalMessageBox( 'Sorry, could not insert a new row.', 'Error', MB_Ok | MB_IconExclamation )
.head 9 -  Call VisWaitCursor( FALSE )
.head 9 -  Return FALSE
.head 8 -  Call SalTblSetFocusRow( hWndForm, inRecordNr )
.head 8 +  If ibParamSetAutoSelect
.head 9 -  Call SalTblSetFlagsAnyRows( hWndForm, ROW_Selected, FALSE, ROW_Selected, 0 )
.head 9 -  Call SalTblSetRowFlags( hWndForm, inRecordNr, ROW_Selected, TRUE )
.head 8 +  Else
.head 9 -  Call SalTblSetFocusCell( hWndForm, inRecordNr, SalTblGetColumnWindow( hWndForm, 1, COL_GetPos ), 0, 0 )
.head 8 -  ! Call SalSetFocus( SalTblGetColumnWindow( hWndForm, 1, COL_GetPos ) )
.head 8 -  Call ..LBFAfterNewRecord()
.head 8 -  Call ..LBFOnRowGetFocus()
.head 8 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_Retrieve
.head 8 -  Call VisWaitCursor( TRUE )
.head 8 +  If Not ..LBFBeforeRetrieve()
.head 9 -  Return FALSE
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call SetTblFillMode(lParam)
.head 8 +  If DoSelectEqualStmt()
.head 9 -  ! Call SalSendMsgToChildren( hWndForm, PAM_Actions, ACT_Retrieve, 0 )
.head 9 -  Call SalSendMsg( hWndItem, PAM_NavigateRecord, NAV_FirstRecord, 0 )
.head 9 -  Call ..LBFAfterRetrieve()
.head 8 -  Call VisWaitCursor( FALSE )
.head 8 -  Break
.head 7 +  Case ACT_UndoChanges
.head 8 -  Call SalSendMsg( hWndItem, PAM_Actions, ACT_Retrieve, 0 )
.head 8 -  Break
.head 7 +  Case ACT_Refresh
.head 8 +  If Not  ..LBFBeforeRefresh()
.head 9 -  Return FALSE
.head 8 +  If gbSplitTblWhenInsert
.head 9 -  Call SalTblDefineSplitWindow( hWndForm, 0, TRUE )
.head 8 -  Call DoRefresh()
.head 8 -  Call ..LBFAfterRefresh()
.head 8 -  Break
.head 7 +  Case ACT_DeleteAllDetails
.head 8 -  Call SalTblSetFlagsAnyRows( hWndItem, ROW_MarkDeleted, TRUE, 0, 0 )
.head 8 -  Call DoDeleteStmt()
.head 8 -  Break
.head 7 +  Case ACT_Rollback
.head 8 -  Call DoRollbackChanges()
.head 8 -  Break
.head 3 +  Combo Box Class: clsCmbDynSql
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  String Type: Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Always Show List? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description: Bij het navigeren en retrieven van data moeten de comboboxes de correcte display values tonen.
.head 4 +  Derived From
.head 5 -  Class: clsCmbCached
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On PAM_NavigateRecord
.head 6 -  Call clsCmbDynSql.LookupDisplayValue(  )
.head 6 -  ! Soms verschijnt de inhoud van de combobox niet na een retrieve
.head 6 -  Call SalInvalidateWindow( hWndItem )
.head 3 +  Column Class: clsColCmbDynSql
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsColCmbCached
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Values
.head 4 +  Message Actions
.head 5 +  ! On PAM_NavigateRecord
.head 6 -  Call clsColCmbDynSql.LookupDisplayValue(  )
.head 3 +  MDI Window Class: clsMdiDynSql
.head 4 -  Title:
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Yes
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Yes
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  ! Classes in CLEAR.APL ---------------------------------------------------------------------------------------------------------
.head 3 -  ! PRIVATE
.head 3 +  General Window Class: clsClearableObject
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: __nNbrStyle
.head 5 -  Number: __nStyle
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalMessageBox( 'Function Clear in class ClearableObject is a virtual function and should be redefined in descendant classes', 
'Development error', MB_Ok | MB_IconExclamation )
.head 5 -  !
.head 5 +  ! Function: AddStyle
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  Number: pnStyle
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Set __nNbrStyle = __nNbrStyle + 1
.head 7 -  Set __nStyle = __nStyle | pnStyle
.head 4 +  Message Actions
.head 5 +  On PAM_Clear
.head 6 -  Call ..Clear()
.head 5 +  ! On WM_NCCREATE
.head 6 +  If __nNbrStyle
.head 7 -  Call SetWindowLongA( hWndItem, GWL_STYLE, GetWindowLongA( hWndItem, GWL_STYLE )  | __nStyle )
.head 3 -  ! PUBLIC
.head 3 +  Check Box Class: clsClearableCb
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set MyValue = FALSE
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Child Table Class: clsClearableCTbl
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalTblReset( hWndItem )
.head 4 -  Message Actions
.head 3 +  Column Class: clsClearableCol
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Values
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( SalParentWindow( hWndForm ), PAM_Dirty, 0, 0 )
.head 3 +  Combo Box Class: clsClearableCmb
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  String Type: Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Always Show List? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalClearField( hWndItem )
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Data Field Class: clsClearableDf
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalClearField( hWndItem )
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Dialog Box Class: clsClearableDlg
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modal
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Clear, 0, 0 )
.head 4 -  Message Actions
.head 3 +  Form Window Class: clsClearableFrm
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Clear, 0, 0 )
.head 4 -  Message Actions
.head 3 +  List Box Class: clsClearableLb
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Multiple selection? Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalListClear( hWndItem )
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Multiline Field Class: clsClearableMl
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  String Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Border? Class Default
.head 5 -  Word Wrap? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalClearField( hWndItem )
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Option Button Class: clsClearableOb
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Button Style: Radio
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set MyValue = FALSE
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Radio Button Class: clsClearableRb
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set MyValue = FALSE
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndItem, PAM_Dirty, wParam, lParam )
.head 5 +  On PAM_Dirty
.head 6 -  Call SalSendMsg( hWndForm, PAM_Dirty, wParam, lParam )
.head 3 +  Table Window Class: clsClearableTbl
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalTblReset( hWndItem )
.head 4 -  Message Actions
.head 3 +  Picture Class: clsClearablePic
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  File Name:
.head 4 -  Storage: Class Default
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Fit: Class Default
.head 4 -  Scaling
.head 5 -  Width:  Class Default
.head 5 -  Height:  Class Default
.head 4 -  Corners: Class Default
.head 4 -  Border Style: Class Default
.head 4 -  Border Thickness: Class Default
.head 4 -  Tile To Parent? Class Default
.head 4 -  Border Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsClearableObject
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalPicClear( hWndItem )
.head 4 -  Message Actions
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  ! Classes in COMBOBOX.APL --------------------------------------------------------------------------------------------
.head 3 +  Functional Class: clsTableCache
.head 4 -  Description: Cache voor één lijst. Voor elke lijst wordt de sleutel, de nederlandse  en de franse tekst bijgehouden.
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isTableName
.head 5 -  String: isDbTableName
.head 5 -  String: isSelectStmt
.head 5 -  String: isWhereClause
.head 5 -  String: isOrderByClauseNL
.head 5 -  String: isOrderByClauseFR
.head 5 -  String: isElements[ * , 4 ]
.head 5 -  Boolean: ibFilled
.head 5 -  Boolean: ibPopulated
.head 5 -  Number: inLanguage
.head 5 -  Number: inElementCount
.head 4 +  Functions
.head 5 +  Function: Init
.head 6 -  Description: Initialiseer de table cache.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Sql Handle: phSql
.head 7 -  String: psTableName
.head 7 -  String: psDbTableName
.head 7 -  String: psSelectStmt
.head 7 -  String: psWhereClause
.head 7 -  String: psOrderByClauseNL
.head 7 -  String: psOrderByClauseFR
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SetTableName( psTableName )
.head 7 -  Call SetDbTableName( psDbTableName )
.head 7 -  Set ibFilled = FALSE
.head 7 -  Set ibPopulated = FALSE
.head 7 -  Set inLanguage = gnLanguage
.head 7 -  Call SetSql ( psSelectStmt , psWhereClause, psOrderByClauseNL, psOrderByClauseFR )
.head 7 -  ! Return TRUE
.head 7 -  Return Fill ( phSql )
.head 5 +  Function: __InitI
.head 6 -  Description: Initialiseer de table cache.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SetTableName( psTableName )
.head 7 -  Set ibFilled = FALSE
.head 7 -  Set ibPopulated = FALSE
.head 7 -  Set inLanguage = gnLanguage
.head 7 -  Return TRUE
.head 7 -  ! Return Fill ( phSql )
.head 5 +  Function: SetTableName
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isTableName = psTableName
.head 5 +  Function: SetDbTableName
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psDbTableName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isDbTableName = psDbTableName
.head 5 +  Function: SetSql
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psSql
.head 7 -  String: psWhereClause
.head 7 -  String: psOrderByClauseNL
.head 7 -  String: psOrderByClauseFR
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isSelectStmt = psSql
.head 7 -  Set isWhereClause =  psWhereClause
.head 7 -  Set isOrderByClauseNL =  psOrderByClauseNL
.head 7 -  Set isOrderByClauseFR =  psOrderByClauseFR
.head 5 +  Function: GetTableName
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isTableName
.head 5 +  Function: GetDbTableName
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isDbTableName
.head 5 +  Function: GetSelectStmt
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isSelectStmt
.head 5 +  Function: GetWhereClause
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isWhereClause
.head 5 +  Function: GetOrderByClauseNL
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isOrderByClauseNL
.head 5 +  Function: GetOrderByClauseFR
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return isOrderByClauseFR
.head 5 +  Function: Clear
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalArraySetUpperBound ( isElements , 1, -1 )
.head 7 -  Set inElementCount = 0
.head 5 +  Function: Fill
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Sql Handle: phSql
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchInd
.head 7 -  Boolean: lbOK
.head 7 -  Number: lnCounter
.head 7 -  String: lsSqlStmt
.head 7 -  String: lsElem1
.head 7 -  String: lsElem2
.head 7 -  String: lsElem3
.head 7 -  String: lsElem4
.head 7 -  Number: lnError
.head 7 -  String: lsErrorMessage
.head 6 +  Actions
.head 7 +  Select Case gnLanguage
.head 8 +  Case Language_NL
.head 9 -  Set lsSqlStmt = isSelectStmt || ' INTO  :lsElem1, :lsElem2, :lsElem3, :lsElem4 FROM ' || 
	isDbTableName || isWhereClause || isOrderByClauseNL
.head 9 -  Break
.head 8 +  Case Language_FR
.head 9 -  Set lsSqlStmt = isSelectStmt || ' INTO  :lsElem1, :lsElem2, :lsElem3, :lsElem4 FROM ' || 
	isDbTableName || isWhereClause || isOrderByClauseFR
.head 9 -  Break
.head 8 +  Default
.head 9 -  Break
.head 7 +  If gbDynSqlDebug
.head 8 -  Call SalModalDialog( dlgDebugDynSql, hWndForm, lsSqlStmt, TRUE )
.head 7 +  When SqlError
.head 8 -  Set lnError = SqlError( phSql )
.head 8 -  Call SqlGetErrorText( lnError, lsErrorMessage )
.head 8 -  Call PalLogErrorInFile( PalGetItemName( hWndForm )  || ' - '  || lsErrorMessage || ' 
SQL: ' || lsSqlStmt   )
.head 8 -  Return TRUE
.head 7 -  Set lbOK = SqlPrepareAndExecute( phSql , lsSqlStmt )
.head 7 -  Call SqlGetResultSetCount( phSql, inElementCount )
.head 7 -  Call SalArraySetUpperBound ( isElements , 1 , inElementCount )
.head 7 +  If lbOK
.head 8 -  Set lnCounter = 0
.head 8 +  While SqlFetchNext ( phSql, lnFetchInd )
.head 9 -  Set isElements[lnCounter,0] = lsElem1
.head 9 -  Set isElements[lnCounter,1] = lsElem2
.head 9 -  Set isElements[lnCounter,2] = lsElem3
.head 9 -  Set isElements[lnCounter,3] = lsElem4
.head 9 -  Set lnCounter = lnCounter + 1
.head 8 -  Set ibFilled = TRUE
.head 7 -  Return lbOK
.head 5 +  Function: GetElementCount
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return inElementCount
.head 5 +  Function: GetElement
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnElement
.head 7 -  Receive String: psItem1
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If pnElement >= GetElementCount(  )
.head 8 -  Call SalMessageBox( 'Selection of an item in combo box or list box exceeds the upperbound of the cache.', 'Development Error', MB_Ok )
.head 8 -  Return FALSE
.head 7 +  Else
.head 8 -  Set psItem1 = isElements[ pnElement , 0 ]
.head 8 -  Set psItem2 = isElements[ pnElement , 1 ]
.head 8 -  Set psItem3 = isElements[ pnElement , 2 ]
.head 8 -  Set psItem4 = isElements[ pnElement , 3 ]
.head 8 -  Return TRUE
.head 5 +  Function: FindElement1
.head 6 -  Description: Zoek op basis van code de nederlandse en franse tekst. 
Indien gevonden, return TRUE; anders FALSE
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnIndex
.head 7 -  String: psItem1
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < GetElementCount(  )
.head 8 +  If SalStrUpperX(  isElements[ lnTeller , 0 ] ) = SalStrUpperX( psItem1 )
.head 9 -  Set pnIndex = lnTeller
.head 9 -  Set psItem2 = isElements[ lnTeller , 1 ]
.head 9 -  Set psItem3 = isElements[ lnTeller , 2 ]
.head 9 -  Set psItem4 = isElements[ lnTeller , 3 ]
.head 9 -  Return TRUE
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return FALSE
.head 5 +  Function: FindElement2
.head 6 -  Description: Zoek op basis van de nederlandse tekst , de code en franse tekst. 
Indien gevonden, return TRUE; anders FALSE
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psItem1
.head 7 -  String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < GetElementCount(  )
.head 8 +  If SalStrUpperX( isElements[ lnTeller , 1 ] ) = SalStrUpperX( psItem2 )
.head 9 -  Set pnIndex = lnTeller
.head 9 -  Set psItem1 = isElements[ lnTeller , 0 ]
.head 9 -  Set psItem3 = isElements[ lnTeller , 2 ]
.head 9 -  Set psItem4 = isElements[ lnTeller , 3 ]
.head 9 -  Return TRUE
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return FALSE
.head 5 +  Function: FindElement3
.head 6 -  Description: Zoek op basis van de nederlandse tekst , de code en franse tekst. 
Indien gevonden, return TRUE; anders FALSE
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psItem1
.head 7 -  Receive String: psItem2
.head 7 -  String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  While lnTeller < GetElementCount(  )
.head 8 +  If SalStrUpperX( isElements[ lnTeller , 2 ] ) = SalStrUpperX( psItem3 )
.head 9 -  Set pnIndex = lnTeller
.head 9 -  Set psItem1 = isElements[ lnTeller , 0 ]
.head 9 -  Set psItem2 = isElements[ lnTeller , 1 ]
.head 9 -  Set psItem4 = isElements[ lnTeller , 3 ]
.head 9 -  Return TRUE
.head 8 -  Set lnTeller = lnTeller + 1
.head 7 -  Return FALSE
.head 5 -  !
.head 5 -  !
.head 5 -  ! /@@@@@ Modification LS : 16/01/2002
.head 5 -  !
.head 5 -  ! Le but de la fonction ci-dessous est de sélectionner le premier élément dans la liste, sans que l'on 
.head 5 -  ! ait besoin de connaitre le code ce celui-ci.
.head 5 -  !
.head 5 +  Function: First
.head 6 -  Description: Zoek op basis van code de nederlandse en franse tekst. 
Indien gevonden, return TRUE; anders FALSE
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psItem1
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnTeller
.head 6 +  Actions
.head 7 +  If GetElementCount(  ) >= 0
.head 8 -  Set pnIndex = 0
.head 8 -  Set psItem1 = isElements[ pnIndex , 0 ]
.head 8 -  Set psItem2 = isElements[ pnIndex , 1 ]
.head 8 -  Set psItem3 = isElements[ pnIndex , 2 ]
.head 8 -  Set psItem4 = isElements[ pnIndex , 3 ]
.head 8 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: AddData
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: ps1
.head 7 -  String: ps2
.head 7 -  String: ps3
.head 7 -  String: ps4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnFetchInd
.head 7 -  Boolean: lbOK
.head 7 -  Number: lnCounter
.head 7 -  String: lsSqlStmt
.head 7 -  String: lsElem1
.head 7 -  String: lsElem2
.head 7 -  String: lsElem3
.head 7 -  String: lsElem4
.head 7 -  Number: lnError
.head 7 -  String: lsErrorMessage
.head 6 +  Actions
.head 7 -  Set lnCounter = inElementCount 
.head 7 -  Set inElementCount = inElementCount + 1
.head 7 -  Call SalArraySetUpperBound ( isElements , 1 , inElementCount )
.head 7 -  Call SetTableName( psTableName )
.head 7 -  Set ibFilled = TRUE
.head 7 -  Set ibPopulated = TRUE
.head 7 -  Set inLanguage = gnLanguage
.head 7 -  Set isElements[lnCounter,0] = ps1
.head 7 -  Set isElements[lnCounter,1] = ps2
.head 7 -  Set isElements[lnCounter,2] = ps3
.head 7 -  Set isElements[lnCounter,3] = ps4
.head 7 -  Return TRUE
.head 3 +  Functional Class: clsCachePool
.head 4 -  Description:
.head 4 -  Derived From
.head 4 +  Class Variables
.head 5 -  FunctionalVar: cuCaches[ * ]
.head 6 -  Class: clsTableCache
.head 5 -  Sql Handle: chSql
.head 5 -  Number: cnNumCaches
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: Init
.head 6 -  Description: Called at startup
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set cnNumCaches = 0
.head 7 -  Return SqlConnect ( chSql )
.head 5 +  Function: Close
.head 6 -  Description: Called on close
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  While cnNumCaches
.head 8 -  Call cuCaches[ cnNumCaches ].Clear ( )
.head 8 -  Set cnNumCaches = cnNumCaches - 1
.head 7 -  Call SalArraySetUpperBound( cuCaches , 1 , -1)
.head 7 -  Call SalArraySetUpperBound( cuCaches , 2 , -1)
.head 7 -  Call SalArraySetUpperBound( cuCaches , 3 , -1)
.head 7 -  Return SqlDisconnect ( chSql )
.head 5 +  Function: GetCacheIndex
.head 6 -  Description: Gives the number of a specified cache or '0' if the list doesn't exist
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  Receive Number: pnCacheIndex
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCounter
.head 7 -  Boolean: lbFound
.head 6 +  Actions
.head 7 -  ! Set lnCounter = 1
.head 7 -  Set lbFound = FALSE
.head 7 +  While lnCounter < cnNumCaches AND NOT lbFound
.head 8 +  If SalStrUpperX(cuCaches[lnCounter].GetTableName( )) = SalStrUpperX(psTableName)
.head 9 -  Set lbFound = TRUE
.head 9 -  Set pnCacheIndex = lnCounter
.head 8 -  Set lnCounter = lnCounter + 1
.head 7 -  Return lbFound
.head 5 +  Function: AddCache
.head 6 -  Description: Adds a new cache to the cache pool
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psDbTableName
.head 7 -  String: psSelectStmt
.head 7 -  String: psWhereClause
.head 7 -  String: psOrderByClauseNL
.head 7 -  String: psOrderByClauseFR
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If Not GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Call cuCaches[ cnNumCaches ].Init( chSql , psTableName , psDbTableName, psSelectStmt , psWhereClause, psOrderByClauseNL, psOrderByClauseFR )
.head 8 -  Set cnNumCaches = cnNumCaches + 1
.head 5 +  Function: __AddCacheI
.head 6 -  Description: Adds a new cache to the cache pool
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If Not GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Call cuCaches[ cnNumCaches ].__InitI( psTableName  )
.head 8 -  Set cnNumCaches = cnNumCaches + 1
.head 5 +  Function: Populate
.head 6 -  Description: Populates the object from the cache
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lni
.head 7 -  Number: lnElementCount
.head 7 -  Number: lnCacheIndex
.head 7 -  String: lsElement1
.head 7 -  String: lsElement2
.head 7 -  String: lsElement3
.head 7 -  String: lsElement4
.head 6 +  Actions
.head 7 -  ! Call SalStatusSetText( hWndMDI, 'Populating combobox ' || psTableName || '...' )
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 +  If Not cuCaches[ lnCacheIndex ].ibPopulated
.head 9 -  Call cuCaches[ lnCacheIndex ].SetTableName(psTableName)
.head 9 +  If Not cuCaches[ lnCacheIndex ].ibFilled 
.head 10 -  Call cuCaches[ lnCacheIndex ].Fill(chSql)
.head 9 +  If cuCaches[ lnCacheIndex ].inLanguage != gnLanguage
.head 10 -  Call SortCache( psTableName )
.head 10 -  Set cuCaches[ lnCacheIndex ].inLanguage = gnLanguage
.head 9 -  ! Call SalMessageBox( 'Populate: ' || psTableName, 'DEBUG', MB_Ok )
.head 9 -  Call ..DeleteAllRows()
.head 9 -  Set lni = 0
.head 9 -  ! Call SalStatusSetText( hWndMDI, psTableName )
.head 9 -  Set lnElementCount = cuCaches[ lnCacheIndex ].GetElementCount( )
.head 9 +  While lni < lnElementCount
.head 10 -  Call cuCaches[ lnCacheIndex ].GetElement (lni, lsElement1 , lsElement2 , lsElement3, lsElement4 )
.head 10 +  If lsElement4 = 'Y'
.head 11 -  Set lsElement2 = '# ' || lsElement2 || ' #'
.head 11 -  Set lsElement3 = '# ' || lsElement3 || ' #'
.head 10 -  Call ..AddRow( lsElement1, lsElement2, lsElement3 )
.head 10 -  Set lni = lni + 1
.head 9 -  Set cuCaches[ lnCacheIndex ].ibPopulated = TRUE
.head 7 +  Else
.head 8 -  Call SalMessageBox( 'Combobox for ' || psTableName || ' not initialized in Application startup.' ,' Development error', MB_Ok)
.head 7 -  ! Call SalStatusSetText( hWndMDI, '' )
.head 5 +  Function: AddRow
.head 6 -  Description: Late bound for filling object starting from array
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: ps1
.head 7 -  String: ps2
.head 7 -  String: ps3
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalMessageBox( 'Programming Error :' , 'Function "AddRow" not defined for class' , MB_Ok )
.head 5 +  Function: DeleteAllRows
.head 6 -  Description: Late bound function for deleting the list
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: GetElement
.head 6 -  Description: Zoek de elementen op in de cache op basis van de index van de combo box.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  Number: pnIndex
.head 7 -  Receive String: psItem1
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].GetElement(pnIndex, psItem1, psItem2, psItem3, psItem4 )
.head 9 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: LookupElement
.head 6 -  Description: Zoek de display values op basis van de code die opgeslagen is in de database.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psItem1
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].FindElement1(pnIndex, psItem1, psItem2, psItem3, psItem4 )
.head 9 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: FindFirst
.head 6 -  Description: Zoek de display values op basis van de code die opgeslagen is in de database.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  Receive String: psItem1
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psItem2
.head 7 -  Receive String: psItem3
.head 7 -  Receive String: psItem4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].First(pnIndex, psItem1, psItem2, psItem3, psItem4 )
.head 9 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: IsPopulated
.head 6 -  Description: Zoek de display values op basis van de code die opgeslagen is in de database.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].ibPopulated
.head 9 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: LookupValueNl
.head 6 -  Description: Zoek de display values op basis van de tekst ingegeven in de combobox
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psItem2
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psDbValue
.head 7 -  Receive String: psDbValid
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 7 -  String: lsItem1
.head 7 -  String: lsItem3
.head 7 -  String: lsItem4
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].FindElement2(pnIndex, lsItem1, psItem2, lsItem3, lsItem4 )
.head 9 -  Set psDbValue = lsItem1
.head 9 -  Set psDbValid = lsItem4
.head 9 -  Return TRUE
.head 7 -  Set psDbValue = ''
.head 7 -  Set psDbValid = ''
.head 7 -  Return FALSE
.head 5 +  Function: LookupValueFr
.head 6 -  Description: Zoek de display values op basis van de tekst ingegeven in de combobox
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psItem3
.head 7 -  Receive Number: pnIndex
.head 7 -  Receive String: psDbValue
.head 7 -  Receive String: psDbValid
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 7 -  String: lsItem1
.head 7 -  String: lsItem2
.head 7 -  String: lsItem4
.head 6 +  Actions
.head 7 +  If GetCacheIndex(psTableName, lnCacheIndex)
.head 8 +  If cuCaches[lnCacheIndex].FindElement3(pnIndex, lsItem1, lsItem2, psItem3, lsItem4 )
.head 9 -  Set psDbValue = lsItem1
.head 9 -  Set psDbValid = lsItem4
.head 9 -  Return TRUE
.head 7 -  Set psDbValue = ''
.head 7 -  Return FALSE
.head 5 +  Function: SortCache
.head 6 -  Description: Sorteer Cache volgens één van de drie elementen van de table cache
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 +  If cuCaches[ lnCacheIndex ].inLanguage != gnLanguage
.head 9 -  ! Call SalMessageBox( 'Sorteren: ' || psTableName, 'DEBUG', MB_Ok )
.head 9 -  Call cuCaches[ lnCacheIndex ].Init( chSql , 
	psTableName , cuCaches[ lnCacheIndex ].GetDbTableName(),
	cuCaches[ lnCacheIndex ].GetSelectStmt() , 
	cuCaches[ lnCacheIndex ].GetWhereClause(), 
	cuCaches[ lnCacheIndex ].GetOrderByClauseNL(),
	cuCaches[ lnCacheIndex ].GetOrderByClauseFR() )
.head 9 -  ! Call Populate(psTableName )
.head 9 -  Set cuCaches[ lnCacheIndex ].ibPopulated = FALSE
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 5 +  Function: ModifyCacheWhereClause
.head 6 -  Description: Wijzig cache op basis van een andere where-clause
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: psNewWhereClause
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Call cuCaches[ lnCacheIndex ].Init( chSql , 
	psTableName , cuCaches[ lnCacheIndex ].GetDbTableName(),
	cuCaches[ lnCacheIndex ].GetSelectStmt() , 
	psNewWhereClause, 
	cuCaches[ lnCacheIndex ].GetOrderByClauseNL(),
	cuCaches[ lnCacheIndex ].GetOrderByClauseFR() )
.head 8 -  Call Populate(psTableName )
.head 8 -  Return TRUE
.head 7 -  Return FALSE
.head 5 +  Function: SetPopulated
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  Boolean: pbPopulated
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Set cuCaches[ lnCacheIndex ].ibPopulated = pbPopulated
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 +  Function: AddData
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 7 -  String: ps1
.head 7 -  String: ps2
.head 7 -  String: ps3
.head 7 -  String: ps4
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCounter
.head 7 -  Number: lnCacheIndex
.head 7 -  String: lsElement1
.head 7 -  String: lsElement2
.head 7 -  String: lsElement3
.head 7 -  String: lsElement4
.head 6 +  Actions
.head 7 -  Set lsElement1 = ps1
.head 7 -  Set lsElement2 = ps2
.head 7 -  Set lsElement3 = ps3
.head 7 -  Set lsElement4 = ps4
.head 7 -  Call __AddCacheI( psTableName )
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Call cuCaches[ lnCacheIndex ].SetTableName(psTableName)
.head 8 -  Call cuCaches[ lnCacheIndex ].AddData( psTableName, ps1, ps2, ps3, ps4 )
.head 8 +  If cuCaches[ lnCacheIndex ].inLanguage != gnLanguage
.head 9 -  Call SortCache( psTableName )
.head 9 -  Set cuCaches[ lnCacheIndex ].inLanguage = gnLanguage
.head 8 +  If lsElement4 = 'Y'
.head 9 -  Set lsElement2 = '# ' || lsElement2 || ' #'
.head 9 -  Set lsElement3 = '# ' || lsElement3 || ' #'
.head 8 -  Call ..AddRow( lsElement1, lsElement2, lsElement3 )
.head 8 -  Set cuCaches[ lnCacheIndex ].ibPopulated = TRUE
.head 8 -  Set cuCaches[ lnCacheIndex ].ibFilled = TRUE
.head 7 -  Return TRUE
.head 5 +  Function: ClearCache
.head 6 -  Description: Called on close
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCacheIndex
.head 6 +  Actions
.head 7 +  If GetCacheIndex( psTableName , lnCacheIndex )
.head 8 -  Call cuCaches[ lnCacheIndex ].Clear ( )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 3 +  Combo Box Class: clsCmbCached
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 2.0"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  String Type: Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsCachePool
.head 5 -  Class: clsCmbMultiLanguage
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! PUBLIC
.head 5 -  String: isDbValue
.head 5 -  String: isDbObsolete
.head 5 -  ! PRIVATE
.head 5 -  String: isTableName
.head 5 -  Number: inIndex
.head 5 -  String: isItem1
.head 5 -  String: isItem2
.head 5 -  String: isItem3
.head 5 -  String: isItem4
.head 5 -  Boolean: ibClicked
.head 4 +  Functions
.head 5 +  Function: AddRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: ps1
.head 7 -  String: ps2
.head 7 -  String: ps3
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call SalListAdd( hWndItem , ps1|| TAB || ps2 || TAB || ps3 )
.head 7 +  Select Case gnLanguage
.head 8 +  Case Language_NL
.head 9 -  Call SalListInsert( hWndItem, -1, ps2 )
.head 9 -  Break
.head 8 +  Case Language_FR
.head 9 -  Call SalListInsert( hWndItem, -1, ps3 )
.head 9 -  Break
.head 8 +  Default
.head 9 -  Break
.head 5 +  Function: DeleteAllRows
.head 6 -  Description: Late bound function for deleting the list
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalListClear( hWndItem )
.head 5 +  Function: SetTableName
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isTableName = psTableName
.head 5 +  Function: LookupDisplayValue
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 7 -  String: lsLabelNl
.head 7 -  String: lsLabelFr
.head 6 +  Actions
.head 7 +  If clsCmbCached.LookupElement( isTableName, isDbValue, lnCmbIndex, lsLabelNl, lsLabelFr, isDbObsolete )
.head 8 +  If clsCmbCached.IsPopulated(isTableName)
.head 9 -  Call SalListSetSelect( hWndItem, lnCmbIndex)
.head 8 +  Else
.head 9 +  Select Case gnLanguage
.head 10 +  Case Language_NL
.head 11 -  Set MyValue = lsLabelNl
.head 11 -  Break
.head 10 +  Case Language_FR
.head 11 -  Set MyValue = lsLabelFr
.head 11 -  Break
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Set MyValue = ''
.head 8 -  Return FALSE
.head 5 +  Function: First
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 7 -  String: lsLabelNl
.head 7 -  String: lsLabelFr
.head 6 +  Actions
.head 7 +  If clsCmbCached.FindFirst( isTableName, isDbValue, lnCmbIndex, lsLabelNl, lsLabelFr, isDbObsolete )
.head 8 +  If clsCmbCached.IsPopulated(isTableName)
.head 9 -  Call SalListSetSelect( hWndItem, lnCmbIndex)
.head 8 +  Else
.head 9 +  Select Case gnLanguage
.head 10 +  Case Language_NL
.head 11 -  Set MyValue = lsLabelNl
.head 11 -  Break
.head 10 +  Case Language_FR
.head 11 -  Set MyValue = lsLabelFr
.head 11 -  Break
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Set MyValue = ''
.head 8 -  Return FALSE
.head 5 +  Function: LookupDbValueNl
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 6 +  Actions
.head 7 +  If clsCmbCached.LookupValueNl( isTableName, MyValue, lnCmbIndex, isDbValue, isDbObsolete  )
.head 8 -  Call SalListSetSelect( hWndItem, lnCmbIndex)
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 5 +  Function: LookupDbValueFr
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 6 +  Actions
.head 7 +  If clsCmbCached.LookupValueFr( isTableName, MyValue, lnCmbIndex, isDbValue, isDbObsolete )
.head 8 -  Call SalListSetSelect( hWndItem, lnCmbIndex)
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 5 -  !
.head 5 -  !
.head 5 -  ! /@@@@@ LS : 16/01/2002
.head 5 +  Function: GetLabelFr
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 7 -  String: lsLabelNl
.head 7 -  String: lsLabelFr
.head 6 +  Actions
.head 7 +  If clsCmbCached.LookupElement( isTableName, isDbValue, lnCmbIndex, lsLabelNl, lsLabelFr, isDbObsolete )
.head 8 +  If clsCmbCached.IsPopulated(isTableName)
.head 9 -  Return lsLabelFr
.head 8 +  Else
.head 9 -  Return lsLabelFr
.head 7 +  Else
.head 8 -  Return ''
.head 5 +  Function: GetLabelNl
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 7 -  String: lsLabelNl
.head 7 -  String: lsLabelFr
.head 6 +  Actions
.head 7 +  If clsCmbCached.LookupElement( isTableName, isDbValue, lnCmbIndex, lsLabelNl, lsLabelFr, isDbObsolete )
.head 8 +  If clsCmbCached.IsPopulated(isTableName)
.head 9 -  Return lsLabelNl
.head 8 +  Else
.head 9 -  Return lsLabelNl
.head 7 +  Else
.head 8 -  Return ''
.head 5 -  !
.head 5 +  Function: SetValue
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psValue
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isDbValue = psValue
.head 7 -  Return LookupDisplayValue(  )
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SetPopulated(isTableName, FALSE)
.head 6 -  !
.head 6 -  Call Populate ( isTableName )
.head 6 -  !
.head 6 -  Set ibClicked = FALSE
.head 5 +  ! On SAM_DropDown
.head 6 -  Call Populate ( isTableName )
.head 6 -  Call LookupDisplayValue(  )
.head 6 -  Set ibClicked = FALSE
.head 5 +  On SAM_Click
.head 6 -  Set inIndex = SalListQuerySelection( hWndItem )
.head 6 +  If inIndex!= LB_Err
.head 7 +  If GetElement(isTableName, inIndex, isItem1, isItem2, isItem3, isItem4 )
.head 8 +  If isItem4 != 'Y'
.head 9 -  Set isDbValue = isItem1
.head 9 -  Set isDbObsolete = 'N'
.head 8 +  Else
.head 9 -  Set isDbValue = ''
.head 9 -  Set isDbObsolete = 'Y'
.head 9 -  Call SalListSetSelect( hWndItem, -1 )
.head 7 +  Else
.head 8 -  Set isDbValue = ''
.head 8 -  Set isDbObsolete = ''
.head 7 -  Set ibClicked =  TRUE
.head 7 -  Call SalSendValidateMsg(  )
.head 5 +  On PAM_Language
.head 6 -  Call clsCmbCached.SortCache( isTableName)
.head 6 -  Call LookupDisplayValue()
.head 5 +  On PAM_Clear
.head 6 -  Set isDbValue = ''
.head 6 -  Set isDbObsolete = ''
.head 5 +  On SAM_Validate
.head 6 +  If Not ibClicked
.head 7 +  If MyValue = ''
.head 8 -  Set isDbValue = ''
.head 7 +  Else
.head 8 +  Select Case gnLanguage  
.head 9 +  Case Language_NL
.head 10 +  If LookupDbValueNl()
.head 11 -  Return VALIDATE_Ok
.head 10 +  Else
.head 11 -  Return VALIDATE_Cancel
.head 10 -  Break
.head 9 +  Case Language_FR
.head 10 +  If LookupDbValueFr()
.head 11 -  Return VALIDATE_Ok
.head 10 +  Else
.head 11 -  Return VALIDATE_Cancel
.head 10 -  Break
.head 6 +  Else
.head 7 -  Set ibClicked = FALSE
.head 5 +  On SAM_AnyEdit
.head 6 -  Call SalSendMsg( hWndItem, CB_SHOWDROPDOWN, TRUE, TRUE )
.head 6 -  ! Call SalPostMsg( hWndItem, CB_SETEDITSEL, 0, 0x00010001 )
.head 3 +  Column Class: clsColCmbCached
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description: Column with combo box, cached.
.head 4 +  Derived From
.head 5 -  Class: clsCachePool
.head 5 -  Class: clsColMultiLanguage
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! PRIVATE
.head 5 -  String: isTableName
.head 5 -  Number: inIndex
.head 5 -  String: isItem1
.head 5 -  String: isItem2
.head 5 -  String: isItem3
.head 5 -  String: isItem4
.head 4 +  Functions
.head 5 +  Function: AddRow
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: ps1
.head 7 -  String: ps2
.head 7 -  String: ps3
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call SalListAdd( hWndItem , ps1|| TAB || ps2 || TAB || ps3 )
.head 7 +  Select Case gnLanguage
.head 8 +  Case Language_NL
.head 9 -  Call SalListInsert( hWndItem, -1, ps2 )
.head 9 -  Break
.head 8 +  Case Language_FR
.head 9 -  Call SalListInsert( hWndItem, -1, ps3 )
.head 9 -  Break
.head 8 +  Default
.head 9 -  Break
.head 5 +  Function: DeleteAllRows
.head 6 -  Description: Late bound function for deleting the list
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalListClear( hWndItem )
.head 5 +  Function: SetTableName
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psTableName
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set isTableName = psTableName
.head 5 +  Function: LookupDisplayValue
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnColIDCode
.head 7 -  Receive String: psDbValid
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnCmbIndex
.head 7 -  String: lsColText
.head 7 -  String: lsLabelNl
.head 7 -  String: lsLabelFr
.head 6 +  Actions
.head 7 -  Call SalTblGetColumnText( hWndForm, pnColIDCode, lsColText )
.head 7 +  If clsCmbCached.LookupElement( isTableName, lsColText, lnCmbIndex, lsLabelNl, lsLabelFr, psDbValid )
.head 8 +  If clsCmbCached.IsPopulated(isTableName)
.head 9 -  Call SalListSetSelect( hWndItem, lnCmbIndex)
.head 8 +  Else
.head 9 +  Select Case gnLanguage
.head 10 +  Case Language_NL
.head 11 -  Set MyValue = lsLabelNl
.head 11 -  Break
.head 10 +  Case Language_FR
.head 11 -  Set MyValue = lsLabelFr
.head 11 -  Break
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 5 +  Function: SetDbValue
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnColIDCode
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set inIndex = SalListQuerySelection( hWndItem )
.head 7 +  If inIndex != LB_Err
.head 8 +  If GetElement(isTableName, inIndex, isItem1, isItem2, isItem3, isItem4 )
.head 9 -  Call SalTblSetColumnText( hWndForm, pnColIDCode, isItem1 )
.head 4 -  List Values
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SetPopulated(isTableName, FALSE)
.head 6 -  !
.head 6 -  Call Populate ( isTableName )
.head 5 +  On SAM_AnyEdit
.head 6 -  Set inIndex = SalListQuerySelection( hWndItem )
.head 6 +  If inIndex != LB_Err
.head 7 +  If GetElement(isTableName, inIndex, isItem1, isItem2, isItem3, isItem4 )
.head 8 +  If isItem4 = 'Y'
.head 9 -  Set MyValue = ''
.head 5 +  On PAM_Language
.head 6 -  Call clsCmbCached.SortCache( isTableName)
.head 6 -  ! Call LookupDisplayValue()
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  ! Classes in LANGUAGE.APL --------------------------------------------------------------------------------------------
.head 3 +  Functional Class: Language
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalMessageBox( 'Error', 'The LBF-function is not defined. Please contact your administrator', MB_Ok )
.head 7 -  Return FALSE
.head 3 +  General Window Class: clsMultiLanguage
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: Language
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On PAM_Language
.head 6 -  Call ..LanguageTranslate(wParam)
.head 3 +  Background Text Class: clsBgdMultiLanguage
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Title:
.head 4 -  Justify: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 -  Derived From
.head 3 +  Check Box Class: clsCbMultiLanguage
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndItem, sLabel )
.head 8 -  Call SalInvalidateWindow( hWndItem )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Child Table Class: clsChildTblMultiLanguage
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 5 -  Class: cResizeChildTable
.head 4 -  Contents
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 +  Column Class: clsColMultiLanguage
.head 4 -  Title:
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Data Type: Class Default
.head 4 -  Justify: Class Default
.head 4 -  Width:  Class Default
.head 4 -  Width Editable? Class Default
.head 4 -  Format: Class Default
.head 4 -  Country: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Cell Options
.head 5 -  Cell Type? Class Default
.head 5 -  Multiline Cell? Class Default
.head 5 -  Cell DropDownList
.head 6 -  Sorted? Class Default
.head 6 -  Vertical Scroll? Class Default
.head 6 -  Auto Drop Down? Class Default
.head 6 -  Allow Text Editing? Class Default
.head 5 -  Cell CheckBox
.head 6 -  Check Value:
.head 6 -  Uncheck Value:
.head 6 -  Ignore Case? Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalTblSetColumnTitle( hWndItem, sLabel )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  List Values
.head 4 -  Message Actions
.head 3 +  Combo Box Class: clsCmbMultiLanguage
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  String Type: Class Default
.head 4 -  Maximum Data Length: Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Always Show List? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 +  Data Field Class: clsDfMultiLanguage
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Dialog Box Class: clsDlgMultiLanguage
.head 4 -  Title:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Type of Dialog: Modal
.head 5 -  Allow Dock to Parent? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Absolute Screen Location? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndForm, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndForm, sLabel )
.head 8 -  Call SalUpdateWindow( hWndForm )
.head 8 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 +  Form Window Class: clsFrmMultiLanguage
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 +  Instance Variables
.head 5 -  String: __GroupboxTranslations[*,4]
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndForm, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndForm, sLabel )
.head 8 -  Call SalUpdateWindow( hWndForm )
.head 8 -  Set bResult = TRUE
.head 7 -  Call __TranslateGroupbox( )
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Language, pnLanguage, 0 )
.head 7 -  Call SalSendMsg( hWndForm, PAM_TranslateTabLabels, pnLanguage, 0 )
.head 7 -  Return bResult
.head 5 +  Function: LBFTranslateGroupbox
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 -  Actions
.head 5 +  Function: __TranslateGroupbox
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: i
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 7 -  Window Handle: whWnd
.head 6 +  Actions
.head 7 -  Call LockWindowUpdate( hWndForm )
.head 7 -  Call SalArrayGetLowerBound( __GroupboxTranslations, 1, nMin )
.head 7 -  Call SalArrayGetUpperBound( __GroupboxTranslations, 1, nMax )
.head 7 -  Set whWnd = SalGetFirstChild( hWndForm, TYPE_GroupBox )
.head 7 -  Set i = 0
.head 7 +  While whWnd != hWndNULL
.head 8 -  Set i = i + 1
.head 8 -  Call SalSetWindowText( whWnd, __GroupboxTranslations[i,gnLanguage] )
.head 8 -  Set whWnd = SalGetNextChild( whWnd, TYPE_GroupBox )
.head 7 -  Call ..LBFTranslateGroupbox( )
.head 7 -  Call LockWindowUpdate( hWndNULL )
.head 5 +  Function: SetGroupboxTranslation
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnLng
.head 7 -  Number: pnTabs
.head 7 -  String: psLabel
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set __GroupboxTranslations[ pnTabs, pnLng ] = psLabel
.head 4 +  Message Actions
.head 5 +  On SAM_CreateComplete
.head 6 -  Call SalPostMsg( hWndMDI, PAM_MenuLanguage, gnLanguage, 0 )
.head 5 +  On SAM_Create
.head 6 -  Call LockWindowUpdate( hWndMDI )
.head 5 +  On SAM_Close
.head 6 -  Call LockWindowUpdate( hWndMDI )
.head 6 -  Call SalPostMsg( hWndMDI, PAM_MenuLanguage, gnLanguage, 0 )
.head 5 +  On SAM_Activate
.head 6 -  Call LockWindowUpdate( hWndMDI )
.head 6 -  Call SalPostMsg( hWndMDI, PAM_MenuLanguage, gnLanguage, 0 )
.head 3 +  List Box Class: clsLbMultiLanguage
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Multiple selection? Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 +  MDI Window Class: clsMdiMultiLanguage
.head 4 -  Title:
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Yes
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Yes
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndMDI, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndMDI, sLabel )
.head 8 -  Call SalUpdateWindow( hWndMDI )
.head 8 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndMDI, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 +  Multiline Field Class: clsMlMultiLanguage
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  String Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Border? Class Default
.head 5 -  Word Wrap? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Option Button Class: clsObMultiLanguage
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Button Style: Radio
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 5 -  Class: clsDisableField
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndItem, sLabel )
.head 8 -  Call SalUpdateWindow( hWndItem )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Pushbutton Class: clsPbMultiLanguage
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndItem, sLabel )
.head 8 -  Call SalUpdateWindow( hWndItem )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Quest Child Window Class: clsQuestChildWndMultiLanguage
.data INHERITQUEST
0000: 0100
.enddata
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Auto Execute? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 -  Object Links
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowLabelText( hWndItem, sLabel )
.head 8 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndItem, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 +  Quest Table Window Class: clsQuestTableWndMultiLanguage
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? No
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Yes
.head 5 -  Initial State: Normal
.head 5 -  Maximizable? Yes
.head 5 -  Minimizable? Yes
.head 5 -  System Menu? Yes
.head 5 -  Resizable? Yes
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 5 -  Allow Child Docking? Yes
.head 5 -  Docking Orientation: All
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Default
.head 5 -  Discardable? No
.head 4 -  Auto Execute? Yes
.head 4 -  Next Class Child Key: 1
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Object Links
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndForm, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndForm, sLabel )
.head 8 -  Call SalUpdateWindow( hWndForm )
.head 8 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 +  Radio Button Class: clsRbMultiLanguage
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If GetLabelLanguage( hWndItem, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndItem, sLabel )
.head 8 -  Call SalInvalidateWindow( hWndItem )
.head 8 -  Return TRUE
.head 7 +  Else
.head 8 -  Return FALSE
.head 4 -  Message Actions
.head 3 +  Table Window Class: clsTblMultiLanguage
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: ,,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: clsMultiLanguage
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 +  Class Variables
.head 5 -  String: sLabel
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  Function: LanguageTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: pnLanguage
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bResult
.head 6 +  Actions
.head 7 -  Set bResult = FALSE
.head 7 +  If GetLabelLanguage( hWndForm, pnLanguage, sLabel )
.head 8 -  Call SalSetWindowText( hWndForm, sLabel )
.head 8 +  Call SalUpdateWindow( hWndForm )
.head 9 -  Set bResult = TRUE
.head 7 -  Call SalSendMsgToChildren( hWndForm, PAM_Language, pnLanguage, 0 )
.head 7 -  Return bResult
.head 4 -  Message Actions
.head 3 -  ! ----------------------------------------------------------------------------------------------------------------------------------------
.head 3 -  !
.head 3 -  !
.head 3 -  ! Classe pour les ToolTips
.head 3 -  !
.head 3 +  General Window Class: DynaToolTip
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  ! Class: cTableHittest
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! Number: i_nItemHeight
.head 5 -  ! Number: i_nTopItem
.head 5 -  ! Number: i_nOffset
.head 5 -  ! Number: i_nItem
.head 5 -  ! Number: i_nPreviousItem
.head 5 -  ! Boolean: i_bTipSet
.head 5 -  String: i_sTipText
.head 4 +  Functions
.head 5 +  Function: GetTipText
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  Number: p_nDataItem
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return STRING_Null
.head 5 +  Function: GetItemHeight
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return -1
.head 5 +  Function: GetTopItem
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return -1
.head 5 +  Function: GetOffset
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return 0
.head 4 +  Message Actions
.head 5 +  ! On SAM_Create
.head 6 -                           Set i_nPreviousItem = -1
.head 5 +  On WM_MOUSEMOVE
.head 6 +  If i_sTipText != ''
.head 7 -  Call TTAddTool( hWndItem, i_sTipText,  i_sTipText )
.head 3 +  Pushbutton Class: DynaToolTipPushbutton
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: DynaToolTip
.head 5 -  Class: cQuickTipPushbutton
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 +  ! Function: GetTipText
.head 6 -  Description: 
.head 6 +  Returns 
.head 7 -  String: 
.head 6 +  Parameters 
.head 7 -  Number: p_nDataItem
.head 6 -  Static Variables 
.head 6 -  Local variables 
.head 6 +  Actions 
.head 7 -  Return i_sTipText
.head 5 +  ! Function: SetTipText
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: psText_NL
.head 7 -  String: psText_FR
.head 7 -  String: psText_DE
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  String: s
.head 6 +  Actions 
.head 7 +  Select Case gnLanguage
.head 8 +  Case Language_NL
.head 9 -  Set s = psText_NL
.head 9 -  Break 
.head 8 +  Case Language_DE
.head 9 -  Set s = psText_DE
.head 9 -  Break 
.head 8 +  Default 
.head 9 -  Set s = psText_FR
.head 9 -  Break 
.head 7 -  Call cQuickTipPushbutton.AddTool( hWndItem, s, s, FALSE )
.head 5 +  Function: SetTipText
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: ps
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: s
.head 6 +  Actions
.head 7 +  ! Select Case gnLanguage
.head 8 +  Case Language_NL
.head 9 -  Set s = psText_NL
.head 9 -  Break 
.head 8 +  Case Language_DE
.head 9 -  Set s = psText_DE
.head 9 -  Break 
.head 8 +  Default 
.head 9 -  Set s = psText_FR
.head 9 -  Break 
.head 7 -  Call cQuickTipPushbutton.AddTool( hWndItem, ps, ps, FALSE )
.head 4 -  Message Actions
.head 3 -  !
.head 3 -  !
.head 3 -  !
.head 3 -  ! !
.head 3 -  ! ! resize and align:
.head 3 -  ! !
.head 3 +  ! ! What is "resizing"?
.head 4 -  ! "Resizing" means, that a control (like table windows, listboxes, etc.) changes its
  size whenever the form changes its size. The control's borders maintain a fixed
  distance to the right or bottom border of the parent window.
.head 3 +  ! ! What is "aligning"?
.head 4 -  ! "Aligning" means, that a control changes its relative position to the top or the
  bottom (or both) of the parent form, whenever its parent form's size changes. The
  controls maintain a fixed distance to the right or bottom border of the parent window.
.head 3 +  ! ! How can I achieve this?
.head 4 -  ! First you have to derive a class (for example a child table) from cControlParent and
  drop it on a cFormWindow. Then call the Init-functions of the control during creation
  of the form. If you want a minimum size or position for the control, call SetMinInfo()
  additionally. That's all
.head 3 -  ! !
.head 3 +  General Window Class: cResizeControlParent
.head 4 -  Description: Use this as a common parent for all controls that need to
handle resizing of the parent form.
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! internal variables:
.head 5 -  Boolean: m_ResizeRight
.head 5 -  Boolean: m_ResizeBottom
.head 5 -  Boolean: m_AlignWidth
.head 5 -  Boolean: m_AlignHeight
.head 5 -  Number: m_DX	! distance to the right border of the parent form
.head 5 -  Number: m_DY	! distance to the bottom border of the parent form
.head 5 -  Number: m_MinX	! minimum x-position or minimum-width (depends on fStyle)
.head 5 -  Number: m_MinY	! minimum y-position or minimum-height (depends on fStyle)
.head 5 -  Number: m_LastW	! store last width
.head 5 -  Number: m_LastH	! store last height
.head 4 +  Functions
.head 5 -  !
.head 5 -  ! Initialize the control:
.head 5 +  Function: InitResize_Move
.head 6 -  Description: Call InitResize_Move( bResizeRight, bResizeBottom )
<bResizeRight>	TRUE: resize width, when parent's width changes
<bResizeBottom>	TRUE: resize height, when parent's height changes

Use this function to define the resize parameters.
Depending on the parameters the control maintains it's size
relatively to the right/bottom border of the parent form
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: ResizeRight
.head 7 -  Boolean: ResizeBottom
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! helpers:
.head 7 -  Number: x
.head 7 -  Number: y
.head 7 -  Number: w
.head 7 -  Number: h
.head 6 +  Actions
.head 7 -  ! set Style according to parameters:
.head 7 -  Set m_ResizeRight = ResizeRight
.head 7 -  Set m_ResizeBottom = ResizeBottom
.head 7 -  ! where am I and who's my parent form?
.head 7 -  Call SalGetWindowLoc( hWndItem, x, y )
.head 7 -  Call SalGetWindowSize( SalParentWindow( hWndItem ), w, h )
.head 7 -  ! store the distance from right/bottom border for later use:
.head 7 -  Set m_DX = w - x
.head 7 -  Set m_DY = h - y
.head 5 +  Function: InitResize_Align
.head 6 -  Description: Call InitResize_Align( bAlignWidth, bAlignHeight )
<bAlignWidth>	TRUE: align x-position, when parent's width changes
<bAlignHeight>	TRUE: align y-position, when parent's height changes

Use this function to define the align parameters.
Depending on the parameters the control maintains it's position
relatively to the right/bottom border of the parent form
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: AlignWidth
.head 7 -  Boolean: AlignHeight
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! helpers:
.head 7 -  Number: x
.head 7 -  Number: y
.head 7 -  Number: w
.head 7 -  Number: h
.head 7 -  Number: pw
.head 7 -  Number: ph
.head 6 +  Actions
.head 7 -  ! set Style according to parameters:
.head 7 -  Set m_AlignWidth = AlignWidth
.head 7 -  Set m_AlignHeight = AlignHeight
.head 7 -  ! where am I, who's my parent form and how big am I?
.head 7 -  Call SalGetWindowLoc( hWndItem, x, y )
.head 7 -  Call SalGetWindowSize( SalParentWindow( hWndItem ), pw, ph )
.head 7 -  Call SalGetWindowSize( hWndItem, w, h )
.head 7 -  ! store distance from borders:
.head 7 -  Set m_DX = pw - (x + w)
.head 7 -  Set m_DY = ph - (y + h)
.head 7 -  ! set minimum values to default:
.head 7 -  Set m_MinX = 0.2
.head 7 -  Set m_MinY = 0.2
.head 5 -  !
.head 5 -  ! set the minimum X/Y positions or minimum width/height:
.head 5 +  Function: SetMinInfo
.head 6 -  Description: Call SetMinInfo( nMinX, nMinY )
if initialized via InitResize_Move, MinX/MinY are minimum positions
if initialized via InitResize_Align, MinX/MinY are minimum sizes
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: MinX
.head 7 -  Number: MinY
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set m_MinX = MinX
.head 7 -  Set m_MinY = MinY
.head 5 +  Function: SetMinInfoPos
.head 6 -  Description: Call SetMinInfo( nMinX, nMinY )
if initialized via InitResize_Move, MinX/MinY are minimum positions
if initialized via InitResize_Align, MinX/MinY are minimum sizes
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: MinX
.head 7 -  Number: MinY
.head 6 +  Actions
.head 7 -  Call SalGetWindowLoc( hWndItem, MinX, MinY )
.head 7 -  Call SetMinInfo( MinX, MinY )
.head 5 +  Function: SetMinInfoSize
.head 6 -  Description: Call SetMinInfo( nMinX, nMinY )
if initialized via InitResize_Move, MinX/MinY are minimum positions
if initialized via InitResize_Align, MinX/MinY are minimum sizes
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: MinX
.head 7 -  Number: MinY
.head 6 +  Actions
.head 7 -  Call SalGetWindowSize( hWndItem, MinX, MinY )
.head 7 -  Call SetMinInfo( MinX, MinY )
.head 5 -  !
.head 5 -  ! internal:
.head 5 +  Function: __OnFormResize
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! and again we need some helpers:
.head 7 -  Number: w
.head 7 -  Number: h
.head 7 -  Number: NewX
.head 7 -  Number: NewY
.head 7 -  Number: NewW
.head 7 -  Number: NewH
.head 6 +  Actions
.head 7 -  ! At first we need the current size of our parent window:
.head 7 -  Call SalGetWindowSize( SalParentWindow( hWndItem ), w, h )
.head 7 -  ! I that size didn't change, we don't need to do anything:
.head 7 +  If (w != m_LastW) or (h != m_LastH)
.head 8 -  ! save current width/height of parent form for the next time:
.head 8 -  Set m_LastW = w
.head 8 -  Set m_LastH = h
.head 8 -  ! Is this a "glue" control?
.head 8 +  If m_ResizeRight or m_ResizeBottom
.head 9 -  ! where am I?
.head 9 -  Call SalGetWindowLoc( hWndItem, NewX, NewY )
.head 9 -  ! if glued to right border, then calculate new x-position
.head 9 +  If m_ResizeRight
.head 10 -  Set NewX = w - m_DX
.head 10 +  If (m_MinX > 0) and (NewX < m_MinX)
.head 11 -  Set NewX = m_MinX
.head 9 -  ! if glued to bottomt border, then calculate new y-position
.head 9 +  If m_ResizeBottom
.head 10 -  Set NewY = h - m_DY
.head 10 +  If (m_MinY > 0) and (NewY < m_MinY)
.head 11 -  Set NewY = m_MinY
.head 9 -  ! now set the new position and repaint myself:
.head 9 -  Call SalSetWindowLoc( hWndItem, NewX, NewY )
.head 9 -  Call SalInvalidateWindow( hWndItem )
.head 8 -  ! is this a "resize" control?
.head 8 +  If m_AlignWidth or m_AlignHeight
.head 9 -  ! where am I and how big am I?
.head 9 -  Call SalGetWindowSize( hWndItem, NewW, NewH )
.head 9 -  Call SalGetWindowLoc( hWndItem, NewX, NewY )
.head 9 -  ! if width aligned, then calculate new width
.head 9 +  If m_AlignWidth
.head 10 -  Set NewW = __Max( m_MinX, w - NewX - m_DX )
.head 9 -  ! if height aligned, then calculate new height
.head 9 +  If m_AlignHeight
.head 10 -  Set NewH = __Max( m_MinY, h - NewY - m_DY )
.head 9 -  ! now set the new width and repaint myself:
.head 9 -  Call SalSetWindowSize( hWndItem, NewW, NewH )
.head 9 -  Call SalInvalidateWindow( hWndItem )
.head 8 -  ! we're done.
.head 5 +  Function: __Max
.head 6 -  Description: returns the higher one of two given numbers
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Number: N1
.head 7 -  Number: N2
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If N1 > N2
.head 8 -  Return N1
.head 7 -  Return N2
.head 4 +  Message Actions
.head 5 +  On PM_FORM_RESIZED
.head 6 -  ! This Message handler get's called by the parent form (if the
  form is derived from cFormWindow) every time, the size of
  the parent form has changed.
.head 6 -  ! /##### LS : 18/08/2003
.head 6 -  Call __OnFormResize()
.head 6 -  ! \##### LS : 18/08/2003
.head 3 +  Form Window Class: cResizeFormWindow
.head 4 -  Title:
.head 4 -  Icon File:
.head 4 -  Accessories Enabled? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Display Settings
.head 5 -  Display Style? Class Default
.head 5 -  Visible at Design time? Yes
.head 5 -  Automatically Created at Runtime? Class Default
.head 5 -  Initial State: Class Default
.head 5 -  Maximizable? Class Default
.head 5 -  Minimizable? Class Default
.head 5 -  Allow Child Docking? Class Default
.head 5 -  Docking Orientation: Class Default
.head 5 -  System Menu? Class Default
.head 5 -  Resizable? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Form Size
.head 6 -  Width:  Class Default
.head 6 -  Height: Class Default
.head 6 -  Number of Pages: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description: Class to be used as the parent of a resizable form.
It handles the WM_SIZE (0x0005) message and informs all the child
controls when the parent size has changed. It also avoids
unnecessary resizing during the creation process.

Important:
  SAM_Create and SAM_CreateComplete are implemented which means
  you have to place SalSendClassMessage( SAM_..., wParam, lParam )
  in overriden message actions.
.head 4 -  Derived From
.head 4 -  Menu
.head 4 +  Tool Bar
.head 5 -  Display Settings
.head 6 -  Display Style? Default
.head 6 -  Location? Top
.head 6 -  Visible? Yes
.head 6 -  Size: Default
.head 6 -  Size Editable? Yes
.head 6 -  Docking Toolbar? Class Default
.head 6 -  Toolbar Docking Orientation: Class Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Default
.head 6 -  Background Color: Class Default
.head 6 -  Resizable? Class Default
.head 5 -  Contents
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! needed to suppress resizing during creation of the parent form:
.head 5 -  Number: iv_nArrGroupBox_hWnd[*]		! Window handles of group boxes in number format
.head 5 -  Boolean: iv_bArrGroupBox_ResizeRight[*]
.head 5 -  Boolean: iv_bArrGroupBox_ResizeBottom[*]
.head 5 -  Boolean: iv_bArrGroupBox_AlignWidth[*]
.head 5 -  Boolean: iv_bArrGroupBox_AlignHeight[*]
.head 5 -  Number: iv_nArrGroupBox_DX[*]		! distance to the right border of the parent form
.head 5 -  Number: iv_nArrGroupBox_DY[*]		! distance to the bottom border of the parent form
.head 5 -  Number: iv_nArrGroupBox_MinX[*]		! minimum x-position or minimum-width (depends on fStyle)
.head 5 -  Number: iv_nArrGroupBox_MinY[*]		! minimum y-position or minimum-height (depends on fStyle)
.head 5 -  Number: iv_nArrGroupBox_LastW[*]	! store last width
.head 5 -  Number: iv_nArrGroupBox_LastH[*]	! store last height
.head 5 -  ! Added to save the initial size of form window
.head 5 -  Number: iv_ParentWindow_Width
.head 5 -  Number: iv_ParentWindow_Height
.head 5 -  !
.head 5 -  Number: iv_Tmp1
.head 5 -  Number: iv_Tmp2
.head 4 +  Functions
.head 5 -  ! Late Bound Function
.head 5 +  Function: M_InitResize_GroupBoxes
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Window Handle: lhWndGroupBox
.head 7 -  Number: lnSeq
.head 7 -  !
.head 7 -  Number: lnWidth
.head 7 -  Number: lnHeigth
.head 6 +  Actions
.head 7 -  Set lnSeq = 1
.head 7 -  Set lhWndGroupBox = SalGetFirstChild( hWndForm, TYPE_GroupBox )
.head 7 +  While lhWndGroupBox != hWndNULL
.head 8 -  ! Define  minimal window size as window size in development environment
.head 8 -  Call SalGetWindowSize( lhWndGroupBox, lnWidth, lnHeigth )
.head 8 -  Call SetMinInfo_OneGroupBox(lhWndGroupBox,  lnWidth, lnHeigth )
.head 8 -  !
.head 8 -  ! Set options for each group box, same order as in outline !!
.head 8 -  ! Criteria
.head 8 +  If lnSeq = 1
.head 9 -  Call InitResize_Align_OneGroupBox( lhWndGroupBox, TRUE, FALSE )
.head 8 -  ! Partner
.head 8 +  If lnSeq = 2
.head 9 -  Call InitResize_Align_OneGroupBox( lhWndGroupBox, TRUE, FALSE )
.head 8 -  ! Et cetera.......
.head 8 -  !
.head 8 -  Set lhWndGroupBox =  SalGetNextChild( lhWndGroupBox, TYPE_GroupBox )
.head 8 -  Set lnSeq = lnSeq + 1
.head 5 -  !
.head 5 +  Function: InitResize_Move_OneGroupBox
.head 6 -  Description: Call InitResize_Move( phWndGBox, pbResizeRight, pbResizeBottom )
<phWndGBox>	Window Handle of group box
<pbResizeRight>	TRUE: resize width, when parent's width changes
<pbResizeBottom>	TRUE: resize height, when parent's height changes

Use this function to define the resize parameters.
Depending on the parameters the control maintains it's size
relatively to the right/bottom border of the parent form
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndGbox
.head 7 -  Boolean: pbResizeRight
.head 7 -  Boolean: pbResizeBottom
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! helpers:
.head 7 -  Number: lnObject_X
.head 7 -  Number: lnObject_Y
.head 7 -  Number: lnParentWidth
.head 7 -  Number: lnParentHeight
.head 7 -  !
.head 7 -  Number: lnIndex
.head 7 -  Number: lnhWndGbNumber
.head 6 +  Actions
.head 7 -  ! Find index
.head 7 -  Set lnhWndGbNumber = SalWindowHandleToNumber( phWndGbox )
.head 7 -  Set lnIndex =  VisArrayFindNumber( iv_nArrGroupBox_hWnd, lnhWndGbNumber )
.head 7 -  !
.head 7 +  If lnIndex < 0
.head 8 -  Call SalArrayGetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex )
.head 8 -  Call SalArraySetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex + 1 )
.head 8 -  Set iv_nArrGroupBox_hWnd[lnIndex] = lnhWndGbNumber
.head 7 -  !
.head 7 -  Set iv_nArrGroupBox_hWnd[lnIndex] = lnhWndGbNumber
.head 7 -  ! set Style according to parameters:
.head 7 -  Set iv_bArrGroupBox_ResizeRight[lnIndex] = pbResizeRight
.head 7 -  Set iv_bArrGroupBox_ResizeBottom[lnIndex] = pbResizeBottom
.head 7 -  ! where am I and who's my parent form?
.head 7 -  Call SalGetWindowLoc( phWndGbox, lnObject_X, lnObject_Y )
.head 7 -  Call SalGetWindowSize( SalParentWindow( phWndGbox ), lnParentWidth, lnParentHeight )
.head 7 -  ! store the distance from right/bottom border for later use:
.head 7 -  Set iv_nArrGroupBox_DX[lnIndex] = lnParentWidth - lnObject_X
.head 7 -  Set iv_nArrGroupBox_DY[lnIndex] = lnParentHeight - lnObject_Y
.head 5 +  Function: InitResize_Align_OneGroupBox
.head 6 -  Description: Call InitResize_Align( bAlignWidth, bAlignHeight )
<bAlignWidth>	TRUE: align x-position, when parent's width changes
<bAlignHeight>	TRUE: align y-position, when parent's height changes

Use this function to define the align parameters.
Depending on the parameters the control maintains it's position
relatively to the right/bottom border of the parent form
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndGbox
.head 7 -  Boolean: pbAlignWidth
.head 7 -  Boolean: pbAlignHeight
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! helpers:
.head 7 -  Number: lnObject_X
.head 7 -  Number: lnObject_Y
.head 7 -  Number: lnObject_Width
.head 7 -  Number: lnObject_Height
.head 7 -  Number: lnParentWidth
.head 7 -  Number: lnParentHeight
.head 7 -  !
.head 7 -  Number: lnIndex
.head 7 -  Number: lnhWndGbNumber
.head 7 -  Number: lnNew
.head 6 +  Actions
.head 7 -  ! Find index
.head 7 -  Set lnhWndGbNumber = SalWindowHandleToNumber( phWndGbox )
.head 7 -  Set lnIndex =  VisArrayFindNumber( iv_nArrGroupBox_hWnd, lnhWndGbNumber )
.head 7 -  !
.head 7 -  !
.head 7 +  If lnIndex < 0
.head 8 -  Call SalArrayGetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex )
.head 8 -  Call SalArraySetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex + 1 )
.head 8 -  Set iv_nArrGroupBox_hWnd[lnIndex] = lnhWndGbNumber
.head 7 -  !
.head 7 -  ! set Style according to parameters:
.head 7 -  Set iv_bArrGroupBox_AlignWidth[lnIndex] = pbAlignWidth
.head 7 -  Set iv_bArrGroupBox_AlignHeight[lnIndex] = pbAlignHeight
.head 7 -  ! where am I, who's my parent form and how big am I?
.head 7 -  Call SalGetWindowLoc( phWndGbox, lnObject_X, lnObject_Y )
.head 7 -  Call SalGetWindowSize( SalParentWindow( phWndGbox ), lnParentWidth, lnParentHeight )
.head 7 -  Call SalGetWindowSize( phWndGbox, lnObject_Width, lnObject_Height )
.head 7 -  ! store distance from borders:
.head 7 -  Set iv_nArrGroupBox_DX[lnIndex] = lnParentWidth - (lnObject_X + lnObject_Width)
.head 7 -  Set iv_nArrGroupBox_DY[lnIndex] = lnParentHeight - (lnObject_Y + lnObject_Height)
.head 7 -  ! set minimum values to default:
.head 7 -  Set iv_nArrGroupBox_MinX[lnIndex] = lnObject_Width
.head 7 -  Set iv_nArrGroupBox_MinY[lnIndex] = lnObject_Height
.head 5 +  Function: __OnFormResize_GroupBoxes
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Window Handle: lhWndGroupBox
.head 6 +  Actions
.head 7 -  Set lhWndGroupBox = SalGetFirstChild( hWndForm, TYPE_GroupBox )
.head 7 +  While lhWndGroupBox != hWndNULL
.head 8 -  !
.head 8 -  Call __OnFormResize_OneGroupBox(lhWndGroupBox )
.head 8 -  !
.head 8 -  Set lhWndGroupBox =  SalGetNextChild( lhWndGroupBox, TYPE_GroupBox )
.head 5 +  Function: __OnFormResize_OneGroupBox
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndGbox
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! and again we need some helpers:
.head 7 -  Number: w
.head 7 -  Number: h
.head 7 -  Number: NewX
.head 7 -  Number: NewY
.head 7 -  Number: NewW
.head 7 -  Number: NewH
.head 7 -  !
.head 7 -  Number: lnIndex
.head 7 -  Number: lnhWndGbNumber
.head 6 +  Actions
.head 7 -  ! Find index
.head 7 -  Set lnhWndGbNumber = SalWindowHandleToNumber( phWndGbox )
.head 7 -  Set lnIndex =  VisArrayFindNumber( iv_nArrGroupBox_hWnd, lnhWndGbNumber )
.head 7 -  !
.head 7 +  If lnIndex >= 0
.head 8 -  !
.head 8 -  ! At first we need the current size of our parent window:
.head 8 -  Call SalGetWindowSize( SalParentWindow( phWndGbox ), w, h )
.head 8 -  ! I that size didn't change, we don't need to do anything:
.head 8 +  If (w != iv_nArrGroupBox_LastW[lnIndex]) or (h != iv_nArrGroupBox_LastH[lnIndex])
.head 9 -  ! save current width/height of parent form for the next time:
.head 9 -  Set iv_nArrGroupBox_LastW[lnIndex] = w
.head 9 -  Set iv_nArrGroupBox_LastH[lnIndex] = h
.head 9 -  ! Is this a "glue" control?
.head 9 +  If iv_bArrGroupBox_ResizeRight[lnIndex] or iv_bArrGroupBox_ResizeBottom[lnIndex]
.head 10 -  ! where am I?
.head 10 -  Call SalGetWindowLoc( phWndGbox, NewX, NewY )
.head 10 -  ! if glued to right border, then calculate new x-position
.head 10 +  If iv_bArrGroupBox_ResizeRight[lnIndex]
.head 11 -  Set NewX = w - iv_nArrGroupBox_DX[lnIndex]
.head 11 +  If (iv_nArrGroupBox_MinX[lnIndex] > 0) and (NewX < iv_nArrGroupBox_MinX[lnIndex])
.head 12 -  Set NewX = iv_nArrGroupBox_MinX[lnIndex]
.head 10 -  ! if glued to bottomt border, then calculate new y-position
.head 10 +  If iv_bArrGroupBox_ResizeBottom[lnIndex]
.head 11 -  Set NewY = h - iv_nArrGroupBox_DY[lnIndex]
.head 11 +  If (iv_nArrGroupBox_MinY[lnIndex] > 0) and (NewY < iv_nArrGroupBox_MinY[lnIndex])
.head 12 -  Set NewY = iv_nArrGroupBox_MinY[lnIndex]
.head 10 -  ! now set the new position and repaint myself:
.head 10 -  Call SalSetWindowLoc( phWndGbox, NewX, NewY )
.head 10 -  Call SalInvalidateWindow( phWndGbox )
.head 9 -  ! is this a "resize" control?
.head 9 +  If iv_bArrGroupBox_AlignWidth[lnIndex] or iv_bArrGroupBox_AlignHeight[lnIndex]
.head 10 -  ! where am I and how big am I?
.head 10 -  Call SalGetWindowSize( phWndGbox, NewW, NewH )
.head 10 -  Call SalGetWindowLoc( phWndGbox, NewX, NewY )
.head 10 -  ! if width aligned, then calculate new width
.head 10 +  If iv_bArrGroupBox_AlignWidth[lnIndex]
.head 11 -  Set NewW = __Max( iv_nArrGroupBox_MinX[lnIndex], w - NewX - iv_nArrGroupBox_DX[lnIndex] )
.head 10 -  ! if height aligned, then calculate new height
.head 10 +  If iv_bArrGroupBox_AlignHeight[lnIndex]
.head 11 -  Set NewH = __Max( iv_nArrGroupBox_MinY[lnIndex], h - NewY - iv_nArrGroupBox_DY[lnIndex] )
.head 10 -  ! now set the new width and repaint myself:
.head 10 -  Call SalSetWindowSize( phWndGbox, NewW, NewH )
.head 10 -  Call SalInvalidateWindow( phWndGbox )
.head 9 -  ! we're done.
.head 5 +  Function: SetMinInfo_OneGroupBox
.head 6 -  Description: Call SetMinInfo( nMinX, nMinY )
if initialized via InitResize_Move, MinX/MinY are minimum positions
if initialized via InitResize_Align, MinX/MinY are minimum sizes
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWndGbox
.head 7 -  Number: MinX
.head 7 -  Number: MinY
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  !
.head 7 -  Number: lnIndex
.head 7 -  Number: lnhWndGbNumber
.head 6 +  Actions
.head 7 -  ! Find index
.head 7 -  Set lnhWndGbNumber = SalWindowHandleToNumber( phWndGbox )
.head 7 -  Set lnIndex =  VisArrayFindNumber( iv_nArrGroupBox_hWnd, lnhWndGbNumber )
.head 7 -  !
.head 7 +  If lnIndex < 0
.head 8 -  Call SalArrayGetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex )
.head 7 -  !
.head 7 -  Call SalArrayGetUpperBound( iv_nArrGroupBox_hWnd, 1, lnIndex )
.head 7 -  !
.head 7 -  Set iv_nArrGroupBox_MinX[lnIndex] = MinX
.head 7 -  Set iv_nArrGroupBox_MinY[lnIndex] = MinY
.head 5 +  Function: __Max
.head 6 -  Description: returns the higher one of two given numbers
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Number: N1
.head 7 -  Number: N2
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If N1 > N2
.head 8 -  Return N1
.head 7 -  Return N2
.head 4 +  Message Actions
.head 5 +  On WM_SIZE
.head 6 -  ! Windows message: WM_SIZE = 0x0005. You can create a constant if you like
.head 6 -  ! This message handler doesn't do anything while the parent form
  is inside the creation process.
.head 6 -  Call LockWindowUpdate( hWndForm )
.head 6 -  !
.head 6 -  ! Form cannot be smaller than original size (added by wim vanhauwaert)
.head 6 -  Call SalGetWindowSize( hWndForm, iv_Tmp1, iv_Tmp2  )
.head 6 +  If iv_Tmp1 < iv_ParentWindow_Width Or  iv_Tmp2 < iv_ParentWindow_Height
.head 7 +  If iv_Tmp1 < iv_ParentWindow_Width
.head 8 -  Set iv_Tmp1 = iv_ParentWindow_Width
.head 7 +  If iv_Tmp2 < iv_ParentWindow_Height
.head 8 -  Set iv_Tmp2 = iv_ParentWindow_Height
.head 7 -  Call SalSetWindowSize( hWndForm, iv_Tmp1, iv_Tmp2  )
.head 6 -  ! inform all child controls about the resizing of the parent form:
.head 6 -  Call SalSendMsgToChildren( hWndForm, PM_FORM_RESIZED, 0, 0 )
.head 6 -  Call __OnFormResize_GroupBoxes( )
.head 6 -  !
.head 6 -  Call LockWindowUpdate( hWndNULL )
.head 5 +  On SAM_Create
.head 6 -  ! Set the flag that's used in the WM_SIZE message handler to avoid
unnecessary resizing during the creation process. The form is not yet visible.
.head 6 -  ! Set __bCreating = TRUE
.head 6 -  !
.head 6 -  ! Save initial size of form window
.head 6 -  ! !Call SalGetWindowSize( hWndForm, iv_ParentWindow_Width, iv_ParentWindow_Height )
.head 6 -  !
.head 6 -  ! Init resizable objects
.head 6 -  ! !Call SalSendMsgToChildren( hWndForm, PAM_InitResize, 0, 0 )
.head 6 -  ! Init resizable groupboxes
.head 6 -  ! !Call ..M_InitResize_GroupBoxes( )
.head 5 +  On SW_MAXIMIZE
.head 6 -  Call LockWindowUpdate( hWndForm )
.head 6 -  !
.head 6 -  ! inform all child controls about the resizing of the parent form:
.head 6 -  Call SalSendMsgToChildren( hWndForm, PM_FORM_RESIZED, 0, 0 )
.head 6 -  Call __OnFormResize_GroupBoxes( )
.head 6 -  !
.head 6 -  Call LockWindowUpdate( hWndNULL )
.head 3 -  ! !
.head 3 -  ! ! Examples:
.head 3 -  ! !
.head 3 -  ! ! The following example controls are derived from cControlParent. None
  of them implements any actions, they just inherit the resizing capability.
  If you need other controls to be resized/aligned feel free to derive
  additional classes.
.head 3 +  Child Table Class: cResizeChildTable
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  View: Class Default
.head 5 -  Allow Row Sizing? Class Default
.head 5 -  Lines Per Row: Class Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Class Default
.head 5 -  Discardable? Class Default
.head 4 -  Next Class Child Key: 0
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Contents
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  List Box Class: cResizeListBox
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Multiple selection? Class Default
.head 4 -  Sorted? Class Default
.head 4 -  Vertical Scroll? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  List Initialization
.head 4 -  Message Actions
.head 3 +  Pushbutton Class: cResizePushButton
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Single
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Button Appearance: Class Default
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Check Box Class: cResizeCheckBox
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Radio Button Class: cResizeRadioButton
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left:
.head 5 -  Top:
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 +  Data Field Class: cResizeDataField
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Class Default
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cResizeControlParent
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 -  Functions
.head 4 -  Message Actions
.head 3 -  ! !
.head 3 -  ! !
.head 3 -  ! ! end resize and align
.head 3 +  General Window Class: clsDisableField
.head 4 -  Description: Permet de gérer la couleur et l'envoi des caractères dans les zones des fenêtres.
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  ! /##### 17/10/2003
.head 5 -  ! Indique les cas où la zone doit être "grisée"
.head 5 -  Number: inDisableWhen
.head 5 -  ! Indique si les couleurs ont été initialisées
.head 5 -  Boolean: ibInit
.head 5 -  ! Indique que la zone doit toujours être disablée
.head 5 -  Boolean: ibAlwaysDisable
.head 5 -  ! Quand = TRUE, la variable inDIsableWhen indique quand la zone doit être accessible
.head 5 -  Boolean: ibNotWhen
.head 5 -  ! Indique si les différentes couleurs pour le texte ont été initialisées
.head 5 -  Boolean: ibInitTextCol[*]
.head 5 -  ! Indique si les différentes couleurs pour le fond ont été initialisées
.head 5 -  Boolean: ibInitBackgroundCol[*]
.head 5 -  ! Indique les différentes couleurs pour le texte
.head 5 -  Number: inTextColor[*]
.head 5 -  ! Indique les différentes couleurs pour le fond
.head 5 -  Number: inBackgroundColor[*]
.head 5 -  ! Indique la table qui doit servir à modifier le status des zones
.head 5 -  Number: iwhTable
.head 5 -  ! \##### 17/10/2003
.head 4 +  Functions
.head 5 -  ! /##### 17/10/2003
.head 5 +  Function: DisableObject
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nEtat
.head 7 -  Number: nWindow
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If ( iwhTable  = 0 ) or ( iwhTable = nWindow )
.head 8 +  If not ibInit 
.head 9 -  Call ..LBFDisableInit()
.head 9 -  ! Set inTextColorOn = COLOR_Black
.head 9 -  ! Set inTextColorOff = COLOR_Black
.head 9 +  If not ibInitTextCol[ FALSE ]
.head 10 -  ! Set inTextColor[FALSE] = COLOR_Black
.head 10 -  Set inTextColor[FALSE] = DisableDefTextColor( FALSE )
.head 9 +  If not ibInitTextCol[ TRUE ]
.head 10 -  ! Set inTextColor[TRUE] = COLOR_Black
.head 10 -  Set inTextColor[TRUE] = DisableDefTextColor( TRUE )
.head 9 +  If not ibInitBackgroundCol[ FALSE ]
.head 10 -  ! Set inBackgroundColor[FALSE] = COLOR_Default
.head 10 -  Set inBackgroundColor[FALSE] = DisableDefBackgroundColor( FALSE )
.head 9 +  If not ibInitBackgroundCol[ TRUE ]
.head 10 -  ! Set inBackgroundColor[TRUE] = COLOR_Default
.head 10 -  Set inBackgroundColor[TRUE] = DisableDefBackgroundColor( TRUE )
.head 9 -  Set ibInit = TRUE
.head 8 +  If ibAlwaysDisable 
.head 9 -  ! Call SalColorSet( hWndItem, COLOR_IndexWindowText, inTextColor[ TRUE ] )
.head 9 -  ! Call SalColorSet( hWndItem, COLOR_IndexWindow, inBackgroundColor[ TRUE ] )
.head 9 -  ! Call SalDisableWindow( hWndItem )
.head 9 -  ! Call PalDisableWindow( hWndItem, TRUE )
.head 9 +  Select Case PalMyDisableWindow( hWndItem, TRUE )
.head 10 -  Case TYPE_DataField
.head 10 -  Case TYPE_MultilineText
.head 10 +  Case TYPE_ComboBox
.head 11 -  Call SalColorSet( hWndItem, COLOR_IndexWindowText, inTextColor[ TRUE ] )
.head 11 -  Call SalColorSet( hWndItem, COLOR_IndexWindow, inBackgroundColor[ TRUE ] )
.head 11 -  Break
.head 10 -  Default
.head 8 +  Else
.head 9 -  Call ..LBFDisableObject( nEtat, nWindow )
.head 5 -  !
.head 5 +  Function: DisableSet
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: pbDisable
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If not ibInit 
.head 8 -  Call ..LBFDisableInit()
.head 8 -  ! Set inTextColorOn = COLOR_Black
.head 8 -  ! Set inTextColorOff = COLOR_Black
.head 8 +  ! If not ibInitTextCol[ FALSE ]
.head 9 -  Set inTextColor[FALSE] = COLOR_Black
.head 8 +  ! If not ibInitTextCol[ TRUE ]
.head 9 -  Set inTextColor[TRUE] = COLOR_Black
.head 8 +  ! If not ibInitBackgroundCol[ FALSE ]
.head 9 -  Set inBackgroundColor[FALSE] = COLOR_Default
.head 8 +  ! If not ibInitBackgroundCol[ TRUE ]
.head 9 -  Set inBackgroundColor[TRUE] = COLOR_Default
.head 8 +  If not ibInitTextCol[ FALSE ]
.head 9 -  ! Set inTextColor[FALSE] = COLOR_Black
.head 9 -  Set inTextColor[FALSE] = DisableDefTextColor( FALSE )
.head 8 +  If not ibInitTextCol[ TRUE ]
.head 9 -  ! Set inTextColor[TRUE] = COLOR_Black
.head 9 -  Set inTextColor[TRUE] = DisableDefTextColor( TRUE )
.head 8 +  If not ibInitBackgroundCol[ FALSE ]
.head 9 -  ! Set inBackgroundColor[FALSE] = COLOR_Default
.head 9 -  Set inBackgroundColor[FALSE] = DisableDefBackgroundColor( FALSE )
.head 8 +  If not ibInitBackgroundCol[ TRUE ]
.head 9 -  ! Set inBackgroundColor[TRUE] = COLOR_Default
.head 9 -  Set inBackgroundColor[TRUE] = DisableDefBackgroundColor( TRUE )
.head 8 -  Set ibInit = TRUE
.head 7 -  ! Call
.head 7 +  Select Case PalMyDisableWindow( hWndItem, pbDisable )
.head 8 -  Case TYPE_DataField
.head 8 -  Case TYPE_MultilineText
.head 8 +  Case TYPE_ComboBox
.head 9 -  Call SalColorSet( hWndItem, COLOR_IndexWindowText, inTextColor[ pbDisable ] )
.head 9 -  Call SalColorSet( hWndItem, COLOR_IndexWindow, inBackgroundColor[ pbDisable ] )
.head 9 -  Break
.head 8 -  Default
.head 5 +  Function: DisableWhen
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nParam
.head 7 -  Number: nWindow
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set ibNotWhen = FALSE
.head 7 -  Set inDisableWhen = nParam
.head 7 -  Set iwhTable = nWindow
.head 5 +  Function: DisableNotWhen
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nParam
.head 7 -  Number: nWindow
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set inDisableWhen = nParam
.head 7 -  Set ibNotWhen = TRUE
.head 7 -  Set iwhTable = nWindow
.head 5 +  Function: DisableAlways
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: bParam
.head 7 -  Number: nWindow
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set ibAlwaysDisable = bParam
.head 7 -  Set iwhTable = nWindow
.head 5 -  !
.head 5 +  Function: DisableSetTextColor
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: bStatus
.head 7 -  Number: nColor
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set inTextColor[ bStatus ] = nColor
.head 7 -  Set ibInitTextCol[bStatus] = TRUE
.head 7 -  Set ibInit =  iColInit()
.head 5 +  Function: DisableSetBackgroundColor
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Boolean: bStatus
.head 7 -  Number: nColor
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set inBackgroundColor[ bStatus ] = nColor
.head 7 -  Set ibInitBackgroundCol[bStatus] = TRUE
.head 7 -  Set ibInit = iColInit()
.head 5 -  !
.head 5 +  Function: DisableIsBackgroundColorSet
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Boolean: bEtat
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return ibInitBackgroundCol[bEtat]
.head 5 +  Function: DisableIsTextColorSet
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Boolean: bEtat
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return ibInitTextCol[bEtat]
.head 5 -  !
.head 5 +  Function: DisablePropIsReadOnly
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: n
.head 6 +  Actions
.head 7 -  Set n = GetWindowLongA( hWndItem, GWL_STYLE )
.head 7 -  Return ( n & 0x00800 ) != 0
.head 5 +  Function: DisableIsState
.head 6 -  Description: Permet de changer l'état de la zone. 

Il suffit de redéfinir cette fonction dans les classes dérivées pour changer le comportement d'une zone particulière.
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: nEtat
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bEtat
.head 6 +  Actions
.head 7 -  Set bEtat = FALSE
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_New
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_Edited
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_MarkDeleted
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_Selected
.head 8 -  Set bEtat = not ibNotWhen
.head 7 -  Return bEtat
.head 5 -  !
.head 5 +  Function: LBFDisableObject
.head 6 -  Description: Permet de changer l'état de la zone. 

Il suffit de redéfinir cette fonction dans les classes dérivées pour changer le comportement d'une zone particulière.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nEtat
.head 7 -  Number: nWindow
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bEtat
.head 6 +  Actions
.head 7 -  Set bEtat = ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_New
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_Edited
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_MarkDeleted
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  If ( nEtat & inDisableWhen ) = ROW_Selected
.head 8 -  Set bEtat = not ibNotWhen
.head 7 +  Select Case PalMyDisableWindow( hWndItem, bEtat )
.head 8 -  Case TYPE_DataField
.head 8 -  Case TYPE_MultilineText
.head 8 +  Case TYPE_ComboBox
.head 9 -  Call SalColorSet( hWndItem, COLOR_IndexWindowText, inTextColor[ bEtat ] )
.head 9 -  Call SalColorSet( hWndItem, COLOR_IndexWindow, inBackgroundColor[ bEtat ] )
.head 9 -  Break
.head 8 -  Default
.head 7 -  ! Call PalDisableWindow( hWndItem, bEtat )
.head 7 -  ! Call SalColorSet( hWndItem, COLOR_IndexWindowText, inTextColor[ bEtat ] )
.head 7 -  ! Call SalColorSet( hWndItem, COLOR_IndexWindow, inBackgroundColor[ bEtat ] )
.head 7 +  ! If bEtat
.head 8 -  Call SalDisableWindow( hWndItem )
.head 7 +  ! Else
.head 8 -  Call SalEnableWindow( hWndItem )
.head 5 +  Function: LBFDisableInit
.head 6 -  Description: Permet de définir l'initialisation par défaut d'un type de zone.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If DisablePropIsReadOnly( )
.head 8 -  Call DisableAlways( TRUE, 0 )
.head 5 -  !
.head 5 +  Function: DisableDefTextColor
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Boolean: pb
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If pb
.head 8 -  Return COLOR_Black
.head 7 +  Else
.head 8 -  Return COLOR_SysWindowText
.head 5 +  Function: DisableDefBackgroundColor
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Boolean: pb
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If pb
.head 8 -  Return COLOR_SysWindow
.head 7 +  Else
.head 8 -  Return COLOR_White
.head 5 -  !
.head 5 -  ! Fonctions internes à la gestion de la classe
.head 5 -  !
.head 5 -  !
.head 5 +  Function: iColInit
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return ibInitTextCol[ FALSE ] and ibInitTextCol[ TRUE ] and ibInitBackgroundCol[ FALSE ] and ibInitBackgroundCol[ TRUE ]
.head 5 -  ! \##### 17/10/2003
.head 4 +  Message Actions
.head 5 -  ! /##### 17/10/2003
.head 5 +  On PAM_DisableField
.head 6 -  Call DisableObject( wParam, lParam )
.head 5 -  ! \##### 17/10/2003
.head 3 +  Functional Class: clsTranslateMenu
.head 4 -  Description: Cette classe doit permettre de faciliter la traduction des menus en parcourant les menus séquentiellement.
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  !
.head 5 -  !
.head 5 -  Window Handle: wHnd
.head 5 -  Number: hMenu
.head 5 -  Number: nPos
.head 5 -  String: sTrad
.head 5 -  !
.head 5 -  !
.head 5 -  Number: nTraduction
.head 5 -  String: psFileName
.head 5 -  Boolean: bClosed
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 -  FunctionalVar: iclsaMenuItem[*]
.head 6 -  Class: clsTranslateMenuItem
.head 5 -  String: isaMenuIndex[*]
.head 5 -  Number: iNbrMenuItem
.head 5 -  String: inMenuSpecial[*]
.head 5 -  Number: iNbrMenuSpecial
.head 4 +  Functions
.head 5 +  Function: Reset
.head 6 -  Description: Réinitialise les variables pour la traduction des menus.

La fonction retourne un numéro pour l'accès au popup menu principal.
.head 6 +  Returns
.head 7 -  Number:
.head 6 +  Parameters
.head 7 -  Window Handle: pwHnd
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set wHnd = pwHnd
.head 7 -  Set hMenu = -1
.head 7 -  Set nPos = -1
.head 7 -  Set hMenu = VisMenuGetHandle( wHnd )
.head 7 -  Set nPos = 0
.head 5 +  Function: __Next
.head 6 -  Description: Recherche le point de menu suivant
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: __DecodeTrad
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  String: psTrad
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsa[*]
.head 7 -  Number: n
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Set n = SalStrTokenize( psTrad, '|', '|', lsa )
.head 7 +  If n <= 1
.head 8 -  Set s = psTrad
.head 7 +  Else
.head 8 +  Select Case gnLanguage
.head 9 -  Case Language_NL
.head 9 +  Case Language_DE
.head 10 -  Set s = lsa[1]
.head 10 -  Break
.head 9 +  Default
.head 10 -  Set s = lsa[0]
.head 7 +  If s = ''
.head 8 -  Set s = psTrad
.head 7 -  Return s
.head 5 +  Function: __DecodeTradN
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 +  Parameters
.head 7 -  String: psTrad
.head 7 -  Number: i
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsa[*]
.head 7 -  Number: n
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Set n = SalStrTokenize( psTrad, '|', '|', lsa )
.head 7 +  If n <= 1
.head 8 -  Set s = psTrad
.head 7 +  Else
.head 8 +  If i < n
.head 9 -  Set s = lsa[i]
.head 8 +  Else
.head 9 -  Set s = ''
.head 7 -  Return s
.head 5 +  Function: __ParamTrad
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psTrad
.head 7 -  Receive String: prsParam
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsa[*]
.head 7 -  Number: n
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Set n = SalStrTokenize( psTrad, '|', '|', lsa )
.head 7 +  If n = 3
.head 8 -  Set prsParam = lsa[2]
.head 7 -  Return n = 3
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 +  ! Function: __InitMenuItem
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  ! Function: __InitMenuItem2
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  Function: __GetHandleMenu
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  Number: phMenu
.head 7 -  String: ps
.head 7 -  Receive Number: prhMenu
.head 7 -  Receive Number: prnPos
.head 7 -  Receive String: prsTrad
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Boolean: bOk
.head 7 -  Number: hMenu
.head 7 -  Number: i
.head 7 -  Number: n
.head 7 -  String: s[*]
.head 7 -  Number: nPos
.head 6 +  Actions
.head 7 -  Set bOk = FALSE
.head 7 -  Set n = SalStrTokenize( ps, '', '.', s )
.head 7 +  If n
.head 8 -  Set hMenu = VisMenuGetHandle( wHnd )
.head 7 -  Else
.head 7 -  Return bOk
.head 5 +  Function: __InitMenuItem
.head 6 -  Description: Traduction du menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  Number: j
.head 7 -  String: s2
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 -  Set hMenu = VisMenuGetHandle( phWnd )
.head 8 -  Set iNbrMenuItem = -1
.head 8 -  Set iNbrMenuItem = -1
.head 8 +  If hMenu > 0
.head 9 -  Set wHnd = phWnd
.head 9 -  Set n = VisMenuGetCount( hMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, hMenu, i )
.head 10 +  If SalStrLength( s )
.head 11 -  Set s = SalFmtFormatNumber( i, '0' )
.head 11 -  Set s1 = VisStrFind( nTraduction, s )
.head 11 +  If s1 != STRING_Null
.head 12 -  Call VisMenuSetText( wHnd, hMenu, i, __DecodeTrad( s1 ) )
.head 12 -  Set iNbrMenuItem = iNbrMenuItem + 1
.head 12 -  Set j = iNbrMenuItem
.head 12 -  Set iclsaMenuItem[j].hMenu = hMenu
.head 12 -  Set iclsaMenuItem[j].nPos = i
.head 12 -  Set iclsaMenuItem[j].nParam = SalStrToNumber( __DecodeTradN( s1, 2 ) )
.head 12 -  Set iclsaMenuItem[j].sLib1 = __DecodeTradN( s1, 0 )
.head 12 -  Set iclsaMenuItem[j].sLib2 = __DecodeTradN( s1, 1 )
.head 12 -  Set iclsaMenuItem[j].sCle = s
.head 12 -  Set s2 = SalNumberToStrX( hMenu, 0 ) || '|' || SalNumberToStrX( i, 0 )
.head 12 -  Set isaMenuIndex[j] = s2
.head 12 -  ! Set iNbrMenuSpecial = iNbrMenuSpecial + 1
.head 12 +  ! If iclsaMenuItem[j].nParam
.head 13 -  Set inMenuSpecial[ iNbrMenuSpecial ] = s
.head 11 -  Set hPopupMenu = VisMenuGetPopupHandle( hMenu, i )
.head 11 +  If hPopupMenu != NUMBER_Null
.head 12 -  Call __InitMenuItem2( hPopupMenu, s )
.head 10 -  Set i = i + 1
.head 5 +  Function: __InitMenuItem2
.head 6 -  Description: Traduction d'un popup menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: phMenu
.head 7 -  String: psRef
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  String: s2
.head 7 -  Number: j
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 +  If phMenu > 0
.head 9 -  Set n = VisMenuGetCount( phMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, phMenu, i )
.head 10 +  If SalStrLength( s )
.head 11 -  Set s = psRef || '.' || SalFmtFormatNumber( i, '0' )
.head 11 -  Set s1 = VisStrFind( nTraduction, s )
.head 11 +  If s1 != STRING_Null
.head 12 -  Call VisMenuSetText( wHnd, phMenu, i, __DecodeTrad( s1 ) )
.head 12 -  Set iNbrMenuItem = iNbrMenuItem + 1
.head 12 -  Set j = iNbrMenuItem
.head 12 -  Set iclsaMenuItem[j].hMenu = phMenu
.head 12 -  Set iclsaMenuItem[j].nPos = i
.head 12 -  Set iclsaMenuItem[j].nParam = SalStrToNumber( __DecodeTradN( s1, 2 ) )
.head 12 -  Set iclsaMenuItem[j].sLib1 = __DecodeTradN( s1, 0 )
.head 12 -  Set iclsaMenuItem[j].sLib2 = __DecodeTradN( s1, 1 )
.head 12 -  Set iclsaMenuItem[j].sCle = s
.head 12 -  Set s2 = SalNumberToStrX( phMenu, 0 ) || '|' || SalNumberToStrX( i, 0 )
.head 12 -  Set isaMenuIndex[j] = s2
.head 12 -  ! Set iNbrMenuSpecial = iNbrMenuSpecial + 1
.head 12 +  ! If iclsaMenuItem[j].nParam
.head 13 -  Set inMenuSpecial[ iNbrMenuSpecial ] = s
.head 12 +  ! If iclsaMenuItem[j].nParam
.head 13 -  Set iNbrMenuSpecial = iNbrMenuSpecial + 1
.head 13 -  Set inMenuSpecial[ iNbrMenuSpecial ] = j
.head 11 -  Set hPopupMenu = VisMenuGetPopupHandle( phMenu, i )
.head 11 +  If hPopupMenu != NUMBER_Null
.head 12 -  ! Call __InitMenuItem2( hPopupMenu, psRef || '.' || s )
.head 12 -  Call __InitMenuItem2( hPopupMenu, s )
.head 10 -  Set i = i + 1
.head 5 -  !
.head 5 +  Function: TranslateMenuBar
.head 6 -  Description: Traduction du menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  Boolean: bChecked
.head 7 -  Boolean: bEnabled
.head 7 -  Number: lnMenuItemID
.head 7 -  Number: nState
.head 7 -  String: sParam
.head 7 -  String: sTrad
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 -  Set hMenu = VisMenuGetHandle( phWnd )
.head 8 +  If hMenu > 0
.head 9 -  Set wHnd = phWnd
.head 9 -  Set n = VisMenuGetCount( hMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, hMenu, i )
.head 10 -  Set nState = GetMenuState( hMenu, i, MF_ByPosition )
.head 10 -  Set bEnabled = ( GetMenuState( hMenu, i, MF_ByPosition ) & MF_Grayed ) = 0
.head 10 -  Set bChecked = ( GetMenuState( hMenu, i, MF_ByPosition ) & MF_Checked ) != 0
.head 10 +  If SalStrLength( s )
.head 11 -  Set s1 = VisStrFind( nTraduction, s )
.head 11 +  If s1 != STRING_Null
.head 12 -  Set lnMenuItemID = GetMenuItemID ( hMenu, i )
.head 12 +  If lnMenuItemID = 0xFFFFFFFF
.head 13 -  Call SalMessageBox( 'Function SetSubMenuItemLanguageText:
Cannot find menu item: ' || s1, 'Development error', MB_Ok | MB_IconExclamation )
.head 13 -  Return FALSE
.head 12 -  Set sTrad = __DecodeTrad( s1 )
.head 12 +  If ModifyMenuA (hMenu, i, MF_ByPosition | MF_STRING, lnMenuItemID ,  sTrad )
.head 13 -  Call DrawMenuBar( wHnd )
.head 12 +  If bChecked
.head 13 -  Call CheckMenuItem( hMenu, i, MF_ByPosition | MF_Checked )
.head 12 +  Else
.head 13 -  Call CheckMenuItem( hMenu, i, MF_ByPosition | MF_Unchecked )
.head 12 +  If bEnabled
.head 13 -  Call EnableMenuItem( hMenu, i, MF_ByPosition | MF_Enabled )
.head 12 +  Else
.head 13 -  Call EnableMenuItem( hMenu, i, MF_ByPosition | MF_Disabled | MF_Grayed )
.head 12 +  ! If __ParamTrad( s1, sParam )
.head 13 -  Call TranslateParam( wHnd, hMenu, i, sTrad, sParam )
.head 10 -  Set i = i + 1
.head 5 +  Function: Translate1PopupMenu
.head 6 -  Description: Traduction d'un popup menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: phMenu
.head 7 -  ! String: psRef
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  Boolean: bChecked
.head 7 -  Boolean: bEnabled
.head 7 -  Number: lnMenuItemID
.head 7 -  Number: nState
.head 7 -  String: sParam
.head 7 -  Number: nParam
.head 7 -  !
.head 7 -  !
.head 7 -  String: s2
.head 7 -  Number: j
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 +  If phMenu > 0
.head 9 -  Set n = VisMenuGetCount( phMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, phMenu, i )
.head 10 -  Set nState = GetMenuState( phMenu, i, MF_ByPosition )
.head 10 +  If s = '&Quitter'
.head 11 -  Set bChecked = ( GetMenuState( phMenu, i, MF_ByPosition ) & MF_Checked ) != 0
.head 10 -  Set bEnabled = ( GetMenuState( phMenu, i, MF_ByPosition ) & MF_Grayed ) = 0
.head 10 -  Set bChecked = ( GetMenuState( phMenu, i, MF_ByPosition ) & MF_Checked ) != 0
.head 10 +  If SalStrLength( s )
.head 11 -  ! Set s1 = VisStrFind( nTraduction, s )
.head 11 -  Set s2 = SalNumberToStrX( phMenu, 0 ) || '|' || SalNumberToStrX( i, 0 )
.head 11 -  Set j = VisArrayFindString( isaMenuIndex, s2 )
.head 11 +  If j >= 0
.head 12 -  Set lnMenuItemID = GetMenuItemID ( phMenu, i )
.head 12 +  If lnMenuItemID = 0xFFFFFFFF
.head 13 -  Call SalMessageBox( 'Function SetSubMenuItemLanguageText:
Cannot find menu item: ' || s1, 'Development error', MB_Ok | MB_IconExclamation )
.head 13 -  Return FALSE
.head 12 +  Select Case gnLanguage
.head 13 -  Case Language_DE
.head 13 +  Case Language_NL
.head 14 -  Set sTrad = iclsaMenuItem[j].sLib2
.head 14 -  Break
.head 13 +  Default
.head 14 -  Set sTrad = iclsaMenuItem[j].sLib1
.head 12 +  If ModifyMenuA (phMenu, i, MF_ByPosition | MF_STRING, lnMenuItemID , sTrad )
.head 13 -  ! Call DrawMenuBar( wHnd )
.head 12 +  If bChecked
.head 13 -  Call CheckMenuItem( phMenu, i, MF_ByPosition | MF_Checked )
.head 12 +  Else
.head 13 -  Call CheckMenuItem( phMenu, i, MF_ByPosition | MF_Unchecked )
.head 12 +  If bEnabled
.head 13 -  Call EnableMenuItem( phMenu, i, MF_ByPosition | MF_Enabled )
.head 13 +  If iclsaMenuItem[j].nParam != 0
.head 14 -  ! Call TranslateParam( wHnd, hMenu, i, sTrad, sParam )
.head 14 -  Set hMenu = phMenu
.head 14 -  Set nPos = i
.head 14 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, iclsaMenuItem[j].nParam, 0 )
.head 12 +  Else
.head 13 -  Call EnableMenuItem( phMenu, i, MF_ByPosition | MF_Disabled | MF_Grayed )
.head 10 -  Set i = i + 1
.head 9 -  Call SalDrawMenuBar( wHnd )
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 +  ! Function: LBFTranslateParam
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 7 -  Number: phMenu
.head 7 -  Number: pnPos
.head 7 -  String: psTrad
.head 7 -  String: psParam
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  ! Function: LBFClose
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  ! Function: LBFInit
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 -  Actions
.head 5 +  ! Function: TranslateParam
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 7 -  Number: phMenu
.head 7 -  Number: pnPos
.head 7 -  String: psTrad
.head 7 -  String: psParam
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call ..LBFTranslateParam( phWnd, phMenu, pnPos, psTrad, psParam )
.head 5 +  ! Function: Close
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call ..LBFClose( )
.head 7 -  Set bClosed = TRUE
.head 7 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, PAL_TranslateMenuSys, PAL_TranslateMenuClose )
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 +  Function: TranslateSave
.head 6 -  Description: Traduction du menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 7 -  File Handle: pfh
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 6 +  Actions
.head 7 -  ! If nTraduction > 0
.head 7 -  Set hMenu = VisMenuGetHandle( phWnd )
.head 7 +  If hMenu > 0
.head 8 -  Set wHnd = phWnd
.head 8 -  Set n = VisMenuGetCount( hMenu )
.head 8 -  Set i = 0
.head 8 +  While i < n
.head 9 -  Set s = VisMenuGetText( wHnd, hMenu, i )
.head 9 +  If SalStrLength( s )
.head 10 -  Set s1 = SalFmtFormatNumber( i, '0' )
.head 10 -  ! Set s1 = VisStrFind( nTraduction, s )
.head 10 +  ! If s1 != STRING_Null
.head 11 -  Call VisMenuSetText( wHnd, hMenu, i, s1 )
.head 10 -  Call SalFilePutStr( pfh, '{' || s1 || '}' || s || '|'  || s || '|' )
.head 10 -  Set hPopupMenu = VisMenuGetPopupHandle( hMenu, i )
.head 10 +  If hPopupMenu != NUMBER_Null
.head 11 -  Call TranslatePopupMenuSave( hPopupMenu, s1, pfh )
.head 9 -  Set i = i + 1
.head 5 +  Function: TranslatePopupMenuSave
.head 6 -  Description: Traduction d'un popup menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: phMenu
.head 7 -  String: psRef
.head 7 -  File Handle: pfh
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 6 +  Actions
.head 7 -  If nTraduction > 0
.head 7 +  If phMenu > 0
.head 8 -  Set n = VisMenuGetCount( phMenu )
.head 8 -  Set i = 0
.head 8 +  While i < n
.head 9 -  Set s = VisMenuGetText( wHnd, phMenu, i )
.head 9 +  If SalStrLength( s )
.head 10 -  Set s1 = psRef || '.' || SalFmtFormatNumber( i, '0' )
.head 10 -  ! Set s1 = VisStrFind( nTraduction, s )
.head 10 +  ! If s1 != STRING_Null
.head 11 -  Call VisMenuSetText( wHnd, phMenu, i, s1 )
.head 10 -  Call SalFilePutStr( pfh, '{' || s1 || '}' || s || '|' || s || '|' )
.head 10 -  Set hPopupMenu = VisMenuGetPopupHandle( phMenu, i )
.head 10 +  If hPopupMenu != NUMBER_Null
.head 11 -  Call TranslatePopupMenuSave( hPopupMenu, s1, pfh )
.head 9 -  Set i = i + 1
.head 5 -  !
.head 5 -  !
.head 5 -  !
.head 5 +  Function: LoadTranslate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 +  Parameters
.head 7 -  String: psFileName
.head 7 -  Window Handle: whHnd
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Set nTraduction = VisStrLoadTable( psFileName )
.head 7 -  Set wHnd = whHnd
.head 7 -  Call Init( )
.head 7 -  Call __InitMenuItem( whHnd )
.head 7 -  Return not ( nTraduction < 0 )
.head 5 +  Function: TranslateLoaded
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Boolean:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return nTraduction > 0
.head 5 +  Function: Init
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call ..LBFInit( )
.head 7 -  ! Set bClosed = FALSE
.head 7 +  If TranslateLoaded( )
.head 8 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, PAL_TranslateMenuSys, PAL_TranslateMenuClose )
.head 7 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, PAL_TranslateMenuSys, PAL_TranslateMenuInit )
.head 7 -  ! Call __InitMenuItem( wHnd )
.head 7 -  ! Call SalDrawMenuBar( wHnd )
.head 5 +  Function: Translate
.head 6 -  Description: Traduction du menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Window Handle: phWnd
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  String: sParam
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 -  Set hMenu = VisMenuGetHandle( phWnd )
.head 8 +  If hMenu > 0
.head 9 -  Set wHnd = phWnd
.head 9 -  Set n = VisMenuGetCount( hMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, hMenu, i )
.head 10 +  If SalStrLength( s )
.head 11 -  Set s = SalFmtFormatNumber( i, '0' )
.head 11 -  Set s1 = VisStrFind( nTraduction, s )
.head 11 +  If s1 != STRING_Null
.head 12 -  Call VisMenuSetText( wHnd, hMenu, i, __DecodeTrad( s1 ) )
.head 11 -  Set hPopupMenu = VisMenuGetPopupHandle( hMenu, i )
.head 11 +  If hPopupMenu != NUMBER_Null
.head 12 -  Call TranslatePopupMenu( hPopupMenu, s )
.head 11 +  If __ParamTrad( s1, sParam )
.head 12 -  Set ..hMenu = hMenu
.head 12 -  Set nPos = i
.head 12 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, SalStrToNumber( sParam ), 0 )
.head 10 -  Set i = i + 1
.head 7 -  Call SalDrawMenuBar( wHnd )
.head 5 +  Function: TranslatePopupMenu
.head 6 -  Description: Traduction d'un popup menu
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: phMenu
.head 7 -  String: psRef
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  ! Number: hMenu
.head 7 -  Number: hPopupMenu
.head 7 -  Number: n
.head 7 -  String: s
.head 7 -  String: s1
.head 7 -  Number: i
.head 7 -  String: sParam
.head 7 -  Number: nState
.head 7 -  Boolean: bChecked
.head 7 -  Boolean: bEnabled
.head 6 +  Actions
.head 7 +  If nTraduction > 0
.head 8 +  If phMenu > 0
.head 9 -  Set n = VisMenuGetCount( phMenu )
.head 9 -  Set i = 0
.head 9 +  While i < n
.head 10 -  Set s = VisMenuGetText( wHnd, phMenu, i )
.head 10 -  Set nState = GetMenuState( phMenu, i, MF_ByPosition )
.head 10 -  Set bEnabled = ( GetMenuState( phMenu, i, MF_ByPosition ) & MF_Grayed ) = 0
.head 10 -  Set bChecked = ( GetMenuState( phMenu, i, MF_ByPosition ) & MF_Checked ) != 0
.head 10 -  Set bEnabled = bEnabled and VisMenuIsEnabled( phMenu, i )
.head 10 +  If SalStrLength( s )
.head 11 -  Set s = psRef || '.' || SalFmtFormatNumber( i, '0' )
.head 11 -  Set s1 = VisStrFind( nTraduction, s )
.head 11 +  If s1 != STRING_Null
.head 12 -  Set sTrad = __DecodeTrad( s1 )
.head 12 -  Call VisMenuSetText( wHnd, phMenu, i, sTrad )
.head 11 -  Set hPopupMenu = VisMenuGetPopupHandle( phMenu, i )
.head 11 +  If hPopupMenu != 0
.head 12 -  Call TranslatePopupMenu( hPopupMenu, s )
.head 11 +  If bEnabled
.head 12 +  If __ParamTrad( s1, sParam )
.head 13 -  Set hMenu = phMenu
.head 13 -  Set nPos = i
.head 13 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, SalStrToNumber( sParam ), 0 )
.head 11 +  If bChecked
.head 12 -  Call CheckMenuItem( phMenu, i, MF_ByPosition | MF_Checked )
.head 11 +  Else
.head 12 -  Call CheckMenuItem( phMenu, i, MF_ByPosition | MF_Unchecked )
.head 11 +  If bEnabled
.head 12 -  Call EnableMenuItem( phMenu, i, MF_ByPosition | MF_Enabled )
.head 11 +  Else
.head 12 -  Call EnableMenuItem( phMenu, i, MF_ByPosition | MF_Disabled | MF_Grayed )
.head 10 -  Set i = i + 1
.head 5 +  Function: ObjectDestructor
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  ! Call Close( )
.head 7 +  If TranslateLoaded( )
.head 8 -  Call SalSendMsg( wHnd, PAM_TranslateMenu, PAL_TranslateMenuSys, PAL_TranslateMenuClose )
.head 7 +  If nTraduction > 0
.head 8 -  Call VisStrFreeTable( nTraduction )
.head 8 -  Set nTraduction = -1
.head 5 +  Function: SetPicture
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnPic1
.head 7 -  Number: pnPic2
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nState
.head 7 -  Boolean: bChecked
.head 7 -  Boolean: bEnabled
.head 6 +  Actions
.head 7 -  Set nState = GetMenuState( hMenu, nPos, MF_ByPosition )
.head 7 -  Set bEnabled = ( GetMenuState( hMenu, nPos, MF_ByPosition ) & MF_Grayed ) = 0
.head 7 -  Set bChecked = ( GetMenuState( hMenu, nPos, MF_ByPosition ) & MF_Checked ) != 0
.head 7 -  Call VisMenuSetPicture( wHnd, hMenu, nPos, pnPic1, pnPic2, sTrad )
.head 7 +  If bChecked
.head 8 -  Call CheckMenuItem( hMenu, nPos, MF_ByPosition | MF_Checked )
.head 7 +  Else
.head 8 -  Call CheckMenuItem( hMenu, nPos, MF_ByPosition | MF_Unchecked )
.head 7 +  If bEnabled
.head 8 -  Call EnableMenuItem( hMenu, nPos, MF_ByPosition | MF_Enabled )
.head 7 +  Else
.head 8 -  Call EnableMenuItem( hMenu, nPos, MF_ByPosition | MF_Disabled | MF_Grayed )
.head 7 -  ! Call VisMenuSetFont( TradMenu.wHnd, TradMenu.hMenu, TradMenu.nPos, wnMenuFont, TradMenu.sTrad )
.head 5 +  Function: SetFont
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnFont
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: nState
.head 7 -  Boolean: bChecked
.head 7 -  Boolean: bEnabled
.head 6 +  Actions
.head 7 -  ! Call VisMenuSetPicture( TradMenu.wHnd, TradMenu.hMenu, TradMenu.nPos, wnPicQuitter, wnPicQuitter, TradMenu.sTrad )
.head 7 -  Set nState = GetMenuState( hMenu, nPos, MF_ByPosition )
.head 7 -  Set bEnabled = ( GetMenuState( hMenu, nPos, MF_ByPosition ) & MF_Grayed ) = 0
.head 7 -  Set bChecked = ( GetMenuState( hMenu, nPos, MF_ByPosition ) & MF_Checked ) != 0
.head 7 -  Call VisMenuSetFont( wHnd, hMenu, nPos, pnFont, sTrad )
.head 7 +  If bChecked
.head 8 -  Call CheckMenuItem( hMenu, nPos, MF_ByPosition | MF_Checked )
.head 7 +  Else
.head 8 -  Call CheckMenuItem( hMenu, nPos, MF_ByPosition | MF_Unchecked )
.head 7 +  If bEnabled
.head 8 -  Call EnableMenuItem( hMenu, nPos, MF_ByPosition | MF_Enabled )
.head 7 +  Else
.head 8 -  Call EnableMenuItem( hMenu, nPos, MF_ByPosition | MF_Disabled | MF_Grayed )
.head 3 +  Functional Class: clsTranslateMenuItem
.head 4 -  Description:
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  Number: hMenu
.head 5 -  Number: nPos
.head 5 -  Number: nParam
.head 5 -  String: sLib1
.head 5 -  String: sLib2
.head 5 -  String: sCle
.head 4 -  Functions
.head 3 +  Data Field Class: clsDFCptBanque
.head 4 -  Data
.head 5 -  Maximum Data Length: 14
.head 5 -  Data Type: String
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  1.483"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: 999-9999999-99
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Description: Classe pour gérer les comptes bancaires belges
.head 4 +  Derived From
.head 5 -  Class: clsBaseDf
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: isValue
.head 4 -  Functions
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 +  ! If SalSendClassMessage(  SAM_Validate, wParam, lParam ) = VALIDATE_Cancel
.head 7 -  Return VALIDATE_Cancel
.head 6 +  If MyValue = '000000000000'
.head 7 -  Return VALIDATE_Ok
.head 6 +  If not PalCheck97( SalStrToNumber( MyValue ) )
.head 7 -  Call PalMessageBox( "Het rekeningnummer is onjuist", "Le numéro de compte est incorrect", "Fout", 'Erreur', MB_Ok )
.head 7 -  ! Call SelectionTextDF( hWndItem )
.head 7 -  Return VALIDATE_Cancel
.head 6 -  Return VALIDATE_Ok
.head 3 +  Custom Control Class: clsBaseCalendarDropDown
.head 4 -  DLL Name: C:\CTD30\vti30.dll
.head 4 -  Display Settings
.head 5 -  DLL Name: C:\CTD30\vti30.dll
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  Class Default
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  DLL Settings
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description:
.head 4 +  Derived From
.head 5 -  Class: cCalendarDropDown
.head 4 -  Class Variables
.head 4 +  Instance Variables
.head 5 -  String: asMonth[*]
.head 5 -  String: asDay[*]
.head 5 -  Number: __n
.head 4 +  Functions
.head 5 +  Function: GetDate
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Date/Time:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Date/Time: dt
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Call SalGetWindowText( hWndItem, s, 254 )
.head 7 -  Set dt = SalStrToDate( s )
.head 7 -  Return dt
.head 5 +  Function: GetYear
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return SalDateYear( GetDate( ) )
.head 5 +  Function: GetMonth
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return SalDateMonth( GetDate( ) )
.head 5 +  Function: GetDay
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  Number:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Return SalDateDay( GetDate( ) )
.head 5 +  Function: GetDateStr
.head 6 -  Description:
.head 6 +  Returns
.head 7 -  String:
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Date/Time: dt
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Set dt = GetDate( )
.head 7 -  Set s = PalDateToStrX( dt )
.head 7 -  Return s
.head 5 +  Function: SetDate
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Date/Time: pdtDate
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: sFmt
.head 7 -  String: s
.head 6 +  Actions
.head 7 -  Call GetPicture( sFmt, 254 )
.head 7 -  Set s = SalFmtFormatDateTime( pdtDate, sFmt )
.head 7 -  Call SalSetWindowText( hWndItem, s )
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SetPicture( 'S' )
.head 6 -  ! Set __n = WeekStartGet( )
.head 6 -  ! Call WeekStartSet( __n + 1 )
.head 5 +  On PAM_Language
.head 6 +  Select Case gnLanguage
.head 7 +  Case Language_NL
.head 8 -  Set asMonth[0] = 'Januari'
.head 8 -  Set asMonth[1] = 'Februari'
.head 8 -  Set asMonth[2] = 'Maart'
.head 8 -  Set asMonth[3] = 'April'
.head 8 -  Set asMonth[4] = 'Mei'
.head 8 -  Set asMonth[5] = 'Juni'
.head 8 -  Set asMonth[6] = 'Juli'
.head 8 -  Set asMonth[7] = 'Augustus'
.head 8 -  Set asMonth[8] = 'September'
.head 8 -  Set asMonth[9] = 'Oktober'
.head 8 -  Set asMonth[10] = 'November'
.head 8 -  Set asMonth[11] = 'December'
.head 8 -  Set asDay[0] = 'Zo'
.head 8 -  Set asDay[1] = 'Ma'
.head 8 -  Set asDay[2] = 'Di'
.head 8 -  Set asDay[3] = 'We'
.head 8 -  Set asDay[4] = 'Do'
.head 8 -  Set asDay[5] = 'Vr'
.head 8 -  Set asDay[6] = 'Za'
.head 8 -  Break
.head 7 +  Default
.head 8 -  Set asMonth[0] = 'Janvier'
.head 8 -  Set asMonth[1] = 'Février'
.head 8 -  Set asMonth[2] = 'Mars'
.head 8 -  Set asMonth[3] = 'Avril'
.head 8 -  Set asMonth[4] = 'Mai'
.head 8 -  Set asMonth[5] = 'Juin'
.head 8 -  Set asMonth[6] = 'Juillet'
.head 8 -  Set asMonth[7] = 'Août'
.head 8 -  Set asMonth[8] = 'Septembre'
.head 8 -  Set asMonth[9] = 'Octobre'
.head 8 -  Set asMonth[10] = 'Novembre'
.head 8 -  Set asMonth[11] = 'Décembre'
.head 8 -  Set asDay[0] = 'Di'
.head 8 -  Set asDay[1] = 'Lu'
.head 8 -  Set asDay[2] = 'Ma'
.head 8 -  Set asDay[3] = 'Me'
.head 8 -  Set asDay[4] = 'Je'
.head 8 -  Set asDay[5] = 'Ve'
.head 8 -  Set asDay[6] = 'Sa'
.head 6 -  Call SetMonthText( asMonth )
.head 6 -  Call SetWeekDayText( asDay )
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window: clsBaseFrm
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton: clsBasePbOnForm
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  ActiveX:
.head 3 -  Check Box:
.head 3 -  Child Table: cQuickTable
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box:
.head 3 -  Picture: cQuickPicture
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control: cQuickGraph
.head 2 -  Application Actions
.head 1 +  ! DLG_CS_ToolTip: dlgBB_ToolTip
.head 2 -  Description: 
.head 2 +  Tool Bar 
.head 3 -  Contents 
.head 2 +  Contents 
.head 3 +  Data Field: dfTip
.head 4 -  Message Actions 
.head 2 -  Functions 
.head 2 -  Window Parameters 
.head 2 -  Window Variables 
.head 2 -  Message Actions 
.head 1 +  Dialog Box: dlgDebugDynSql
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Debug: Sql Statement
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 0.875"
.head 4 -  Top: 0.385"
.head 4 -  Width:  8.963"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 4.51"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10000
.head 5 -  String Type: Long String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.088"
.head 6 -  Top: 0.073"
.head 6 -  Width:  8.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.917"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wsWord = ', '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = VisStrSubstitute( psSqlStmt, wsWord, wsWord  || wsNewLine || wsTab )
.head 6 -  !
.head 6 -  Set wsWord = 'SELECT '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsWord  || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'INSERT '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsWord  || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'DELETE '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsWord  || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'UPDATE '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsWord  || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'FROM '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine || wsWord  || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'WHERE '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine || wsWord || wsNewLine || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'ORDER BY '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine ||  wsNewLine || wsWord || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = ' AND '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = VisStrSubstitute( psSqlStmt, wsWord, ' ' || wsNewLine || SalStrTrimX( wsWord ) || ' ' || wsTab )
.head 6 -  !
.head 6 -  Set wsWord = ' OR '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = VisStrSubstitute( psSqlStmt, wsWord, ' ' || wsNewLine || SalStrTrimX( wsWord ) || ' ' || wsTab )
.head 6 -  !
.head 6 -  Set wsWord = 'INTO '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine || wsWord || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'SET '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine || wsWord || wsNewLine  || wsTab)
.head 6 -  !
.head 6 -  Set wsWord = 'VALUES '
.head 6 +  If SalStrScan( psSqlStmt, wsWord ) >= 0
.head 7 -  Set psSqlStmt = SalStrReplaceX( psSqlStmt, SalStrScan( psSqlStmt, wsWord ), SalStrLength( wsWord ), wsNewLine || wsWord || wsNewLine  || wsTab )
.head 6 -  !
.head 6 -  Set MyValue = psSqlStmt
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Close
.head 4 -  Window Location and Size
.head 5 -  Left: 3.888"
.head 5 -  Top: 4.073"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set gbDynSqlDebug = Not cbStop  
.head 6 -  Call SalEndDialog( hWndForm, 0 )
.head 5 +  On SAM_Create
.head 6 -  Call SalSetDefButton( hWndItem )
.head 3 +  Check Box: cb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Build successfully
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 4.073"
.head 5 -  Width:  2.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbDynSqlDebug
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: F1
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set gbDynSqlDebug = Not gbDynSqlDebug
.head 3 +  Check Box: cbStop
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Stop debug
.head 4 -  Window Location and Size
.head 5 -  Left: 6.688"
.head 5 -  Top: 4.073"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Long String: psSqlStmt
.head 3 -  Boolean: pbSuccess
.head 2 +  Window Variables
.head 3 -  String: wsNewLine
.head 3 -  String: wsTab
.head 3 -  String: wsWord
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set wsNewLine = '
'
.head 4 -  Set wsTab = '	'
.head 3 +  On SAM_CreateComplete
.head 4 -  Set cb1 = pbSuccess
.head 4 -  Call SalSetFocus( pbClose )
.head 4 -  Call SalWaitCursor ( FALSE )
.head 3 +  On SAM_Close
.head 4 -  Call SalWaitCursor ( TRUE )
.head 1 +  Dialog Box: dlgLogin
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Database Login
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 2.5"
.head 4 -  Top: 1.156"
.head 4 -  Width:  4.867"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.397"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfPath
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: Default
.head 6 -  Top: Default
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Height: Default
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbConnect
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Connect
.head 4 -  Window Location and Size
.head 5 -  Left: 3.283"
.head 5 -  Top: 0.156"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalIsNull(dfDatabase ) OR SalIsNull( dfUser ) OR SalIsNull( dfPassword ) 
.head 7 -  Call SalMessageBox( 'Missing field(s)', 'Warning', MB_Ok | MB_IconExclamation )
.head 7 -  Return FALSE
.head 6 -  Call VisWaitCursor( TRUE )
.head 6 -  Set wbConnect = TRUE
.head 6 -  ! Call CStructFreeFarMem( nGlobalAlloc )
.head 6 -  ! Set sPrgKey = SalStrUpperX( PalGetPrgmName(  ) || '#' || dfDatabase )
.head 6 -  ! Call SalSendMsg( SalNumberToWindowHandle( 0xFFFF ), WM_TEST_PRGM, SalWindowHandleToNumber( hWndForm ), nGlobalAlloc )
.head 6 +  If wbConnect
.head 7 -  ! Call CStructFreeFarMem( nGlobalAlloc )
.head 7 +  If SqlConnection( ghSqlMain, dfDatabase, dfUser, dfPassword )
.head 8 -  Call VisWaitCursor( FALSE )
.head 8 -  Set pbConnected = TRUE
.head 8 -  Call SalEndDialog( hWndForm, TRUE )
.head 6 +  Else
.head 7 -  ! Call CStructFreeFarMem( nGlobalAlloc )
.head 6 -  Call VisWaitCursor( FALSE )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: C&ancel
.head 4 -  Window Location and Size
.head 5 -  Left: 3.283"
.head 5 -  Top: 0.49"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set pbConnected = FALSE
.head 6 -  Call SalEndDialog( hWndForm, FALSE )
.head 3 -  Background Text: &Database:
.head 4 -  Resource Id: 4272
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.198"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDatabase
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.167"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = psDatabase
.head 6 +  If psDatabase = ''
.head 7 -  Call SalSetFocus( hWndItem )
.head 5 +  ! On SAM_DoubleClick
.head 6 +  If ( ( VisGetKeyState( VK_Control ) & KS_Down ) != 0 ) 
.head 7 -  Call SalModalDialog( dlgListDB, hWndForm, MyValue )
.head 3 -  Background Text: &User ID:
.head 4 -  Resource Id: 4273
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.548"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.488"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set dfUser = psUser
.head 6 +  If dfDatabase != ''
.head 7 -  Call SalSetFocus( hWndItem )
.head 3 -  Background Text: &Password:
.head 4 -  Resource Id: 4274
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.881"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPassword
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.821"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set dfPassword = psPassword
.head 6 +  If dfDatabase != '' and dfUser != ''
.head 7 -  Call SalSetFocus( hWndItem )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Receive Boolean: pbConnected
.head 3 -  String: psDatabase
.head 3 -  String: psUser
.head 3 -  String: psPassword
.head 3 -  Boolean: pbShowWindow
.head 2 +  Window Variables
.head 3 -  Number: wnLoginTmp
.head 3 -  Number: wnLoop
.head 3 -  String: wsFileName
.head 3 -  File Handle: wfHnd
.head 3 -  String: wsFileNames[*]
.head 3 -  Boolean: wbConnect
.head 3 -  Number: nGlobalAlloc
.head 2 +  Message Actions
.head 3 +  On SAM_CreateComplete
.head 4 -  ! Call SalSetFocus( dfUser )
.head 4 -  Call SalSetDefButton( pbConnect )
.head 4 -  ! Set nGlobalAlloc = CStructAllocFarMem( 256 )
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If Not pbShowWindow
.head 5 -  Call SalHideWindow( hWndForm )
.head 5 -  Call SalPostMsg( pbConnect, SAM_Click, 0, 0 )
.head 3 +  ! On WM_TEST_PRGM
.head 4 +  If hWndForm != SalNumberToWindowHandle( wParam )
.head 5 +  If lParam != 0
.head 6 -  Call SalStrSetBufferLength( sRcvKey, 256 )
.head 6 -  Set sRcvKey = SalStrRepeatX( ' ', 256 )
.head 6 -  Call CStructCopyFromFarMem( lParam, sRcvKey, 255 )
.head 6 -  Call SalMessageBox( sRcvKey || ' - ' || sPrgKey, 'Message WM_TEST_PRGM', MB_Ok )
.head 6 +  If SalStrLeftX( sRcvKey, SalStrLength( sPrgKey ) ) = sPrgKey
.head 7 -  Call SalPostMsg( SalNumberToWindowHandle( wParam ), WM_TEST_PRGM, wParam, SAM_Close )
.head 4 +  Else 
.head 5 +  If lParam = SAM_Close
.head 6 -  Set wbConnect = FALSE
.head 6 -  Call CStructFreeFarMem( nGlobalAlloc )
.head 6 -  Call SalQuit( )
.head 1 +  Dialog Box: dlgSqlError
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: SQL Error
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 0.363"
.head 4 -  Top: 3.979"
.head 4 -  Width:  7.617"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 5.646"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: 10
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description: This dialog box displays the application message, error text, cause and remedy
corresponding to the SQL error number in the first data field. Initially, this data field contains
gnError, but it can be changed.
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: SQL Error Number:
.head 4 -  Resource Id: 1174
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.177"
.head 5 -  Width:  1.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfSQLErrorNum
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 0.155"
.head 6 -  Width:  1.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = pnError
.head 3 -  Background Text: Message:
.head 4 -  Resource Id: 41412
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.512"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlMessage
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.283"
.head 6 -  Top: 0.719"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = SqlGetErrorTextX( dfSQLErrorNum )
.head 3 -  Background Text: Error Text:
.head 4 -  Resource Id: 41413
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 1.448"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlErrorText
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.283"
.head 6 -  Top: 1.635"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = psErrorMessage
.head 3 -  Background Text: Reason:
.head 4 -  Resource Id: 41414
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.288"
.head 5 -  Top: 2.344"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlReason
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5000
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.288"
.head 6 -  Top: 2.531"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SqlErrorText( dfSQLErrorNum, SQLERROR_Reason, MyValue, SalGetMaxDataLength( MyValue ), wnMaxCause)
.head 3 -  Background Text: Remedy:
.head 4 -  Resource Id: 41411
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.288"
.head 5 -  Top: 3.271"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlRemedy
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5000
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.288"
.head 6 -  Top: 3.49"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SqlErrorText( dfSQLErrorNum, SQLERROR_Remedy, MyValue, SalGetMaxDataLength( MyValue ), wnMaxCause)
.head 3 -  Background Text: SQL:
.head 4 -  Resource Id: 1867
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.288"
.head 5 -  Top: 4.188"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlSQL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5000
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.288"
.head 6 -  Top: 4.406"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = psSqlStmt
.head 6 -  Set s2 = SqlGetLastStatement(  )
.head 3 +  Pushbutton: pbContinue
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Continue
.head 4 -  Window Location and Size
.head 5 -  Left: 4.713"
.head 5 -  Top: 5.219"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog( hWndForm, FALSE )
.head 3 +  Pushbutton: pbHalt
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Halt
.head 4 -  Window Location and Size
.head 5 -  Left: 6.013"
.head 5 -  Top: 5.219"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalQuit(  )
.head 3 +  Pushbutton: pbEMail
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.1"
.head 5 -  Top: 5.219"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set wlsError = ''
.head 6 -  Set wlsError = wlsError || 'Computer : ' || GetComputerName(  ) || '

'
.head 6 -  Set wlsError = wlsError || 'User : ' || GetUserName(  ) || '

'
.head 6 -  Set wlsError = wlsError || 'Localité : ' || gsErrorLocalite || '

'
.head 6 -  Set wlsError = wlsError || 'INS : ' || gsErrorINS || '

'
.head 6 -  Set wlsError = wlsError || 'PRGM : ' || VisStrSubstitute( strArgArray[0], '\\', '/' ) || '

'
.head 6 -  Set wlsError = wlsError || 'DB : ' || SqlDatabase || '

'
.head 6 -  Set wlsError = wlsError || 'USER : ' || SqlUser || '

'
.head 6 -  Set wlsError = wlsError || 'N° : ' || SalNumberToStrX( dfSQLErrorNum, 0 ) || '

'
.head 6 -  Set wlsError = wlsError || 'Message : 
' || mlMessage || '

'
.head 6 -  Set wlsError = wlsError || 'ErrorText : 
' || mlErrorText || '

'
.head 6 -  Set wlsError = wlsError || 'Reason : 
' || mlReason || '

'
.head 6 -  Set wlsError = wlsError || 'Remedy : 
' || mlRemedy || '

'
.head 6 -  Set wlsError = wlsError || 'SQL : 
' || VisStrSubstitute( mlSQL, '\\', '/#/' ) || '

'
.head 6 -  Set wlsError = wlsError || 'Windows : 
' || wlsWindowName || '

'
.head 6 -  Set sSujet = gsErrorApp || '.' || gsErrorIdClient ||  '[Erreur]'
.head 6 +  If SalStrLength( gsErrorApplication ) = 0
.head 7 -  ! Set sSujet = sSujet || SqlDatabase 
.head 6 +  Else
.head 7 -  Set sSujet = sSujet || ' - ' || gsErrorApplication
.head 6 -  ! Set sSujet = sSujet || ']'
.head 6 -  ! Call EmailSendBackground( gsErrorEMail, '', '', sSujet, wlsError, '', TRUE )
.head 6 +  If cEmail.SendMail( 'Applic', gsErrorEMail, '', sSujet, wlsError )
.head 7 -  Call SalMessageBox( "Email send", '', MB_Ok )
.head 5 +  On SAM_Create
.head 6 +  If gsErrorEMail != ''
.head 7 -  If cEmail.Init( 'smtp.publilink.be', 'hotline@stesud.be' )
.head 7 +  Else
.head 8 -  Call SalHideWindow( hWndItem )
.head 6 +  Else
.head 7 -  Call SalHideWindow( hWndItem )
.head 6 -  ! If SalStrLength( gsErrorEMail )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Number: pnError
.head 3 -  String: psErrorMessage
.head 3 -  Long String: psSqlStmt
.head 2 +  Window Variables
.head 3 -  Number: wnMaxCause
.head 3 -  Number: wnMaxRemedy
.head 3 -  Long String: wlsError
.head 3 -  String: sSujet
.head 3 -  FunctionalVar: cEmail
.head 4 -  Class: cBlatMail
.head 3 -  Long String: wlsWindowName
.head 3 -  Window Handle: whWnd
.head 3 -  String: s
.head 3 -  String: s2
.head 3 -  String: s1
.head 3 -  Number: n
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  ! Since we come here during the execution of a SQL operation, cursor might be a wait cursor. 
Show the normal cursor.
.head 4 -  Call VisWaitCursor( FALSE )
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalSetDefButton( pbContinue )
.head 4 -  Set wlsWindowName = ''
.head 4 -  Set whWnd = SalGetFirstChild( hWndMDI, TYPE_FormWindow )
.head 4 +  While whWnd != hWndNULL
.head 5 -  Set s  = SalStrRepeatX( ' ', 255 )
.head 5 -  Call SalGetWindowText( whWnd, s, 255 )
.head 5 +  If wlsWindowName != ''
.head 6 -  Set wlsWindowName = wlsWindowName || ' - '
.head 5 -  Set wlsWindowName = wlsWindowName || s 
.head 5 -  Call SalGetNextChild( whWnd, TYPE_FormWindow )
.head 4 +  If not PalGetApplParm( 'DIApp', gsErrorApp )
.head 5 +  If ( gsErrorApp = '' ) or ( gsErrorApp = STRING_Null ) 
.head 6 -  Set gsErrorApp = 'NCC'
.head 4 +  If not PalGetApplParm( 'DIClient', gsErrorIdClient )
.head 5 +  If ( gsErrorIdClient = '' ) or ( gsErrorIdClient = STRING_Null ) 
.head 6 -  Set gsErrorIdClient = '128803'
.head 4 +  If not PalGetApplParm( 'EMail', gsErrorEMail )
.head 5 +  If ( gsErrorEMail = '' ) or ( gsErrorEMail = STRING_Null ) 
.head 6 -  Set gsErrorEMail = 'compta@stesud.be'
.head 4 +  If gsErrorLocalite = ''
.head 5 -  If not PalGetApplParm( 'PAR0006', gsErrorLocalite )
.head 4 +  If gsErrorINS
.head 5 -  If not PalGetApplParm( 'PAR0008', gsErrorINS )
.head 1 +  Dialog Box: dlgTimeOut
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: TimeOut
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 2.6"
.head 4 -  Top: 1.427"
.head 4 -  Width:  6.3"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.402"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Sorry, the database is busy. Check the count down to see when we'll try again, or push the retry button.
.head 4 -  Resource Id: 58766
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.179"
.head 5 -  Width:  3.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.476"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: Count down to retry:
.head 4 -  Resource Id: 58767
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.845"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfCountDown
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 0.845"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbRetry
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Retry
.head 4 -  Window Location and Size
.head 5 -  Left: 4.683"
.head 5 -  Top: 0.405"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set dfCountDown = 20
.head 6 -  Call SalTimerSet( hWndItem, 1, 1000 )
.head 5 +  On SAM_Timer
.head 6 -  Set dfCountDown = dfCountDown -1
.head 6 +  If dfCountDown < 1
.head 7 -  Call SalTimerKill( hWndItem, 1 )
.head 7 -  ! Return 1
.head 7 -  Call SalEndDialog( hWndForm, 1 )
.head 5 +  On SAM_Click
.head 6 -  Call SalTimerKill( hWndItem, 1 )
.head 6 -  ! Return 1
.head 6 -  Call SalEndDialog( hWndForm, 1 )
.head 5 +  On WM_USER
.head 6 -  Call SalTimerKill( hWndItem, 1 )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 4.683"
.head 5 -  Top: 0.821"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalTimerKill( hWndItem, 1 )
.head 6 -  ! Return 0 
.head 6 -  Call SalEndDialog( hWndForm, 0 )
.head 3 +  Pushbutton: pbHelpInvisible
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( pbRetry, WM_USER, 0, 0 )
.head 6 -  Call SalSetWindowSize( hWndForm, 6.3, 3.5 )
.head 3 +  Multiline Field: mlSqlStmt
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.383"
.head 6 -  Top: 1.405"
.head 6 -  Width:  5.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = psSqlStmt
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: psSqlStmt
.head 3 -  Number: pnError
.head 2 -  Window Variables
.head 2 -  Message Actions
.head 1 -  !
.head 1 +  Dialog Box: dlgGetPwd
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Password
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  4.267"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.393"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Password:
.head 4 -  Resource Id: 28753
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseBgdText
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.167"
.head 5 -  Width:  1.167"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Justify: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseDf
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: String
.head 5 -  Editable? Class Default
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.55"
.head 6 -  Top: 0.131"
.head 6 -  Width:  1.567"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  Message Actions
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.35"
.head 5 -  Top: 0.464"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If df1 = psPwd
.head 7 -  Call SalEndDialog( hWndForm, TRUE )
.head 6 +  Else
.head 7 -  Call SalEndDialog( hWndForm, FALSE )
.head 3 +  Pushbutton: pb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 1.917"
.head 5 -  Top: 0.464"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog( hWndForm, FALSE )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: psPwd
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 1 +  Dialog Box: dlgCmdArret
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: .
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modeless
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.667"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.393"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Arrêter &maintenant
.head 4 -  Window Location and Size
.head 5 -  Left: 0.817"
.head 5 -  Top: 2.0"
.head 5 -  Width:  2.133"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalQuit(  )
.head 3 +  Pushbutton: pb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 2.0"
.head 5 -  Width:  2.067"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalPostMsg( hWndForm, SAM_Close, 0, 0 )
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseMl
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  String Type: Long String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Class Default
.head 5 -  Word Wrap? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Window Location and Size
.head 6 -  Left: 0.217"
.head 6 -  Top: 0.071"
.head 6 -  Width:  6.2"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 1.452"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = "Un arrêt du programme a été demandé par un administrateur.

Le compteur ci-dessous vous indique le nombre de secondes qu'il reste avant l'arrêt automatique du programme. Veuillez fermer les différentes fenêtres de l'applications.
Pour quitter tout de suite appuyer sur le bouton 'Arreter maintenant'

"
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseDf
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Class Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.95"
.head 6 -  Top: 1.595"
.head 6 -  Width:  0.933"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: Class Default
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Justify: Class Default
.head 5 -  Format: Class Default
.head 5 -  Country: Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  Input Mask: Class Default
.head 4 -  Message Actions
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Number: pnDelay
.head 3 -  String: psPwd
.head 2 +  Window Variables
.head 3 -  Number: wnTimer
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set df1 = pnDelay
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Call SalTimerSet( hWndForm, 1, 1000 )
.head 3 +  On SAM_Timer
.head 4 +  If wParam = 1
.head 5 -  Set df1 = df1 - 1
.head 5 +  If df1 <= 0
.head 6 -  Call SalTimerKill( hWndForm, 1 )
.head 6 -  Call SalQuit( )
.head 3 +  On SAM_Close
.head 4 +  If SalModalDialog( dlgGetPwd, hWndForm, psPwd ) = TRUE
.head 5 -  Call SalTimerKill( hWndForm, 1 )
.head 5 -  ! Call SalEndDialog( hWndForm, TRUE )
.head 5 -  Call SalDestroyWindow( hWndForm )
.head 5 -  Return TRUE
.head 4 +  Else
.head 5 -  Return FALSE
.head 1 +  Form Window: frmMessageDlg
.head 2 -  Class:
.head 2 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Icon File:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? No
.head 3 -  Minimizable? Yes
.head 3 -  Allow Child Docking? No
.head 3 -  Docking Orientation: All
.head 3 -  System Menu? Yes
.head 3 -  Resizable? Yes
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.467"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.369"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 2.583"
.head 5 -  Top: 1.845"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0  )
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 64000
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.083"
.head 6 -  Width:  6.033"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.15"
.head 6 -  Top: 1.869"
.head 6 -  Width:  1.433"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: ps
.head 3 -  Number: pnPAM_TranslateMenu
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_CreateComplete
.head 4 -  Set ml1 = ps
.head 4 -  Set df1 = SalStrLength( ml1 )
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 3 +  On SAM_Close
.head 4 +  If pnPAM_TranslateMenu
.head 5 -  Call SalPostMsg( hWndMDI, pnPAM_TranslateMenu, 0, 0 )
.head 5 -  ! Call SalPostMsg( hWndMDI, pnPAM_TranslateMenu, 0, 0 )
.head 5 -  ! Call SalPostMsg( hWndMDI, pnPAM_TranslateMenu, 0, 0 )
.head 5 -  ! Call SalPostMsg( hWndMDI, pnPAM_TranslateMenu, 0, 0 )
.head 4 -  ! Call SalDestroyWindow( hWndForm )
.head 1 +  Dialog Box: dlgInfoCompl
.head 2 -  Class: clsBaseDlg
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Informations complémentaires
.head 2 -  Accessories Enabled? Class Default
.head 2 -  Visible? Class Default
.head 2 -  Display Settings
.head 3 -  Display Style? Class Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Class Default
.head 3 -  Allow Dock to Parent? Class Default
.head 3 -  Docking Orientation: Class Default
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  7.013"
.head 4 -  Width Editable? Class Default
.head 4 -  Height: 3.792"
.head 4 -  Height Editable? Class Default
.head 3 -  Absolute Screen Location? Class Default
.head 3 -  Font Name: MS Sans Serif
.head 3 -  Font Size: Class Default
.head 3 -  Font Enhancement: Class Default
.head 3 -  Text Color: Class Default
.head 3 -  Background Color: Class Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Class Default
.head 4 -  Location? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Size: Class Default
.head 4 -  Size Editable? Class Default
.head 4 -  Docking Toolbar? Class Default
.head 4 -  Toolbar Docking Orientation: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Resizable? Class Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pbInvisibleHelp
.head 4 -  Class Child Ref Key: 1
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseDlg
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Class Default
.head 5 -  Top: Class Default
.head 5 -  Width:  Class Default
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Class Default
.head 4 -  Message Actions
.head 3 -  Background Text: Information sur le problème : 
.head 4 -  Resource Id: 56067
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.213"
.head 5 -  Top: 0.177"
.head 5 -  Width:  6.425"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: ml1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30000
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.138"
.head 6 -  Top: 0.479"
.head 6 -  Width:  6.575"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.677"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbOK
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 4.988"
.head 5 -  Top: 3.344"
.head 5 -  Width:  0.725"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set prlsInfo = ml1
.head 6 -  Call SalEndDialog( hWndForm, TRUE )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 5.888"
.head 5 -  Top: 3.344"
.head 5 -  Width:  0.813"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: Class Default
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Class Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEndDialog( hWndForm, FALSE )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Receive Long String: prlsInfo
.head 2 -  Window Variables
.head 2 -  Message Actions
