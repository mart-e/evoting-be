.head 0 +  Application Description: Gupta SQLWindows Standard Application Template

wsScrutinEl : variable décidant du type de scrutin (table PARAM)
	= 1 : élections communales et provinciales
	= 2 : élections parlementaires (Sénat et Chambre)
	= 3 : élections européennes et régionales 
	= 4 : élections européennes, régionales et législatives
.data CLASSPROPSSIZE
0000: E800
.enddata
.data CLASSPROPS
0000: 4442475F504C4159 4241434B5F475549 4400100082DC7F63 48992D4790C6476B
0020: EE04C6A500576174 6368566172734C65 6E00040055000000 0041707050617468
0040: 000F00633A5C705F 6C696233322E3230 3035004170705061 74684C656E000400
0060: 0F00000000557365 476C6F62616C5061 7468000400010000 0000576174636856
0080: 6172730055006E49 6E7343616E746F6E 00734E6F5063546F 7450726F7600676E
00A0: 54797065566F7465 200074626C436F6D 6D756E652E636F6C 566F7465456C006E
00C0: 56697375006C7352 65674C696E670073 4C616E6775655669 7375000000000000
00E0: 0000000000000000
.enddata
.head 1 -  Outline Version - 4.0.35
.head 1 +  Design-time Settings
.data VIEWINFO
0000: 6F00000001000000 FFFF01000D004347 5458566965775374 6174650400800000
0020: 0000000000D50000 002C000000020000 0003000000FFFFFF FFFFFFFFFFF8FFFF
0040: FFE5FFFFFFFFFFFF FF000000007C0200 004D010000010000 0000000000010000
0060: 000F4170706C6963 6174696F6E497465 6D02000000075769 6E646F777308646C
0080: 674465627574
.enddata
.data DT_MAKERUNDLG
0000: 0900001000000000 1D443A5C4150504C 49435C4A49544553 31315C4A69746573
0020: 31312E69636F1D44 3A5C4150504C4943 5C4A497465733131 5C4A495445533131
0040: 2E6578651F443A5C 4150504C49435C4A 4974657331315C43 7279707465303031
0060: 2E646C6C1F443A5C 4150504C49435C4A 4974657331315C43 7279707465303031
0080: 2E61706300000101 0100640000000000 00010101000001B5 010C010D43727970
00A0: 74653030312E6170 640D437279707465 3030312E646C6C0D 4372797074653030
00C0: 312E617063000001 010100640000000D 4372797074653030 312E61706C0D4372
00E0: 797074653030312E 646C6C0D43727970 74653030312E6170 6300000101010064
0100: 0000000D43727970 74653030312E6578 650D437279707465 3030312E646C6C0D
0120: 4372797074653030 312E617063000001 010100640000000D 4372797074653030
0140: 312E646C6C0D4372 797074653030312E 646C6C0D43727970 74653030312E6170
0160: 6300000101010064 0000000D43727970 74653030312E646C 6C0D437279707465
0180: 3030312E646C6C0D 4372797074653030 312E617063000001 0101006400000000
01A0: 0000000000000000 0000000000000000 0000000000000000 0001000000010000
01C0: 0001000100000000 0000000001000010 0000000000000000 00000000
.enddata
.head 2 -  Outline Window State: Normal
.head 2 +  Outline Window Location and Size
.data VIEWINFO
0000: 6600040003002D00 0000000000000000 0000B71E5D0E0500 1D00FFFF4D61696E
0020: 0000000000000000 0000000000000000 0000003B00010000 00000000000000E9
0040: 1E800A00008600FF FF496E7465726E61 6C2046756E637469 6F6E730000000000
0060: 0000000000000000 0000000000003200 0100000000000000 0000E91E800A0000
0080: DF00FFFF56617269 61626C6573000000 0000000000000000 0000000000000000
00A0: 3000010000000000 00000000F51E100D 0000F400FFFF436C 6173736573000000
00C0: 0000000000000000 0000000000000000
.enddata
.data VIEWSIZE
0000: D000
.enddata
.head 3 -  Left: -0.013"
.head 3 -  Top: 0.0"
.head 3 -  Width:  8.013"
.head 3 -  Height: 4.969"
.head 2 +  Options Box Location
.data VIEWINFO
0000: D4180909B80B1A00
.enddata
.data VIEWSIZE
0000: 0800
.enddata
.head 3 -  Visible? Yes
.head 3 -  Left: 4.15"
.head 3 -  Top: 1.885"
.head 3 -  Width:  3.8"
.head 3 -  Height: 2.073"
.head 2 +  Class Editor Location
.head 3 -  Visible? No
.head 3 -  Left: 0.575"
.head 3 -  Top: 0.094"
.head 3 -  Width:  5.063"
.head 3 -  Height: 2.719"
.head 2 +  Tool Palette Location
.head 3 -  Visible? No
.head 3 -  Left: 6.388"
.head 3 -  Top: 0.729"
.head 2 -  Fully Qualified External References? Yes
.head 2 -  Reject Multiple Window Instances? No
.head 2 -  Enable Runtime Checks Of External References? Yes
.head 2 -  Use Release 4.0 Scope Rules? No
.head 2 -  Edit Fields Read Only On Disable? No
.head 1 +  Libraries
.head 2 -  File Include: BASECLAS.APL
.head 2 -  File Include: saldlg.apl
.head 2 -  File Include: SalNumber.apl
.head 2 -  File Include: dbase.apl
.head 2 -  File Include: export.apl
.head 2 -  File Include: sqlwntm.apl
.head 2 -  File Include: StesudEidLib_30.apl
.head 1 +  Global Declarations
.head 2 +  Window Defaults
.head 3 +  Tool Bar
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Form Window
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Dialog Box
.head 4 -  Display Style? Etched
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Top Level Table Window
.head 4 -  Font Name: MS Sans Serif
.head 4 -  Font Size: 8
.head 4 -  Font Enhancement: System Default
.head 4 -  Text Color: System Default
.head 4 -  Background Color: System Default
.head 3 +  Data Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Multiline Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Spin Field
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Background Text
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Pushbutton
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Radio Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Check Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Option Button
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 3 +  Group Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Child Table Window
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  List Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Combo Box
.head 4 -  Font Name: Use Parent
.head 4 -  Font Size: Use Parent
.head 4 -  Font Enhancement: Use Parent
.head 4 -  Text Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 3 +  Line
.head 4 -  Line Color: Use Parent
.head 3 +  Frame
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: 3D Face Color
.head 3 +  Picture
.head 4 -  Border Color: Use Parent
.head 4 -  Background Color: Use Parent
.head 2 +  Formats
.head 3 -  Number: 0'%'
.head 3 -  Number: #0
.head 3 -  Number: ###000
.head 3 -  Number: ###000;'($'###000')'
.head 3 -  Date/Time: hh:mm:ss AMPM
.head 3 -  Date/Time: M/d/yy
.head 3 -  Date/Time: MM-dd-yy
.head 3 -  Date/Time: dd-MMM-yyyy
.head 3 -  Date/Time: MMM d, yyyy
.head 3 -  Date/Time: MMM d, yyyy hh:mm AMPM
.head 3 -  Date/Time: MMMM d, yyyy hh:mm AMPM
.head 3 -  Input: 9999999999
.head 3 -  Number: #0
.head 3 -  Input: 9
.head 3 -  Number: #0
.head 3 -  Input: 9999
.head 3 -  Input: 999999
.head 3 -  Date/Time: dd/MM/yyyy
.head 3 -  Number: #0
.head 3 -  Input: 99
.head 3 -  Number: #0
.head 3 -  Input: 99/99/9999
.head 3 -  Date/Time: dd/MM/yyyy hh:mm:ss
.head 3 -  Number: #0
.head 3 -  Input: A:
.head 3 -  Number: #0
.head 3 -  Input: 999
.head 3 -  Number: #0
.head 3 -  Input: 99999999999
.head 3 -  Number: #0
.head 2 +  External Functions
.head 2 +  Constants
.data CCDATA
0000: 3000000000000000 0000000000000000 00000000
.enddata
.data CCSIZE
0000: 1400
.enddata
.head 3 +  System
.head 4 -  Number: PBM_SETRANGE	= WM_USER+1
.head 4 -  Number: PBM_SETPOS	= WM_USER+2
.head 4 -  Number: PBM_DELTAPOS	= WM_USER+3
.head 4 -  Number: PBM_SETSTEP	= WM_USER+4
.head 4 -  Number: PBM_STEPIT	= WM_USER+5
.head 3 +  User
.head 4 -  String: VERSION = "V 12.01"
.head 4 -  String: DATE_VERSION = "15/04/2010"
.head 4 -  ! String: PW_CAR_CTRL_09 = "1467"
.head 4 -  ! String: PW_CODE_INTERNE_09 = "2701"
.head 4 -  String: PW_CAR_CTRL = "1367"
.head 4 -  String: PW_CODE_INTERNE = "2703"
.head 4 -  String: DATE_EL = "060611"
.head 4 -  Number: LISTE_MAX = 40
.head 4 -  Number: BV_MAX = 45
.head 4 -  !
.head 3 -  Enumerations
.head 2 +  Resources
.head 3 +  Bitmap: resPlus
.head 4 -  File Name: c:\p_lib32.2005\RESOURCE\ADD16.BMP
.head 3 +  Bitmap: resDelete
.head 4 -  File Name: c:\p_lib32.2005\RESOURCE\DELETE16.BMP
.head 3 +  Bitmap: resModif
.head 4 -  File Name: c:\p_lib32.2005\RESOURCE\EDIT16.BMP
.head 3 +  Bitmap: resSortie
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Exit.bmp
.head 3 +  Bitmap: resLecteur
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\SAUVER.BMP
.head 3 +  Bitmap: resSearch
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\EXPLORER.BMP
.head 3 +  Bitmap: resEdit
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\BAK1.BMP
.head 3 +  Bitmap: resPrint
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\PRINT.BMP
.head 3 +  Bitmap: resIdVerif
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Id_Verif.BMP
.head 3 +  Bitmap: resIdVerifNL
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Id_Verif_NL.BMP
.head 3 +  Icon: resLogo
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Logo.ICO
.head 3 +  Icon: resLogoSup
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\LogoSup.ICO
.head 3 +  Bitmap: resContrat
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\CONTRAT.BMP
.head 3 +  Bitmap: resPlay
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\ICO\PLAY.BMP
.head 3 +  Bitmap: resPause
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\ICO\PAUSE.BMP
.head 3 +  Bitmap: resOk
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\OK.BMP
.head 3 +  Bitmap: resOkBV
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\OK_BV.BMP
.head 3 +  Bitmap: resDBleu
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Bleue.bmp
.head 3 +  Bitmap: resDBlanc
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Blanche.bmp
.head 3 +  Bitmap: resDRouge
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Rouge.bmp
.head 3 +  Bitmap: resDVert
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Verte.bmp
.head 3 +  Bitmap: resDJaune
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Jaune.bmp
.head 3 +  Bitmap: resDNoir
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Noire.bmp
.head 3 +  Bitmap: resDGris
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Grise.bmp
.head 3 +  Bitmap: resDOrange
.head 4 -  File Name: C:\p_lib32.2005\RESOURCE\Disquette_Orange.BMP
.head 2 +  Variables
.data RESOURCE 0 0 1 2461708920
0000: 3802000076010000 0000000000000000 02000012000000AD 0800001019000000
0020: 014607E0A1010000 0040730000000100 00A3C60800190500 014607F211B80000
0040: 0073D10001000068 DF08001900890146 A612006E00730034 010000F808420004
0060: 00000002A04607A7 1200009B7300018D 00FC080096190001 46E0411300000046
0080: 7300010000831509 00001925000146E8 15B800000073D100 010000682E090004
00A0: 0088010246E91500 FE00C18001000000 3F32095A00190001 8246C3160000001B
00C0: 730001008D004B09 00C604000102E8C4 1600009F8001FC00 00A34F0900192500
00E0: 01469B17B8000000 73D1000100006868 090004008C01029C 1700FE00C9800100
0100: 003F6C095A000400 02A3E41700001B73 0001008D00700900 D6040002E8F91700
0120: 006673000100A374 0900192500014696 26B800000073D100 010000688D090019
0140: 008901469726006E 00730034010000A6 095A00190001A246 982600001B730001
0160: 008D00BF09009619 000146E899260000 467300010000A3D8 0900043500029A26
0180: BA000073D9000100
.enddata
.head 3 -  String: gsUserUnique
.head 3 -  String: gsNomPc
.head 3 -  String: gstrPath
.head 3 -  String: gsPathBat
.head 3 -  String: gsPathBV_Cfg
.head 3 -  String: gsPathPcTot_Cfg
.head 3 -  String: gsPathPcTot_CfgStru
.head 3 -  String: gsPathPcTot_Cfg_Jites
.head 3 -  String: gsPathPcTot_CfgStru_Jites
.head 3 -  String: gsPathPcTotCle
.head 3 -  String: gsPathCle
.head 3 -  String: gsPathApplic
.head 3 -  String: gsPathTemp
.head 3 -  String: gsPathSearch
.head 3 -  String: gsPathBV
.head 3 -  String: gsPathRijndael
.head 3 -  String: gsPathRpt
.head 3 -  String: gsPathRef
.head 3 -  String: gsPathMav
.head 3 -  String: gsPathUrne
.head 3 -  String: gsPathPcTot
.head 3 -  String: gsPathArc
.head 3 -  String: gsPathLogo
.head 3 -  String: gsPathFormatF
.head 3 -  String: gsPathSimul
.head 3 -  String: gsPathSimul2
.head 3 -  String: gsLangueSoft
.head 3 -  String: gsLecteur[*]
.head 3 -  String: gsDateEl
.head 3 -  String: gsOrdreEl
.head 3 -  String: gsTmp
.head 3 -  String: gsUserLog
.head 3 -  String: gsUserEID
.head 3 -  String: gsNomUser
.head 3 -  String: gsRestrCom
.head 3 -  String: gsRestrRegion
.head 3 -  String: gsMateriel
.head 3 -  String: gsPwDevalListe
.head 3 -  String: gsPwDevalBV
.head 3 -  String: gsPwMaster
.head 3 -  String: gsFormatEtiq
.head 3 -  String: gsTitreF
.head 3 -  String: gsTitreN
.head 3 -  String: gsLettreLecteur[10]
.head 3 -  String: gsBV_Couleur[10]
.head 3 -  String: gsPCT_Couleur[10]
.head 3 -  String: gsIniLocal
.head 3 -  String: gsPrinter
.head 3 -  String: gsDriver
.head 3 -  String: gsPort
.head 3 -  String: gsPrinterChoisi
.head 3 -  String: gsDriverChoisi
.head 3 -  String: gsPortChoisi
.head 3 -  String: gsWL_Type
.head 3 -  Long String: glsUserPhoto
.head 3 -  Long String: glsTmp
.head 3 -  String: gsNumNatUser
.head 3 -  Number: gnTypeVote
.head 3 -  Boolean: gbConnection
.head 3 -  Boolean: gbUserUpdate
.head 3 -  Boolean: gbAdmin
.head 3 -  Boolean: gbAdminSys
.head 3 -  Boolean: gbCreatBV
.head 3 -  Boolean: gbCreatPCT
.head 3 -  Boolean: gbWinConnect
.head 3 -  Boolean: gbWinStat
.head 3 -  Boolean: gbWinStat2
.head 3 -  Boolean: gbCreateDisk
.head 3 -  Number: Btmp
.head 3 -  Number: gnI
.head 3 -  Number: gnNbLecteurDtm
.head 3 -  Number: gnNbLecteur
.head 3 -  Number: gnNbDiskBV
.head 3 -  Number: gnNbDiskPCT
.head 3 -  Number: gnPauseCopie
.head 3 -  Number: gnTimerInfo_BV
.head 3 -  Number: gnTimerInfo_PCT
.head 3 -  Number: ghColorDebut[*]
.head 3 -  File Handle: ghFileIniExist
.head 3 -  File Handle: ghFileIniLocal
.head 3 -  File Handle: ghFile
.head 3 -  Sql Handle: ghSqlSecondaire
.head 3 -  Sql Handle: ghSqlTertiaire
.head 3 -  Sql Handle: ghSqlMsg
.head 3 -  Sql Handle: ghSqlQuaternaire
.head 3 -  Sql Handle: ghSqlTrace
.head 3 -  Sql Handle: ghSqlChargeBV
.head 2 +  Internal Functions
.head 3 +  Function: PalConnectCursor
.head 4 -  Description: Connection des curseurs su la DB
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set gbConnection = TRUE
.head 5 -  Call SqlConnect(ghSqlMain)
.head 5 -  Call SqlSetParameter( ghSqlMain, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlMain, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlMain, 'RL' )
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlSecondaire)
.head 5 -  Call SqlSetParameter( ghSqlSecondaire, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlSecondaire, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlSecondaire, 'RL' )
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlTertiaire)
.head 5 -  Call SqlSetParameter( ghSqlTertiaire, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlTertiaire, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlTertiaire, 'RL' )
.head 5 -  !
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlMsg)
.head 5 -  Call SqlSetParameter( ghSqlMsg, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlMsg, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlMsg, 'RL' )
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlQuaternaire)
.head 5 -  Call SqlSetParameter( ghSqlQuaternaire, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlQuaternaire, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlQuaternaire, 'RL' )
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlTrace)
.head 5 -  Call SqlSetParameter( ghSqlTrace, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlTrace, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlTrace, 'RL' )
.head 5 -  !
.head 5 -  Call SqlConnect(ghSqlChargeBV)
.head 5 -  Call SqlSetParameter( ghSqlChargeBV, DBP_FETCHTHROUGH, TRUE, '' )
.head 5 -  Call SqlSetParameter( ghSqlChargeBV, DBP_PRESERVE	, TRUE, '' )
.head 5 -  Call SqlSetIsolationLevel( ghSqlChargeBV, 'RL' )
.head 3 +  Function: PalTraductMsg
.head 4 -  Description: Traduction des messages suivant la langue du logiciel
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sNoMsg
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sTrad
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SqlPrepareAndExecute( ghSqlMsg, "Select Msg_N from Message where No_msg = :sNoMsg into :sTrad ")
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMsg, "Select Msg_F from Message where No_msg = :sNoMsg into :sTrad ")
.head 5 +  If Not SqlFetchNext( ghSqlMsg, nRet )
.head 6 -  Return (sNoMsg)
.head 5 +  Else
.head 6 -  Return (sTrad)
.head 3 +  Function: date_transforme
.head 4 -  Description: Formatte la date ssyymmjj --> jj/mm/ssyy avec '/' comme séparateur
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: date_in
.head 5 -  String: separat
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: date_tmp
.head 4 +  Actions
.head 5 -  Set date_tmp=SalStrRightX(date_in,2)||separat||SalStrMidX(date_in,4,2)||separat||SalStrLeftX(date_in,4)
.head 5 -  Return date_tmp
.head 3 +  Function: dateStr_transforme
.head 4 -  Description: Formatte la date ssyymmjj --> jj/mm/ssyy avec '/' comme séparateur
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: date_in
.head 5 -  String: separat
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: date_tmp
.head 4 +  Actions
.head 5 -  Set date_tmp=SalStrLeftX(date_in,2)||separat||SalStrMidX(date_in,2,2)||separat||SalStrRightX(date_in,4)
.head 5 -  Return date_tmp
.head 3 +  Function: PalMakeAllDir
.head 4 -  Description: Création de répertoire non existant
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sPath
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If SalStrRightX( sPath, 1 ) = '\\'
.head 6 -  Set sPath= SalStrLeftX(sPath, SalStrLength( sPath)-1) 
.head 5 -  Call VisDosMakeAllDir( sPath )
.head 3 +  Function: PalGenClef
.head 4 -  Description: Génration de 32 chiffres aléatoires dans un String
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Long String: sClefIn
.head 5 -  Number: nNo
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  String: lsClef
.head 5 -  String: sClefExt
.head 4 +  Actions
.head 5 -  Set sClefExt = SalStrMidX( sClefIn, (nNo-1) * 128, 128 )
.head 5 -  Call PalBinToHexa( sClefExt, lsClef )
.head 5 -  Return ( lsClef )
.head 3 +  Function: PalDtmDateHeure
.head 4 -  Description: Retourne la date et l'heure formatée
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsDateHeure
.head 5 -  String: lsDate
.head 5 -  String: lsHeure
.head 4 +  Actions
.head 5 -  Call SalDateToStr( SalDateCurrent(), lsDateHeure)
.head 5 -  Set lsDateHeure = SalStrLeftX( lsDateHeure, 19 )
.head 5 -  Set lsDate= SalStrLeftX( lsDateHeure, 10)
.head 5 -  Set lsDate = date_transforme( VisStrSubstitute( lsDate,'-', ''), '/')
.head 5 -  Set lsHeure = SalStrRightX( lsDateHeure, 8)
.head 5 -  Set lsDateHeure = lsDate || ' ' || lsHeure
.head 5 -  Return ( lsDateHeure ) 
.head 3 +  Function: PalDtmRestricRegion
.head 4 -  Description: Dtm le IN pour les select avec restriction sur la région
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsRegion
.head 4 +  Actions
.head 5 +  If gsRestrRegion
.head 6 -  Set gsRestrRegion = VisStrSubstitute( gsRestrRegion, "," , "','" )
.head 6 -  Set gsRestrRegion = "('" || gsRestrRegion ||"')"
.head 3 +  Function: PalDtmRegion
.head 4 -  Description: Détermine le titre de la fenêtre avec la restriction sur la région
.head 4 +  Returns
.head 5 -  String:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sRegion
.head 4 +  Actions
.head 5 -  Set sRegion = ''
.head 5 +  If SalStrScan( gsRestrRegion, "'WAL'") != -1
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sRegion = "Waals Gewest"
.head 6 +  Else
.head 7 -  Set sRegion = "Région Wallonne"
.head 5 +  If SalStrScan( gsRestrRegion , "'FLA'") != -1
.head 6 +  If sRegion != ""
.head 7 -  Set sRegion = sRegion ||', '
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sRegion = sRegion ||'Vlaanderen'
.head 6 +  Else
.head 7 -  Set sRegion = sRegion ||'Région Flamande'
.head 5 +  If SalStrScan( gsRestrRegion , "'BXL'") != -1
.head 6 +  If sRegion != ""
.head 7 -  Set sRegion = sRegion ||', '
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sRegion = sRegion ||'Brussel Hoofdstad'
.head 6 +  Else
.head 7 -  Set sRegion = sRegion ||'Bruxelles Capitale'
.head 5 -  Return sRegion
.head 3 +  Function: PalFileDelete
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 4 +  Actions
.head 5 -  Call SalFileOpen( hFile, gsPathTemp ||'ETIQ.TXT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathTemp ||'ETIQ2.TXT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathTemp ||'FC.TXT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathTemp ||'EFFACE.BAT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathSimul2 ||'CANDIDAT.DAT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathSimul2 ||'SIMUL.BAT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathSimul2 ||'LISTES' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathSimul2 ||'LISTE.BAT' , OF_Delete )
.head 5 -  Call SalFileOpen( hFile, gsPathTemp ||"TABLE.SLK" , OF_Delete )
.head 5 -  Call VisFileDelete( gsPathTemp ||'*.DOC'  )
.head 5 -  !
.head 5 -  Call SalFileRemoveDirectory( gsPathTemp )
.head 5 -  Call SalFileRemoveDirectory( gsPathBV )
.head 5 -  Call SalFileRemoveDirectory( gsPathPcTot )
.head 5 -  Call SalFileRemoveDirectory( gsPathSimul2 )
.head 5 -  Call SalFileRemoveDirectory( gsPathCle )
.head 5 -  !
.head 5 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_LOCAL',  '', gsPathTemp, gsIniFilePathAndName )
.head 5 -  Call SalFileRemoveDirectory( gsPathTemp )
.head 3 +  Function: PalBackupDB
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsDate
.head 5 -  String: lsFileUNL
.head 5 -  Long String: sBuffer
.head 5 -  Long String: sTrace
.head 5 -  Number: nReturn
.head 4 +  Actions
.head 5 -  !
.head 5 +  If SalMessageBox(PalTraductMsg('BACKUP'), PalTraductMsg( '?'),MB_YesNo | MB_DefButton2 | MB_IconQuestion) = IDYES
.head 6 -  ! Trace
.head 6 -  Set sTrace = 'BACKUP DB     -     '
.head 6 -  Call PalTraceAction( gsUserLog, "BCK DB", sTrace || 'PREPA')
.head 6 -  !
.head 6 -  !
.head 6 -  Call SalDateToStr( SalDateCurrent() ,  lsDate )
.head 6 -  Call PalMakeAllDir( gsPathApplic||"UNL\\"|| SqlDatabase )
.head 6 -  Set lsFileUNL = gsPathApplic||"UNL\\"|| SqlDatabase||"\\JITES"|| lsDate ||'.UNL'
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Set nReturn = UnloadDatabase( lsFileUNL, TRUE, TRUE )
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 +  If nReturn = 0
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "BCK DB", sTrace || 'OK')
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg('BCK_OK'), PalTraductMsg( 'MSG'), MB_Ok)
.head 6 +  Else
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "BCK DB", sTrace || 'ERR')
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg('BCK_KO') ||'
' || SalNumberToStrX( nReturn, 0), PalTraductMsg( 'ERR'), MB_Ok | MB_IconExclamation)
.head 3 +  Function: PalTraceAction
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: psUser
.head 5 -  String: psType
.head 5 -  Long String: psAction
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sRech
.head 4 +  Actions
.head 5 -  Set sRech = SalStrLeftX( psAction, 50)
.head 5 -  Call SqlPrepareAndExecute( ghSqlTrace, "Insert into Trace_Action (Utilisateur, Type, Action, Nom_Pc, Recherche )
	VALUES (:psUser, :psType, :psAction , :gsNomPc , :sRech ) ")
.head 5 -  Call SqlCommit( ghSqlTrace )
.head 3 +  Function: PalCharge
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: psOut
.head 5 -  String: sArray[*]
.head 5 -  String: sTmp
.head 5 -  Number: nCar
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set psOut = ''
.head 5 -  Set nCar = SalStrTokenize( psIn, '', ',', sArray )
.head 5 -  Set i = 0
.head 5 +  While i < nCar
.head 6 +  If PalHexaToDec( sArray[i] , sTmp )
.head 7 -  Set psOut = psOut || SalNumberToChar( 64 + SalStrToNumber( sTmp ) )
.head 6 -  Set i = i + 1
.head 5 -  Return ( psOut )
.head 3 +  Function: PalHexaToDec
.head 4 -  Description: Fct de transfo Hexa --> Décimal
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psString
.head 5 -  Receive String: psStrDec
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsBin
.head 5 -  String: lsStrBin
.head 5 -  String: lsCaract
.head 5 -  String: lsStrUpper
.head 5 -  Number: lnI
.head 5 -  Number: lnJ
.head 5 -  Number: lnDec
.head 5 -  Number: lnLong
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  Set lbOk = TRUE
.head 5 -  Set lnI = 0
.head 5 -  Set lsStrBin = ''
.head 5 -  Set lnLong = SalStrLength(psString)
.head 5 -  Set lsStrUpper = SalStrUpperX(psString)
.head 5 +  While lnI < lnLong
.head 6 -  Set lsCaract = SalStrMidX(lsStrUpper,lnI, 1)
.head 6 +  If lsCaract = '0'
.head 7 -  Set lsBin = '0000'
.head 6 +  Else If lsCaract = '1'
.head 7 -  Set lsBin = '0001'
.head 6 +  Else If lsCaract = '2'
.head 7 -  Set lsBin = '0010'
.head 6 +  Else If lsCaract = '3'
.head 7 -  Set lsBin = '0011'
.head 6 +  Else If lsCaract = '4'
.head 7 -  Set lsBin = '0100'
.head 6 +  Else If lsCaract = '5'
.head 7 -  Set lsBin = '0101'
.head 6 +  Else If lsCaract = '6'
.head 7 -  Set lsBin = '0110'
.head 6 +  Else If lsCaract = '7'
.head 7 -  Set lsBin = '0111'
.head 6 +  Else If lsCaract = '8'
.head 7 -  Set lsBin = '1000'
.head 6 +  Else If lsCaract = '9'
.head 7 -  Set lsBin = '1001'
.head 6 +  Else If lsCaract = 'A'
.head 7 -  Set lsBin = '1010'
.head 6 +  Else If lsCaract = 'B'
.head 7 -  Set lsBin = '1011'
.head 6 +  Else If lsCaract = 'C'
.head 7 -  Set lsBin = '1100'
.head 6 +  Else If lsCaract = 'D'
.head 7 -  Set lsBin = '1101'
.head 6 +  Else If lsCaract = 'E'
.head 7 -  Set lsBin = '1110'
.head 6 +  Else If lsCaract = 'F'
.head 7 -  Set lsBin = '1111'
.head 6 +  Else
.head 7 -  Set lsBin = '0000'
.head 7 -  Set lbOk = FALSE
.head 6 -  Set lsStrBin = lsStrBin || lsBin
.head 6 -  Set lnI = lnI+1
.head 5 -  Set lnI = SalStrLength(lsStrBin)-1
.head 5 -  Set lnJ = 0
.head 5 -  Set lnDec = 0
.head 5 +  While lnI >= 0
.head 6 -  Set lsCaract = SalStrMidX(lsStrBin,lnI, 1)
.head 6 +  If lsCaract = '1'
.head 7 -  Set lnDec = lnDec + SalNumberPower ( 2, lnJ )
.head 6 -  Set lnI = lnI-1
.head 6 -  Set lnJ = lnJ+1
.head 5 -  Set psStrDec = SalNumberToStrX(lnDec,0)
.head 5 -  Return (lbOk)
.head 3 +  Function: SalFileCreateIniLocal
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Number: i
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, "C:\\EL_RW_Lecteur.ini", OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Call SalFilePutStr( hFile, "[UNITE]" )
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbLecteur
.head 7 -  Call SalFilePutStr( hFile, "LECTEUR" || SalNumberToStrX( i, 0) ||"=" || gsLecteur[i] )
.head 7 -  Set i = i + 1
.head 6 -  !
.head 6 +  If gnPauseCopie = NUMBER_Null or gnPauseCopie <= 0
.head 7 -  Set gnPauseCopie = 2000
.head 6 -  Call SalFilePutStr( hFile, "PAUSE_COPIE=" || SalNumberToStrX( gnPauseCopie, 0) )
.head 6 -  !
.head 6 -  Call SalFileClose( hFile )
.head 6 -  Return (TRUE)
.head 5 +  Else
.head 6 -  Return (FALSE)
.head 3 +  Function: PalDtmFloppy
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nNbLecteur
.head 5 -  Receive String: sAFloppy[*]
.head 5 -  Receive Number: nFloppy
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sADrive[*]
.head 5 -  Long String: sBuffer
.head 5 -  Number: nDrive
.head 5 -  Number: nType
.head 5 -  Number: i
.head 5 -  Number: j
.head 4 +  Actions
.head 5 -  Set nDrive = VisDosEnumDrives( sADrive )
.head 5 +  If nDrive > 0
.head 6 -  Set i = 0
.head 6 -  Set j = 0
.head 6 +  While i < nDrive
.head 7 +  If VisDosGetDriveType( sADrive[i]) = DRIVE_Floppy
.head 8 -  Set sAFloppy[j] = sADrive[i]
.head 8 -  Set sBuffer = sBuffer ||  sAFloppy[j] ||'
'
.head 8 -  Set j = j + 1
.head 7 +  If j >= nNbLecteur
.head 8 -  Break
.head 7 -  Set i = i + 1
.head 6 -  Set nFloppy = j
.head 6 +  If nFloppy < nNbLecteur and nNbLecteur != 999
.head 7 -  Call SalMessageBox( PalTraductMsg('ERR') || ': '|| PalTraductMsg('LECT01'), PalTraductMsg( 'ATTENTION'), MB_Ok)
.head 7 -  Return FALSE
.head 6 +  Else
.head 7 -  Return TRUE
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg('ERR') || ': '|| PalTraductMsg('LECT04'), PalTraductMsg( 'ATTENTION'), MB_Ok)
.head 6 -  Return FALSE
.head 3 +  Function: PalChangeColor
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 +  Static Variables
.head 5 -  Number: nNoDf
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  Set nNoDf = nNoDf + 1
.head 5 -  Set lbOk = SalColorSet( SalNumberToWindowHandle( ghColorDebut[nNoDf] ), COLOR_IndexWindow , COLOR_Green)
.head 5 -  Call DispatchMessage()
.head 5 -  Call SalBringWindowToTop( dlgDebut )
.head 5 +  If not lbOk
.head 6 -  Call SalMessageBox('Erreur','Err', MB_Ok)
.head 3 +  Function: PalCharToHexa
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psIN
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsIn
.head 5 -  String: lsOut
.head 5 -  String: sCar
.head 5 -  String: sCarHex
.head 5 -  Number: nCar
.head 4 +  Actions
.head 5 -  Set lsIn = psIN
.head 5 +  While SalStrLength( lsIn) != 0
.head 6 -  Set nCar = SalStrLop( lsIn )
.head 6 -  Set sCar = SalNumberToStrX( nCar, 0)
.head 6 -  Set sCarHex = PalDecToHexa( sCar, 2 )
.head 6 -  Set lsOut = lsOut || sCarHex
.head 5 -  Return (lsOut )
.head 3 +  Function: PalDecToHexa
.head 4 -  Description: Converstion de décimal vers hexa pour des nombres inférieurs à 65536
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psString
.head 5 -  Number: pnNbreDigit
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsString
.head 5 -  String: lsStrHex
.head 5 -  Number: lnI
.head 5 -  Number: lnString
.head 5 -  Number: lnQuotient
.head 4 +  Actions
.head 5 -  Set lnI = pnNbreDigit - 1
.head 5 -  Set lnString = SalStrToNumber(psString)
.head 5 +  If lnString > SalNumberPower( 16,lnI + 1)
.head 6 -  ! Call PalMessageBox( 'Erreur de conversion Dec -> Hex ' , 'Erreur',
 		  'Het bestand NL ', 'Fout',
		 'Datei kann nicht geöffnet werden De' , 'Fehler',
		MB_Ok  | MB_IconExclamation)
.head 6 -  Return ' '
.head 5 +  While lnI >= 0
.head 6 -  Set lnQuotient = SalNumberTruncate( lnString / SalNumberPower( 16,lnI ),2,0)
.head 6 +  If lnQuotient = 0
.head 7 -  Set lsString = '0'
.head 6 +  Else If lnQuotient = 1
.head 7 -  Set lsString = '1'
.head 6 +  Else If lnQuotient = 2
.head 7 -  Set lsString = '2'
.head 6 +  Else If lnQuotient = 3
.head 7 -  Set lsString = '3'
.head 6 +  Else If lnQuotient = 4
.head 7 -  Set lsString = '4'
.head 6 +  Else If lnQuotient = 5
.head 7 -  Set lsString = '5'
.head 6 +  Else If lnQuotient = 6
.head 7 -  Set lsString = '6'
.head 6 +  Else If lnQuotient = 7
.head 7 -  Set lsString = '7'
.head 6 +  Else If lnQuotient = 8
.head 7 -  Set lsString = '8'
.head 6 +  Else If lnQuotient = 9
.head 7 -  Set lsString = '9'
.head 6 +  Else If lnQuotient = 10
.head 7 -  Set lsString = 'A'
.head 6 +  Else If lnQuotient = 11
.head 7 -  Set lsString = 'B'
.head 6 +  Else If lnQuotient = 12
.head 7 -  Set lsString = 'C'
.head 6 +  Else If lnQuotient = 13
.head 7 -  Set lsString = 'D'
.head 6 +  Else If lnQuotient = 14
.head 7 -  Set lsString = 'E'
.head 6 +  Else If lnQuotient = 15
.head 7 -  Set lsString = 'F'
.head 6 -  Set lsStrHex = lsStrHex || lsString
.head 6 -  Set lnString = SalNumberMod( lnString, SalNumberPower( 16,lnI ) )
.head 6 -  Set lnI = lnI - 1
.head 5 -  Return lsStrHex
.head 3 +  Function: PalBinToHexa
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psString
.head 5 -  Receive String: psStrHexa
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: psHexa
.head 5 -  String: lsBin
.head 5 -  Number: lnI
.head 5 -  Boolean: lbOk
.head 4 +  Actions
.head 5 -  Set lbOk = TRUE
.head 5 -  Set lnI = 0
.head 5 -  Set psStrHexa = ''
.head 5 +  While lnI < SalStrLength(psString)
.head 6 -  Set lsBin = SalStrUpperX(SalStrMidX(psString,lnI, 4))
.head 6 +  If lsBin = '0000'
.head 7 -  Set psHexa = '0'
.head 6 +  Else If lsBin = '0001'
.head 7 -  Set psHexa = '1'
.head 6 +  Else If lsBin = '0010'
.head 7 -  Set psHexa = '2'
.head 6 +  Else If lsBin = '0011'
.head 7 -  Set psHexa = '3'
.head 6 +  Else If lsBin = '0100'
.head 7 -  Set psHexa = '4'
.head 6 +  Else If lsBin = '0101'
.head 7 -  Set psHexa = '5'
.head 6 +  Else If lsBin = '0110'
.head 7 -  Set psHexa = '6'
.head 6 +  Else If lsBin = '0111'
.head 7 -  Set psHexa = '7'
.head 6 +  Else If lsBin = '1000'
.head 7 -  Set psHexa = '8'
.head 6 +  Else If lsBin = '1001'
.head 7 -  Set psHexa = '9'
.head 6 +  Else If lsBin = '1010'
.head 7 -  Set psHexa = 'A'
.head 6 +  Else If lsBin = '1011'
.head 7 -  Set psHexa = 'B'
.head 6 +  Else If lsBin = '1100'
.head 7 -  Set psHexa = 'C'
.head 6 +  Else If lsBin = '1101'
.head 7 -  Set psHexa = 'D'
.head 6 +  Else If lsBin = '1110'
.head 7 -  Set psHexa = 'E'
.head 6 +  Else If lsBin = '1111'
.head 7 -  Set psHexa = 'F'
.head 6 +  Else
.head 7 -  Set psHexa = '0'
.head 7 -  Set lbOk = FALSE
.head 6 -  Set psStrHexa = psStrHexa || psHexa
.head 6 -  Set lnI = lnI+4
.head 5 -  Return (lbOk)
.head 3 +  Function: PalVerifStructureApplic
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sTypeEl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsFile
.head 5 -  String: lsType
.head 5 -  String: lsType_el
.head 5 -  String: lsAFile[*]
.head 5 -  String: lsAFile2[*]
.head 5 -  String: lsPath
.head 5 -  String: lsPath2
.head 5 -  String: lsTmp
.head 5 -  Number: lnNb
.head 5 -  Number: nFileFound
.head 5 -  Number: nFileFound2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  Boolean: bContinue
.head 5 -  Long String: sTrace
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  !
.head 5 -  Call VisWaitCursor( TRUE )
.head 5 -  ! Trace
.head 5 -  Set sTrace = PalTraductMsg('CTRL_INST')
.head 5 -  Call PalTraceAction( gsUserLog, "CTRL INST", sTrace )
.head 5 -  !
.head 5 -  !
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Controle_Structure set Present = 0 ")
.head 5 -  Call SqlCommit( ghSqlMain)
.head 5 -  Set sBuffer = ''
.head 5 -  Set bContinue = TRUE
.head 5 -  !
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Fichier from Controle_Structure where Type is null  into :lsFile ")
.head 5 +  While SqlFetchNext( ghSqlMain , Btmp)
.head 6 +  If NOT SalFileOpen( hFile, gsPathApplic || lsFile , OF_Exist )
.head 7 -  Set sBuffer = sBuffer || lsFile ||'
'
.head 7 -  Set bContinue = FALSE
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Controle_Structure set Present = 1 where Fichier= :lsFile ")
.head 7 -  Call SqlCommit( ghSqlSecondaire )
.head 5 +  If Not bContinue
.head 6 -  ! Trace
.head 6 -  Set sTrace = 'File(s) not found : ' || sBuffer
.head 6 -  Call PalTraceAction( gsUserLog, "CTRL INST", sTrace )
.head 6 -  !
.head 6 -  Call SalMessageBox(PalTraductMsg('ERR') ||' : 
' || sTrace , PalTraductMsg('MSG'), MB_Ok)
.head 5 -  !
.head 5 +  If bContinue
.head 6 -  Set sBuffer = ''
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select type, count(*) from Controle_Structure where type is not null and Type_el = :sTypeEl group by 1 into :lsPath,:lnNb  ")
.head 6 +  While SqlFetchNext( ghSqlMain , Btmp)
.head 7 -  Set nFileFound = 0
.head 7 -  Set nFileFound2 = 0
.head 7 +  If lsPath = 'BV_CFG'
.head 8 -  Set lsPath = gsPathBV_Cfg
.head 8 -  Set lsPath2 = ''
.head 7 +  Else If lsPath = 'PCTOT_CFG'
.head 8 -  Set lsPath = gsPathPcTot_Cfg
.head 8 -  Set lsPath2 = gsPathPcTot_CfgStru
.head 7 +  Else If lsPath = 'PCTOT_CFG_JITES'
.head 8 -  Set lsPath = gsPathPcTot_Cfg_Jites
.head 8 -  Set lsPath2 = gsPathPcTot_CfgStru_Jites
.head 7 -  Set nFileFound = VisDosEnumFiles( lsPath ||'*.*' , FA_Standard, lsAFile )
.head 7 +  If lsPath2 != ''
.head 8 -  Set nFileFound2 = VisDosEnumFiles( lsPath2 ||'*.*' , FA_Standard, lsAFile2 )
.head 7 +  If nFileFound+nFileFound2 != lnNb 
.head 8 -  Set i = 0
.head 8 +  While i < nFileFound
.head 9 -  Set lsTmp = SalStrUpperX(VisStrSubstitute( lsPath, gsPathApplic, '') || lsAFile[i])
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Fichier from Controle_Structure where @upper(Fichier) = :lsTmp and Type_el = :sTypeEl")
.head 9 +  If not SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 -  Set sBuffer = sBuffer || lsTmp ||'
'
.head 10 -  Set bContinue = FALSE
.head 9 -  Set i = i + 1
.head 8 -  Set i = 0
.head 8 +  While i < nFileFound2
.head 9 -  Set lsTmp = SalStrUpperX(VisStrSubstitute( lsPath2, gsPathApplic, '') || lsAFile2[i])
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Fichier from Controle_Structure where @upper(Fichier) = :lsTmp and Type_el = :sTypeEl ")
.head 9 +  If not SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 -  Set sBuffer = sBuffer || lsTmp ||'
'
.head 10 -  Set bContinue = FALSE
.head 9 -  Set i = i + 1
.head 6 +  If Not bContinue
.head 7 -  ! Trace
.head 7 -  Set sTrace = 'File(s) not in the reference : ' || sBuffer
.head 7 -  Call PalTraceAction( gsUserLog, "CTRL INST", sTrace )
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg('ERR') ||' : 
' || sTrace , PalTraductMsg('MSG'), MB_Ok)
.head 5 -  !
.head 5 +  If bContinue
.head 6 -  ! Trace
.head 6 -  Set sTrace = PalTraductMsg('CTRL_INST')||'     -    Ok'
.head 6 -  Call PalTraceAction( gsUserLog, "CTRL INST", sTrace )
.head 6 -  !
.head 6 -  Call SalMessageBox( sTrace , PalTraductMsg('MSG'), MB_Ok)
.head 5 -  Call VisWaitCursor( FALSE)
.head 3 +  Function: PalTransUnicodeToStr
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: psOut
.head 4 +  Actions
.head 5 -  Set psOut = psIn
.head 5 -  !
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "â¬","" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","À" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Á" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Â" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ã" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ä" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Å" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Æ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ç" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ç" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","È" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","É" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ê" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ë" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ì" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Í" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Î" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ï" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ð" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ñ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ò" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ó" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ô" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Õ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ö" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","×" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ø" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ù" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ú" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Û" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ü" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Ý" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","Þ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã","ß" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã ","à" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¡","á" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¢","â" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã£","ã" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¤","ä" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¥","å" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¦","æ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã§","ç" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¨","è" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã©","é" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ãª","ê" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã«","ë" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¬","ì" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã­","í" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã®","î" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¯","ï" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã°","ð" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã±","ñ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã²","ò" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã³","ó" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã´","ô" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ãµ","õ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¶","ö" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã·","÷" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¸","ø" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¹","ù" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ãº","ú" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã»","û" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¼","ü" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã½","ý" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¾","þ" )
.head 5 -  Set psOut = VisStrSubstitute( psOut,  "Ã¿","ÿ" )
.head 5 -  !
.head 5 -  Return ( psOut )
.head 3 +  Function: ExportTableurMsg
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: pwhTable
.head 5 -  String: psFileName
.head 5 -  String: sTitre
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: fh
.head 5 -  Long String: ls
.head 5 -  Number: y
.head 5 -  Number: x
.head 5 -  Number: i
.head 5 -  String: s
.head 5 -  String: s1
.head 5 -  Window Handle: wh
.head 5 -  Number: wnRow
.head 5 -  Number: nCar
.head 5 -  Number: wnDataType
.head 5 -  !
.head 5 -  !
.head 5 -  String: sDecSep
.head 5 -  String: sMilSep
.head 4 +  Actions
.head 5 -  Set sDecSep = ExportDataGetDecimalSeparator(  )
.head 5 -  Set sMilSep = ExportDataGetThousandSeparator(  )
.head 5 +  If SalFileOpen( fh, psFileName, OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Set ls = 'ID;PWXL;N;E
P;PGeneral
P;P0
P;P0.00
P;P#,##0
P;P#,##0.00
P;P#,##0\ _(0;;\-#,##0\ _(0
P;P#,##0\ _(0;;[Red]\-#,##0\ _(0
P;P#,##0.00\ _(0;;\-#,##0.00\ _(0
P;P#,##0.00\ _(0;;[Red]\-#,##0.00\ _(0
P;P#,##0\ "$";;\-#,##0\ "$"
P;P#,##0\ "$";;[Red]\-#,##0\ "$"
P;P#,##0.00\ "$";;\-#,##0.00\ "$"
P;P#,##0.00\ "$";;[Red]\-#,##0.00\ "$"
P;P0%
P;P0.00%
P;P0.00E+00
P;P##0.0E+0
P;P#\ ?/?
P;P#\ ??/??
P;Pd/mm/yy
P;Pd\-mmm\-yy
P;Pd\-mmm
P;Pmmm\-yy
P;Ph:mm\ AM/PM
P;Ph:mm:ss\ AM/PM
P;Ph:mm
P;Ph:mm:ss
P;Pd/mm/yy\ h:mm
P;Pmm:ss
P;Pmm:ss.0
P;P@
P;P[h]:mm:ss
P;P_-* #,##0\ "$"_-;;\-* #,##0\ "$"_-;;_-* "-"\ "$"_-;;_-@_-
P;P_-* #,##0\ _(0_-;;\-* #,##0\ _(0_-;;_-* "-"\ _(0_-;;_-@_-
P;P_-* #,##0.00\ "$"_-;;\-* #,##0.00\ "$"_-;;_-* "-"??\ "$"_-;;_-@_-
P;P_-* #,##0.00\ _(0_-;;\-* #,##0.00\ _(0_-;;_-* "-"??\ _(0_-;;_-@_-
P;FArial;M200
P;FArial;M180
P;FArial;M160;SB
P;FArial;M160
P;EArial;M160;SBI
P;EArial;M180
P;EArial;M200;SBU
P;EArial;M200;SBI
P;EArial;M200;SB
P;EArial;M240;SBU
P;EArial;M240;SBI
P;EArial;M240;SB
P;EArial;M280;SBU
P;EArial;M280;SBI
P;EArial;M280;SB
P;EArial;M160;SB;L11
P;EArial;M160;SB;L13
P;EArial;M160;SB;L22
P;EArial;M160;SB;L15
P;EArial;M180;SBI;L19
P;EArial;M180;SBI;L17
F;P0;DG0G10;M255
B;Y1;X4;D0 0 254 1
O;D;V0;K47;G100 0.001
F;W1 1 17
F;W2 5 80
F;W6 256 11
'
.head 6 -  Call SalFileWrite( fh, ls, SalStrLength( ls ) )
.head 6 -  Set i = 1
.head 6 -  Set x = 1
.head 6 -  Set ls = 'F;P0;SDM13;Y' || SalFmtFormatNumber( i, '0' ) || ';X' || SalFmtFormatNumber( x, '0' ) || '
'
.head 6 -  Set ls = ls || 'C;K"' || sTitre || '"
'
.head 6 -  Call DispatchMessage()
.head 6 -  Call SalFileWrite( fh, ls, SalStrLength( ls ) )
.head 6 -  Set i =2
.head 6 -  Set x = 1
.head 6 -  Set wh = SalGetFirstChild( pwhTable, TYPE_TableColumn )
.head 6 +  While wh != hWndNULL
.head 7 -  Set s = cSLKNull
.head 7 -  Call SalGetItemName( wh, s )
.head 7 -  Call SalTblGetColumnTitle( wh, s, 25 )
.head 7 -  Set ls = 'F;P0;FG0C;SLRTBDM9;Y' || SalFmtFormatNumber( i, '0' ) || ';X' || SalFmtFormatNumber( x, '0' ) || '
'
.head 7 -  Set ls = ls || 'C;K"' || s || '"
'
.head 7 -  Call DispatchMessage()
.head 7 -  Call SalFileWrite( fh, ls, SalStrLength( ls ) )
.head 7 -  Set x = x + 1
.head 7 -  Set wh = SalGetNextChild( wh, TYPE_TableColumn )
.head 6 -  Set i = 3
.head 6 -  Set wnRow = TBL_MinRow
.head 6 +  While SalTblFindNextRow( pwhTable, wnRow, 0, 0 )
.head 7 -  Call SalTblSetContext( pwhTable, wnRow )
.head 7 -  Call SalTblSetFocusRow( pwhTable, wnRow )
.head 7 -  Set x = 1
.head 7 -  Set wh = SalGetFirstChild( pwhTable, TYPE_TableColumn )
.head 7 +  While wh != hWndNULL
.head 8 -  Set s = cSLKNull
.head 8 -  Call SalGetItemName( wh, s )
.head 8 -  Call SalTblGetColumnTitle( wh, s, 25 )
.head 8 -  Call SalTblGetColumnText( pwhTable, SalTblQueryColumnID( wh ), s )
.head 8 -  Set wnDataType = SalGetDataType( wh )
.head 8 +  If x= 1
.head 9 -  Set ls = 'F;P0;SLRTBM21;Y' || SalFmtFormatNumber( i, '0' ) || ';X' || SalFmtFormatNumber( x, '0' ) || '
'
.head 8 +  Else
.head 9 -  Set ls = 'F;P0;SLRTBM3;Y' || SalFmtFormatNumber( i, '0' ) || ';X' || SalFmtFormatNumber( x, '0' ) || '
'
.head 8 +  If wnDataType = DT_Number
.head 9 -  Set s = VisStrSubstitute( s, '.', '' )
.head 9 -  Set s = VisStrSubstitute( s, ' ', '' )
.head 9 -  Set s = VisStrSubstitute( s, ',', '.' )
.head 9 -  Set ls = ls || 'C;K' || s || '
'
.head 8 +  Else
.head 9 +  While TRUE
.head 10 -  Set nCar = SalStrScan( s, "
" )
.head 10 +  If nCar != - 1
.head 11 -  Set s = SalStrReplaceX( s, nCar-1, 3, ' ' )
.head 10 +  Else
.head 11 -  Break
.head 9 -  Set ls = ls || 'C;K"' || s || '"
'
.head 8 -  Call DispatchMessage( )
.head 8 -  Call SalFileWrite( fh, ls, SalStrLength( ls ) )
.head 8 -  Set x = x + 1
.head 8 -  Set wh = SalGetNextChild( wh, TYPE_TableColumn )
.head 7 -  Set i = i + 1
.head 6 -  Set ls = 'E
'
.head 6 -  Call SalFileWrite( fh, ls, SalStrLength( ls ) )
.head 6 -  Call SalFileClose( fh )
.head 3 -  !
.head 3 +  Function: PalCaractere437
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sIn
.head 5 -  Receive Long String: lsReturn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bOk
.head 5 -  String: sRef
.head 5 -  Number: i
.head 5 -  Number: nCar
.head 4 +  Actions
.head 5 -  Set bOk = TRUE
.head 5 -  Set sRef = sIn
.head 5 -  Set lsReturn =''
.head 5 -  Set i = 0
.head 5 +  While TRUE
.head 6 -  Set nCar = SalStrLop( sIn )
.head 6 +  If nCar = 0
.head 7 -  Break
.head 6 +  Else
.head 7 +  If NOT ((nCar >= 32 and nCar<=33) or (nCar>=35 and nCar <=154)  or (nCar >=159 and nCar <=165) or nCar = 225)
.head 8 -  Set bOk = FALSE
.head 8 -  Set lsReturn = lsReturn || SalNumberToChar( nCar ) || ' : pos.' || SalNumberToStrX( i+1, 0) ||'
'
.head 6 -  Set i = i +1
.head 5 +  If lsReturn != ''
.head 6 -  Set lsReturn = sRef || '
' || lsReturn
.head 5 -  Return bOk
.head 3 +  Function: PalConver437Win
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsConversion
.head 4 +  Actions
.head 5 -  Set lsConversion = SalStrRepeatX(' ', SalStrLength( sIn))
.head 5 -  Call OemToCharA( sIn , lsConversion )
.head 5 -  Return ( lsConversion )
.head 3 +  Function: PalConverWin437
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsConversion
.head 4 +  Actions
.head 5 -  Set lsConversion = SalStrRepeatX(' ', SalStrLength( sIn))
.head 5 -  Call CharToOemA( sIn, lsConversion )
.head 5 -  Return ( lsConversion )
.head 3 +  Function: PalCompteNbLigne
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Long String: sIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nLigne
.head 5 -  String: sArray[*]
.head 4 +  Actions
.head 5 -  Set nLigne = SalStrTokenize( sIn, '', '
', sArray )
.head 5 -  Return (nLigne)
.head 3 -  !
.head 3 +  Function: CHIFLETNL
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nChifLet
.head 5 -  String: sChifLet
.head 5 -  Number: n1
.head 5 -  Number: n2
.head 5 -  Number: n3
.head 5 -  Number: n4
.head 5 -  Number: n
.head 4 +  Actions
.head 5 +  If npChif=NUMBER_Null
.head 6 -  Return ''
.head 5 +  If npChif=-1
.head 6 -  Return ''
.head 5 -  Set n = npChif
.head 5 +  If n = 0
.head 6 -  Return 'nul'
.head 5 -  Set n1 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n1)/1000
.head 5 -  Set n2 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n2)/1000
.head 5 -  Set n3 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n3)/1000
.head 5 -  Set n4 = SalNumberMod( n, 1000 )
.head 5 -  Set sChifLet = ''
.head 5 +  ! If n4 != 0
.head 6 -    Set sChifLet = sChifLet || CHIFLET1000F( n4 )
.head 6 -    Set sChifLet = sChifLet || ' '
.head 6 +    If n4 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n3 != 0
.head 6 -  ! Set sChifLet = sChifLet || ' '
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000N( n3 )
.head 6 -  Set sChifLet = sChifLet || ' miljoen'
.head 6 +  ! If n3 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n2 != 0
.head 6 -  Set sChifLet = sChifLet || ' '
.head 6 +  If n2 > 1
.head 7 -  Set sChifLet = sChifLet || CHIFLET1000N( n2 )
.head 6 -  Set sChifLet = sChifLet || 'duizend'
.head 6 +  ! If n2 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n1 != 0
.head 6 -  Set sChifLet = sChifLet || ' '
.head 6 +  If (n1 and n2) or (n1 and n3)
.head 7 +  If n1 <= 12
.head 8 -  Set sChifLet = sChifLet || "en "
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000N( n1 )
.head 5 -  Return SalStrTrimX( sChifLet )
.head 3 +  Function: CHIFLETDE
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nChifLet
.head 5 -  String: sChifLet
.head 5 -  Number: n1
.head 5 -  Number: n2
.head 5 -  Number: n3
.head 5 -  Number: n4
.head 5 -  Number: n
.head 4 +  Actions
.head 5 +  If npChif=NUMBER_Null
.head 6 -  Return ''
.head 5 +  If npChif=-1
.head 6 -  Return ''
.head 5 -  Set n = npChif
.head 5 +  If n = 0
.head 6 -  Return 'null'
.head 5 +  If n = 1
.head 6 -  Return 'eins'
.head 5 +  Else If n = 2001
.head 6 -  Return 'zweitausendeins'
.head 5 +  Else If n = 2002
.head 6 -  Return 'zweitausendzwei'
.head 5 +  Else If n = 2003
.head 6 -  Return 'zweitausenddrei'
.head 5 +  Else If n = 2004
.head 6 -  Return 'zweitausendvier'
.head 5 -  Set n1 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n1)/1000
.head 5 -  Set n2 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n2)/1000
.head 5 -  Set n3 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n3)/1000
.head 5 -  Set n4 = SalNumberMod( n, 1000 )
.head 5 -  Set sChifLet = ''
.head 5 +  If n4 != 0
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000D( n4 )
.head 6 -  ! Set sChifLet = sChifLet || ' '
.head 6 +  ! If n4 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n3 != 0
.head 6 -  ! Set sChifLet = sChifLet || ' '
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000D( n3 )
.head 6 -  Set sChifLet = sChifLet || 'Million'
.head 6 +  ! If n3 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n2 != 0
.head 6 -  ! Set sChifLet = sChifLet || ' '
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000D( n2 )
.head 6 -  Set sChifLet = sChifLet || 'tausend'
.head 6 +  ! If n2 > 1
.head 7 -    Set sChifLet = sChifLet || 's'
.head 5 +  If n1 != 0
.head 6 -  ! Set sChifLet = sChifLet || ' '
.head 6 +  If (n1 and n2) or (n1 and n3)
.head 7 +  If n1 <= 12
.head 8 -  Set sChifLet = sChifLet || "und"
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000D( n1 )
.head 5 -  Return SalStrTrimX( sChifLet )
.head 3 +  Function: CHIFLET
.head 4 -  Description: Conversion d'un nombre en lettre, entre 0 et 999.999.999.999
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nChifLet
.head 5 -  String: sChifLet
.head 5 -  Number: n1
.head 5 -  Number: n2
.head 5 -  Number: n3
.head 5 -  Number: n4
.head 5 -  Number: n
.head 4 +  Actions
.head 5 +  If npChif=NUMBER_Null
.head 6 -  Return ''
.head 5 +  If npChif=-1
.head 6 -  Return ''
.head 5 -  Set n = npChif
.head 5 +  If n = 0
.head 6 -  Return 'zéro'
.head 5 -  Set n1 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n1)/1000
.head 5 -  Set n2 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n2)/1000
.head 5 -  Set n3 = SalNumberMod( n, 1000 )
.head 5 -  Set n = (n - n3)/1000
.head 5 -  Set n4 = SalNumberMod( n, 1000 )
.head 5 -  Set sChifLet = ''
.head 5 +  If n4 != 0
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000( n4 )
.head 6 -  Set sChifLet = sChifLet || ' milliard'
.head 6 +  If n4 > 1
.head 7 -  Set sChifLet = sChifLet || 's'
.head 5 +  If n3 != 0
.head 6 -  Set sChifLet = sChifLet || ' '
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000( n3 )
.head 6 -  Set sChifLet = sChifLet || ' million'
.head 6 +  If n3 > 1
.head 7 -  Set sChifLet = sChifLet || 's'
.head 5 +  If n2 != 0
.head 6 -  Set sChifLet = sChifLet || ' '
.head 6 +  If n2 > 1
.head 7 -  Set sChifLet = sChifLet || CHIFLET1000( n2 )
.head 6 -  Set sChifLet = sChifLet || ' mille'
.head 6 +  ! If n2 > 1
.head 7 -  Set sChifLet = sChifLet || 's'
.head 5 +  If n1 != 0
.head 6 -  Set sChifLet = sChifLet || ' '
.head 6 -  Set sChifLet = sChifLet || CHIFLET1000( n1 )
.head 5 -  Return SalStrTrimX( sChifLet )
.head 3 +  Function: CHIFLET1000
.head 4 -  Description: Conversion d'un nombre en lettre, nombre entre 1 et 999
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sUnit[1:19]
.head 5 -  String: sDix[10:19]
.head 5 -  String: sDiz[2:9]
.head 5 -  String: sChifLet
.head 5 -  Number: nChifLet
.head 5 -  Number: C
.head 5 -  Number: D
.head 5 -  Number: U
.head 5 -  Number: N
.head 4 +  Actions
.head 5 -  Set nChifLet=npChif
.head 5 -  Call SalNumberToStr( npChif, 0, sChifLet )
.head 5 -  Set sUnit[1]='un'
.head 5 -  Set sUnit[2]='deux'
.head 5 -  Set sUnit[3]='trois'
.head 5 -  Set sUnit[4]='quatre'
.head 5 -  Set sUnit[5]='cinq'
.head 5 -  Set sUnit[6]='six'
.head 5 -  Set sUnit[7]='sept'
.head 5 -  Set sUnit[8]='huit'
.head 5 -  Set sUnit[9]='neuf'
.head 5 -  Set sUnit[10]='dix'
.head 5 -  Set sUnit[11]='onze'
.head 5 -  Set sUnit[12]='douze'
.head 5 -  Set sUnit[13]='treize'
.head 5 -  Set sUnit[14]='quatorze'
.head 5 -  Set sUnit[15]='quinze'
.head 5 -  Set sUnit[16]='seize'
.head 5 -  Set sUnit[17]='dix-sept'
.head 5 -  Set sUnit[18]='dix-huit'
.head 5 -  Set sUnit[19]='dix-neuf'
.head 5 -  Set sDiz[2]='vingt'
.head 5 -  Set sDiz[3]='trente'
.head 5 -  Set sDiz[4]='quarante'
.head 5 -  Set sDiz[5]='cinquante'
.head 5 -  Set sDiz[6]='soixante'
.head 5 -  Set sDiz[7]='septante'
.head 5 -  Set sDiz[8]='quatre-vingt'
.head 5 -  Set sDiz[9]='nonante'
.head 5 -  Set C = SalNumberTruncate( npChif/100, 1, 0 )
.head 5 -  Set D = SalNumberTruncate( SalNumberMod( npChif, 100 )/10, 1, 0 )
.head 5 -  Set U = SalNumberMod( npChif, 10 )
.head 5 -  Set N = SalNumberMod( npChif, 100 )
.head 5 -  Set sChifLet = ''
.head 5 -  !
.head 5 -  ! On traite le cas des centaines
.head 5 -  !
.head 5 +  If C != 0
.head 6 +  If C > 1
.head 7 -  Set sChifLet = sChifLet || sUnit[C] || " "
.head 6 -  Set sChifLet = sChifLet || "cent"
.head 6 +  If N = 0
.head 7 -  !
.head 7 -  ! Si on n'a pas de dizaine ni d'unité, on peut s'arrêter
.head 7 +  ! If C > 1 and N=0
.head 8 -  ! Si on a plusieurs centaines, il faut ajouter un 's' à cent.
.head 8 -  Set sChifLet = sChifLet || "s"
.head 7 -  Return sChifLet
.head 6 -  Set sChifLet = sChifLet || ' '
.head 5 -  !
.head 5 -  ! Il reste la partie des dizaines et des unités.
.head 5 -  !
.head 5 -  ! Si D = 0, on n'a que des unités.
.head 5 +  If D != 0
.head 6 -  ! On regarde si on a un nombre plus petit que vingt
.head 6 +  If (N <= 19) and (N >= 10)
.head 7 -  Set sChifLet = sChifLet || sUnit[ N ]
.head 7 -  Return sChifLet
.head 6 -  Set sChifLet = sChifLet || sDiz[ D ]
.head 6 +  If D = 8 and U = 0
.head 7 -  Set sChifLet = sChifLet || 's'
.head 6 +  Else If U != 0
.head 7 +  If U = 1 and D != 8
.head 8 -  Set sChifLet = sChifLet || ' et '
.head 7 +  Else
.head 8 -  Set sChifLet = sChifLet || '-'
.head 6 -  ! On peut quitter la procédure
.head 6 -  ! Return sChifLet
.head 5 -  !
.head 5 -  ! Il reste les unités.
.head 5 -  !
.head 5 +  If U != 0
.head 6 -  Set sChifLet =sChifLet || sUnit[ U ]
.head 5 -  Return sChifLet
.head 5 +  ! If SalStrLength( sChifLet ) = 0
.head 6 -       Set sChifLet=" "
.head 6 -       Return sChifLet
.head 5 +  ! If nChifLet=0
.head 6 -       Set sChifLet="zéro"
.head 6 -       Return sChifLet
.head 5 -  ! Unité
.head 5 +  ! If SalStrLength( sChifLet ) = 1
.head 6 -       Set sChifLet=sUnit[nChifLet]
.head 6 -       Return sChifLet
.head 5 -  ! Série de dix
.head 5 +  ! If SalStrLength( sChifLet ) = 2  and nChifLet<=19
.head 6 -       Set sChifLet=sDix[nChifLet]
.head 6 -       Return sChifLet
.head 5 -  ! Dizaine
.head 5 +  ! If SalStrLength( sChifLet ) = 2
.head 6 +       If SalStrRightX( sChifLet, 1 ) = "0"
.head 7 -       Set sChifLet=sDiz[nChifLet/10]
.head 7 -       Return sChifLet
.head 6 +       If SalStrRightX( sChifLet, 1 ) = "1"
.head 7 -       Set sChifLet=sDiz[(nChifLet-1)/10] || " et " || "un"
.head 7 -       Return sChifLet
.head 6 -       Set sChifLet=sDiz[(nChifLet-SalStrToNumber( SalStrRightX( sChifLet, 1 ) ))/10] || "-" || sUnit[SalStrToNumber( SalStrRightX( sChifLet, 1 ))]
.head 6 -       Return sChifLet
.head 3 +  Function: CHIFLET1000N
.head 4 -  Description: Transforme un nombre entre 1 et 999 en lettre
Version néerlandaise
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sUnit[1:19]
.head 5 -  String: sDix[10:19]
.head 5 -  String: sDiz[2:9]
.head 5 -  String: sChifLet
.head 5 -  Number: nChifLet
.head 5 -  Number: C
.head 5 -  Number: D
.head 5 -  Number: U
.head 5 -  Number: N
.head 4 +  Actions
.head 5 -  Set nChifLet=npChif
.head 5 -  Call SalNumberToStr( npChif, 0, sChifLet )
.head 5 -  Set sUnit[1]='een'
.head 5 -  Set sUnit[2]='twee'
.head 5 -  Set sUnit[3]='drie'
.head 5 -  Set sUnit[4]='vier'
.head 5 -  Set sUnit[5]='vijf'
.head 5 -  Set sUnit[6]='zes'
.head 5 -  Set sUnit[7]='zeven'
.head 5 -  Set sUnit[8]='acht'
.head 5 -  Set sUnit[9]='negen'
.head 5 -  Set sUnit[10]='tien'
.head 5 -  Set sUnit[11]='elf'
.head 5 -  Set sUnit[12]='twaalf'
.head 5 -  Set sUnit[13]='dertien'
.head 5 -  Set sUnit[14]='veertien'
.head 5 -  Set sUnit[15]='vijftien'
.head 5 -  Set sUnit[16]='zestien'
.head 5 -  Set sUnit[17]='zeventien'
.head 5 -  Set sUnit[18]='achttien'
.head 5 -  Set sUnit[19]='negentien'
.head 5 -  Set sDiz[2]='twintig'
.head 5 -  Set sDiz[3]='dertig'
.head 5 -  Set sDiz[4]='veertig'
.head 5 -  Set sDiz[5]='vijftig'
.head 5 -  Set sDiz[6]='zestig'
.head 5 -  Set sDiz[7]='zeventig'
.head 5 -  Set sDiz[8]='tachtig'
.head 5 -  Set sDiz[9]='negentig'
.head 5 -  Set C = SalNumberTruncate( npChif/100, 1, 0 )
.head 5 -  Set D = SalNumberTruncate( SalNumberMod( npChif, 100 )/10, 1, 0 )
.head 5 -  Set U = SalNumberMod( npChif, 10 )
.head 5 -  Set N = SalNumberMod( npChif, 100 )
.head 5 -  Set sChifLet = ''
.head 5 -  !
.head 5 -  ! On traite le cas des centaines
.head 5 -  !
.head 5 +  If C != 0
.head 6 +  Select Case (C)
.head 7 +  Case 1
.head 8 -  Set sChifLet = "honderd"
.head 8 -  Break
.head 7 +  Case 2
.head 8 -  Set sChifLet = "tweehonderd"
.head 8 -  Break
.head 7 +  Case 3
.head 8 -  Set sChifLet = "driehonderd"
.head 8 -  Break
.head 7 +  Case 4
.head 8 -  Set sChifLet = "vierhonderd"
.head 8 -  Break
.head 7 +  Case 5
.head 8 -  Set sChifLet = "vijfhonderd"
.head 8 -  Break
.head 7 +  Case 6
.head 8 -  Set sChifLet = "zeshonderd"
.head 8 -  Break
.head 7 +  Case 7
.head 8 -  Set sChifLet = "zevenhonderd"
.head 8 -  Break
.head 7 +  Case 8
.head 8 -  Set sChifLet = "achthonderd"
.head 8 -  Break
.head 7 +  Case 9
.head 8 -  Set sChifLet = "negenhonderd"
.head 8 -  Break
.head 6 -  Set sChifLet = sChifLet || " "
.head 6 +  If C and N and ( N <= 12 )
.head 7 -  Set sChifLet = sChifLet || "en "
.head 5 -  !
.head 5 -  ! Il reste la partie des dizaines et des unités.
.head 5 -  !
.head 5 +  Select Case (N)
.head 6 +  Case 10
.head 7 -  Set sChifLet = sChifLet || "tien"
.head 7 -  Return sChifLet
.head 6 +  Case 11
.head 7 -  Set sChifLet = sChifLet || "elf"
.head 7 -  Return sChifLet
.head 6 +  Case 12
.head 7 -  Set sChifLet = sChifLet || "twaalf"
.head 7 -  Return sChifLet
.head 6 +  Case 13
.head 7 -  Set sChifLet = sChifLet || "dertien"
.head 7 -  Return sChifLet
.head 6 +  Case 14
.head 7 -  Set sChifLet = sChifLet || "veertien"
.head 7 -  Return sChifLet
.head 6 +  Case 15
.head 7 -  Set sChifLet = sChifLet || "vijftien"
.head 7 -  Return sChifLet
.head 6 +  Case 16
.head 7 -  Set sChifLet = sChifLet || "zestien"
.head 7 -  Return sChifLet
.head 6 +  Case 17
.head 7 -  Set sChifLet = sChifLet || "zeventien"
.head 7 -  Return sChifLet
.head 6 +  Case 18
.head 7 -  Set sChifLet = sChifLet || "achttien"
.head 7 -  Return sChifLet
.head 6 +  Case 19
.head 7 -  Set sChifLet = sChifLet || "negentien"
.head 7 -  Return sChifLet
.head 5 +  If (N >= 10) and (N <= 19)
.head 6 -  Set sChifLet = sChifLet || sUnit[ N ]
.head 6 -  Return sChifLet
.head 5 -  !
.head 5 -  !
.head 5 +  If ( N < 20 )
.head 6 +  ! Select Case (U)
.head 7 +    Case 0
.head 8 -    Break
.head 7 +    Case 1
.head 8 -    Set sChifLet = sChifLet || "een"
.head 8 -    Break
.head 7 +    Case 2
.head 8 -    Set sChifLet = sChifLet || "twee"
.head 8 -    Break
.head 7 +    Case 3
.head 8 -    Set sChifLet = sChifLet || "drie"
.head 8 -    Break
.head 7 +    Case 4
.head 8 -    Set sChifLet = sChifLet || "vier"
.head 8 -    Break
.head 7 +    Case 5
.head 8 -    Set sChifLet = sChifLet || "vijf"
.head 8 -    Break
.head 7 +    Case 6
.head 8 -    Set sChifLet = sChifLet || "zes"
.head 8 -    Break
.head 7 +    Case 7
.head 8 -    Set sChifLet = sChifLet || "zeven"
.head 8 -    Break
.head 7 +    Case 8
.head 8 -    Set sChifLet = sChifLet || "acht"
.head 8 -    Break
.head 7 +    Case 9
.head 8 -    Set sChifLet = sChifLet || "negen"
.head 8 -    Break
.head 6 +  If U != 0
.head 7 -  Set sChifLet = sChifLet || sUnit[ U ]
.head 5 +  Else
.head 6 +  Select Case (U)
.head 7 +  Case 0
.head 8 -  ! Set sChifLet = sChifLet || " en "
.head 8 -  Break
.head 7 +  Case 1
.head 8 -  Set sChifLet = sChifLet || " eenen"
.head 8 -  Break
.head 7 +  Case 2
.head 8 -  Set sChifLet = sChifLet || " tweeën"
.head 8 -  Break
.head 7 +  Case 3
.head 8 -  Set sChifLet = sChifLet || " drieën"
.head 8 -  Break
.head 7 +  Case 4
.head 8 -  Set sChifLet = sChifLet || " vieren"
.head 8 -  Break
.head 7 +  Case 5
.head 8 -  Set sChifLet = sChifLet || " vijfen"
.head 8 -  Break
.head 7 +  Case 6
.head 8 -  Set sChifLet = sChifLet || " zesen"
.head 8 -  Break
.head 7 +  Case 7
.head 8 -  Set sChifLet = sChifLet || " zevenen"
.head 8 -  Break
.head 7 +  Case 8
.head 8 -  Set sChifLet = sChifLet || " achten"
.head 8 -  Break
.head 7 +  Case 9
.head 8 -  Set sChifLet = sChifLet || " negenen"
.head 8 -  Break
.head 5 +  If D >= 2
.head 6 -  Set sChifLet = sChifLet || sDiz[ D ]
.head 5 -  Return sChifLet
.head 3 +  Function: CHIFLET1000D
.head 4 -  Description: Transforme un nombre entre 1 et 999 en lettre

Version allemande
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  Number: npChif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sUnit[1:19]
.head 5 -  String: sDix[10:19]
.head 5 -  String: sDiz[2:9]
.head 5 -  String: sChifLet
.head 5 -  Number: nChifLet
.head 5 -  Number: C
.head 5 -  Number: D
.head 5 -  Number: U
.head 5 -  Number: N
.head 4 +  Actions
.head 5 -  Set nChifLet=npChif
.head 5 -  Call SalNumberToStr( npChif, 0, sChifLet )
.head 5 -  Set sUnit[1]='ein'
.head 5 -  Set sUnit[2]='zwei'
.head 5 -  Set sUnit[3]='drei'
.head 5 -  Set sUnit[4]='vier'
.head 5 -  Set sUnit[5]='fünf'
.head 5 -  Set sUnit[6]='sechs'
.head 5 -  Set sUnit[7]='sieben'
.head 5 -  Set sUnit[8]='acht'
.head 5 -  Set sUnit[9]='neun'
.head 5 -  Set sUnit[10]='zehn'
.head 5 -  Set sUnit[11]='elf'
.head 5 -  Set sUnit[12]='zwölf'
.head 5 -  Set sUnit[13]='dreizehn'
.head 5 -  Set sUnit[14]='vierzehn'
.head 5 -  Set sUnit[15]='fünfzehn'
.head 5 -  Set sUnit[16]='sechzehn'
.head 5 -  Set sUnit[17]='siebzehn'
.head 5 -  Set sUnit[18]='achtzehn'
.head 5 -  Set sUnit[19]='neunzehn'
.head 5 -  Set sDiz[2]='zwanzig'
.head 5 -  Set sDiz[3]='dreissig'
.head 5 +  ! If gsOrthographe = "ss"
.head 6 -  Set sDiz[3]='dreissig'
.head 5 +  ! Else
.head 6 -  Set sDiz[3]='dreißig'
.head 5 -  Set sDiz[4]='vierzig'
.head 5 -  Set sDiz[5]='fünfzig'
.head 5 -  Set sDiz[6]='sechzig'
.head 5 -  Set sDiz[7]='siebzig'
.head 5 -  Set sDiz[8]='achtzig'
.head 5 -  Set sDiz[9]='neunzig'
.head 5 -  Set C = SalNumberTruncate( npChif/100, 1, 0 )
.head 5 -  Set D = SalNumberTruncate( SalNumberMod( npChif, 100 )/10, 1, 0 )
.head 5 -  Set U = SalNumberMod( npChif, 10 )
.head 5 -  Set N = SalNumberMod( npChif, 100 )
.head 5 -  Set sChifLet = ''
.head 5 -  !
.head 5 -  ! On traite le cas des centaines
.head 5 -  !
.head 5 +  If C != 0
.head 6 +  Select Case (C)
.head 7 +  Case 1
.head 8 -  Set sChifLet = "hundert"
.head 8 -  Break
.head 7 +  Case 2
.head 8 -  Set sChifLet = "zweihundert"
.head 8 -  Break
.head 7 +  Case 3
.head 8 -  Set sChifLet = "dreihundert"
.head 8 -  Break
.head 7 +  Case 4
.head 8 -  Set sChifLet = "vierhundert"
.head 8 -  Break
.head 7 +  Case 5
.head 8 -  Set sChifLet = "fünfhundert"
.head 8 -  Break
.head 7 +  Case 6
.head 8 -  Set sChifLet = "sechshundert"
.head 8 -  Break
.head 7 +  Case 7
.head 8 -  Set sChifLet = "siebenhundert"
.head 8 -  Break
.head 7 +  Case 8
.head 8 -  Set sChifLet = "achthundert"
.head 8 -  Break
.head 7 +  Case 9
.head 8 -  Set sChifLet = "neunhundert"
.head 8 -  Break
.head 6 +  If C and N and ( N <= 12 )
.head 7 -  Set sChifLet = sChifLet || "und"
.head 5 -  !
.head 5 -  ! Il reste la partie des dizaines et des unités.
.head 5 -  !
.head 5 +  ! Select Case (N)
.head 6 +    Case 10
.head 7 -    Set sChifLet = sChifLet || "tien"
.head 7 -    Return sChifLet
.head 6 +    Case 11
.head 7 -    Set sChifLet = sChifLet || "elf"
.head 7 -    Return sChifLet
.head 6 +    Case 12
.head 7 -    Set sChifLet = sChifLet || "twaalf"
.head 7 -    Return sChifLet
.head 6 +    Case 13
.head 7 -    Set sChifLet = sChifLet || "dertien"
.head 7 -    Return sChifLet
.head 6 +    Case 14
.head 7 -    Set sChifLet = sChifLet || "veertien"
.head 7 -    Return sChifLet
.head 6 +    Case 15
.head 7 -    Set sChifLet = sChifLet || "vijftien"
.head 7 -    Return sChifLet
.head 6 +    Case 16
.head 7 -    Set sChifLet = sChifLet || "zestien"
.head 7 -    Return sChifLet
.head 6 +    Case 17
.head 7 -    Set sChifLet = sChifLet || "zeventien"
.head 7 -    Return sChifLet
.head 6 +    Case 18
.head 7 -    Set sChifLet = sChifLet || "achttien"
.head 7 -    Return sChifLet
.head 6 +    Case 19
.head 7 -    Set sChifLet = sChifLet || "negentien"
.head 7 -    Return sChifLet
.head 5 +  If (N >= 10) and (N <= 19)
.head 6 -  Set sChifLet = sChifLet || sUnit[ N ]
.head 6 -  Return sChifLet
.head 5 -  !
.head 5 -  !
.head 5 +  If ( N < 20 )
.head 6 +  ! Select Case (U)
.head 7 +    Case 0
.head 8 -    Break
.head 7 +    Case 1
.head 8 -    Set sChifLet = sChifLet || "een"
.head 8 -    Break
.head 7 +    Case 2
.head 8 -    Set sChifLet = sChifLet || "twee"
.head 8 -    Break
.head 7 +    Case 3
.head 8 -    Set sChifLet = sChifLet || "drie"
.head 8 -    Break
.head 7 +    Case 4
.head 8 -    Set sChifLet = sChifLet || "vier"
.head 8 -    Break
.head 7 +    Case 5
.head 8 -    Set sChifLet = sChifLet || "vijf"
.head 8 -    Break
.head 7 +    Case 6
.head 8 -    Set sChifLet = sChifLet || "zes"
.head 8 -    Break
.head 7 +    Case 7
.head 8 -    Set sChifLet = sChifLet || "zeven"
.head 8 -    Break
.head 7 +    Case 8
.head 8 -    Set sChifLet = sChifLet || "acht"
.head 8 -    Break
.head 7 +    Case 9
.head 8 -    Set sChifLet = sChifLet || "negen"
.head 8 -    Break
.head 6 +  If U != 0
.head 7 -  Set sChifLet = sChifLet || sUnit[ U ]
.head 7 +  ! If U=1
.head 8 -  Set sChifLet = sChifLet || 's'
.head 5 +  Else
.head 6 +  Select Case (U)
.head 7 +  Case 0
.head 8 -  Break
.head 7 +  Case 1
.head 8 -  Set sChifLet = sChifLet || "einund"
.head 8 -  Break
.head 7 +  Case 2
.head 8 -  Set sChifLet = sChifLet || 'zweiund'
.head 8 -  Break
.head 7 +  Case 3
.head 8 -  Set sChifLet = sChifLet || 'dreiund'
.head 8 -  Break
.head 7 +  Case 4
.head 8 -  Set sChifLet = sChifLet || 'vierund'
.head 8 -  Break
.head 7 +  Case 5
.head 8 -  Set sChifLet = sChifLet || "fünfund"
.head 8 -  Break
.head 7 +  Case 6
.head 8 -  Set sChifLet = sChifLet || "sechsund"
.head 8 -  Break
.head 7 +  Case 7
.head 8 -  Set sChifLet = sChifLet || "siebenund"
.head 8 -  Break
.head 7 +  Case 8
.head 8 -  Set sChifLet = sChifLet || "achtund"
.head 8 -  Break
.head 7 +  Case 9
.head 8 -  Set sChifLet = sChifLet || "neunund"
.head 8 -  Break
.head 5 +  If D >= 2
.head 6 -  Set sChifLet = sChifLet || sDiz[ D ]
.head 5 -  Return sChifLet
.head 3 -  !
.head 2 +  Named Menus
.head 2 +  Class Definitions
.data RESOURCE 0 0 1 2833176530
0000: C40B000032070000 0000000000000000 0200001A00FFFF01 00160000436C6173
0020: 73566172004F7574 6C696E6552006567 496E666F3E003C00 000A63006C734261
0040: 7365436F006C9A00 00000500001E0004 0000020002460709 0000060010077300
0060: 0060000100000004 B300040086020A00 00003D1000011B00 080000AC00040002
0080: 610B00000010CF00 0106000C00000019 080000000146070C DA000010A3000100
00A0: 00C1250000001912 0001460D0000F600 1068000100000180 803A0000000100F0
00C0: 000D636C01446644 61746584B0000000 0400B71900800446 0707000000317007
00E0: 730001DB0019A800 0400000269080000 70CF000106001D00 0000044300010246
0100: 09FB00C901000001 DE0001C000210000 0019D20001460AF6 0070680001000001
0120: 0880210000020000 F00011636C7F5400 696D656600000003 78000000194B0004
0140: 46071B00820773A3 000100008D190004 00D200024608F600 826C0001001D3300
0160: 040001B402460900 9F0100EC0001000D 0100018021330003 000C04636C436163
0180: 686540506F6F6C66 0000F60300048400 0001074607800500 0100540B001E0080
01A0: 0100FC00009B0400 048500034607070D 00600B7300D90001 0066080019006901
01C0: 4608007B60003401 0000018064040000 04001812636C624D 75006C74694C616E
01E0: 6775006167652200 0000017A0000046B 00020618000000AE 0B73B30001003101
0200: 80040005C1000018 636C0068696C6454 626C4DFE757F00F4 010000D604000236
0220: 0900C00B66730001 0063018004008406 000013636CF56F4D FF47000100006F04
0240: 006D02070063D20B 7300360100018046 04000700001E136D 624DFF7F00F40100
0260: 00D60400023700E4 0B66730001006301 800400E6080012F0 44664D75FFA30001
0280: 0000B70400BE0200 31F60B7300011B00 0180042300090000 130F6C674D75FF3F
02A0: 00017A0000046B00 02091B00080C73B2 0000010031018004 000A7200001346F0
02C0: 726D4D75FFA30001 0000B70400B6020A 0031200C7300011B 0001800423000B00
02E0: 0012C74C624DFF1F 000100BD0004B500 02078D003E0C73D9 0001001801800400
0300: 0C003900134D64F8 694D75FFD1000100 005B040002DB0900 98500C7300018D00
0320: 01800491000D0000 12E76C4DFF8F0001 00DE0004DA000207 C6006E0C736C0001
0340: 00010C8004000E00 001C00124F624DFF 7F00F4010000D604 0002360800800C26
0360: 7300010000630180 0400E00F00000012 F850624DFFA30001 0000B70400B60207
0380: 0031920C7300011B 0001800403001000 00001D04636C5175 6573741C4368576E
03A0: 64FC4D75FFE80001 0000AD0400026D08 00A4CC0C730001C6 00018004C0001100
03C0: 00001D3F5461E062 6C65576EFF3F0001 7A0000046B000209 1B00B60C73B30001
03E0: 0031018004001260 000000126352FC62 4DFFD1000100005B 040002DB070098D4
0400: 0C7300018D000180 0401001300000013 63D354624DFF1F00 0100BD0004B50002
0420: 0A8D00E60C73D900 0100200180130100 14000000000F6344 65736B00746F704C
0440: 69737442A06F784E 01000BBD0019A500 0146070D00B81373 00D1000100006619
0460: 0019006901460800 7BB8003401000032 00580000190001DA 4609001EB8000100
0480: 0D004B0000009619 000146B60A00B847 0001000083640000 0019A50001460BED
04A0: 00B8D10001000060 7D00000019006901 460C007BB8003401 0000960058000019
04C0: 0001DA460D001EB8 0001000D00AF0000 009619000146B40E 0000B84700010000
04E0: 83C8000000192500 01460F00ED00B8D1 0001000060E10000 0019004901461000
0500: 007BB80034010000 FA00580000190001 D2461100001EB800 01000D0001806400
0520: 0100150000000B63 E04469724C69837C 00000004BD0019A5 000146078D00CA13
0540: 73D1000100006619 0019006901460800 7BCA00B401000032 5900190001DA4609
0560: 001ECA0001006D00 4B009619000146B6 0A00CA4700010000 4301804B0000E216
0580: 00000F8154726565 4C690F5E000000F4 0300009619000146 360700DC13467300
05A0: 0100009B190019A5 00014608ED00DCD1 0001000066320019 0069014609007BDC
05C0: 0034010000018004 AF00001700000080 0C6346696C654C1F D60000EC0007002D
05E0: 19000146ED060088 1473000001003600 1900194B00014607 BB0014A300010000
0600: CD320019D2000146 08EE001468000100 004BB3001900B401 4609003B140001DA
0620: 0000642C00190001 46ED0A008E140001 0036007D00194B00 01460BBB0014A300
0640: 010000CD960019D2 0001460CEE001468 000100000108807D 000018000000000D
0660: 63526164696F7C4C 699AB200000500B7 1900B40146060031 CC14730001DA0000
0680: 192C00190001466D 0700CC8F00010036 003200194B000146 08DB00CCA3000100
06A0: 00CD4B0019D20001 4609F600CC680001 000064B3001900B4 01460A003DCC0001
06C0: 1A00000180813000 0000190008006351 4F456D61696C60C0 00000006006F1900
06E0: 690146050043EC15 730000B401000019 5900190001DA4608 001EEC0001006D00
0700: 32009619000146B6 0B00EC4700010000 9B4B0019A5000146 0EED00ECD1000100
0720: 0066640019006901 4611007BEC00B401 00007D1900040001 02D31400007F80F2
0740: 0100000F
.enddata
.head 3 +  Custom Control Class: ccProgress32
.head 4 -  DLL Name: COMCTL32.DLL
.head 4 -  Display Settings
.head 5 -  DLL Name: COMCTL32.DLL
.head 5 -  MS Windows Class Name: MSCTLS_PROGRESS32
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left:
.head 6 -  Top:
.head 6 -  Width:  2.9"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.69"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? No
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  DLL Settings
.head 4 -  List in Tool Palette? Yes
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Description: Progress meter class
.head 4 -  Derived From
.head 4 -  Class Variables
.head 4 -  Instance Variables
.head 4 +  Functions
.head 5 -  ! Attributes
.head 5 +  Function: SetRange
.head 6 -  Description: Sets the upper and lower limits of the progress bar control's
range and redraws the bar to reflect the new ranges.

The default range is 0 to 100
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nMin
.head 7 -  Number: nMax
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsg( hWndItem, PBM_SETRANGE, 0, nMax * 65536 | nMin )
.head 5 +  Function: SetPos
.head 6 -  Description: Sets the progress bar control's current position as specified
by nNewPos and redraws the bar to reflect the new position.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nNewPos
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsg( hWndItem, PBM_SETPOS, nNewPos, 0 )
.head 5 +  Function: OffsetPos
.head 6 -  Description: Advances the progress bar control's current position by the
increment specified by nIncrement and redraws the bar to
reflect the new position.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nIncrement
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsg( hWndItem, PBM_DELTAPOS, nIncrement, 0 )
.head 5 +  Function: SetStep
.head 6 -  Description: Specifies the step increment for a progress bar control. The
step increment is the amount by which a call to StepIt
increases the progress bar's current position.
The default step increment is 10.
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nIncrement
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsg( hWndItem, PBM_SETSTEP, nIncrement, 0 )
.head 5 -  ! Operations
.head 5 +  Function: StepIt
.head 6 -  Description: Advances the current position for a progress bar control
by the step increment and redraws the bar to reflect the
new position. The step increment is set by the SetStep
function.
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalSendMsg( hWndItem, PBM_STEPIT, 0, 0 )
.head 4 -  Message Actions
.head 2 +  Default Classes
.head 3 -  MDI Window: cBaseMDI
.head 3 -  Form Window:
.head 3 -  Dialog Box:
.head 3 -  Table Window:
.head 3 -  Quest Window:
.head 3 -  Data Field:
.head 3 -  Spin Field:
.head 3 -  Multiline Field:
.head 3 -  Pushbutton:
.head 3 -  Radio Button:
.head 3 -  Option Button:
.head 3 -  Check Box:
.head 3 -  Child Table:
.head 3 -  Quest Child Window: cQuickDatabase
.head 3 -  List Box:
.head 3 -  Combo Box: clsBaseCmb
.head 3 -  Picture:
.head 3 -  Vertical Scroll Bar:
.head 3 -  Horizontal Scroll Bar:
.head 3 -  Column:
.head 3 -  Background Text:
.head 3 -  Group Box:
.head 3 -  Line:
.head 3 -  Frame:
.head 3 -  Custom Control: cSpinField
.head 3 -  ActiveX:
.head 2 +  Application Actions
.head 3 +  On SAM_AppStartup
.head 4 -  Set gbConnection = FALSE
.head 4 +  If SalAppFind( "JITES11.EXE", TRUE) != hWndNULL
.head 5 -  Call SalBringWindowToTop( SalAppFind( "JITES09.EXE", TRUE) )
.head 5 -  Call SalQuit(  )
.head 4 +  Else
.head 5 -  ! ! INI FILE
.head 5 +  If TRUE
.head 6 +  If SalFileOpen( ghFileIniExist, 'C:\\JITES.ini', OF_Exist )
.head 7 -  Set gstrPath = 'c:'
.head 6 +  Else
.head 7 -  Set gstrPath = PalGetPrgmDirectory()
.head 6 +  If Not SalFileOpen( ghFileIniExist, gstrPath ||'\\JITES.ini', OF_Exist )
.head 7 -  Call SalMessageBox('Pas de fichier parmètres JITES.INI !!!','ATTENTION', MB_Ok)
.head 7 -  Call SalQuit()
.head 6 -  Set gsIniFilePathAndName = gstrPath||'\\JITES.ini'
.head 6 -  Call SalGetProfileString( 'DATABASE', 'DB','JITES09', SqlDatabase, gsIniFilePathAndName )
.head 6 -  Set SqlUser = 'SYSADM'
.head 6 -  Call SalGetProfileString( 'DATABASE', 'IN','10,8,1,12', SqlPassword , gsIniFilePathAndName )
.head 6 -  Set SqlPassword = PalCharge( SqlPassword )
.head 6 -  Call SalGetProfileString( 'DATABASE', 'USER_UNIQUE','0', gsUserUnique , gsIniFilePathAndName )
.head 6 -  Call SalGetProfileString( 'DATABASE', 'USER_EID','1', gsUserEID , gsIniFilePathAndName )
.head 6 -  Call SalGetProfileString( 'DATABASE', 'WL','', gsWL_Type , gsIniFilePathAndName )
.head 6 +  If gsWL_Type = ''
.head 7 -  Call SalSetProfileString( 'DATABASE', 'WL','0' , gsIniFilePathAndName )
.head 7 -  Set gsWL_Type = '0'
.head 6 -  ! PATH du réseau
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_APPLIC','', gsPathApplic, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathApplic, 1 ) != '\\'
.head 7 -  Set gsPathApplic= gsPathApplic ||'\\'
.head 6 -  Call SalCreateWindow( dlgDebut, hWndNULL )
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_DISK_PCTOT','', gsPathPcTot_Cfg, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTot_Cfg, 1 ) != '\\'
.head 7 -  Set gsPathPcTot_Cfg= gsPathPcTot_Cfg ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_DISK_PCTOT_STRUBAS','', gsPathPcTot_CfgStru, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTot_CfgStru, 1 ) != '\\'
.head 7 -  Set gsPathPcTot_CfgStru= gsPathPcTot_CfgStru ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_DISK_PCTOT_JITES','', gsPathPcTot_Cfg_Jites, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTot_Cfg_Jites, 1 ) != '\\'
.head 7 -  Set gsPathPcTot_Cfg_Jites= gsPathPcTot_Cfg_Jites ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_DISK_PCTOT_JITES_STRUBAS','', gsPathPcTot_CfgStru_Jites, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTot_CfgStru_Jites, 1 ) != '\\'
.head 7 -  Set gsPathPcTot_CfgStru_Jites= gsPathPcTot_CfgStru_Jites ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_DISK_BV',  '', gsPathBV_Cfg, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathBV_Cfg, 1 ) != '\\'
.head 7 -  Set gsPathBV_Cfg= gsPathBV_Cfg ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_FORMATF', '', gsPathFormatF, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathFormatF, 1 ) != '\\'
.head 7 -  Set gsPathFormatF= gsPathFormatF ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_SIMUL',	'', gsPathSimul, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathSimul, 1 ) != '\\'
.head 7 -  Set gsPathSimul= gsPathSimul ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_RIJNDAEL',	'', gsPathRijndael, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathRijndael, 1 ) != '\\'
.head 7 -  Set gsPathRijndael= gsPathRijndael ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_RPT',	'', gsPathRpt, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathRpt, 1 ) != '\\'
.head 7 -  Set gsPathRpt= gsPathRpt ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_REF',	'', gsPathRef, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathRef, 1 ) != '\\'
.head 7 -  Set gsPathRef= gsPathRef ||'\\'
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_LOGO',	'', gsPathLogo, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathLogo, 1 ) != '\\'
.head 7 -  Set gsPathLogo= gsPathLogo ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathLogo )
.head 6 -  Call SalGetProfileString( 'PATH', 'PATH_PC_TOT_CLEF',	'', gsPathPcTotCle , gsIniFilePathAndName )
.head 6 +  If gsPathPcTotCle = ''
.head 7 -  Call SalSetProfileString( 'PATH', 'PATH_PC_TOT_CLEF', gsPathApplic || 'PCTOT_CLE' , gsIniFilePathAndName )
.head 7 -  Call SalGetProfileString( 'PATH', 'PATH_PC_TOT_CLEF',	'', gsPathPcTotCle , gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTotCle, 1 ) != '\\'
.head 7 -  Set gsPathPcTotCle= gsPathPcTotCle ||'\\'
.head 6 -  ! PATH en local sur la machine cliente
.head 6 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_TEMP',  '', gsPathTemp, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathTemp, 1 ) != '\\'
.head 7 -  Set gsPathTemp= gsPathTemp ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathTemp )
.head 6 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_BV', '', gsPathBV, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathBV, 1 ) != '\\'
.head 7 -  Set gsPathBV= gsPathBV ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathBV )
.head 6 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_PC_TOT',	'', gsPathPcTot, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathPcTot, 1 ) != '\\'
.head 7 -  Set gsPathPcTot= gsPathPcTot ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathPcTot )
.head 6 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_SIMUL2',	'', gsPathSimul2, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathSimul2, 1 ) != '\\'
.head 7 -  Set gsPathSimul2= gsPathSimul2 ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathSimul2 )
.head 6 -  Call SalGetProfileString( 'PATH_LOC', 'PATH_CLEF',	'', gsPathCle, gsIniFilePathAndName )
.head 6 +  If SalStrRightX( gsPathCle, 1 ) != '\\'
.head 7 -  Set gsPathCle= gsPathCle ||'\\'
.head 6 -  Call PalMakeAllDir( gsPathCle )
.head 6 -  !
.head 6 -  Call SalGetProfileString( 'LANGUE', 'LANGUE',	'', gsLangueSoft, gsIniFilePathAndName )
.head 6 -  Call SalGetProfileString( 'LANGUE', 'REGION',	'', gsRestrRegion, gsIniFilePathAndName )
.head 6 +  If gsRestrRegion != ''
.head 7 -  Call PalDtmRestricRegion()
.head 6 -  Call SalGetProfileString( 'LANGUE', 'MATERIEL',	'J', gsMateriel, gsIniFilePathAndName )
.head 6 -  Set gsMateriel = VisStrSubstitute( gsMateriel, "," , "','" )
.head 6 -  Set gsMateriel = "VOTE_EL_TYPE in ('" || gsMateriel ||"')"
.head 6 -  !
.head 6 -  Call SalGetProfileString( 'ETIQUETTE', 'FORMAT',	'A4', gsFormatEtiq, gsIniFilePathAndName )
.head 6 +  If gsLangueSoft != 'N' and gsLangueSoft != 'F'
.head 7 -  Set gsLangueSoft = 'F'
.head 6 -  Call SalGetProfileString( 'UNITE', 'BV_DISK',  	'', gsTmp, gsIniFilePathAndName )
.head 6 -  Set gnNbDiskBV = SalStrToNumber( gsTmp)
.head 6 -  Set gnI = 1
.head 6 +  While gnI <= gnNbDiskBV
.head 7 -  Call SalGetProfileString( 'UNITE', 'BV_COUL_D' || SalNumberToStrX( gnI, 0),  'Noir|Zwart', gsBV_Couleur[gnI], gsIniFilePathAndName )
.head 7 -  Set gnI = gnI +1
.head 6 -  !
.head 6 -  !
.head 6 -  Call SalGetProfileString( 'UNITE', 'PCT_DISK',  	'', gsTmp, gsIniFilePathAndName )
.head 6 -  Set gnNbDiskPCT = SalStrToNumber( gsTmp)
.head 6 -  Set gnI = 1
.head 6 +  While gnI <= gnNbDiskPCT
.head 7 -  Call SalGetProfileString( 'UNITE', 'PCT_COUL_D' || SalNumberToStrX( gnI, 0),  'Noir|Zwart', gsPCT_Couleur[gnI], gsIniFilePathAndName )
.head 7 -  Set gnI = gnI +1
.head 6 -  !
.head 6 -  Call SalGetProfileString( 'UNITE', 'PAUSE_COPIE',  '', gsTmp, gsIniFilePathAndName )
.head 6 -  Set gnPauseCopie = SalStrToNumber( gsTmp)
.head 6 -  Call SalGetProfileString( 'UNITE', 'NB_LECTEUR',  	'', gsTmp, gsIniFilePathAndName )
.head 6 -  Set gnNbLecteur = SalStrToNumber( gsTmp)
.head 6 -  !
.head 6 +  If NOT SalFileOpen( ghFileIniLocal, 'C:\\EL_RW_Lecteur.ini', OF_Exist )
.head 7 -  Set gnI = 1
.head 7 +  While gnI <= gnNbLecteur
.head 8 -  Call SalGetProfileString( 'UNITE', 'LECTEUR' || SalNumberToStrX( gnI, 0),  '', gsLecteur[gnI], gsIniFilePathAndName )
.head 8 -  Set gnI = gnI +1
.head 7 -  Call SalFileCreateIniLocal( )
.head 6 -  !
.head 6 +  If Not SalFileOpen( ghFileIniLocal, 'C:\\EL_RW_Lecteur.ini', OF_Exist )
.head 7 -  Call SalMessageBox('Pas de fichier parmètres EL_RW_lecteur.INI !!!','ATTENTION', MB_Ok)
.head 7 -  Call SalQuit()
.head 6 -  Set gsIniLocal = 'C:\\EL_RW_Lecteur.ini'
.head 6 -  !
.head 6 -  Set gnI = 1
.head 6 +  While gnI <= gnNbLecteur
.head 7 -  Call SalGetProfileString( 'UNITE', 'LECTEUR' || SalNumberToStrX( gnI, 0),  '', gsLecteur[gnI], gsIniLocal )
.head 7 -  Set gnI = gnI +1
.head 6 -  Call SalGetProfileString( 'UNITE', 'PAUSE_COPIE',  '', gsTmp, gsIniLocal )
.head 6 +  If gsTmp != ''
.head 7 -  Set gnPauseCopie = SalStrToNumber( gsTmp)
.head 6 +  Else
.head 7 -  Call SalFileCreateIniLocal( )
.head 7 -  Call SalGetProfileString( 'UNITE', 'PAUSE_COPIE',  '', gsTmp, gsIniLocal )
.head 7 -  Set gnPauseCopie = SalStrToNumber( gsTmp)
.head 6 -  Call SalGetProfileString( 'UNITE', 'TIMER_BV',  '', gsTmp, gsIniLocal )
.head 6 +  If gsTmp = '' or gsTmp = '0'
.head 7 -  Call SalSetProfileString( 'UNITE', 'TIMER_BV', '95' , gsIniLocal )
.head 7 -  Call SalGetProfileString( 'UNITE', 'TIMER_BV',  '', gsTmp, gsIniLocal )
.head 6 -  Set gnTimerInfo_BV = SalStrToNumber( gsTmp)
.head 6 -  Call SalGetProfileString( 'UNITE', 'TIMER_PCT',  '', gsTmp, gsIniLocal )
.head 6 +  If gsTmp = '' or gsTmp = '0'
.head 7 -  Call SalSetProfileString( 'UNITE', 'TIMER_PCT', '110' , gsIniLocal )
.head 7 -  Call SalGetProfileString( 'UNITE', 'TIMER_PCT',  '', gsTmp, gsIniLocal )
.head 6 -  Set gnTimerInfo_PCT = SalStrToNumber( gsTmp)
.head 5 -  !
.head 5 -  Call PalConnectCursor()
.head 5 -  Set gbUserUpdate = FALSE
.head 5 -  ! Chargement Nom du PC
.head 5 -  Call SalStrSetBufferLength( gsNomPc, 250 )
.head 5 -  Call gethostname( gsNomPc,250) 
.head 5 -  Set gsNomPc = SalStrTrimX(gsNomPc)
.head 5 -  Call PalChangeColor()
.head 5 +  If NOT SalModalDialog( dlgLogUser, hWndNULL , glsUserPhoto , gsNumNatUser )
.head 6 -  Call SalDestroyWindow( dlgDebut )
.head 6 -  Call SalQuit()
.head 5 -  Call SalBringWindowToTop( dlgDebut )
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call PalChangeColor()
.head 5 -  ! Chargement de l'imprimante par defaut
.head 5 -  Call SalPrtGetDefault ( gsPrinter, gsDriver, gsPort )
.head 5 -  Set gsPrinterChoisi = gsPrinter
.head 5 -  Set gsDriverChoisi = gsDriver
.head 5 -  Set gsPortChoisi = gsPort
.head 5 -  Call PalChangeColor()
.head 5 -  !
.head 5 -  ! Trace : login
.head 5 -  Set gsTmp = 'IN' 
.head 5 +  If gsUserEID = '1'
.head 6 -  Set gsTmp = gsTmp || ' - EID : ' || gsNumNatUser
.head 5 -  Call PalTraceAction( gsUserLog, "LOGIN", gsTmp  )
.head 5 -  !
.head 5 -  Call SalCreateWindow( frmGenere, hWndNULL )
.head 3 +  On SAM_AppExit
.head 4 +  If gbConnection
.head 5 +  If gsUserLog != 'SYSADM' and gbUserUpdate
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select PC_Nom from utilisateur where Login = :gsUserLog into :gsTmp " )
.head 6 -  Call SqlFetchNext( ghSqlMain,Btmp)
.head 6 -  Set gsTmp = VisStrSubstitute( gsTmp , gsNomPc || '|', '')
.head 6 -  !
.head 6 +  If gsTmp != ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur Set Connect=1, Pc_Nom = :gsTmp where Login = :gsUserLog " )
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur Set Connect=0, Pc_Nom = '' where Login = :gsUserLog " )
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  Call SqlDisconnect( ghSqlMain )
.head 5 -  Call SqlDisconnect( ghSqlSecondaire )
.head 5 -  Call SqlDisconnect( ghSqlTertiaire )
.head 5 -  Call SqlDisconnect( ghSqlQuaternaire)
.head 5 -  Call SqlDisconnect( ghSqlMsg )
.head 5 -  Call SqlDisconnect( ghSqlTrace )
.head 4 +  ! If gsPrinter != gsPrinterChoisi and gsPrinterChoisi != ''
.head 5 -  Call SalPrtSetDefault( gsPrinter, gsDriver, gsPort )
.head 4 -  !
.head 4 -  Call PalFileDelete()
.head 4 -  !
.head 1 -  ! ===========================================================================
.head 1 -  ! Dlg d'attente chargement
.head 1 +  Dialog Box: dlgDebut
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Démarrage ...
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modeless
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  4.333"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.393"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Chargement en cours ...
.head 4 -  Resource Id: 5116
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.071"
.head 5 -  Width:  4.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Center
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Blue
.head 4 -  Background Color: Default
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.983"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Is bezig met opladen ...' )
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Call SalColorSet( hWndItem , COLOR_IndexWindow , COLOR_Red)
.head 6 -  Set ghColorDebut[1]= SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.383"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Call SalColorSet( hWndItem , COLOR_IndexWindow , COLOR_Red)
.head 6 -  Set ghColorDebut[2]= SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.783"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Call SalColorSet( hWndItem , COLOR_IndexWindow , COLOR_Red)
.head 6 -  Set ghColorDebut[3]= SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.183"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Call SalColorSet( hWndItem , COLOR_IndexWindow , COLOR_Red)
.head 6 -  Set ghColorDebut[4]= SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.583"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.262"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Call SalColorSet( hWndItem , COLOR_IndexWindow , COLOR_Red)
.head 6 -  Set ghColorDebut[5]= SalWindowHandleToNumber( hWndItem )
.head 3 +  Picture: pic1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.05"
.head 5 -  Width:  4.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.607"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicClear (pic1 )
.head 6 -  Call SalPicSetFile( pic1, gsPathApplic||"EL2007Logo.jpg" )
.head 6 -  Call SalPicSetFit( pic1, PIC_FitBestFit, 0, 0 )
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm)
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndForm, 'Start ...' )
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalHideWindow( dlgDebut)
.head 1 -  ! Login
.head 1 +  Dialog Box: dlgLogUser
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Database Login
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 2.5"
.head 4 -  Top: 1.156"
.head 4 -  Width:  4.617"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.833"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: &User ID:
.head 4 -  Resource Id: 64058
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.548"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.488"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set dfUser = ""
.head 6 +  If dfDatabase != ''
.head 7 -  Call SalSetFocus( hWndItem )
.head 3 -  Background Text: &Password:
.head 4 -  Resource Id: 64059
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.881"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPassword
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.821"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set dfPassword = ""
.head 6 +  If dfDatabase != '' and dfUser != ''
.head 7 -  Call SalSetFocus( hWndItem )
.head 3 +  Pushbutton: pbConnect
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: &Connect
.head 4 -  Window Location and Size
.head 5 -  Left: 0.583"
.head 5 -  Top: 1.321"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalShowWindow( dlgDebut)
.head 6 -  Call SalBringWindowToTop( dlgDebut )
.head 6 +  If SalIsNull(dfDatabase ) OR SalIsNull( dfUser ) OR SalIsNull( dfPassword ) 
.head 7 -  Call SalHideWindow( dlgDebut)
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalMessageBox( 'Ontbrekende velden', 'Pas Op !', MB_Ok | MB_IconExclamation )
.head 7 +  Else
.head 8 -  Call SalMessageBox( 'Champs manquants', 'Attention', MB_Ok | MB_IconExclamation )
.head 7 -  Return FALSE
.head 6 -  Call VisWaitCursor( TRUE )
.head 6 -  !
.head 6 -  Set wbConnect  = FALSE
.head 6 -  Set gbAdmin = FALSE
.head 6 -  Set gbAdminSys = FALSE
.head 6 -  Set wnConnecte = NUMBER_Null
.head 6 +  If dfUser != 'SYSADM'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Nom,password,restr_com, langue, connect, admin, Admin_Sys, NN , BV, PCT
	from utilisateur where Login = :dfUser 
	into :gsNomUser, :wsPassword,:gsRestrCom, :wsLangue ,:wnConnecte, :gbAdmin , :gbAdminSys, :wsNN, :gbCreatBV, :gbCreatPCT " )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If wsLangue != '' and wsLangue != gsLangueSoft
.head 9 -  Set gsLangueSoft = wsLangue
.head 8 +  If SalStrUpperX(wsPassword) = SalStrUpperX(dfPassword)
.head 9 -  Set wbConnect = TRUE
.head 9 -  Set gsUserLog = dfUser
.head 8 +  Else
.head 9 -  Call SalHideWindow( dlgDebut)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'PW01'), PalTraductMsg( 'ATTENTION'), MB_Ok | MB_IconExclamation  )
.head 9 -  Call VisWaitCursor( FALSE )
.head 9 -  Return (FALSE)
.head 6 +  Else
.head 7 +  If SalStrUpperX(dfPassword) = SalStrUpperX(SqlPassword)
.head 8 -  Set gsLangueSoft = 'F'
.head 8 -  Set gsUserLog = dfUser
.head 8 -  Set gsNomUser = "Administrateur du système"
.head 8 -  Set gbAdmin = TRUE
.head 8 -  Set gbAdminSys = TRUE
.head 8 -  Set gbCreatBV = TRUE
.head 8 -  Set gbCreatPCT = TRUE
.head 8 -  Set wbConnect = TRUE
.head 8 -  Set sPhoto = '' 
.head 8 -  Set psNumNat = ''
.head 6 -  !
.head 6 +  If gsUserEID = '1' and dfUser != 'SYSADM'
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select EID, photo from Utilisateur  where Login=:dfUser into :wsEid, :sPhotoEnreg")
.head 7 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 +  If wsEid = '0' or wsEid = ''
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  'Update Utilisateur set Eid = :gsUserEID
		Where  Login=:dfUser ')
.head 9 -  Call SqlCommit( ghSqlSecondaire )
.head 9 +  If sPhoto =''
.head 10 -  Set sPhoto = sPhotoEnreg
.head 8 +  Else
.head 9 +  If sPhoto = '' 
.head 10 -  Call SalHideWindow( dlgDebut )
.head 10 -  Call VisWaitCursor( FALSE )
.head 10 -  Call SalMessageBox( PalTraductMsg( 'EID2' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 10 -  Return FALSE
.head 9 +  If wsNN = ''
.head 10 -  Call SqlPrepareAndExecute(ghSqlMain, "Select * from utilisateur where NN = :psNumNat")
.head 10 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 11 -  Call SalHideWindow( dlgDebut )
.head 11 -  Call VisWaitCursor( FALSE )
.head 11 -  Call SalMessageBox( PalTraductMsg( 'EID1' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 11 -  Return FALSE
.head 10 +  Else
.head 11 -  Call SalMessageBeep( -1 )
.head 11 -  Call SalMessageBeep( -1 )
.head 11 +  If SalMessageBox( PalTraductMsg( 'EID3' ), PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur set NN = :psNumNat, Photo = :sPhoto where Login = :dfUser " )
.head 12 -  Call SqlCommit( ghSqlMain )
.head 11 +  Else
.head 12 -  Call SalHideWindow( dlgDebut )
.head 12 -  Call VisWaitCursor( FALSE )
.head 12 -  Return (FALSE)
.head 9 +  Else If wsNN != psNumNat
.head 10 -  Call SalHideWindow( dlgDebut )
.head 10 -  Call VisWaitCursor( FALSE )
.head 10 -  Call SalMessageBeep( -1 )
.head 10 -  Call SalMessageBeep( -1 )
.head 10 -  Call SalMessageBox( PalTraductMsg( 'EID1' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 10 -  Return FALSE
.head 6 -  !
.head 6 -  Call VisWaitCursor( FALSE )
.head 6 +  If not wbConnect
.head 7 -  Call SalHideWindow( dlgDebut)
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalMessageBox( 'U hebt geen toegang tot deze software', 'Boodschap', MB_Ok | MB_IconExclamation )
.head 7 +  Else
.head 8 -  Call SalMessageBox("Vous n'avez pas acces à ce logiciel","MESSAGE", MB_Ok  | MB_IconExclamation )
.head 6 +  Else
.head 7 +  If dfUser != 'SYSADM'
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select PC_Nom from utilisateur where Login = :dfUser into :lsPC" )
.head 8 +  If NOT  SqlFetchNext( ghSqlSecondaire,Btmp)
.head 9 -  Call SalMessageBox( 'User not found !!', '!!!!' , MB_Ok)
.head 8 -  Set lsPC = lsPC || gsNomPc  || '|'
.head 8 +  If gsUserUnique = '1'
.head 9 +  If wnConnecte = 1 and gsUserUnique = '1'
.head 10 -  Set wbConnect = FALSE
.head 10 -  Set gbUserUpdate = FALSE
.head 10 +  If gsLangueSoft = 'N'
.head 11 -  Call SalMessageBox( 'Een andere gebruiken is verboden met deze Login', 'Boodschap', MB_Ok | MB_IconExclamation )
.head 10 +  Else
.head 11 -  Call SalMessageBox("Un autre utilisateur est connecté avec ce Login","MESSAGE", MB_Ok  | MB_IconExclamation )
.head 9 +  Else
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur Set Connect=1 , PC_Nom = :lsPC where Login = :dfUser " )
.head 10 -  Call SqlCommit( ghSqlMain )
.head 10 -  Set gbUserUpdate = TRUE
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur Set Connect=1, PC_Nom = :lsPC  where Login = :dfUser " )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set gbUserUpdate = TRUE
.head 6 +  If gsUserEID = '1'
.head 7 -  Call SalTimerKill( dlgLogUser, 9 )
.head 7 -  Call loStesudEID.SalEidExit(  )
.head 7 -  Call loStesudEID.SalDeleteObjectEID()
.head 6 -  Call SalEndDialog( hWndForm, wbConnect )
.head 5 +  On SAM_Create
.head 6 -  Call SalSetDefButton( hWndItem )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: C&ancel
.head 4 -  Window Location and Size
.head 5 -  Left: 2.683"
.head 5 -  Top: 1.321"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Esc
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If gsUserEID = '1'
.head 7 -  Call loStesudEID.SalEidExit(  )
.head 7 -  Call loStesudEID.SalDeleteObjectEID()
.head 6 -  Call SalEndDialog( hWndForm, FALSE )
.head 3 +  Pushbutton: pbUnlock
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Unlock
.head 4 -  Window Location and Size
.head 5 -  Left: 2.583"
.head 5 -  Top: 2.155"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F10
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Update utilisateur Set Connect=0 , PC_Nom = '' where Login = :dfUser " )
.head 6 -  Call SqlCommit(ghSqlMain )
.head 3 -  Background Text: &Database:
.head 4 -  Resource Id: 64057
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.188"
.head 5 -  Top: 0.198"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDatabase
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.167"
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = SqlDatabase
.head 6 -  Call SalDisableWindow( hWndItem)
.head 3 +  Picture: picUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.183"
.head 5 -  Top: 0.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.083"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call loStesudEID.SalCreateObjectEID()
.head 2 +  Functions
.head 3 +  Function: PalLectureCarte
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If loStesudEID.SalEidInit(  )
.head 6 +  If sPhoto = '' or sPhotoPrec != sPhoto
.head 7 +  If loStesudEID.SalEidReadId()
.head 8 -  Call loStesudEID.SalEidId_NN( psNumNat )
.head 8 +  If sNNPrec != psNumNat
.head 9 -  Set sNNPrec = psNumNat
.head 9 -  Set sPhoto = ''
.head 9 +  If loStesudEID.SalEidReadPhoto( sPhoto )
.head 10 +  If sPhoto != ''
.head 11 +  If sPhotoPrec != sPhoto
.head 12 -  Call VisWaitCursor( TRUE )
.head 12 -  ! Call SalPicSetString( picUser, PIC_FormatObject, sPhoto )
.head 12 -  Call SalPicSetImage( picUser, sPhoto, PIC_ImageTypeJPEG )
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain , "Select Login from utilisateur where NN = :psNumNat into :sUserFind ")
.head 12 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 13 -  Set dfUser = sUserFind
.head 13 -  Call SalDisableWindow( dfUser )
.head 13 -  Call SalColorSet( dfUser, COLOR_IndexWindow, COLOR_LightGray )
.head 13 -  Call SalSetFocus( dfPassword )
.head 12 +  Else
.head 13 -  Set dfUser = ''
.head 13 -  Call SalEnableWindow( dfUser )
.head 13 -  Call SalColorSet( dfUser, COLOR_IndexWindow, COLOR_White )
.head 13 -  Call SalSetFocus( dfUser )
.head 12 -  Call VisWaitCursor( FALSE )
.head 12 -  Set sPhotoPrec = sPhoto
.head 11 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 10 +  Else
.head 11 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 9 +  Else
.head 10 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 8 +  Else
.head 9 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 7 +  Else
.head 8 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 6 +  Else
.head 7 -  Call SalTimerSet( dlgLogUser, 9, 4000 )
.head 5 +  Else
.head 6 -  Set sPhoto = ''
.head 6 -  Set sPhotoPrec = ''
.head 6 -  Set psNumNat = ''
.head 6 -  Set sNNPrec = ''
.head 6 -  Call SalEnableWindow( dfUser )
.head 6 -  Call SalColorSet( dfUser, COLOR_IndexWindow, COLOR_White )
.head 6 -  Call SalTimerSet( dlgLogUser, 9, 1000 )
.head 2 +  Window Parameters
.head 3 -  Receive Long String: sPhoto
.head 3 -  Receive String: psNumNat
.head 2 +  Window Variables
.head 3 -  Number: wnLoginTmp
.head 3 -  Number: wnLoop
.head 3 -  Number: wnConnecte
.head 3 -  Number: wnPassage
.head 3 -  String: wsFileName
.head 3 -  String: wsLangue
.head 3 -  String: sUserFind
.head 3 -  String: wsNN
.head 3 -  String: wsPassword
.head 3 -  Long String: sPhotoPrec
.head 3 -  Long String: sPhotoEnreg
.head 3 -  String: lsPC
.head 3 -  String: sNNPrec
.head 3 -  String: wsEid
.head 3 -  File Handle: wfHnd
.head 3 -  String: wsFileNames[*]
.head 3 -  Boolean: wbConnect
.head 3 -  FunctionalVar: loStesudEID
.head 4 -  Class: StesudEID
.head 2 +  Message Actions
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalSetDefButton( pbConnect )
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set wnPassage = 1
.head 4 +  If gsUserEID = '1'
.head 5 -  Call SalShowWindow( picUser )
.head 4 +  Else
.head 5 -  Call SalHideWindow( picUser )
.head 4 -  Call PalLectureCarte()
.head 3 +  On SAM_Timer
.head 4 -  Call SalTimerKill( dlgLogUser, 9 )
.head 4 -  Set wnPassage = wnPassage + 1
.head 4 +  If sPhoto = ''
.head 5 -  Set psNumNat = ''
.head 5 -  Set sPhotoPrec = ''
.head 5 +  If SalNumberMod( wnPassage , 3 ) != 0
.head 6 -  Call SalPicSetFile( picUser, gsPathApplic||"EID.jpg" )
.head 5 +  Else
.head 6 -  Call SalPicSetFile( picUser, gsPathApplic||"EID2.jpg" )
.head 4 -  Call PalLectureCarte()
.head 1 -  ! Fenetre générale
.head 1 +  Form Window: frmGenere
.head 2 -  Class: clsBaseFrmTabs
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Icon File: D:\Applic\JITES09\Win_ico.ico
.data RESOURCE 2 0 1 3761761279
0000: FE0200008E010000 0000000000000000 0200A20001000120 3010000000E80200
0020: 0000160000002800 0000002000000040 0008000001040000 00A380020000FFFF
0040: 8F80000003008080 0080006800008080 800D008000C0C080 C0000000FF000003
0060: 00FFFF00FF006800 00FFFFFF0D00FF00 77777E777F00F000 000FF77777777FFF
0080: 08000000FF777777 BF7FEB000FBE77FF DD00FFDE777F1D00 0F7777DE77FFBE00
00A0: 77EE777F90000FF0 0000776E77FF0099 FFFF007776777F00 A00FFFFFF00077B6
00C0: 77FF00AAFFFF0077 3A777F000FABFFF0 775A77FF00FFEDFF F08C777F00000FAD
00E0: FF0077AC77FF00FF B6FFF077C27F0F00 000F96FF00007752 FF0FF0FFFF0BF000
0100: 00777F01000FFF0F FFFFFF2300000077 FFDB0FFF05F00000 0F7FF0D7FFFFD500
0120: 00FFD9000FFF06F0 000FF7F000D1000F FFFF8A0000FF77FF 59000FFFF083000F
0140: F7777F57FFFF0015 00FF7777FF5B0FFF F017F777777FD30F FFFFDA00FF77DAFF
0160: 0FFFD8F00FF777E6 7F0000EDFF77E5FF 0000EC0FF777DD7F 00F6FF775BFF000F
0180: F7773B7F00FFFB77 B7FF0F3B770000FE 00FFFFFFFFFFFFFF FFFFFFFFFFFFFF3F
.enddata
.head 2 -  Accessories Enabled? Class Default
.head 2 -  Visible? Class Default
.head 2 -  Display Settings
.head 3 -  Display Style? Class Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? No
.head 3 -  Minimizable? Yes
.head 3 -  Allow Child Docking? Class Default
.head 3 -  Docking Orientation: Class Default
.head 3 -  System Menu? Class Default
.head 3 -  Resizable? No
.head 3 -  Window Location and Size
.head 4 -  Left: 5.163"
.head 4 -  Top: 1.031"
.head 4 -  Width:  17.1"
.head 4 -  Width Editable? Class Default
.head 4 -  Height: 8.869"
.head 4 -  Height Editable? Class Default
.head 3 -  Form Size
.head 4 -  Width:  Class Default
.head 4 -  Height: Class Default
.head 4 -  Number of Pages: Class Default
.head 3 -  Font Name: Class Default
.head 3 -  Font Size: Class Default
.head 3 -  Font Enhancement: Class Default
.head 3 -  Text Color: Class Default
.head 3 -  Background Color: Class Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 +  Menu
.head 3 +  Popup Menu: &Fichier
.head 4 -  Resource Id: 4356
.head 4 -  Enabled when:
.head 4 -  Status Text:
.head 4 -  Menu Item Name:
.head 4 +  Menu Item: Choix Imprimante
.head 5 -  Resource Id: 4357
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalChoixImprimante()
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: A propos de ...
.head 5 -  Resource Id: 4358
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgAbout, hWndForm )
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Quitter
.head 5 -  Resource Id: 4359
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 -  Menu Item Name:
.head 3 +  Popup Menu: &Edition
.head 4 -  Resource Id: 4360
.head 4 -  Enabled when:
.head 4 -  Status Text:
.head 4 -  Menu Item Name:
.head 4 +  Menu Item: &Traducteur codes erreurs
.head 5 -  Resource Id: 4361
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgTraductErrCode, hWndForm)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Gestion des candidats, des bureaux de vote et des PC de totalisation
.head 5 -  Resource Id: 4362
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin 
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgGestionCommune, hWndForm, gsRestrCom)
.head 6 +  If wnTabActif = 0
.head 7 -  Call SalSendMsg( cmbElection , SAM_Click, 0,0)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Chargement automatique des fichiers Format F
.head 5 -  Resource Id: 4363
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin 
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgLoadFormatF, hWndForm, NUMBER_Null, '' , NUMBER_Null , 1)
.head 6 +  If wnTabActif = 0
.head 7 -  Call SalSendMsg( cmbElection , SAM_Click, 0,0)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Création d'une disquette master - Ms-Dos 6.2 Système 
.head 5 -  Resource Id: 4364
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin  and wbAuMoinsUnLecteur
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Set gnError = NUMBER_Null
.head 6 +  If gsLecteur[1] = ''
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LECT04') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 +  Else
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 +  If SalLoadAppAndWait( gsPathRef ||'MsDos62.exe '|| gsLecteur[1], Window_Normal, gnError )
.head 8 -  Call VisWaitCursor(FALSE)
.head 8 +  If SalMessageBox( PalTraductMsg( 'BV43' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 9 -  Call PalCreationEtiquetteMaster()
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Création d'une disquette master pour bureaux de vote
.head 5 -  Resource Id: 4365
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin  and wbAuMoinsUnLecteur and wsScrutinEl = '1'
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalGenereMasterDiskBV( )
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Création d'une disquette master pour le Backup du PC de totalisation
.head 5 -  Resource Id: 4366
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin  and wbAuMoinsUnLecteur and gbCreatPCT
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalGenereBackupDisk( )
.head 5 -  Menu Item Name:
.head 4 -  !
.head 4 -  Menu Separator
.head 4 +  Menu Item: Création des disquettes d'identification des lecteurs 
.head 5 -  Resource Id: 4367
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdmin  and wbAuMoinsUnLecteur and (gbCreatPCT or gbCreatBV)
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalGenereIdentifDisk( )
.head 5 -  Menu Item Name:
.head 4 -  ! Menu Separator
.head 4 +  ! Menu Item: Création d'une disquette DEMO
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text: 
.head 5 +  Menu Settings 
.head 6 -  Enabled when: gbAdmin  and wbAuMoinsUnLecteur
.head 6 -  Checked when: 
.head 5 +  Menu Actions 
.head 6 -  Call PalCreateDemo()
.head 6 -  Call VisFileDelete( gsPathCle ||'FLOPPY.BE' )
.head 6 -  Call VisFileDelete( gsPathCle ||'IVMAC.BE' )
.head 5 -  Menu Item Name: 
.head 4 -  Menu Separator
.head 4 +  Popup Menu: Gestion des étiquettes pour les Bureaux de votes
.head 5 -  Resource Id: 23665
.head 5 -  Enabled when: gbAdmin
.head 5 -  Status Text:
.head 5 -  Menu Item Name:
.head 5 +  Menu Item: Région Bilingue
.head 6 -  Resource Id: 23667
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when: gbAdmin
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationEtiquetteBV_Master( 'BXL' )
.head 6 -  Menu Item Name:
.head 5 +  Menu Item: Région Unilingue
.head 6 -  Resource Id: 23666
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when: gbAdmin
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationEtiquetteBV_Master( 'WAL' )
.head 6 -  Menu Item Name:
.head 4 +  Popup Menu: Gestion des étiquettes pour les PC de totalisation
.head 5 -  Resource Id: 23668
.head 5 -  Enabled when: gbAdmin
.head 5 -  Status Text:
.head 5 -  Menu Item Name:
.head 5 +  Menu Item: Région Bilingue
.head 6 -  Resource Id: 23670
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when: gbAdmin
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationEtiquettePCT_Master( 'BXL' )
.head 6 -  Menu Item Name:
.head 5 +  Menu Item: Région Flamande
.head 6 -  Resource Id: 23669
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when: gbAdmin
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationEtiquettePCT_Master( 'FLA' )
.head 6 -  Menu Item Name:
.head 5 +  Menu Item: Région Wallonne
.head 6 -  Resource Id: 23671
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when: gbAdmin
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationEtiquettePCT_Master( 'WAL' )
.head 6 -  Menu Item Name:
.head 4 +  Popup Menu: Gestion des récipissés
.head 5 -  Resource Id: 21389
.head 5 -  Enabled when:
.head 5 -  Status Text:
.head 5 -  Menu Item Name:
.head 5 +  Popup Menu: Pour le Président du Bureau Principal
.head 6 -  Resource Id: 21393
.head 6 -  Enabled when:
.head 6 -  Status Text:
.head 6 -  Menu Item Name:
.head 6 +  Menu Item: du Canton
.head 7 -  Resource Id: 21392
.head 7 -  Keyboard Accelerator: (none)
.head 7 -  Status Text:
.head 7 +  Menu Settings
.head 8 -  Enabled when:
.head 8 -  Checked when:
.head 7 +  Menu Actions
.head 8 -  Call PalCreationRecepisse_Master( 'CAN' )
.head 7 -  Menu Item Name:
.head 6 +  Menu Item: de la Commune
.head 7 -  Resource Id: 21391
.head 7 -  Keyboard Accelerator: (none)
.head 7 -  Status Text:
.head 7 +  Menu Settings
.head 8 -  Enabled when: wsScrutinEl='1'
.head 8 -  Checked when:
.head 7 +  Menu Actions
.head 8 -  Call PalCreationRecepisse_Master( 'COM' )
.head 7 -  Menu Item Name:
.head 5 +  Menu Item: Pour les Présidents des Bureaux de Vote
.head 6 -  Resource Id: 21390
.head 6 -  Keyboard Accelerator: (none)
.head 6 -  Status Text:
.head 6 +  Menu Settings
.head 7 -  Enabled when:
.head 7 -  Checked when:
.head 6 +  Menu Actions
.head 7 -  Call PalCreationRecepisse_Master( 'BV' )
.head 6 -  Menu Item Name:
.head 3 +  Popup Menu: Editions de &Contrôle
.head 4 -  Resource Id: 4368
.head 4 -  Enabled when:
.head 4 -  Status Text:
.head 4 -  Menu Item Name:
.head 4 +  Menu Item: Etat d'avancement des bureaux de vote
.head 5 -  Resource Id: 4369
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgIdentif, hWndForm, 3)
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Etat d'avancement des PC de totalisation
.head 5 -  Resource Id: 4370
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgIdentif, hWndForm, 4)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Bureaux de vote non contrôlés
.head 5 -  Resource Id: 4371
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgIdentif, hWndForm, 1)
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: PC de totalisation non contrôlés
.head 5 -  Resource Id: 4372
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgIdentif, hWndForm, 2)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Etat d'avancement général
.head 5 -  Resource Id: 49926
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 +  If not gbWinStat
.head 7 -  Call SalCreateWindow( frmStat, hWndForm )
.head 6 +  Else
.head 7 -  Call VisWinShow( frmStat, SHOW_Normal )
.head 7 -  Call SalBringWindowToTop( frmStat )
.head 5 -  Menu Item Name:
.head 3 +  Popup Menu: &Système
.head 4 -  Resource Id: 4373
.head 4 -  Enabled when:
.head 4 -  Status Text:
.head 4 -  Menu Item Name:
.head 4 +  Menu Item: Paramètres généraux
.head 5 -  Resource Id: 4374
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 6 +  If wbPWOk
.head 7 -  Call SalModalDialog( dlgGestionParam, hWndForm)
.head 7 -  Call PalChargeParam()
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Lecteurs de disquettes
.head 5 -  Resource Id: 4375
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgLecteurs, hWndForm )
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Gestion des utilisateurs
.head 5 -  Resource Id: 4376
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgGestionUtilisateur, hWndForm)
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Modification du mot de passe
.head 5 -  Resource Id: 4377
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgPassword, hWndForm)
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Gestion des messages
.head 5 -  Resource Id: 4378
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gsUserLog = 'SYSADM'
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgGestionMsg, hWndForm )
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Gestion des codes erreurs
.head 5 -  Resource Id: 4379
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gsUserLog = 'SYSADM'
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgGestionErrMsg, hWndForm )
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Backup de la base de données
.head 5 -  Resource Id: 4380
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalBackupDB()
.head 5 -  Menu Item Name:
.head 4 +  ! Menu Item: Grant des tables
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text: 
.head 5 +  Menu Settings 
.head 6 -  Enabled when: gsUserLog = 'SYSADM'
.head 6 -  Checked when: 
.head 5 +  Menu Actions 
.head 6 -  !
.head 6 -  Call VisWaitCursor( TRUE )
.head 6 -  Set gsTmp =  'select \'grant select, insert, delete, update on \' || name || \' to public\'  from systables where creator = \'SYSADM\' and name not like \'SYS%\'
	into :gsTmp '
.head 6 +  If SqlPrepareAndExecute( ghSqlSecondaire, gsTmp )
.head 7 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 -  Call SqlImmediate( gsTmp )
.head 7 -  ! Call TblAnswer('Done', 'Public grants gecreëerd')
.head 6 +  Else 
.head 7 -  ! Call TblAnswer('Error', '901 - Public grants niet gecreëerd')
.head 6 -  !
.head 6 -  Set gsTmp =  "select 'create public synonym ' || name || ' for sysadm.' || name from systables where creator = 'SYSADM' and name not like 'SYS%'
	into :gsTmp "
.head 6 +  When SqlError 
.head 7 -  Return FALSE
.head 6 +  If SqlPrepareAndExecute( ghSqlSecondaire, gsTmp )
.head 7 +  While SqlFetchNext( ghSqlSecondaire , Btmp )
.head 8 +  When SqlError 
.head 9 -  Return FALSE
.head 8 -  Call SqlImmediate( gsTmp )
.head 7 -  ! Call TblAnswer('Done', 'Public synonyms gecreëerd')
.head 6 +  Else 
.head 7 -  ! Call TblAnswer('Error', '901 - Public synonyms niet gecreëerd')
.head 6 -  !
.head 6 -  Set gsTmp =  'grant select, insert, delete on systables to public'
.head 6 +  If SqlImmediate( gsTmp )
.head 7 -  ! Call TblAnswer('Done', 'Public grant op SYSTABLES gecreëerd')
.head 6 +  Else 
.head 7 -  ! Call TblAnswer('Error', '901 - Public grant op SYSTABLES niet gecreëerd')
.head 6 -  !
.head 6 -  Set gsTmp =  'create public synonym systables for sysadm.systables'
.head 6 +  If SqlImmediate( gsTmp )
.head 7 -  ! Call TblAnswer('Done', 'Public synonym voor SYSTABLES gecreëerd')
.head 6 +  Else 
.head 7 -  ! Call TblAnswer('Error', '901 - Public synonym voor SYSTABLES niet gecreëerd')
.head 6 -  !
.head 6 -  Call SqlCommit(ghSqlMain )
.head 6 -  Call SqlCommit(ghSqlSecondaire )
.head 6 -  Call SqlCommit(ghSqlTertiaire )
.head 6 -  !
.head 6 -  !
.head 6 -  Call VisWaitCursor( FALSE )
.head 6 -  Call SalMessageBeep( -1 )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalMessageBox( 'Grants en synoniemen van de tafels zijn gerealiserd', 'Info', MB_Ok | MB_IconAsterisk )
.head 6 +  Else 
.head 7 -  Call SalMessageBox( 'Grants et synonymes des tables ont été réalisés', 'Info', MB_Ok | MB_IconAsterisk )
.head 5 -  Menu Item Name: 
.head 4 -  Menu Separator
.head 4 +  Menu Item: Qui a fait quoi ?
.head 5 -  Resource Id: 4381
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys 
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call SalModalDialog( dlgQuiFaitQuoi, hWndForm )
.head 5 -  Menu Item Name:
.head 4 +  Menu Item: Qui est connecté ?
.head 5 -  Resource Id: 4382
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when: gbAdminSys and gsUserEID = '1'
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 +  If not gbWinConnect
.head 7 -  Call SalCreateWindow( dlgQuiConnect, hWndForm )
.head 6 +  Else
.head 7 -  Call SalBringWindowToTop( dlgQuiConnect )
.head 5 -  Menu Item Name:
.head 4 -  Menu Separator
.head 4 +  Menu Item: Contrôle de l'installation
.head 5 -  Resource Id: 4383
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Status Text:
.head 5 +  Menu Settings
.head 6 -  Enabled when:
.head 6 -  Checked when:
.head 5 +  Menu Actions
.head 6 -  Call PalVerifStructureApplic( frmGenere.wsScrutinEl )
.head 5 -  Menu Item Name:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Class Default
.head 4 -  Location? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Size: Class Default
.head 4 -  Size Editable? Class Default
.head 4 -  Docking Toolbar? Class Default
.head 4 -  Toolbar Docking Orientation: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Resizable? Class Default
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfTitreEl
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.383"
.head 6 -  Top: 0.0"
.head 6 -  Width:  10.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.321"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 12
.head 5 -  Font Enhancement: Bold-Underline
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbChoixPrinter
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ...
.head 4 -  Window Location and Size
.head 5 -  Left: 15.283"
.head 5 -  Top: 0.143"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.212"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalChoixImprimante()
.head 3 +  Data Field: dfDateEl
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573001800 4E616D6530094E61 6D6531094E616D65
0020: 33094E616D653400 000000
.enddata
.data CLASSPROPSSIZE
0000: 2B00
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 6.45"
.head 6 -  Top: 0.321"
.head 6 -  Width:  2.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Bold-Underline
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: dfLibelleInfo
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.483"
.head 6 -  Top: 3.821"
.head 6 -  Width:  15.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.488"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Yellow
.head 5 -  Background Color: Midnight Blue
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( dfLibelleInfo )
.head 3 +  Data Field: dfInfoClock
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.983"
.head 6 -  Top: 3.879"
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.369"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Green
.head 5 -  Background Color: Midnight Blue
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( dfInfoClock )
.head 3 -  Background Text: Imprimante par défaut:
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573001800 4E616D6530094E61 6D6531094E616D65
0020: 33094E616D653400 000000
.enddata
.data CLASSPROPSSIZE
0000: 2B00
.enddata
.head 4 -  Resource Id: 4384
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 12.983"
.head 5 -  Top: 0.179"
.head 5 -  Width:  2.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPrinterDefaut
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573001800 4E616D6530094E61 6D6531094E616D65
0020: 33094E616D653400 000000
.enddata
.data CLASSPROPSSIZE
0000: 2B00
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 11.583"
.head 6 -  Top: 0.345"
.head 6 -  Width:  4.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Right
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Geselecteerde Printer:' )
.head 6 -  Set MyValue = gsPrinter
.head 3 +  Picture: picLogo
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.03"
.head 5 -  Top: -0.05"
.head 5 -  Width:  2.25"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.592"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: Internal
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicClear (picLogo )
.head 6 -  Call SalPicSetFile( picLogo, gsPathApplic||"EL2007Logo.jpg" )
.head 6 -  Call SalPicSetFit( picLogo, PIC_FitBestFit, 0, 0 )
.head 3 +  Picture: picUser_Photo
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 15.983"
.head 5 -  Top: 0.0"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalPicSetFile( picUser_Photo, gsPathApplic||"CLES_SYS.jpg" )
.head 6 +  Else
.head 7 +  If gsUserEID = '1' and glsUserPhoto != ''
.head 8 -  ! Call SalPicSetString( picUser_Photo, PIC_FormatObject, glsUserPhoto )
.head 8 -  Call SalPicSetImage( picUser_Photo, glsUserPhoto, PIC_ImageTypeJPEG )
.head 3 +  Pushbutton: pbQuitter
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573001800 4E616D6530094E61 6D6531094E616D65
0020: 33094E616D653400 000000
.enddata
.data CLASSPROPSSIZE
0000: 2B00
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 15.783"
.head 5 -  Top: 7.738"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resSortie, PIC_FormatBitmap )
.head 3 +  Picture: picTabs
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624C6566744D 617267696E000200 3000005461624375 7272656E74000600
0020: 4E616D6533000054 6162426F74746F6D 4D617267696E0002 0030000054616250
0040: 616765436F756E74 0002003100005461 624C6162656C7300 5000506172616DE8
0060: 7472657309446973 7175657474657320 4275726561757820 646520766F746509
0080: 4469737175657474 6573205043206465 20746F74616C6973 6174696F6E095574
00A0: 696C697461697265 7300005461624E61 6D65730018004E61 6D6530094E616D65
00C0: 31094E616D653309 4E616D6534000054 616252696768744D 617267696E000200
00E0: 3000005461624472 61775374796C6500 0B0057696E333153 74796C6500005461
0100: 62466F726D506167 6573000400090909 0000546162546F70 4D617267696E0002
0120: 003000005461624F 7269656E74617469 6F6E000100000000 0000000000000000
0140: 0000000000000000 0000000000
.enddata
.data CLASSPROPSSIZE
0000: 4D01
.enddata
.head 4 -  Class Child Ref Key: 1
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBaseFrmTabs
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.05"
.head 5 -  Top: 0.571"
.head 5 -  Width:  16.85"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 7.917"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Editable? Class Default
.head 4 -  File Name:
.head 4 -  Storage: Class Default
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Fit: Class Default
.head 4 -  Scaling
.head 5 -  Width:  Class Default
.head 5 -  Height:  Class Default
.head 4 -  Corners: Class Default
.head 4 -  Border Style: Class Default
.head 4 -  Border Thickness: Class Default
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Chartreuse
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  ! Tabs 0 : Paramètres
.head 3 -  Background Text: Election:
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Resource Id: 4385
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.929"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Gray
.head 3 +  Combo Box: cmbElection
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.155"
.head 5 -  Width:  5.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.917"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Verkiezing:' )
.head 5 +  On SAM_Click
.head 6 -  Set cmbCommune = ''
.head 6 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, tblCdtSuppl )
.head 7 -  Call SalSetWindowSize( tblCdt, 6.9, 6 )
.head 7 -  Call SWTabsShowWindow( picTabs, dfTotCdt )
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCanton )
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, cmbCommune )
.head 7 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'District' )
.head 7 -  Call tblFichier.PalPopulateCanton( gsRestrCom, wnNoElection[ SalListQuerySelection( cmbElection ) ] )
.head 6 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 2 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 4 or
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 7 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 10 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 11
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, tblCdtSuppl )
.head 7 -  Call SalSetWindowSize( tblCdt, 6.9, 3.9 )
.head 7 -  Call SWTabsHideWindow( picTabs, dfTotCdt )
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCanton )
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, cmbCommune )
.head 7 +  If gsLangueSoft ='N'
.head 8 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Kiesdistrict' )
.head 7 +  Else
.head 8 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Circonscription' )
.head 7 -  Call tblFichier.PalPopulateCanton( gsRestrCom, wnNoElection[ SalListQuerySelection( cmbElection ) ] )
.head 6 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 3 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 1
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, tblCdtSuppl )
.head 7 -  Call SWTabsHideWindow( picTabs, dfTotCdt )
.head 7 -  Call SalSetWindowSize( tblCdt, 6.9, 3.9 )
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCanton )
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, cmbCommune )
.head 7 +  If gsLangueSoft ='N'
.head 8 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'College' )
.head 7 +  Else
.head 8 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Collège' )
.head 7 -  Call tblFichier.PalPopulateCanton( gsRestrCom, wnNoElection[ SalListQuerySelection( cmbElection ) ] )
.head 6 +  Else
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, tblCdtSuppl )
.head 7 -  Call SWTabsShowWindow( picTabs, dfTotCdt )
.head 7 -  Call SalSetWindowSize( tblCdt, 6.9, 6 )
.head 7 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] != 8
.head 8 -  Call SWTabsShowWindowAndLabel( picTabs, cmbCommune )
.head 8 +  If gsLangueSoft ='N'
.head 9 -  Call SalSetWindowLabelText( cmbCanton, 'Kanton:' )
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Gemeente' )
.head 8 +  Else
.head 9 -  Call SalSetWindowLabelText( cmbCanton, 'Canton:' )
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Commune' )
.head 7 +  Else
.head 8 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCommune )
.head 8 +  If gsLangueSoft ='N'
.head 9 -  Call SalSetWindowLabelText( cmbCanton, 'Gemeente:' )
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Districtsraad' )
.head 8 +  Else
.head 9 -  Call SalSetWindowLabelText( cmbCanton, 'Commune:' )
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colCanton, 'Conseil de district' )
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, cmbCanton )
.head 7 +  If gsLangueSoft ='N'
.head 8 -  Call SalSetWindowLabelText( cmbCanton, 'Kanton:' )
.head 7 +  Else
.head 8 -  Call SalSetWindowLabelText( cmbCanton, 'Canton:' )
.head 7 -  Call PalPopulateCmbCanton( gsRestrCom )
.head 7 +  If SalListQueryCount( cmbCanton ) <= 0
.head 8 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCommune )
.head 6 +  If wsCommuneChoix != '' and SalIsWindowVisible( cmbCommune )
.head 7 -  Set cmbCommune = wsCommuneChoix
.head 7 -  Call SalSendMsg( pbCommune, SAM_Click, 0,0)
.head 3 -  Background Text: Canton:
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4386
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.383"
.head 5 -  Top: 0.929"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Gray
.head 3 +  Combo Box: cmbCanton
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.383"
.head 5 -  Top: 1.155"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.917"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Kanton:' )
.head 6 -  ! Call SalHideWindowAndLabel( cmbCanton )
.head 6 -  Call SWTabsHideWindowAndLabel( picTabs, cmbCanton )
.head 5 +  On SAM_Click
.head 6 +  If wParam != -1
.head 7 -  Set cmbCommune = ''
.head 6 -  Call SalTblReset( tblListe )
.head 6 -  Call SalTblReset( tblCdt )
.head 6 -  Call SalTblReset( tblCdtSuppl )
.head 6 -  Call tblFichier.PalPopulateCanton( SalStrLeftX( cmbCanton, 5 ) , wnNoElection[ SalListQuerySelection( cmbElection ) ] )
.head 3 -  Background Text: Recherche d'une commune:
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4387
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 0.929"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Gray
.head 3 +  Combo Box: cmbCommune
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 1.155"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.762"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Gemeente zoeken:' )
.head 6 -  Call PalPopulateCmbCommune( cmbCommune )
.head 5 +  On SAM_DropDown
.head 6 -  Set wbClavier = FALSE
.head 5 +  On SAM_Click
.head 6 +  If cmbCommune != ''
.head 7 +  If wbClavier
.head 8 -  Call SalSetDefButton( pbCommune )
.head 7 +  Else
.head 8 -  Call SalSendMsg( pbCommune, SAM_Click, 0,0)
.head 7 -  ! Set wsCommuneSelect = cmbCommune
.head 5 +  On WM_KEYDOWN
.head 6 -  Set wbClavier = TRUE
.head 3 +  Pushbutton: pbCommune
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If cmbCommune != ''
.head 7 -  Set wsCommuneChoix = cmbCommune
.head 7 +  If PalRechercheIns( SalStrRightX( cmbCommune, 5) )
.head 8 -  Set cmbCommune = wsCommuneChoix
.head 8 -  Call SalSendMsg( tblFichier, SAM_Click, 0, 0 )
.head 7 +  Else
.head 8 -  Set cmbCommune = ''
.head 3 +  Pushbutton: pbImport
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Import Format F
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 7.655"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set wbOk = FALSE
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0)
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalTblAnyRows( tblListe, 0,0)
.head 8 +  If SalMessageBox(PalTraductMsg('LISTE01'),PalTraductMsg('?'),MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 9 -  Set wbOk = TRUE
.head 7 +  Else
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Call SalModalDialog( dlgLoadFormatF, hWndForm, tblFichier.colTypeEl, tblFichier.colIns , tblFichier.colNbCdt, 0)
.head 8 -  Call SalSendMsg( tblFichier , SAM_FetchRowDone, 0,0)
.head 8 -  Call SalSendMsg( tblFichier, SAM_Click, 0,0)
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Invoeren Formaat F' )
.head 3 +  Pushbutton: pbValidListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Validation des listes
.head 4 -  Window Location and Size
.head 5 -  Left: 2.483"
.head 5 -  Top: 7.655"
.head 5 -  Width:  2.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Validatie lijsten' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) 
.head 7 -  Set wsInsSelect = tblFichier.colIns
.head 7 -  Call PalValidateListe( tblFichier.colIns, tblFichier.colTypeEl , 1, tblFichier.colNbCdt, TRUE, wsTmp )
.head 7 +  If SalIsWindowVisible( cmbCanton )
.head 8 -  Call SalSendMsg( cmbCanton, SAM_Click, 0, 0)
.head 7 +  Else
.head 8 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0)
.head 7 -  Call PalSelectLigne( tblFichier, tblFichier.colIns, wsInsSelect)
.head 3 +  Child Table: tblFichier
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.571"
.head 6 -  Width:  5.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 700
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.667"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Commune
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 150
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.917"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 -  ! On SAM_Create
.head 5 +  Column: colType
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNbCdt
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Sièges
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.767"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colNbCdt, 'Zetels' )
.head 5 +  Column: colPcTot
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colTypeEl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsProv
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colIns, 'NIS' )
.head 5 +  Column: colRegion
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Region
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colIns, 'NIS' )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCanton
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 7 -  Number: pnElection
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsRegLing
.head 7 -  Boolean: bRegion
.head 6 +  Actions
.head 7 -  Call SalDisableWindow( pbImport )
.head 7 -  Call SalDisableWindow( pbValidListe)
.head 7 -  Call SalTblReset( tblListe )
.head 7 +  If pnElection = 1
.head 8 -  ! EUROPE
.head 8 -  Set bRegion = TRUE
.head 8 +  If psCanton != ''
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Region from base_commune where Region = 'BXL' and Can_ins in (" || psCanton || " ) " )
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set bRegion = FALSE
.head 8 +  If bRegion
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,COLL_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , REGION, Region
	from base_commune A 
	where type = 'EU' and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || " and (A.Region = B.Region or (A.Region = 'GER' and B.Region = 'WAL')) "
.head 8 +  Else
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,COLL_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , REGION, Region
	from base_commune A 
	where type = 'EU' and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || "  "
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 +  If gsRestrRegion != ''
.head 9 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion 
.head 7 +  Else If pnElection = 2
.head 8 -  ! CHAMBRE
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || " ,CIRC_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'CI' and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel 
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 +  If gsRestrRegion != ''
.head 9 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 +  Else If pnElection = 3
.head 8 -  ! SENAT
.head 8 -  Set bRegion = TRUE
.head 8 +  If psCanton != ''
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Region from base_commune where Region = 'BXL' and Can_ins in (" || psCanton || " ) " )
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set bRegion = FALSE
.head 8 +  If bRegion
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,COLL_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , REGION, Region
	from base_commune A 
	where type = 'SE' and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || " and A.Region = B.Region "
.head 8 +  Else
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,COLL_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , REGION, Region
	from base_commune A 
	where type = 'SE' and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || "  "
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 +  If gsRestrRegion != ''
.head 9 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion 
.head 7 +  Else If pnElection = 4
.head 8 -  ! WL
.head 8 +  If gsWL_Type = '0'
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,ARRON_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A
	where type = 'WR' and exists( Select B.Can_ins from Base_commune B where B.WL_INS_DEP = A.Arron_ins and VOTE_EL = :gnTypeVote and " || gsMateriel
.head 8 +  Else
.head 9 -  Set lsSelect = "Select " || wsLabelCommune || " ,CIRC_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'WL' and exists( Select B.Can_ins from base_Commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote  and " || gsMateriel 
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 -  Set lsSelect = lsSelect || " and Region = 'WAL'  "
.head 7 +  Else If pnElection = 5
.head 8 -  ! PROVINCIALE
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || " ,DIS_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'DI' and @left(dis_ins,2)!= '21' and exists( Select B.Can_ins from Base_commune B where A.Dis_Ins = B.Dis_ins and VOTE_EL = :gnTypeVote ) "
.head 8 +  If gsRestrRegion != ''
.head 9 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 +  Else If pnElection = 7
.head 8 -  ! VL
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || ",CIRC_INS,Type, NB_CDT, NB_PC_TOT," || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'VL' and exists( Select B.Can_ins from base_Commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote  and " || gsMateriel 
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 -  Set lsSelect = lsSelect || " and Region = 'FLA' "
.head 7 +  Else If pnElection = 10 
.head 8 -  ! PARLEMENT BR
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || " ,CIRC_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'BR' and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel 
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 7 +  Else If pnElection = 11
.head 8 -  ! MBPF
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || " ,CIRC_INS,Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune A 
	where type = 'BV' and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel 
.head 8 +  If psCanton != ''
.head 9 -  Set lsSelect = lsSelect || " and B.Can_ins in (" || psCanton || " ) "
.head 8 -  Set lsSelect = lsSelect || " ) "
.head 8 -  Set lsSelect = lsSelect || " and Region = 'BXL' "
.head 7 +  Else
.head 8 -  Set lsSelect = "Select " || wsLabelCommune || "  , com_INS, Type, NB_CDT, NB_PC_TOT, " || SalNumberToStrX(pnElection,0)||" , Pro_ins, Region
	from base_commune 
	where type = 'GE'  and VOTE_EL = :gnTypeVote "
.head 8 +  If gsRestrRegion != ''
.head 9 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 -  !
.head 7 +  If psCanton != '' and wsScrutinEl = '1'
.head 8 +  If pnElection = 5
.head 9 -  Set lsSelect = lsSelect || " and Exists (Select B.Dis_ins from Base_commune B where B.Dis_ins = A.Dis_ins and B.can_INS in (" || psCanton || ") )"
.head 8 +  Else
.head 9 -  Set lsSelect = lsSelect || " and can_INS in (" || psCanton || ") "
.head 7 -  Call SalTblPopulate( tblFichier, ghSqlSecondaire, lsSelect || "
	Order by 2
	into :tblFichier.colCanton,:tblFichier.colIns ,:tblFichier.colType,:tblFichier.colNbCdt,:tblFichier.colPcTot, :tblFichier.colTypeEl, :tblFichier.colInsProv, :tblFichier.colRegion ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblFichier, 0,0)
.head 8 -  Call SalTblSetContext( tblFichier, 0)
.head 8 -  ! Call SalTblSetFocusRow( tblFichier, 0)
.head 8 -  Call SalTblSetRowFlags( tblFichier, 0, ROW_Selected, TRUE)
.head 8 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 4 +  Window Variables
.head 5 -  String: tsChamp
.head 5 -  String: tsWhere
.head 5 -  String: tsType
.head 5 -  String: tsTable
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 +  If wParam != -1
.head 7 -  Set cmbCommune = ''
.head 6 -  Set dfTotListe = 0
.head 6 -  Set dfTotCdt = 0
.head 6 -  Call SalPicClear( picLogoListe )
.head 6 -  Call SalClearField( dfNomListe )
.head 6 -  Call SalTblReset( tblListe )
.head 6 -  Call SalTblReset( tblCdt )
.head 6 -  Call SalTblReset( tblCdtSuppl )
.head 6 -  Call SalDisableWindow( pbEditCdt )
.head 6 -  Call SalDisableWindow( pbEditListe )
.head 6 -  Call SalDisableWindow( tblListe.colNom )
.head 6 -  Call SalDisableWindow( pbEditListeEL )
.head 6 -  Call SalDisableWindow( pbVisuListe )
.head 6 -  Call SalDisableWindow( pbPrintListe )
.head 6 -  Call SalDisableWindow( pbPrintCdt )
.head 6 -  Call SalHideWindow( pbLogoListe )
.head 6 -  Call SalDisableWindow( pbVisuCdt )
.head 6 -  Call SalDisableWindow( pbPrintVisu )
.head 6 -  Call SalDisableWindow( tblCdt.colNom )
.head 6 -  Call SalDisableWindow( tblCdt.colNom2 )
.head 6 -  !
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0)
.head 7 +  If SalIsWindowVisible( cmbCommune )
.head 8 +  If cmbCommune != ''
.head 9 -  Set wsCommuneSelectBV = cmbCommune
.head 9 -  Set wsCommuneSelectPCT =  cmbCommune
.head 8 +  Else
.head 9 -  Set wsCommuneSelectBV = ''
.head 9 -  Set wsCommuneSelectPCT =  ''
.head 7 +  If tsWhere != ''
.head 8 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 8
.head 9 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select * from c_district where " || tsWhere )
.head 8 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 2 or
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 3 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 1 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 4 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 7 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 10 or 
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 11
.head 9 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select * from Base_commune where " || tsWhere )
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select * from Commune where " || tsWhere )
.head 8 +  If NOT SqlFetchNext( ghSqlTertiaire, Btmp )
.head 9 -  Call SalDisableWindow( pbImport )
.head 9 -  Call SalDisableWindow( pbValidListe )
.head 9 -  Call SalDisableWindow( pbAddListe )
.head 9 -  Call SalDisableWindow( pbModifListe )
.head 9 -  Call SalDisableWindow( pbDelListe )
.head 9 -  Call SalHideWindow( pbLogoListe )
.head 8 +  Else
.head 9 -  Call tblListe.PalPopulateListe()
.head 9 +  If tblFichier.colStatut = '1' or tblFichier.colNbCdt = 0 or tblFichier.colNbCdt = NUMBER_Null
.head 10 -  Call SalDisableWindow( pbImport )
.head 10 -  Call SalDisableWindow( pbValidListe )
.head 10 -  Call SalDisableWindow( pbAddListe )
.head 10 -  Call SalDisableWindow( pbModifListe )
.head 10 -  Call SalDisableWindow( pbDelListe )
.head 10 -  Call SalHideWindow( pbLogoListe )
.head 9 +  Else
.head 10 -  Call SalEnableWindow( pbImport )
.head 10 +  If SalTblAnyRows( tblListe, 0,0)
.head 11 -  Call SalEnableWindow( pbEditCdt )
.head 11 -  Call SalEnableWindow( pbEditListe )
.head 11 -  Call SalShowWindow( pbLogoListe )
.head 10 +  Else
.head 11 -  Call SalHideWindow( pbLogoListe )
.head 10 -  Call SalEnableWindow( pbAddListe )
.head 10 -  Call SalEnableWindow( pbModifListe )
.head 10 -  Call SalEnableWindow( pbDelListe )
.head 7 -  Set wsCommuneSelect = tblFichier.colIns
.head 7 -  Set wsCommuneEnCours = tblFichier.colCanton
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbImport )
.head 5 +  On SAM_FetchRowDone
.head 6 -  Set tsChamp = ''
.head 6 +  If tblFichier.colCanton = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select com_nom_n  from commune
	where Com_ins = :tblFichier.colIns
	Into :tblFichier.colCanton ")
.head 7 -  Set tsType = ''
.head 7 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 6 +  If tblFichier.colTypeEl = 5
.head 7 -  Set tsChamp ='V5'
.head 7 -  Set tsTable = 'Commune'
.head 7 -  Set tsWhere = ' DIS_INS = :tblFichier.colIns '
.head 6 +  Else If tblFichier.colTypeEl = 2 
.head 7 -  Set tsChamp ='V2'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " CIRC_INS = :tblFichier.colIns "
.head 7 -  Set tsType = 'CI'
.head 6 +  Else If tblFichier.colTypeEl = 4 
.head 7 -  Set tsChamp ='V2'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 +  If gsWL_Type = '0'
.head 8 -  Set tsWhere = " ARRON_INS = :tblFichier.colIns "
.head 8 -  Set tsType = 'WR'
.head 7 +  Else
.head 8 -  Set tsWhere = " CIRC_INS = :tblFichier.colIns "
.head 8 -  Set tsType = 'WL'
.head 6 +  Else If tblFichier.colTypeEl = 7 
.head 7 -  Set tsChamp ='V2'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " CIRC_INS = :tblFichier.colIns "
.head 7 -  Set tsType = 'VL'
.head 6 +  Else If tblFichier.colTypeEl = 10 
.head 7 -  Set tsChamp ='V2'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " CIRC_INS = :tblFichier.colIns "
.head 7 -  Set tsType = 'BR'
.head 6 +  Else If tblFichier.colTypeEl = 11
.head 7 -  Set tsChamp ='V2'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " CIRC_INS = :tblFichier.colIns"
.head 7 -  Set tsType = 'BV'
.head 6 +  Else If tblFichier.colTypeEl = 3 
.head 7 -  Set tsChamp ='V3'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " COLL_INS = :tblFichier.colIns"
.head 7 -  Set tsType = 'SE'
.head 6 +  Else If tblFichier.colTypeEl = 1
.head 7 -  Set tsChamp ='V3'
.head 7 -  Set tsTable = 'Base_Commune'
.head 7 -  Set tsWhere = " COLL_INS = :tblFichier.colIns "
.head 7 -  Set tsType = 'EU'
.head 6 +  Else If tblFichier.colTypeEl = 6
.head 7 -  Set tsTable = 'Commune'
.head 7 -  Set tsChamp ='V6'
.head 7 -  Set tsWhere = ' COM_INS = :tblFichier.colIns '
.head 6 +  Else If tblFichier.colTypeEl = 8
.head 7 -  Set tsTable = 'C_District'
.head 7 -  Set tsChamp ='V8'
.head 7 -  Set tsWhere = ' CDI_INS = :tblFichier.colIns '
.head 6 +  Else If tblFichier.colTypeEl = 9
.head 7 -  Set tsTable = 'Commune'
.head 7 -  Set tsChamp ='V9'
.head 7 -  Set tsWhere = ' COM_INS = :tblFichier.colIns '
.head 6 +  If tsChamp != ''
.head 7 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_New, FALSE )
.head 7 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_Edited, FALSE )
.head 7 +  If tsType != ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select " || tsChamp ||" from "|| tsTable ||" where " || tsWhere ||" and Type = :tsType
	into :tblFichier.colStatut ")
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select " || tsChamp ||" from "|| tsTable ||" where " || tsWhere ||"
	into :tblFichier.colStatut ")
.head 7 +  If SqlFetchNext( ghSqlTertiaire, Btmp )
.head 8 +  If tblFichier.colNbCdt = NUMBER_Null or tblFichier.colNbCdt <= 0
.head 9 -  Call VisTblSetRowColor( tblFichier, SalTblQueryContext( tblFichier) , COLOR_Charcoal )
.head 9 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_MarkDeleted, TRUE )
.head 8 +  Else If tblFichier.colStatut= '1'
.head 9 -  Call VisTblSetRowColor( tblFichier, SalTblQueryContext( tblFichier) , COLOR_DarkGreen )
.head 9 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_Edited, TRUE )
.head 8 +  Else
.head 9 +  If tblFichier.colTypeEl = 4
.head 10 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "select * from listes where el_no=:tblFichier.colTypeEl and CIRC_Ins = :tblFichier.colIns " )
.head 9 +  Else
.head 10 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "select * from listes where el_no=:tblFichier.colTypeEl and " || tsWhere )
.head 9 +  If SqlFetchNext( ghSqlTertiaire, Btmp )
.head 10 -  Call VisTblSetRowColor( tblFichier, SalTblQueryContext( tblFichier) , COLOR_Blue )
.head 10 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_New, TRUE )
.head 9 +  Else
.head 10 -  Call VisTblSetRowColor( tblFichier, SalTblQueryContext( tblFichier) , COLOR_Red )
.head 7 +  Else
.head 8 -  Call VisTblSetRowColor( tblFichier, SalTblQueryContext( tblFichier) , COLOR_Charcoal )
.head 8 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier), ROW_MarkDeleted, TRUE )
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Child Table: tblListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 5.283"
.head 6 -  Top: 1.571"
.head 6 -  Width:  4.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 100
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.467"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblListe.colNo, 'Nr' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nom Liste
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.2"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblListe.colNom, 'Lijst Naam' )
.head 7 +  ! On SAM_Validate
.head 8 -  Call PalChangeNomListe( tblListe.colNo, tblFichier.colIns, tblFichier.colTypeEl , tblFichier.colType )
.head 5 +  Column: colNbCdt
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Eff.
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.517"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblListe.colNbCdt, 'Kan.' )
.head 5 +  Column: colNbCdtS
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Sup.
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.517"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblListe.colNbCdtS, 'Opv.' )
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Call SalHideWindow( colNbCdtS )
.head 5 +  Column: colLogo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblFichier.colIns, 'NIS' )
.head 5 +  Column: colRmq
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Rmq
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colGrpL
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: GrpLing
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateListe
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Call SalTblReset( tblCdt )
.head 7 -  Call SalTblReset( tblCdtSuppl )
.head 7 -  Set tnNbListe = 0
.head 7 -  Set dfTotCdt = 0
.head 7 -  Set lsSelect = "Select Lis_No, Lis_nom, LIS_NB_EFF, LIS_NB_Supp, LIS_Logo, Lis_GrL from listes
	where EL_NO = :tblFichier.colTypeEl "
.head 7 +  If tblFichier.colTypeEl = 5
.head 8 -  Set lsSelect = lsSelect  || " and Dis_ins = :tblFichier.colIns "
.head 7 +  Else If tblFichier.colTypeEl = 2 or tblFichier.colTypeEl = 4 or tblFichier.colTypeEl = 7 or tblFichier.colTypeEl = 10 or tblFichier.colTypeEl = 11
.head 8 -  Set lsSelect = lsSelect  || " and Circ_ins = :tblFichier.colIns "
.head 7 +  Else If tblFichier.colTypeEl = 3 or tblFichier.colTypeEl = 1
.head 8 -  Set lsSelect = lsSelect  || " and Coll_ins = :tblFichier.colIns "
.head 7 +  Else If tblFichier.colTypeEl = 8
.head 8 -  Set lsSelect = lsSelect   ||  " and cdi_ins = :tblFichier.colIns "
.head 7 +  Else
.head 8 -  Set lsSelect = lsSelect   || " and com_ins = :tblFichier.colIns "
.head 7 -  Set lsSelect = lsSelect  ||  " 
	Order by 1	
	Into :tblListe.colNo,:tblListe.colNom,:tblListe.colNbCdt ,:tblListe.colNbCdtS,:tblListe.colLogo , :tblListe.colGrpL "
.head 7 -  Call SalTblPopulate( tblListe, ghSqlMain, lsSelect, TBL_FillAll )
.head 7 +  If SalTblAnyRows( tblListe, 0,0)
.head 8 +  If tblFichier.colStatut= '1'
.head 9 -  Call SalDisableWindow( pbValidListe )
.head 8 +  Else
.head 9 -  Call SalEnableWindow( pbValidListe )
.head 8 -  Call SalTblSetContext( tblListe, 0)
.head 8 -  ! Call SalTblSetFocusRow( tblListe, 0)
.head 8 -  Call SalTblSetRowFlags( tblListe, 0, ROW_Selected, TRUE)
.head 8 -  Set dfTotListe = tnNbListe
.head 8 -  Call SalSendMsg( tblListe,SAM_Click, 0,0)
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbValidListe )
.head 5 +  ! Function: PalChangeNomListe
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sNoListe
.head 7 -  String: sIns
.head 7 -  Number: nTypeEl
.head 7 -  String: sType
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  String: sWhere
.head 6 +  Actions 
.head 7 +  If sType = 'DI'
.head 8 -  Set sWhere = ' DIS_Ins = :sIns ' 
.head 7 +  Else If sType = 'GE'
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'OC' 
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'CD'
.head 8 -  Set sWhere = ' CDI_Ins = :sIns ' 
.head 7 +  Else 
.head 8 -  Return (FALSE)
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Listes set LIS_NOM = :tblListe.colNom 
	where " || sWhere || " and El_no = :nTypeEl and Lis_no = :sNoListe  " )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "MODIF LIS", "EL " || SalNumberToStrX( nTypeEl, 0) ||"  -  L " || sNoListe || " --> " || tblListe.colNom )
.head 4 +  Window Variables
.head 5 -  Number: tnNbListe
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 6 -  Call SalTblDefineRowHeader( tblListe, '', 20, TBL_RowHdr_Visible | TBL_RowHdr_ShareColor, colRmq )
.head 5 +  On SAM_Click
.head 6 -  Call SalPicClear( picLogoListe )
.head 6 -  Call SalClearField( dfNomListe )
.head 6 -  Call SalDisableWindow( pbVisuListe )
.head 6 -  Call SalDisableWindow( pbEditListeEL )
.head 6 -  Call SalDisableWindow( pbVisuCdt )
.head 6 -  Call SalDisableWindow( pbPrintListe )
.head 6 -  Call SalDisableWindow( pbPrintCdt )
.head 6 -  Call SalDisableWindow( pbPrintVisu )
.head 6 +  If SalTblAnyRows( tblListe, ROW_Selected, 0)
.head 7 -  Call tblCdt.PalPopulateCdt(  )
.head 7 +  If SalIsWindowVisible( tblCdtSuppl )
.head 8 -  Call tblCdtSuppl.PalPopulateCdt(  )
.head 7 -  Call SalEnableWindow( pbEditListeEL )
.head 7 -  Call SalEnableWindow( pbVisuListe )
.head 7 -  Call SalEnableWindow( pbPrintListe )
.head 7 -  Call SalEnableWindow( pbPrintCdt )
.head 7 +  If SalTblAnyRows( tblCdt, 0,0 )
.head 8 -  Call SalEnableWindow( pbVisuCdt )
.head 8 -  Call SalEnableWindow( pbPrintVisu )
.head 7 -  !
.head 7 +  If wsScrutinEl = '2'
.head 8 +  If tblFichier.colStatut = '1' or tblFichier.colNbCdt = 0 or tblFichier.colNbCdt = NUMBER_Null
.head 9 -  Call SalHideWindow( pbLogoListe )
.head 8 +  Else
.head 9 -  Call SalShowWindow( pbLogoListe )
.head 8 +  If tblListe.colLogo != ''
.head 9 -  Call SalClearField( dfNomListe )
.head 9 -  Call SalHideWindow( dfNomListe )
.head 9 -  Call SalShowWindow( picLogoListe )
.head 9 -  Call SalPicSet( pbLogoListe, resLogoSup , PIC_FormatIcon)
.head 9 -  Call SalPicSetFile( picLogoListe, gsPathLogo || colLogo )
.head 8 +  Else
.head 9 -  Call SalPicSet( pbLogoListe, resLogo, PIC_FormatIcon)
.head 9 -  Call SalPicClear( picLogoListe )
.head 9 -  Call SalHideWindow( picLogoListe )
.head 9 -  Call SalShowWindow( dfNomListe )
.head 9 -  Set dfNomListe = tblListe.colNom
.head 7 +  Else
.head 8 -  Call SalHideWindow( pbLogoListe )
.head 8 -  Call SalHideWindow( picLogoListe )
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 -  Set tnNbListe = tnNbListe + 1
.head 6 +  If colLogo != ''
.head 7 -  Set colRmq = ''
.head 7 -  Call SalTblSetCellTextColor( tblListe.colRmq, COLOR_Marigold, TRUE )
.head 6 +  Else
.head 7 -  Call SalTblSetCellTextColor( tblListe.colRmq, COLOR_Black, TRUE )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Data Field: dfTotListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 5.65"
.head 6 -  Top: 7.595"
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbVisuListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 6.283"
.head 5 -  Top: 7.655"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, 0,0)
.head 7 -  Call PalGenereVisu( 2, wnNoElection[ SalListQuerySelection( cmbElection ) ]  , FALSE )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 3 +  Pushbutton: pbPrintListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Impression
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 7.655"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, 0,0)
.head 7 -  Call PalPrintVisuDirect( tblFichier.colIns, wnNoElection[ SalListQuerySelection( cmbElection ) ], 1 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Afdruk' )
.head 3 +  Pushbutton: pbLogoListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.883"
.head 5 -  Top: 7.655"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.5"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If wsScrutinEl = '1'
.head 7 -  Call SWTabsHideWindowAndLabel( picTabs, pbLogoListe )
.head 6 +  Else If wsScrutinEl = '2'
.head 7 -  Call SWTabsShowWindowAndLabel( picTabs, pbLogoListe )
.head 6 -  Call SalPicSet( hWndItem, resLogo, PIC_FormatIcon)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblListe, ROW_Selected, 0)
.head 7 -  Set wsNoListeActive = tblListe.colNo
.head 7 +  If tblFichier.colRegion = 'FLA'
.head 8 -  Set wsCollege = 'N'
.head 7 +  Else
.head 8 -  Set wsCollege = 'F'
.head 7 +  If tblListe.colLogo = ''
.head 8 -  Call SalModalDialog( dlgImportLogo, hWndForm, wnNoElection[ SalListQuerySelection( cmbElection ) ] , wsCollege, tblListe.colNo, tblFichier.colIns )
.head 8 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 7 +  Else
.head 8 +  If SalMessageBox(PalTraductMsg( 'LOGO1'), PalTraductMsg( '?' ), MB_OkCancel | MB_DefButton2  ) = IDOK
.head 9 +  If PalSupprLogo(wnNoElection[ SalListQuerySelection( cmbElection ) ] , wsCollege, tblListe.colNo, tblFichier.colIns)
.head 10 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 7 +  If wsNoListeActive != ''
.head 8 -  Call PalSearchListe( wsNoListeActive )
.head 3 +  Picture: picLogoListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.8"
.head 5 -  Top: 1.488"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Gray
.head 4 -  Message Actions
.head 3 +  Data Field: dfNomListe
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.783"
.head 6 -  Top: 1.512"
.head 6 -  Width:  5.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.417"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbAddListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.45"
.head 5 -  Top: 8.012"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPlus, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgAddListe , hWndForm , 'A', tblFichier.colIns ,  tblFichier.colNbCdt, wnNoElection[ SalListQuerySelection( cmbElection ) ], '', '', '', wsNoListeActive)
.head 7 -  Call SalSendMsg( tblFichier,SAM_FetchRowDone, 0,0)
.head 7 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 7 +  If wsNoListeActive != ''
.head 8 -  Call PalSearchListe( wsNoListeActive )
.head 3 +  Pushbutton: pbModifListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.25"
.head 5 -  Top: 8.012"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resModif, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgAddListe , hWndForm , 'M', tblFichier.colIns ,  tblFichier.colNbCdt , wnNoElection[ SalListQuerySelection( cmbElection ) ], tblListe.colNo, tblListe.colNom , tblListe.colNbCdt, wsNoListeActive)
.head 7 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 7 +  If wsNoListeActive != ''
.head 8 -  Call PalSearchListe( wsNoListeActive )
.head 3 +  Pushbutton: pbDelListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.05"
.head 5 -  Top: 8.012"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resDelete, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, ROW_Selected, 0)
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalMessageBox( PalTraductMsg('LISTE13') , PalTraductMsg('QUESTION'), MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Call PalDeleteListeCdt()
.head 8 -  Call SalSendMsg( tblFichier,SAM_FetchRowDone, 0,0)
.head 8 -  Call SalSendMsg( tblFichier,SAM_Click, 0,0)
.head 3 +  Pushbutton: pbEditListeEL
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Edition des listes
.head 4 -  Window Location and Size
.head 5 -  Left: 1.15"
.head 5 -  Top: 8.091"
.head 5 -  Width:  2.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, 0,0)
.head 7 -  Call PalGenereVisu( 3, wnNoElection[ SalListQuerySelection( cmbElection ) ] , FALSE )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 3 +  Child Table: tblCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.783"
.head 6 -  Top: 1.905"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 5.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Courier New
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 100
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.517"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.colNo, 'Nr' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 1
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.314"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.colNom, 'Lijn 1' )
.head 7 +  ! On SAM_Validate
.head 8 -  Call PalChangeNomCdt( tblCdt.colNo, tblListe.colNo, tblFichier.colIns, tblFichier.colTypeEl , tblFichier.colType )
.head 5 +  Column: colNom2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 2
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.414"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.colNom2, 'Lijn 2' )
.head 7 +  ! On SAM_Validate
.head 8 -  Call PalChangeNomCdt( tblCdt.colNo, tblListe.colNo, tblFichier.colIns, tblFichier.colTypeEl , tblFichier.colType )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCdt
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Set tnNbCdt = 0
.head 7 -  Set lsSelect = "Select Cdt_No, Cdt_Ligne1, cdt_ligne2 from Candidats
	where EL_NO = :tblFichier.colTypeEl and LIS_NO =:tblListe.colNo"
.head 7 +  If tblFichier.colTypeEl = 5
.head 8 -  Set lsSelect = lsSelect  || " and Dis_ins = :tblFichier.colIns "
.head 7 +  Else If tblFichier.colTypeEl = 2 or tblFichier.colTypeEl = 4  or tblFichier.colTypeEl = 7  or tblFichier.colTypeEl = 10 or tblFichier.colTypeEl = 11
.head 8 -  Set lsSelect = lsSelect  || " and Circ_ins = :tblFichier.colIns and Cdt_Type = 'E' "
.head 7 +  Else If tblFichier.colTypeEl = 3 or tblFichier.colTypeEl = 1
.head 8 -  Set lsSelect = lsSelect  || " and Coll_ins = :tblFichier.colIns and Cdt_Type = 'E'  "
.head 7 +  Else If tblFichier.colTypeEl = 8
.head 8 -  Set lsSelect = lsSelect   ||  " and cdi_ins = :tblFichier.colIns "
.head 7 +  Else
.head 8 -  Set lsSelect = lsSelect   || " and com_ins = :tblFichier.colIns "
.head 7 -  Set lsSelect = lsSelect  ||  " 
	Order by 1	
	Into :tblCdt.colNo,:tblCdt.colNom,:tblCdt.colNom2 "
.head 7 -  Call SalTblPopulate( tblCdt, ghSqlMain, lsSelect, TBL_FillAll )
.head 7 -  Set dfTotCdt = tnNbCdt
.head 5 +  ! Function: PalChangeNomCdt
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sNoCdt
.head 7 -  String: sNoListe
.head 7 -  String: sIns
.head 7 -  Number: nTypeEl
.head 7 -  String: sType
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  String: sWhere
.head 6 +  Actions 
.head 7 +  If sType = 'DI'
.head 8 -  Set sWhere = ' DIS_Ins = :sIns ' 
.head 7 +  Else If sType = 'GE'
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'OC' 
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'CD'
.head 8 -  Set sWhere = ' CDI_Ins = :sIns ' 
.head 7 +  Else 
.head 8 -  Return (FALSE)
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update candidats set CDT_LIGNE1 = :tblCdt.colNom , CDT_LIGNE2 = :tblCdt.colNom2 
	where " || sWhere || " and El_no = :nTypeEl and Lis_no = :sNoListe and Cdt_no = :sNoCdt " )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "MODIF CDT", "EL " || SalNumberToStrX( nTypeEl, 0) ||"  -  L " || sNoListe || "   C "|| sNoCdt || "   --> " || tblCdt.colNom || "|"  || tblCdt.colNom2 )
.head 4 +  Window Variables
.head 5 -  Number: tnNbCdt
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 -  Set tnNbCdt = tnNbCdt + 1
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  Background Text: SUPPLEANTS :
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Resource Id: 4388
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.783"
.head 5 -  Top: 5.595"
.head 5 -  Width:  2.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Purple
.head 4 -  Background Color: Gray
.head 3 +  Child Table: tblCdtSuppl
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.783"
.head 6 -  Top: 5.821"
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Courier New
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 100
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.517"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSuppl.colNo, 'Nr' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 1
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.314"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSuppl.colNom, 'Lijn 1' )
.head 7 +  ! On SAM_Validate
.head 8 -  Call PalChangeNomCdt( tblCdt.colNo, tblListe.colNo, tblFichier.colIns, tblFichier.colTypeEl , tblFichier.colType )
.head 5 +  Column: colNom2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 2
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.414"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSuppl.colNom2, 'Lijn 2' )
.head 7 +  ! On SAM_Validate
.head 8 -  Call PalChangeNomCdt( tblCdt.colNo, tblListe.colNo, tblFichier.colIns, tblFichier.colTypeEl , tblFichier.colType )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCdt
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Set tnNbCdt = 0
.head 7 -  Set lsSelect = "Select Cdt_No, Cdt_Ligne1, cdt_ligne2 from Candidats
	where EL_NO = :tblFichier.colTypeEl and LIS_NO =:tblListe.colNo"
.head 7 +  If tblFichier.colTypeEl = 2  or tblFichier.colTypeEl = 4 or tblFichier.colTypeEl = 7 or tblFichier.colTypeEl = 10 or tblFichier.colTypeEl = 11
.head 8 -  Set lsSelect = lsSelect  || " and Circ_ins = :tblFichier.colIns and Cdt_Type = 'S' "
.head 7 +  Else If tblFichier.colTypeEl = 3 or tblFichier.colTypeEl = 1
.head 8 -  Set lsSelect = lsSelect  || " and Coll_ins = :tblFichier.colIns and Cdt_Type = 'S'  "
.head 7 -  Set lsSelect = lsSelect  ||  " 
	Order by 1	
	Into :tblCdtSuppl.colNo,:tblCdtSuppl.colNom,:tblCdtSuppl.colNom2 "
.head 7 -  Call SalTblPopulate( tblCdtSuppl, ghSqlMain, lsSelect, TBL_FillAll )
.head 7 -  Set dfTotCdtSup = tnNbCdt
.head 5 +  ! Function: PalChangeNomCdt
.head 6 -  Description: 
.head 6 -  Returns 
.head 6 +  Parameters 
.head 7 -  String: sNoCdt
.head 7 -  String: sNoListe
.head 7 -  String: sIns
.head 7 -  Number: nTypeEl
.head 7 -  String: sType
.head 6 -  Static Variables 
.head 6 +  Local variables 
.head 7 -  String: sWhere
.head 6 +  Actions 
.head 7 +  If sType = 'DI'
.head 8 -  Set sWhere = ' DIS_Ins = :sIns ' 
.head 7 +  Else If sType = 'GE'
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'OC' 
.head 8 -  Set sWhere = ' COM_Ins = :sIns ' 
.head 7 +  Else If sType = 'CD'
.head 8 -  Set sWhere = ' CDI_Ins = :sIns ' 
.head 7 +  Else 
.head 8 -  Return (FALSE)
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update candidats set CDT_LIGNE1 = :tblCdt.colNom , CDT_LIGNE2 = :tblCdt.colNom2 
	where " || sWhere || " and El_no = :nTypeEl and Lis_no = :sNoListe and Cdt_no = :sNoCdt " )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "MODIF CDT", "EL " || SalNumberToStrX( nTypeEl, 0) ||"  -  L " || sNoListe || "   C "|| sNoCdt || "   --> " || tblCdt.colNom || "|"  || tblCdt.colNom2 )
.head 4 +  Window Variables
.head 5 -  Number: tnNbCdt
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( tblCdtSuppl, 'OPVOLGERS :' )
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  ! On SAM_FetchRowDone
.head 6 -  Set tnNbCdt = tnNbCdt + 1
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbEditListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Edition Nom Listes
.head 4 -  Window Location and Size
.head 5 -  Left: 6.517"
.head 5 -  Top: 8.786"
.head 5 -  Width:  2.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalIsWindowEnabled( tblListe.colNom)
.head 7 -  Call SalDisableWindow( tblListe.colNom )
.head 6 +  Else
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  Call SalEnableWindow( tblListe.colNom)
.head 3 +  Data Field: dfTotCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 10.017"
.head 6 -  Top: 7.619"
.head 6 -  Width:  0.667"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: dfTotCdtSup
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 10.017"
.head 6 -  Top: 7.619"
.head 6 -  Width:  0.667"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbVisuCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 11.483"
.head 5 -  Top: 7.655"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblListe, ROW_Selected, 0) and SalTblAnyRows( tblCdt, 0,0)
.head 7 -  Call PalGenereVisu( 1, wnNoElection[ SalListQuerySelection( cmbElection ) ]  , FALSE )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 3 +  Pushbutton: pbPrintCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Impression
.head 4 -  Window Location and Size
.head 5 -  Left: 13.783"
.head 5 -  Top: 7.655"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0) and SalTblAnyRows( tblListe, 0,0)
.head 7 -  Call PalPrintVisuDirect( tblFichier.colIns, wnNoElection[ SalListQuerySelection( cmbElection ) ], 2 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Afdruk' )
.head 3 +  Pushbutton: pbPrintVisu
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Impression directe des listes et des candidats
.head 4 -  Window Location and Size
.head 5 -  Left: 11.483"
.head 5 -  Top: 8.001"
.head 5 -  Width:  3.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Directe afdruk of lijsten en kandidaten' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblListe, ROW_Selected, 0)
.head 7 -  Call PalPrintVisuDirect( tblFichier.colIns, wnNoElection[ SalListQuerySelection( cmbElection ) ], 0 )
.head 3 +  Pushbutton: pbEditCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Edition Noms candidats
.head 4 -  Window Location and Size
.head 5 -  Left: 11.883"
.head 5 -  Top: 8.821"
.head 5 -  Width:  2.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalIsWindowEnabled( tblCdt.colNom )
.head 7 -  Call SalDisableWindow( tblCdt.colNom )
.head 7 -  Call SalDisableWindow( tblCdt.colNom2 )
.head 6 +  Else
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  Call SalEnableWindow( tblCdt.colNom )
.head 8 -  Call SalEnableWindow( tblCdt.colNom2 )
.head 3 -  ! Tabs 1 : Bureaux de vote
.head 3 -  Background Text: Commune
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4389
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.583"
.head 5 -  Top: 0.929"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Gray
.head 3 +  Combo Box: cmbCommuneBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.483"
.head 5 -  Top: 0.905"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.917"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Gemeente:' )
.head 6 -  Call PalPopulateCmbCommune( cmbCommuneBV )
.head 5 +  On SAM_DropDown
.head 6 -  Set wbClavier = FALSE
.head 5 +  On SAM_Click
.head 6 +  If cmbCommuneBV != ''
.head 7 +  If wbClavier
.head 8 -  Call SalSetDefButton( pbCommuneBV )
.head 7 +  Else
.head 8 -  Call SalSendMsg( pbCommuneBV, SAM_Click, 0,0)
.head 5 +  On WM_KEYDOWN
.head 6 -  Set wbClavier = TRUE
.head 3 +  Pushbutton: pbCommuneBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If cmbCommuneBV != ''
.head 7 -  Call PalRechercheInsBV( SalStrRightX( cmbCommuneBV, 5) )
.head 3 +  Child Table: tblCantonBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.238"
.head 6 -  Width:  3.633"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 700
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.667"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonBV.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.25"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonBV.colCanton, 'Kanton' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCtrl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ctrl
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colCtrl, 'Ctrl' )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCanton
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Set lsSelect = "Select " || wsLabelCommune || " , can_ins from base_commune A
	where A.type = 'CA' and exists (select com_ins from base_commune B where A.Can_ins = B.Can_Ins and type ='GE' and vote_el = 1 and " || gsMateriel || ") "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and  can_INS in (" || psCanton || ") "
.head 7 +  If gsRestrRegion != ''
.head 8 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 -  Call SalTblPopulate( tblCantonBV, ghSqlMain, lsSelect || "
	Order by 2
	into :tblCantonBV.colCanton,:tblCantonBV.colIns ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblCantonBV, 0,0)
.head 8 -  Call SalTblSetContext( tblCantonBV, 0)
.head 8 -  Call SalTblSetFocusRow( tblCantonBV, 0)
.head 8 -  Call SalTblSetRowFlags( tblCantonBV, 0, ROW_Selected, TRUE)
.head 8 +  ! If cmbCommuneBV != ''
.head 9 -  Call SalSendMsg( pbCommuneBV, SAM_Click, 0, 0 )
.head 8 -  ! Else
.head 8 -  Call SalSendMsg( tblCantonBV,SAM_Click, -1,0)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 -  Call PalDtmMove( 0 )
.head 6 +  If wParam != -1
.head 7 -  ! Set cmbCommuneBV = ''
.head 6 -  Call SalTblReset( tblCommuneBV )
.head 6 -  Call SalTblReset( tblBureauVote )
.head 6 -  Set mlBV = ''
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0)
.head 7 -  Call SalDisableWindow( pbGenereBV )
.head 7 -  Call SalDisableWindow( pbEtiquBV )
.head 7 -  ! !
.head 7 +  If (SalStrLeftX( SalNumberToStrX(tblCantonBV.colIns,0) , 2) = '21') and wsScrutinEl = '1'
.head 8 -  Call SWTabsShowWindow( picTabs,pbValidBV_Bxl )
.head 8 -  Call SWTabsShowWindow( picTabs,pbImportBV_Bxl )
.head 8 -  Call SWTabsHideWindow( picTabs,pbImportBV )
.head 8 -  Call SWTabsHideWindow( picTabs, pbValidBV)
.head 7 +  Else
.head 8 -  Call SWTabsHideWindow( picTabs, pbValidBV_Bxl )
.head 8 -  Call SWTabsShowWindow( picTabs, pbValidBV )
.head 8 -  Call SWTabsHideWindow( picTabs,pbImportBV_Bxl )
.head 8 -  Call SWTabsShowWindow( picTabs,pbImportBV )
.head 7 -  !
.head 7 -  Call tblCommuneBV.PalPopulateCommune( gsRestrCom )
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCantonBV.colCanton = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select com_nom_n  from commune
	where Com_ins = :tblCantonBV.colIns
	Into :tblCantonBV.colCanton ")
.head 7 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 6 -  ! Vérif si tous les BV  du cantons sont validés
.head 6 -  Call PalVerifValidCantonBV()
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbVisuBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 7.321"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV , 0,0)
.head 7 -  Call PalVisuBV( 0, 1 )
.head 3 +  Child Table: tblCommuneBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.883"
.head 6 -  Top: 1.238"
.head 6 -  Width:  3.433"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 700
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.617"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommuneBV.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Commune
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.4"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommuneBV.colCanton, 'Gemeente' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommuneBV.colInsCanton, 'NIS' )
.head 5 +  Column: colInsPro
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommuneBV.colInsPro, 'NIS' )
.head 5 +  Column: colInsDis
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommuneBV.colInsDis, 'NIS' )
.head 5 +  Column: colElDistrict
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNbPcTot
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCtrl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ctrl
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colCtrl, 'Ctrl' )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCommune
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set lsSelect = "Select @IF(@Length(A.Com_nom_N),A.Com_Nom_N , A.Com_nom_F) , A.com_ins, A.can_ins , A.PRO_INS, A.DIS_INS , A.COM_EL_CDISTRICT,A.COM_NB_PCTOT,  @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from commune A, Base_Commune B
	where A.Can_ins = :tblCantonBV.colIns and B.Type = 'GE' and A.Com_ins=B.Com_Ins and B.Vote_EL = :gnTypeVote "
.head 7 +  Else
.head 8 -  Set lsSelect = "Select @IF(@Length(A.Com_nom_F),A.Com_Nom_F , A.Com_nom_N) , A.com_ins, A.can_ins , A.PRO_INS, A.DIS_INS , A.COM_EL_CDISTRICT,A.COM_NB_PCTOT,  @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from commune A, Base_Commune B
	where A.Can_ins = :tblCantonBV.colIns  and B.Type = 'GE' and A.Com_ins=B.Com_Ins and B.Vote_EL = :gnTypeVote"
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || psCanton || ") "
.head 7 -  Call SalTblPopulate( tblCommuneBV, ghSqlSecondaire, lsSelect || "
	Order by 8,2
	into :tblCommuneBV.colCanton,:tblCommuneBV.colIns,:tblCommuneBV.colInsCanton,:tblCommuneBV.colInsPro,:tblCommuneBV.colInsDis, :tblCommuneBV.colElDistrict, :tblCommuneBV.colNbPcTot ", TBL_FillAllBackground )
.head 7 +  If SalTblAnyRows( tblCommuneBV, 0,0)
.head 8 -  Call SalTblSetContext( tblCommuneBV, 0)
.head 8 -  Call SalTblSetFocusRow( tblCommuneBV, 0)
.head 8 -  Call SalTblSetRowFlags( tblCommuneBV, 0, ROW_Selected, TRUE)
.head 8 +  If wParam != -1 or wsCommuneSelect = ''
.head 9 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 4 +  Window Variables
.head 5 -  Number: nCommune
.head 5 -  Number: nValid
.head 5 -  Number: nBV
.head 5 -  Number: i
.head 5 -  String: lsCtrl
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 -  Call PalDtmMove( 0 )
.head 6 -  Set wsCommuneSelectBV = ''
.head 6 -  Set cmbCommuneBV = SalNumberToStrX( tblCommuneBV.colIns, 0) || ' - ' || tblCommuneBV.colCanton
.head 6 -  Call SalTblReset( tblBureauVote )
.head 6 +  If SalTblAnyRows( tblCommuneBV, ROW_Selected, 0)
.head 7 -  Set wsCommuneSelectBV = SalNumberToStrX( tblCommuneBV.colIns, 0) || ' - ' || tblCommuneBV.colCanton
.head 7 +  If wParam != - 1
.head 8 -  Set wsCommuneSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 8 -  Set wsCommuneEnCours = tblCommuneBV.colCanton
.head 8 -  Call tblBureauVote.PalPopulateBV( gsRestrCom )
.head 7 -  ! Vérif si Listes validées pour cette commune
.head 7 +  If tblCommuneBV.colStatut= '1'
.head 8 -  Call SalDisableWindow( pbAddBV)
.head 8 -  Call SalDisableWindow( pbModifBV)
.head 8 -  Call SalDisableWindow( pbDelBV)
.head 8 -  Call SalDisableWindow( pbValidBV )
.head 8 -  Call SalDisableWindow( pbValidBV_Bxl )
.head 8 -  Call SalDisableWindow( pbImportBV )
.head 8 -  Call SalDisableWindow( pbImportBV_Bxl)
.head 8 -  Call SalEnableWindow( pbVisuBV ) 
.head 8 -  Call SalEnableWindow( pbVisuBVCom ) 
.head 8 +  If gbAdminSys
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select * from  bur_vote where com_ins = :tblCommuneBV.colIns and @upper(@left(bv_statut,4)) = 'ECR.' " )
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 -  Call SalEnableWindow( pbPwBV )
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbPwBV )
.head 8 +  Else
.head 9 -  Call SalDisableWindow( pbPwBV )
.head 8 -  !
.head 8 -  Call PalVerifGenereDiskBV()
.head 8 -  !
.head 7 +  Else
.head 8 -  Call SalEnableWindow( pbAddBV)
.head 8 -  Call SalEnableWindow( pbModifBV)
.head 8 -  Call SalEnableWindow( pbDelBV)
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select * from  bur_vote where can_ins = :tblCantonBV.colIns " )
.head 8 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 9 -  Call SalEnableWindow( pbValidBV )
.head 9 -  Call SalEnableWindow( pbVisuBV ) 
.head 8 +  Else
.head 9 -  Call SalDisableWindow( pbValidBV )
.head 9 -  Call SalDisableWindow( pbVisuBV ) 
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select * from  bur_vote where com_ins = :tblCommuneBV.colIns " )
.head 8 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 9 -  Call SalEnableWindow( pbValidBV_Bxl )
.head 9 -  Call SalEnableWindow( pbVisuBVCom ) 
.head 8 +  Else
.head 9 -  Call SalDisableWindow( pbValidBV_Bxl )
.head 9 -  Call SalDisableWindow( pbVisuBVCom ) 
.head 8 -  Call SalEnableWindow( pbImportBV )
.head 8 -  Call SalEnableWindow( pbImportBV_Bxl )
.head 8 -  Call SalDisableWindow( pbGenereBV )
.head 8 -  Call SalDisableWindow( pbEtiquBV )
.head 8 -  Call SalDisableWindow( pbPwBV )
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCommuneBV.colCanton = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select com_nom_n  from commune
	where Com_ins = :tblCommuneBV.colIns
	Into :tblCommuneBV.colCanton ")
.head 7 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 6 -  ! Vérif BV sont validés
.head 6 +  If SalStrLeftX( SalNumberToStrX(tblCantonBV.colIns,0) , 2) != '21'
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(com_ins) , sum(bv_valide) from Bur_vote where Can_Ins = :tblCantonBV.colIns
	into :nCommune, :nValid ")
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(com_ins) , sum(bv_valide) from Bur_vote where Com_Ins = :tblCommuneBV.colIns
	into :nCommune, :nValid ")
.head 6 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 6 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(bv_No) from Bur_vote where Com_Ins = :tblCommuneBV.colIns
	into :nBV ")
.head 6 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 6 +  If nValid = nCommune and nValid != NUMBER_Null and nCommune != NUMBER_Null
.head 7 -  Set tblCommuneBV.colStatut= '1'
.head 6 +  If tblCommuneBV.colStatut= '1'
.head 7 -  Call VisTblSetRowColor( tblCommuneBV, SalTblQueryContext( tblCommuneBV) , COLOR_Red )
.head 7 -  !
.head 7 +  If NOT PalDtmCtrl( 'BV', tblCommuneBV.colIns, 'COM' )
.head 8 -  Call VisTblSetRowColor( tblCommuneBV , SalTblQueryContext( tblCommuneBV) , COLOR_DarkGreen )
.head 8 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV), ROW_Edited, TRUE )
.head 6 +  Else If nBV > 0
.head 7 -  Call VisTblSetRowColor( tblCommuneBV, SalTblQueryContext( tblCommuneBV) , COLOR_Blue )
.head 7 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV), ROW_New, TRUE )
.head 6 +  Else
.head 7 -  Call VisTblSetRowColor( tblCommuneBV, SalTblQueryContext( tblCommuneBV) , COLOR_DarkGray )
.head 7 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV), ROW_New, FALSE )
.head 7 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV), ROW_Edited, FALSE )
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbImportBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Importation des Bureaux
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 7.655"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.27"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Stembureaus invoeren' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0 ) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0) and 
	tblCommuneBV.colNbPcTot != NUMBER_Null and tblCommuneBV.colNbPcTot > 0
.head 7 -  Set wsInsSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 7 -  Call SalModalDialog( dlgImportBV_Tbl, hWndForm, SalNumberToStrX(tblCantonBV.colIns,0), tblCommuneBV.colNbPcTot )
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 -  Call tblCommuneBV.PalPopulateCommune( gsRestrCom)
.head 7 -  Call PalSelectLigne( tblCommuneBV, tblCommuneBV.colIns, wsInsSelect)
.head 7 -  Call PalVerifValidCantonBV()
.head 7 -  Call PalVerifGenereDiskBV()
.head 3 +  Pushbutton: pbValidBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Validation des Bureaux
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 7.988"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.27"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Stembureaus Validatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0 ) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0) 
.head 7 -  Set wsInsSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 7 -  Call PalValidBV( 1 , SalNumberToStrX( tblCantonBV.colIns, 0), TRUE, wsTmp )
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 -  Call tblCommuneBV.PalPopulateCommune( gsRestrCom)
.head 7 -  Call PalSelectLigne( tblCommuneBV, tblCommuneBV.colIns, wsInsSelect )
.head 7 -  Call PalVerifValidCantonBV()
.head 7 -  Call PalVerifGenereDiskBV()
.head 3 +  Pushbutton: pbImportBV_Bxl
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Importation des Bureaux
.head 4 -  Window Location and Size
.head 5 -  Left: 4.483"
.head 5 -  Top: 7.655"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.27"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Stembureaus invoeren' )
.head 5 +  On SAM_Click
.head 6 -  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0 ) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0) and 
	tblCommuneBV.colNbPcTot != NUMBER_Null and tblCommuneBV.colNbPcTot > 0
.head 3 +  Pushbutton: pbValidBV_Bxl
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Validation des Bureaux
.head 4 -  Window Location and Size
.head 5 -  Left: 4.483"
.head 5 -  Top: 7.988"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.27"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Stembureaus Validatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0 ) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0) and SalTblAnyRows( tblBureauVote , 0,0)
.head 7 -  Set wsInsSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 7 -  Call PalValidBV_Bxl( 1 , SalNumberToStrX( tblCommuneBV.colIns, 0), TRUE, wsTmp )
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 -  Call tblCommuneBV.PalPopulateCommune( gsRestrCom)
.head 7 -  Call PalSelectLigne( tblCommuneBV, tblCommuneBV.colIns, wsInsSelect )
.head 7 -  Call PalVerifValidCantonBV()
.head 7 -  Call PalVerifGenereDiskBV()
.head 3 +  Pushbutton: pbVisuBVCom
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 4.483"
.head 5 -  Top: 7.321"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0) and SalTblAnyRows( tblBureauVote, 0,0)
.head 7 -  Call PalVisuBV( 0 , 2)
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'BV38' ), PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Child Table: tblBureauVote
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.383"
.head 6 -  Top: 1.238"
.head 6 -  Width:  9.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 10000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.483"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colNoBV, 'Nr' )
.head 5 +  Column: colNomBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nom
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.083"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colNomBV, 'Naam' )
.head 5 +  Column: colStatutBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Statut
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.633"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colStatutBV, 'Status' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.217"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colUser
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Qui ?
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.383"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colUser, 'Wie ?' )
.head 5 +  Column: colCtrl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ctrl
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colCtrl, 'Ctrl' )
.head 5 +  Column: colPresBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Président
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.55"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colPresBV, 'Voorzitter')
.head 5 +  Column: colNoEcrit
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCdi
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Cdi_Ins
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.583"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNoPcTotBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: PcTot
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.583"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNoPcTotProvBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: PcTot
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.583"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateBV
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsWhere
.head 7 -  String: tsNoBV
.head 7 -  String: tsStatut
.head 7 -  Number: tnNb
.head 6 +  Actions
.head 7 -  Set mlBV = ''
.head 7 -  !
.head 7 -  Set dfTotBV  = 0
.head 7 -  Set mlDetailBV  = ""
.head 7 -  !
.head 7 +  If psCanton != ''
.head 8 -  Set lsWhere = " and can_INS in (" || psCanton || ") "
.head 7 -  Set lsSelect = "Select bv_no, BV_DESCRIPTION, Bv_President, BV_Com_pcTot, BV_CAN_pcTot, BV_Statut, BV_Createur , Bv_NoEcrit , @right('000' || bv_no, 3) , cdi_ins
	from bur_vote 
	where com_ins = :tblCommuneBV.colIns " || lsWhere
.head 7 -  Call SalTblPopulate( tblBureauVote, ghSqlChargeBV, lsSelect || "
	Order by 9
	into :tblBureauVote.colNoBV,:tblBureauVote.colNomBV, :tblBureauVote.colPresBV, :tblBureauVote.colNoPcTotBV, :tblBureauVote.colNoPcTotProvBV, :tblBureauVote.colStatut , 
		:tblBureauVote.colUser, :tblBureauVote.colNoEcrit, :tsNoBV , :tblBureauVote.colCdi", TBL_FillAllBackground )
.head 7 +  If SalTblAnyRows( tblBureauVote, 0,0)
.head 8 -  Call SalTblSetContext( tblBureauVote, 0)
.head 8 -  Call SalTblSetFocusRow( tblBureauVote, 0)
.head 8 -  Call SalTblSetRowFlags( tblBureauVote, 0, ROW_Selected, TRUE)
.head 8 -  Call SalSendMsg( tblBureauVote,SAM_Click, 5,0)
.head 5 +  Function: PalPopulateML_BV
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsNo
.head 7 -  String: lsNom
.head 7 -  String: lsAdresse
.head 7 -  String: lsPres
.head 7 -  String: lsLoc
.head 7 -  String: lsCP
.head 7 -  String: lsPcTot
.head 7 -  String: lsPcTotProv
.head 7 -  String: lsCdi
.head 7 -  String: lsCdiLabel
.head 6 +  Actions
.head 7 -  Set lsSelect = "Select bv_no, BV_DESCRIPTION, Bv_President, bv_Adresse, bv_localite, bv_code_postal, Bv_com_pcTot , Bv_can_pcTot ,cdi_ins from bur_vote 
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV
	Into :lsNo, :lsNom, :lsPres, :lsAdresse, :lsLoc, :lsCP, :lsPcTot ,:lsPcTotProv , :lsCdi "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set mlBV = ''
.head 8 -  !
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set mlBV = 'Nr. : ' || lsNo ||'
Bureau: ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Voorzitter : ' || lsPres
.head 9 +  If wsScrutinEl = '1'
.head 10 -  Set mlBV =  mlBV ||'
Nr tot. PC voor Gemeente :'||  lsPcTot
.head 10 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) != '21'
.head 11 -  Set mlBV = mlBV ||'
Nr tot. PC voor Provincie :'|| lsPcTotProv
.head 9 +  Else If wsScrutinEl = '2'
.head 10 -  Set mlBV = mlBV ||'
Nr tot. PC :'|| lsPcTotProv
.head 8 +  Else
.head 9 -  Set mlBV = 'N° : ' || lsNo ||'
Bureau: ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Président : ' || lsPres
.head 9 +  If wsScrutinEl = '1'
.head 10 -  Set mlBV =  mlBV  ||'
PC tot. n° pour Communales : '||  lsPcTot
.head 10 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) != '21'
.head 11 -  Set mlBV = mlBV ||'
PC tot. n° pour Provinciales : '|| lsPcTotProv
.head 9 +  Else If wsScrutinEl = '2'
.head 10 -  Set mlBV = mlBV ||'
PC tot. n° : '|| lsPcTotProv
.head 8 -  !
.head 5 +  Function: PalDtmDetailBV
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsWhere
.head 7 -  String: tsNoBV
.head 7 -  String: tsStatut
.head 7 -  String: lsStatut
.head 7 -  String: lsUser
.head 7 -  Number: lnNoEcrit
.head 7 -  Number: tnNb
.head 7 -  Number: tnPrepa
.head 7 -  Number: tnErr
.head 7 -  Number: nRow
.head 7 -  Number: nRowActu
.head 7 -  Number: tnEcr
.head 6 +  Actions
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 -  Set nRowActu = SalTblQueryContext( tblBureauVote )
.head 7 -  ! Mise a jour du statut a chaque click des BV
.head 7 -  Set nRow = -1
.head 7 +  If psCanton != ''
.head 8 -  Set lsWhere = " and can_INS in (" || psCanton || ") "
.head 7 -  Set lsSelect = "Select BV_Statut, BV_Createur , Bv_NoEcrit, @right('000' || bv_no, 3)
	from bur_vote 
	where com_ins = :tblCommuneBV.colIns " || lsWhere ||"
	Order by 4
	into :lsStatut , :lsUser, :lnNoEcrit, :tsNoBV "
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, lsSelect )
.head 7 +  While SalTblFindNextRow( tblBureauVote, nRow , 0 , 0 ) and SqlFetchNext( ghSqlTertiaire , Btmp)
.head 8 -  Call SalTblSetContext( tblBureauVote, nRow )
.head 8 +  If tblBureauVote.colNoBV = SalStrToNumber( tsNoBV )
.head 9 -  Set tblBureauVote.colStatut = lsStatut
.head 9 -  Set tblBureauVote.colNoEcrit = lnNoEcrit
.head 9 -  Set tblBureauVote.colUser = lsUser
.head 9 -  Call SalSendMsg( tblBureauVote, SAM_FetchRowDone, 0, 0)
.head 7 -  !
.head 7 -  Call SalTblSetContext( tblBureauVote, nRowActu )
.head 7 -  Call SalTblSetFocusRow( tblBureauVote, nRowActu )
.head 7 -  ! Comptage
.head 7 -  Set lsSelect = "Select @left( BV_Statut, 4 ) , count(*)
	from bur_vote 
	where com_ins = :tblCommuneBV.colIns "
.head 7 +  If psCanton != ''
.head 8 -  Set lsWhere = " and can_INS in (" || psCanton || ") "
.head 7 -  !
.head 7 -  Set tnPrepa = 0
.head 7 -  Set tnEcr = 0
.head 7 -  Set tnErr = 0
.head 7 -  Set dfTotBV  = 0
.head 7 -  Set mlDetailBV  = ""
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, lsSelect || lsWhere || "
	Group by 1 
	order by 1
	into :tsStatut, :tnNb ")
.head 7 +  While SqlFetchNext( ghSqlTertiaire, Btmp)
.head 8 +  If mlDetailBV  != ""
.head 9 -  Set mlDetailBV  = mlDetailBV || "
"
.head 8 +  If SalStrUpperX( tsStatut ) = 'ECR.'
.head 9 -  Set tnEcr = tnNb
.head 8 +  Else If SalStrUpperX( tsStatut ) = 'ERR.'
.head 9 -  Set tnErr = tnNb
.head 8 +  Else If SalStrUpperX( tsStatut ) = 'PREP'
.head 9 -  Set tnPrepa = tnNb
.head 8 -  Set dfTotBV  = dfTotBV  + tnNb
.head 7 +  If dfTotBV > 0
.head 8 -  Set mlDetailBV  = PalTraductMsg( 'BV_OK' ) || '	' || SalNumberToStrX(tnEcr, 0) 
.head 8 -  Set mlDetailBV  = mlDetailBV || '
' || PalTraductMsg( 'BV_ERR' ) || '  	' || SalNumberToStrX(tnErr, 0) 
.head 8 -  Set mlDetailBV  = mlDetailBV ||'
' || PalTraductMsg( 'BV_PREP' ) || '  	' || SalNumberToStrX(tnPrepa, 0) 
.head 7 -  Call VisWaitCursor(FALSE)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 -  Call PalDtmMove( 0 )
.head 6 +  If wParam != 5
.head 7 -  Set wnBVActif = tblBureauVote.colNoBV
.head 6 +  If SalTblAnyRows( tblBureauVote, ROW_Selected, 0)
.head 7 -  Call tblBureauVote.PalPopulateML_BV(  )
.head 7 -  Call tblBureauVote.PalDtmDetailBV( gsRestrCom )
.head 7 +  If tblCommuneBV.colStatut= '1'
.head 8 -  Call PalVerifGenereDiskBV()
.head 7 -  Set wsCantonSelect = SalNumberToStrX( tblCantonBV.colIns, 0)
.head 7 -  Set wsCommuneSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCommuneBV.colStatut= '1'
.head 7 -  Call PalVerifEtatBureau( 0 )
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Data Field: dfTotBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.683"
.head 6 -  Top: 4.905"
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Multiline Field: mlDetailBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left: 11.983"
.head 6 -  Top: 4.905"
.head 6 -  Width:  2.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.583"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 4 -  Message Actions
.head 3 +  Multiline Field: mlBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 7.383"
.head 6 -  Top: 5.488"
.head 6 -  Width:  9.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbGenereBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Génération des disquettes d'un BV
.head 4 -  Window Location and Size
.head 5 -  Left: 7.683"
.head 5 -  Top: 7.321"
.head 5 -  Width:  3.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Aanmaak stembureau Diskettes' )
.head 5 +  On SAM_Click
.head 6 +  If NOT gbCreateDisk
.head 7 +  If SalMessageBox( PalTraductMsg( 'ID01' ), PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 8 -  Call SalModalDialog( dlgLecteurs, hWndForm )
.head 7 +  Else
.head 8 -  Set gbCreateDisk = TRUE
.head 6 +  If SalTblAnyRows( tblBureauVote, ROW_Selected, 0) 
.head 7 +  If SalStrLength( wlsMoveMouse ) < 550 or SalStrLength( wsPWRandom ) < 8
.head 8 +  If Not  wbControleMouse
.head 9 -  Call SalCreateWindow( dlgMouseMove, hWndForm )
.head 8 +  Else
.head 9 -  Call SalCenterWindow( dlgMouseMove )
.head 9 -  Call SalBringWindowToTop( dlgMouseMove )
.head 7 +  Else
.head 8 -  Set wbCapteMouseMove = FALSE
.head 8 -  Call PalGenereDiskBV()
.head 8 -  Set wbCapteMouseMove = TRUE
.head 3 +  Check Box: cbRobot
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Disquette contenant les EXE
.head 4 -  Window Location and Size
.head 5 -  Left: 7.783"
.head 5 -  Top: 7.988"
.head 5 -  Width:  2.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Diskettes met EXE bestanden' )
.head 3 +  Pushbutton: pbEtiquBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Etiquettes
.head 4 -  Window Location and Size
.head 5 -  Left: 10.783"
.head 5 -  Top: 7.321"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Aanmaak Labels' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblBureauVote, ROW_Selected, 0) and SalStrUpperX(SalStrLeftX( tblBureauVote.colStatut, 4)) = 'ECR.'
.head 7 -  Call PalCreationEtiquetteBV()
.head 3 +  Check Box: cbPrintBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Impression directe
.head 4 -  Window Location and Size
.head 5 -  Left: 10.783"
.head 5 -  Top: 7.988"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = TRUE
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Directe afdruk' )
.head 3 +  Pushbutton: pbPwBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Mots de passe
.head 4 -  Window Location and Size
.head 5 -  Left: 12.683"
.head 5 -  Top: 7.321"
.head 5 -  Width:  2.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Wachtwoorden' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV , ROW_Selected,0)
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  ! Trace
.head 8 +  If gsUserEID= '1' and gsTmp != ''
.head 9 -  Set gsTmp = ' - EID: ' || gsTmp
.head 8 +  Else
.head 9 -  Set gsTmp = ''
.head 8 -  Call PalTraceAction( gsUserLog, "PW BV", 'INS: ' || SalNumberToStrX( tblCommuneBV.colIns, 0) || gsTmp )
.head 8 -  !
.head 8 -  Call PalVisuBV( 1 , 2)
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 3 +  Pushbutton: pbAddBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.883"
.head 5 -  Top: 5.071"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPlus, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV, ROW_Selected, 0) 
.head 7 -  Call SalModalDialog( dlgAddBV , hWndForm, tblCommuneBV.colIns, tblCommuneBV.colInsCanton,tblCommuneBV.colInsDis,tblCommuneBV.colInsPro, -1, tblCommuneBV.colElDistrict, wnBVActif )
.head 7 -  Call SalSendMsg( tblCantonBV,SAM_FetchRowDone , 0,0)
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_FetchRowDone , 0,0)
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 +  If wnBVActif != NUMBER_Null
.head 8 -  Call PalSearchBV( wnBVActif )
.head 3 +  Pushbutton: pbModifBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.683"
.head 5 -  Top: 5.071"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resModif, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCommuneBV, ROW_Selected, 0) and SalTblAnyRows( tblBureauVote, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgAddBV , hWndForm, tblCommuneBV.colIns, tblCommuneBV.colInsCanton, tblCommuneBV.colInsDis,tblCommuneBV.colInsPro, tblBureauVote.colNoBV,tblCommuneBV.colElDistrict, wnBVActif )
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 +  If wnBVActif != NUMBER_Null
.head 8 -  Call PalSearchBV( wnBVActif )
.head 3 +  Pushbutton: pbDelBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 10.483"
.head 5 -  Top: 5.071"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resDelete, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblBureauVote, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV, ROW_Selected, 0) 
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalMessageBox( PalTraductMsg('BV06') , PalTraductMsg('QUESTION'), MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Delete from bur_vote where BV_No = :tblBureauVote.colNoBV and COM_Ins = :tblCommuneBV.colIns ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  Call SalSendMsg( tblCantonBV,SAM_FetchRowDone , 0,0)
.head 8 -  Call SalSendMsg( tblCommuneBV,SAM_FetchRowDone , 0,0)
.head 8 -  Call SalSendMsg( tblCommuneBV, SAM_Click, 0,0)
.head 3 -  ! Tabs 2: PC de totalisation
.head 3 -  Background Text: Commune
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4390
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.583"
.head 5 -  Top: 0.929"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Gray
.head 3 +  Combo Box: cmbCommunePCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.483"
.head 5 -  Top: 0.905"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.762"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Gemeente:' )
.head 6 -  Call PalPopulateCmbCommune( cmbCommunePCT )
.head 5 +  On SAM_DropDown
.head 6 -  Set wbClavier = FALSE
.head 5 +  On SAM_Click
.head 6 +  If cmbCommunePCT != ''
.head 7 +  If wbClavier
.head 8 -  Call SalSetDefButton( pbCommunePCT )
.head 7 +  Else
.head 8 -  Call SalSendMsg( pbCommunePCT, SAM_Click, 0,0)
.head 5 +  On WM_KEYDOWN
.head 6 -  Set wbClavier = TRUE
.head 3 +  Pushbutton: pbCommunePCT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If cmbCommunePCT != ''
.head 7 -  Call PalRechercheInsPCT( SalStrRightX( cmbCommunePCT, 5) )
.head 6 -  !
.head 3 +  Child Table: tblCantonPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.283"
.head 6 -  Top: 1.238"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 700
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonPCT.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.867"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonPCT.colCanton, 'Kanton' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateCanton
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Set lsSelect = "Select " || wsLabelCommune || "  , can_ins from base_commune A
	where A.type = 'CA' and exists (select com_ins from base_commune B where A.Can_ins = B.Can_Ins and type ='GE' and vote_el = :gnTypeVote and " || gsMateriel || " ) "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and  can_INS in (" || psCanton || ") "
.head 7 +  If gsRestrRegion != ''
.head 8 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 -  Call SalTblPopulate( tblCantonPCT, ghSqlMain, lsSelect || "
	Order by 2
	into :tblCantonPCT.colCanton,:tblCantonPCT.colIns ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblCantonPCT, 0,0)
.head 8 -  Call SalTblSetContext( tblCantonPCT, 0)
.head 8 -  Call SalTblSetFocusRow( tblCantonPCT, 0)
.head 8 -  Call SalTblSetRowFlags( tblCantonPCT, 0, ROW_Selected, TRUE)
.head 8 +  ! If cmbCommunePCT != ''
.head 9 -  Call SalSendMsg( pbCommunePCT, SAM_Click, 0, 0 )
.head 8 -  ! Else
.head 8 +  If wsCommuneSelect = ''
.head 9 -  Call SalSendMsg( tblCantonPCT,SAM_Click, 0,0)
.head 4 +  Window Variables
.head 5 -  String: sControle
.head 5 -  Number: i
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 -  Call SalDisableWindow( pbGenerePCT )
.head 6 -  Call SalDisableWindow( pbEtiquPCT )
.head 6 -  Call SalDisableWindow( pbPwPCT)
.head 6 -  Call SalEnableWindow( pbModifPCT )
.head 6 -  Call SalEnableWindow( pbModifPCTProv )
.head 6 -  Set wsCommuneSelectPCT = ''
.head 6 +  If wParam != -1
.head 7 -  Set cmbCommunePCT = ''
.head 6 -  Call SalTblReset( tblCommunePCT )
.head 6 -  Call SalTblReset( tblPcTot )
.head 6 -  Set mlPCT = ''
.head 6 +  If SalTblAnyRows( tblCantonPCT, ROW_Selected, 0)
.head 7 -  Call tblCommunePCT.PalPopulateCommune( gsRestrCom )
.head 7 +  If wParam != -1
.head 8 -  Set wsCommuneSelect = SalNumberToStrX( tblCommunePCT.colIns, 0)
.head 8 -  Set wsCommuneEnCours = tblCommunePCT.colCanton
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCantonPCT.colCanton = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select com_nom_n  from commune
	where Com_ins = :tblCantonPCT.colIns
	Into :tblCantonPCT.colCanton ")
.head 7 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 6 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT), ROW_New, FALSE )
.head 6 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT), ROW_Edited, FALSE )
.head 6 +  If wsScrutinEl = '1'
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where can_ins = :tblCantonPCT.colIns and @upper(@left(pct_statut,4)) ='ECR.' ")
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where can_ins = :tblCantonPCT.colIns and pct_statut is not null ")
.head 6 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where can_ins = :tblCantonPCT.colIns and (@upper(@left(pct_statut,4)) !='ECR.' or pct_statut is null ) ")
.head 7 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 8 -  Call VisTblSetRowColor( tblCantonPCT, SalTblQueryContext( tblCantonPCT) , COLOR_Blue )
.head 8 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT), ROW_New, TRUE )
.head 7 +  Else
.head 8 -  Call VisTblSetRowColor( tblCantonPCT, SalTblQueryContext( tblCantonPCT) , COLOR_Red )
.head 8 -  !
.head 8 +  If NOT PalDtmCtrl( 'PCT', tblCantonPCT.colIns, 'CAN' )
.head 9 -  Call VisTblSetRowColor( tblCantonPCT , SalTblQueryContext( tblCantonPCT) , COLOR_DarkGreen )
.head 9 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT), ROW_Edited, TRUE )
.head 8 -  !
.head 6 +  Else
.head 7 -  Call VisTblSetRowColor( tblCantonPCT, SalTblQueryContext( tblCantonPCT) , COLOR_DarkGray )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Child Table: tblCommunePCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.883"
.head 6 -  Top: 1.238"
.head 6 -  Width:  3.433"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 6.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 700
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommunePCT.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Commune
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.867"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommunePCT.colCanton, 'Gemeente' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsPro
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsDis
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNbPcTot
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNbPcTotProv
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateCommune
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 6 +  Actions
.head 7 -  Set mlPCT = ''
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select " || wsLabelCommune2 || "  , com_ins, can_ins , PRO_INS, DIS_INS, COM_NB_PCTOT, CAN_NB_PC_TOT,  @decode( com_ins , can_ins, '', com_ins) 
	 from commune A
	where Can_ins = :tblCantonPCT.colIns "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select " || wsLabelCommune2 || "  , A.com_ins, A.can_ins , A.PRO_INS, A.DIS_INS, B.CAN_NB_PC_TOT, B.CAN_NB_PC_TOT,  @decode( A.com_ins , A.can_ins, '', A.com_ins)  
	from commune A, Base_commune B
	where A.Can_ins = :tblCantonPCT.colIns and A.com_ins = A.can_ins  and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || psCanton || ") "
.head 7 -  Call SalTblPopulate( tblCommunePCT, ghSqlSecondaire, lsSelect || "
	Order by 8,2
	into :tblCommunePCT.colCanton,:tblCommunePCT.colIns,:tblCommunePCT.colInsCanton,:tblCommunePCT.colInsPro,:tblCommunePCT.colInsDis,:tblCommunePCT.colNbPcTot,:tblCommunePCT.colNbPcTotProv", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblCommunePCT, 0,0)
.head 8 -  Call SalTblSetContext( tblCommunePCT, 0)
.head 8 -  Call SalTblSetFocusRow( tblCommunePCT, 0)
.head 8 -  Call SalTblSetRowFlags( tblCommunePCT, 0, ROW_Selected, TRUE)
.head 8 -  Call SalSendMsg( tblCommunePCT,SAM_Click, 0,0)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 -  Set wsCommuneSelectPCT = ''
.head 6 -  Call SWTabsHideWindow( picTabs, pbModifPCT )
.head 6 -  Call SWTabsHideWindow( picTabs, pbModifPCTProv )
.head 6 +  ! If wParam != -2
.head 7 -  Set cmbCommunePCT = ''
.head 6 -  Set cmbCommunePCT = SalNumberToStrX( tblCommunePCT.colIns, 0) || ' - ' || tblCommunePCT.colCanton
.head 6 +  If SalTblAnyRows( tblCommunePCT, ROW_Selected, 0)
.head 7 -  Set wsCommuneSelectPCT = SalNumberToStrX( tblCommunePCT.colIns, 0) || ' - ' || tblCommunePCT.colCanton
.head 7 +  If wParam != -1
.head 8 +  If tblCommunePCT.colIns = tblCantonPCT.colIns and wsScrutinEl = '1'
.head 9 -  Call tblPcTotProv.PalPopulatePCT( gsRestrCom )
.head 8 +  Else
.head 9 -  Call SalTblReset( tblPcTotProv )
.head 8 -  Call tblPcTot.PalPopulatePCT( gsRestrCom )
.head 7 +  If (tblCommunePCT.colIns = tblCantonPCT.colIns and SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns,0) , 2) != '21') and  wsScrutinEl = '1'
.head 8 -  Call SalShowWindowAndLabel( tblPcTotProv )
.head 8 -  Call SalSetWindowSize( tblPcTot, wnWidthTbl, wnHeightTbl / 2 )
.head 7 +  Else
.head 8 -  Call SalHideWindowAndLabel( tblPcTotProv )
.head 8 -  Call SalSetWindowSize( tblPcTot, wnWidthTbl, wnHeightTbl )
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCommunePCT.colCanton = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select com_nom_n  from commune
	where Com_ins = :tblCommunePCT.colIns
	Into :tblCommunePCT.colCanton ")
.head 7 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 6 -  Call SalTblSetRowFlags( tblCommunePCT, SalTblQueryContext( tblCommunePCT), ROW_Edited, FALSE )
.head 6 -  Call SalTblSetRowFlags( tblCommunePCT, SalTblQueryContext( tblCommunePCT), ROW_New, FALSE )
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :tblCommunePCT.colIns ")
.head 6 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :tblCommunePCT.colIns and (bv_valide != 1 or bv_statut is null or 
				@upper(@left(bv_statut,4)) != 'ECR.' or bv_codebak = '' or bv_clef1= '' or bv_clef2= '' or 
				bv_codemac = '' or bv_codebak is null or bv_clef1 is null or bv_clef2 is null or bv_codemac is null  ) ")
.head 7 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and (pct_statut is null or 
				@upper(@left(pct_statut,4)) != 'ECR.' or pct_codebak = '' or pct_clef1= '' or pct_clef2= '' or 
				pct_codemac = '' or pct_codebak is null or pct_clef1 is null or pct_clef2 is null or pct_codemac is null  ) ")
.head 8 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 9 -  Call VisTblSetRowColor( tblCommunePCT, SalTblQueryContext( tblCommunePCT) , COLOR_Red )
.head 9 -  Call SalTblSetRowFlags( tblCommunePCT, SalTblQueryContext( tblCommunePCT), ROW_Edited, TRUE )
.head 8 +  Else
.head 9 -  Call VisTblSetRowColor( tblCommunePCT, SalTblQueryContext( tblCommunePCT) , COLOR_Blue )
.head 9 -  Call SalTblSetRowFlags( tblCommunePCT, SalTblQueryContext( tblCommunePCT), ROW_New, TRUE )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbVisuPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65330000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 4.683"
.head 5 -  Top: 7.571"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonPCT, ROW_Selected, 0) and SalTblAnyRows( tblCommunePCT , ROW_Selected ,0)
.head 7 -  Call PalVisuPCT( 0 )
.head 3 -  Background Text: Pc de totalisation niveau communal
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65330000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Resource Id: 4391
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.783"
.head 5 -  Top: 1.095"
.head 5 -  Width:  5.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Red
.head 4 -  Background Color: Gray
.head 3 +  Child Table: tblPcTot
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.383"
.head 6 -  Top: 1.238"
.head 6 -  Width:  8.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 4.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 100
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.55"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colNoPCT, 'Nr' )
.head 5 +  Column: colNomPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nom
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.65"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colNomPCT, 'Naam' )
.head 5 +  Column: colStatutPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Statut
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.9"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colStatutPCT, 'Status' )
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.217"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colUser
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Qui ?
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.583"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colUser, 'Wie ?' )
.head 5 +  Column: colPresPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Président
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.55"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colPresPCT, 'Voorzitter' )
.head 5 +  Column: colNoEcrit
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCtrl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ctrl
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colCtrl, 'Ctrl' )
.head 4 +  Functions
.head 5 +  Function: PalPopulatePCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsDesc
.head 7 -  String: lsInsert
.head 7 -  String: lsPres
.head 7 -  String: lsTitre
.head 7 -  String: lsAdr
.head 7 -  String: lsLoc
.head 7 -  String: lsCP
.head 7 -  String: lsNoPct
.head 7 -  Number: lnI
.head 7 -  Number: lnNbpctot
.head 6 +  Actions
.head 7 -  Set lnNbpctot = 0
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select count(*) from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'COM' "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select count(*) from pc_tot
	where com_ins = :tblCommunePCT.colIns "
.head 7 -  Set lsSelect = lsSelect || "
	Into :lnNbpctot "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select * from pc_tot where Pct_statut is not null
	and com_ins = :tblCommunePCT.colIns  and pct_type = 'COM' "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select * from pc_tot where Pct_statut is not null
	and com_ins = :tblCommunePCT.colIns "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If Not SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If lnNbpctot != tblCommunePCT.colNbPcTot
.head 9 -  Set lsPres = ''
.head 9 -  Set lsAdr = ''
.head 9 -  Set lsLoc = ''
.head 9 -  Set lsCP = ''
.head 9 +  If wsScrutinEl = '1'
.head 10 -  Set lsSelect = "Select pct_President,pct_adresse, pct_localite, Pct_code_postal 
	from pc_tot
	where com_ins = :tblCommunePCT.colIns  and pct_type = 'COM'
	Into :lsPres, :lsAdr, :lsLoc, :lsCP"
.head 9 +  Else If wsScrutinEl = '2'
.head 10 -  Set lsSelect = "Select pct_President,pct_adresse, pct_localite, Pct_code_postal 
	from pc_tot
	where com_ins = :tblCommunePCT.colIns
	Into :lsPres, :lsAdr, :lsLoc, :lsCP"
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 +  If wsScrutinEl = '1'
.head 10 -  Set lsSelect = "Delete from Pc_Tot where com_ins = :tblCommunePCT.colIns and pct_type = 'COM'   "
.head 9 +  Else If wsScrutinEl = '2'
.head 10 -  Set lsSelect = "Delete from Pc_Tot where com_ins = :tblCommunePCT.colIns  "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set lnI = 1
.head 9 +  While lnI <= tblCommunePCT.colNbPcTot
.head 10 +  If wsScrutinEl = '1'
.head 11 +  If gnTypeVote = 1 and SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) != '21'
.head 12 -  Set lsDesc = 'PC COM. '|| SalNumberToStrX( lnI , 0)
.head 11 +  Else If gnTypeVote = 1 and SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '21'
.head 12 -  Set lsDesc = 'PC  '|| SalNumberToStrX( lnI , 0)
.head 11 +  Else
.head 12 -  Set lsDesc = 'BUR. COM. '|| SalNumberToStrX( lnI , 0)
.head 11 -  Set lsSelect = "Insert into Pc_Tot ( PRO_INS, DIS_INS, CAN_INS ,COM_INS,pct_no, pct_DESCRIPTION, pct_President,pct_adresse, pct_localite, Pct_code_postal , pct_type )
	values (:tblCommunePCT.colInsPro,:tblCommunePCT.colInsDis,:tblCommunePCT.colInsCanton,:tblCommunePCT.colIns, :lnI , :lsDesc, :lsPres,:lsAdr,:lsLoc,:lsCP, 'COM' ) "
.head 10 +  Else If wsScrutinEl = '2'
.head 11 -  Set lsDesc = 'PC  '|| SalNumberToStrX( lnI , 0)
.head 11 -  Set lsSelect = "Insert into Pc_Tot ( PRO_INS, DIS_INS, CAN_INS ,COM_INS,pct_no, pct_DESCRIPTION, pct_President,pct_adresse, pct_localite, Pct_code_postal , pct_type )
	values (:tblCommunePCT.colInsPro,:tblCommunePCT.colInsDis,:tblCommunePCT.colInsCanton,:tblCommunePCT.colIns, :lnI , :lsDesc, :lsPres,:lsAdr,:lsLoc,:lsCP, '' ) "
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 10 -  Set lnI = lnI +1
.head 9 -  Call SqlCommit( ghSqlMain )
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'COM'  "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns  "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and can_INS in (" || psCanton || ") "
.head 7 -  Call SalTblPopulate( tblPcTot, ghSqlTertiaire, lsSelect || "
	Order by 7
	into :tblPcTot.colNoPCT,:tblPcTot.colNomPCT, :tblPcTot.colPresPCT,:tblPcTot.colStatut,:tblPcTot.colUser,:tblPcTot.colNoEcrit, :lsNoPct ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblPcTot, 0,0)
.head 8 -  Call SalTblSetContext( tblPcTot, 0)
.head 8 -  Call SalTblSetFocusRow( tblPcTot, 0)
.head 8 -  Call SalTblSetRowFlags( tblPcTot, 0, ROW_Selected, TRUE)
.head 8 -  Call SalSendMsg( tblPcTot,SAM_Click, 0,0)
.head 5 +  Function: PalPopulateML_PCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsNo
.head 7 -  String: lsNom
.head 7 -  String: lsTitre
.head 7 -  String: lsAdresse
.head 7 -  String: lsPres
.head 7 -  String: lsLoc
.head 7 -  String: lsCP
.head 7 -  String: lsPcTot
.head 6 +  Actions
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_Adresse, pct_localite, pct_code_postal from PC_TOT
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTot.colNoPCT and pct_type = 'COM'
	Into :lsNo, :lsNom, :lsPres, :lsAdresse, :lsLoc, :lsCP "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_Adresse, pct_localite, pct_code_postal from PC_TOT
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTot.colNoPCT
	Into :lsNo, :lsNom, :lsPres, :lsAdresse, :lsLoc, :lsCP "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set mlPCT = ''
.head 8 +  If gnTypeVote = 1
.head 9 +  If wsScrutinEl = '1'
.head 10 +  If gsLangueSoft = 'N'
.head 11 -  Set lsTitre = 'Totalisatie PC (Gemeente)'
.head 10 +  Else
.head 11 -  Set lsTitre = 'PC de totalisation (Commune)'
.head 9 +  Else If wsScrutinEl = '2'
.head 10 +  If gsLangueSoft = 'N'
.head 11 -  Set lsTitre = 'Totalisatie PC'
.head 10 +  Else
.head 11 -  Set lsTitre = 'PC de totalisation'
.head 8 +  Else
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set lsTitre = 'Gemeente Telbureau'
.head 9 +  Else
.head 10 -  Set lsTitre = 'Bureau de dépouillement communal'
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set mlPCT = lsTitre ||'
Nr. : ' || lsNo ||' - ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Voorzitter : ' || lsPres 
.head 8 +  Else
.head 9 -  Set mlPCT = lsTitre ||'
N° : ' || lsNo ||' - ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Président : ' || lsPres 
.head 5 +  Function: PalRefreshStatutPCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsWhere
.head 7 -  String: tsNoPCT
.head 7 -  String: tsStatut
.head 7 -  String: lsStatut
.head 7 -  String: lsUser
.head 7 -  Number: lnNoEcrit
.head 7 -  Number: tnNb
.head 7 -  Number: tnPrepa
.head 7 -  Number: tnErr
.head 7 -  Number: nRow
.head 7 -  Number: nRowActu
.head 7 -  Number: tnEcr
.head 6 +  Actions
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 -  Set nRowActu = SalTblQueryContext( tblPcTot )
.head 7 -  ! Mise a jour du statut a chaque click des PCT
.head 7 -  Set nRow = -1
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'COM'  "
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set lsSelect = "Select pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns  "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and can_INS in (" || psCanton || ") "
.head 7 -  Set lsSelect = lsSelect || " Order by 4
	into :lsStatut , :lsUser, :lnNoEcrit, :tsNoPCT"
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, lsSelect )
.head 7 +  While SalTblFindNextRow( tblPcTot , nRow , 0 , 0 ) and SqlFetchNext( ghSqlTertiaire , Btmp)
.head 8 -  Call SalTblSetContext( tblPcTot, nRow )
.head 8 +  If tblPcTot.colNoPCT = SalStrToNumber( tsNoPCT )
.head 9 -  Set tblPcTot.colStatut = lsStatut
.head 9 -  Set tblPcTot.colNoEcrit = lnNoEcrit
.head 9 -  Set tblPcTot.colUser = lsUser
.head 9 -  Call SalSendMsg( tblPcTot, SAM_FetchRowDone, 0, 0)
.head 7 -  !
.head 7 -  Call SalTblSetContext( tblPcTot, nRowActu )
.head 7 -  Call SalTblSetFocusRow( tblPcTot, nRowActu )
.head 7 -  !
.head 7 -  Call VisWaitCursor(FALSE)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 6 -  Call SalGetWindowSize( tblPcTot, wnWidthTbl, wnHeightTbl )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 7 +  If SalTblAnyRows( tblPcTotProv, ROW_Selected,0)
.head 8 -  Call SalTblSetFlagsAnyRows( tblPcTotProv, ROW_Selected, FALSE, ROW_Selected, 0 )
.head 7 -  Call SWTabsHideWindow( picTabs, pbModifPCTProv )
.head 7 -  Call SWTabsShowWindow( picTabs, pbModifPCT )
.head 7 -  Call tblPcTot.PalPopulateML_PCT(  )
.head 7 -  Call tblPcTot.PalRefreshStatutPCT( gsRestrCom )
.head 7 -  Call PalVerifEtatPCT( 0 )
.head 7 -  Set wsCantonSelect = SalNumberToStrX( tblCantonPCT.colIns, 0)
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select * from base_commune where type = 'GE' and can_ins = :wsCantonSelect and com_ins = :wsCommuneSelect ")
.head 7 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 8 -  Set wsCommuneSelect = wsCantonSelect
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 -  Call PalVerifEtatPCT( 0 ) 
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  Background Text: Pc de totalisation niveau cantonal (élections provinciales)
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4392
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.783"
.head 5 -  Top: 3.512"
.head 5 -  Width:  5.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Red
.head 4 -  Background Color: Gray
.head 3 +  Child Table: tblPcTotProv
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.383"
.head 6 -  Top: 3.655"
.head 6 -  Width:  8.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.083"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 100
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.55"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  ! << 9.05b
.head 9 -  ! Call SalTblSetColumnTitle( tblPcTot.colNoPCT, 'Nr' )
.head 9 -  Call SalTblSetColumnTitle( tblPcTotProv.colNoPCT, 'Nr' )
.head 9 -  ! >> 9.05b
.head 5 +  Column: colNomPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nom
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.65"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  ! << 9.05b
.head 9 -  ! Call SalTblSetColumnTitle( tblPcTot.colNomPCT, 'Naam' )
.head 9 -  Call SalTblSetColumnTitle( tblPcTotProv.colNomPCT, 'Naam' )
.head 9 -  ! >> 9.05b
.head 5 +  Column: colStatutPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Statut
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.9"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  ! << 9.05b
.head 9 -  ! Call SalTblSetColumnTitle( tblPcTot.colStatutPCT, 'Status' )
.head 9 -  Call SalTblSetColumnTitle( tblPcTotProv.colStatutPCT, 'Status' )
.head 9 -  ! >> 9.05b
.head 5 +  Column: colStatut
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.217"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colUser
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Qui ?
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.567"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  ! << 9.05b
.head 9 -  ! Call SalTblSetColumnTitle( tblPcTot.colUser, 'Wie ?' )
.head 9 -  Call SalTblSetColumnTitle( tblPcTotProv.colUser, 'Wie ?' )
.head 9 -  ! >> 9.05b
.head 5 +  Column: colPresPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Président
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  3.55"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblPcTot.colPresPCT, 'Voorzitter' )
.head 5 +  Column: colNoEcrit
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCtrl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ctrl
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblBureauVote.colCtrl, 'Ctrl' )
.head 4 +  Functions
.head 5 +  Function: PalPopulatePCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsDesc
.head 7 -  String: lsInsert
.head 7 -  String: lsPres
.head 7 -  String: lsAdr
.head 7 -  String: lsLoc
.head 7 -  String: lsCP
.head 7 -  String: lsNoPct
.head 7 -  Number: lnI
.head 7 -  Number: lnNbpctot
.head 6 +  Actions
.head 7 -  Set lnNbpctot = 0
.head 7 -  Set lsSelect = "Select count(*) from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'CAN' "
.head 7 -  Set lsSelect = lsSelect || "
	Into :lnNbpctot "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set lsSelect = "Select * from pc_tot where Pct_statut is not null
	and com_ins = :tblCommunePCT.colIns and pct_type = 'CAN' "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If Not SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If lnNbpctot != tblCommunePCT.colNbPcTotProv
.head 9 -  Set lsPres = ''
.head 9 -  Set lsAdr = ''
.head 9 -  Set lsLoc = ''
.head 9 -  Set lsCP = ''
.head 9 -  Set lsSelect = "Select pct_President,pct_adresse, pct_localite, Pct_code_postal 
	from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'CAN' 
	Into :lsPres, :lsAdr, :lsLoc, :lsCP"
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set lsSelect = "Delete from Pc_Tot where com_ins = :tblCommunePCT.colIns  and pct_type = 'CAN'  "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set lnI = 1
.head 9 +  While lnI <= tblCommunePCT.colNbPcTotProv
.head 10 +  If gnTypeVote = 1
.head 11 -  Set lsDesc = 'PC CAN. '|| SalNumberToStrX( lnI , 0)
.head 10 +  Else
.head 11 -  Set lsDesc = 'BUR. CAN.  '|| SalNumberToStrX( lnI , 0)
.head 10 -  Set lsSelect = "Insert into Pc_Tot ( PRO_INS, DIS_INS, CAN_INS ,COM_INS,pct_no, pct_DESCRIPTION, pct_President,pct_adresse, pct_localite, Pct_code_postal, pct_type  )
	values (:tblCommunePCT.colInsPro,:tblCommunePCT.colInsDis,:tblCommunePCT.colInsCanton,:tblCommunePCT.colIns, :lnI , :lsDesc, :lsPres,:lsAdr,:lsLoc,:lsCP , 'CAN' ) "
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 10 -  Set lnI = lnI +1
.head 9 -  Call SqlCommit( ghSqlMain )
.head 7 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'CAN'  "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and can_INS in (" || psCanton || ") "
.head 7 -  Call SalTblPopulate( tblPcTotProv, ghSqlTertiaire, lsSelect || "
	Order by 7
	into :tblPcTotProv.colNoPCT,:tblPcTotProv.colNomPCT, :tblPcTotProv.colPresPCT,:tblPcTotProv.colStatut,:tblPcTotProv.colUser,:tblPcTotProv.colNoEcrit, :lsNoPct ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblPcTotProv, 0,0)
.head 8 -  Call SalTblSetContext( tblPcTotProv, 0)
.head 8 -  Call SalTblSetFocusRow( tblPcTotProv, 0)
.head 8 -  Call SalTblSetRowFlags( tblPcTotProv, 0, ROW_Selected, TRUE)
.head 8 -  Call SalSendMsg( tblPcTotProv,SAM_Click, 0,0)
.head 8 +  If SalTblAnyRows( tblPcTot, 0,0)
.head 9 -  Call SalTblSetContext( tblPcTot, 0)
.head 9 -  Call SalTblSetFocusRow( tblPcTot, 0)
.head 9 -  Call SalTblSetRowFlags( tblPcTot, 0, ROW_Selected, TRUE)
.head 9 -  Call SalSendMsg( tblPcTot,SAM_Click, 0,0)
.head 5 +  Function: PalPopulateML_PCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsNo
.head 7 -  String: lsNom
.head 7 -  String: lsTitre
.head 7 -  String: lsAdresse
.head 7 -  String: lsPres
.head 7 -  String: lsLoc
.head 7 -  String: lsCP
.head 7 -  String: lsPcTot
.head 6 +  Actions
.head 7 -  Set lsSelect = "Select pct_no, pct_DESCRIPTION, pct_President, pct_Adresse, pct_localite, pct_code_postal from PC_TOT
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTotProv.colNoPCT and pct_type = 'CAN' 
	Into :lsNo, :lsNom, :lsPres, :lsAdresse, :lsLoc, :lsCP "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set mlPCT = ''
.head 8 +  If gnTypeVote = 1
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set lsTitre = 'Totalisatie PC (Kanton)'
.head 9 +  Else
.head 10 -  Set lsTitre = 'PC de totalisation (Canton)'
.head 8 +  Else
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set lsTitre = 'Provincial Telbureau'
.head 9 +  Else
.head 10 -  Set lsTitre = 'Bureau de dépouillement provincial'
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set mlPCT = lsTitre || '
Nr. : ' || lsNo ||' - ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Voorzitter : ' || lsPres 
.head 8 +  Else
.head 9 -  Set mlPCT = lsTitre ||'
N° : ' || lsNo ||' - ' || lsNom ||'
	' || lsAdresse ||'
	' || lsCP || ' ' || lsLoc ||'
Président : ' || lsPres 
.head 5 +  Function: PalRefreshStatutPCT
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsWhere
.head 7 -  String: tsNoPCT
.head 7 -  String: tsStatut
.head 7 -  String: lsStatut
.head 7 -  String: lsUser
.head 7 -  Number: lnNoEcrit
.head 7 -  Number: tnNb
.head 7 -  Number: tnPrepa
.head 7 -  Number: tnErr
.head 7 -  Number: nRow
.head 7 -  Number: nRowActu
.head 7 -  Number: tnEcr
.head 6 +  Actions
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 -  Set nRowActu = SalTblQueryContext( tblPcTotProv )
.head 7 -  ! Mise a jour du statut a chaque click des PCT
.head 7 -  Set nRow = -1
.head 7 -  Set lsSelect = "Select pct_statut, pct_createur, pct_noEcrit, @right('000' || pct_no, 3) 
	 from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_type = 'CAN' "
.head 7 +  If psCanton != ''
.head 8 -  Set lsSelect = lsSelect || " and can_INS in (" || psCanton || ") "
.head 7 -  Set lsSelect = lsSelect || " Order by 4
	into :lsStatut , :lsUser, :lnNoEcrit, :tsNoPCT"
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, lsSelect )
.head 7 +  While SalTblFindNextRow( tblPcTotProv , nRow , 0 , 0 ) and SqlFetchNext( ghSqlTertiaire , Btmp)
.head 8 -  Call SalTblSetContext( tblPcTotProv, nRow )
.head 8 +  If tblPcTotProv.colNoPCT = SalStrToNumber( tsNoPCT )
.head 9 -  Set tblPcTotProv.colStatut = lsStatut
.head 9 -  Set tblPcTotProv.colNoEcrit = lnNoEcrit
.head 9 -  Set tblPcTotProv.colUser = lsUser
.head 9 -  Call SalSendMsg( tblPcTotProv, SAM_FetchRowDone, 0, 0)
.head 7 -  !
.head 7 -  Call SalTblSetContext( tblPcTotProv, nRowActu )
.head 7 -  Call SalTblSetFocusRow( tblPcTotProv, nRowActu )
.head 7 -  !
.head 7 -  Call VisWaitCursor(FALSE)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblPcTotProv, ROW_Selected, 0)
.head 7 +  If SalTblAnyRows( tblPcTot, ROW_Selected,0)
.head 8 -  Call SalTblSetFlagsAnyRows( tblPcTot, ROW_Selected, FALSE, ROW_Selected, 0 )
.head 7 -  Call SWTabsHideWindow( picTabs, pbModifPCT )
.head 7 -  Call SWTabsShowWindow( picTabs, pbModifPCTProv )
.head 7 -  Call tblPcTotProv.PalPopulateML_PCT(  )
.head 7 -  Call tblPcTotProv.PalRefreshStatutPCT( gsRestrCom )
.head 7 -  Call PalVerifEtatPCT( 0 )
.head 7 -  Set wsCantonSelect = SalNumberToStrX( tblCantonPCT.colIns, 0)
.head 7 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "Select * from base_commune where type = 'GE' and can_ins = :wsCantonSelect and com_ins = :wsCommuneSelect ")
.head 7 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp )
.head 8 -  Set wsCommuneSelect = wsCantonSelect
.head 5 +  On SAM_RowHeaderClick
.head 6 -  Call SalSendMsg(hWndItem, SAM_Click, 0,0)
.head 5 +  On SAM_FetchRowDone
.head 6 -  Call PalVerifEtatPCT( 0 ) 
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbGenerePCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Création des disquettes Pc Tot.
.head 4 -  Window Location and Size
.head 5 -  Left: 7.75"
.head 5 -  Top: 7.595"
.head 5 -  Width:  3.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Aanmaak Tot. PC Diskettes' )
.head 5 +  On SAM_Click
.head 6 +  If NOT gbCreateDisk
.head 7 +  If SalMessageBox( PalTraductMsg( 'ID01' ), PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 8 -  Call SalModalDialog( dlgLecteurs, hWndForm )
.head 7 +  Else
.head 8 -  Set gbCreateDisk = TRUE
.head 6 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0) or SalTblAnyRows( tblPcTotProv, ROW_Selected, 0) 
.head 7 +  If SalStrLength( wlsMoveMouse ) < 550 or SalStrLength( wsPWRandom ) < 8
.head 8 +  If Not  wbControleMouse
.head 9 -  Call SalCreateWindow( dlgMouseMove, hWndForm )
.head 8 +  Else
.head 9 -  Call SalCenterWindow( dlgMouseMove )
.head 9 -  Call SalBringWindowToTop( dlgMouseMove )
.head 7 +  Else
.head 8 -  Set wbCapteMouseMove = FALSE
.head 8 -  Call PalGenereDiskPCT()
.head 8 -  Set wbCapteMouseMove = TRUE
.head 8 -  Call SalSendMsg( tblCantonPCT, SAM_FetchRowDone, 0, 0)
.head 3 +  Pushbutton: pbEtiquPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Etiquettes
.head 4 -  Window Location and Size
.head 5 -  Left: 10.85"
.head 5 -  Top: 7.595"
.head 5 -  Width:  1.733"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Aanmaak Labels' )
.head 5 +  On SAM_Click
.head 6 +  If (SalTblAnyRows( tblPcTot, ROW_Selected, 0) and SalStrUpperX(SalStrLeftX( tblPcTot.colStatut, 4)) = 'ECR.') OR
  (SalTblAnyRows( tblPcTotProv, ROW_Selected, 0) and SalStrUpperX(SalStrLeftX( tblPcTotProv.colStatut, 4)) = 'ECR.' )
.head 7 -  Call PalCreationEtiquettePCT()
.head 3 +  Check Box: cbPrintPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Impression directe
.head 4 -  Window Location and Size
.head 5 -  Left: 10.85"
.head 5 -  Top: 8.179"
.head 5 -  Width:  2.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = TRUE
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Directe afdruk' )
.head 3 +  Pushbutton: pbPwPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Mots de passe
.head 4 -  Window Location and Size
.head 5 -  Left: 12.65"
.head 5 -  Top: 7.595"
.head 5 -  Width:  1.833"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Wachtwoorden' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonPCT, ROW_Selected, 0) and SalTblAnyRows( tblCommunePCT , ROW_Selected ,0)
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  ! Trace
.head 8 +  If gsUserEID= '1' and gsTmp != ''
.head 9 -  Set gsTmp = ' - EID: ' || gsTmp
.head 8 +  Else
.head 9 -  Set gsTmp = ''
.head 8 -  Call PalTraceAction( gsUserLog, "PW PCT_BV", 'INS: ' || SalNumberToStrX( tblCommunePCT.colIns, 0) || gsTmp )
.head 8 -  !
.head 8 -  Call PalVisuPCT( 1 )
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 3 +  Multiline Field: mlPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 7.383"
.head 6 -  Top: 5.738"
.head 6 -  Width:  8.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: 12
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 +  Pushbutton: pbModifPCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 15.883"
.head 5 -  Top: 2.238"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resModif, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCommunePCT, ROW_Selected, 0) and SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgModifPCT , hWndForm, tblCommunePCT.colIns, tblCommunePCT.colInsCanton, tblCommunePCT.colInsDis,tblCommunePCT.colInsPro, tblPcTot.colNoPCT , 'COM')
.head 7 -  Call SalSendMsg( tblCommunePCT,SAM_Click, 0,0)
.head 3 +  Pushbutton: pbModifPCTProv
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 15.883"
.head 5 -  Top: 4.321"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resModif, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCommunePCT, ROW_Selected, 0) and SalTblAnyRows( tblPcTotProv, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgModifPCT , hWndForm, tblCommunePCT.colIns, tblCommunePCT.colInsCanton, tblCommunePCT.colInsDis,tblCommunePCT.colInsPro, tblPcTotProv.colNoPCT , 'CAN')
.head 7 -  Call SalSendMsg( tblCommunePCT,SAM_Click, 0,0)
.head 3 +  Pushbutton: pbRecipisseBureau
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 14.583"
.head 5 -  Top: 7.595"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resContrat, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 -  Call SalModalDialog( dlgRecepisse, hWndForm, tblCommunePCT.colIns )
.head 3 -  ! Tabs 3: Utilitaires
.head 3 +  Pushbutton: pbIdentification
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65340000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 12.783"
.head 5 -  Top: 1.405"
.head 5 -  Width:  2.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.75"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalIdentificationDisk()
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft='N'
.head 7 -  Call SalPicSet( hWndItem, resIdVerifNL ,  PIC_FormatBitmap )
.head 6 +  Else
.head 7 -  Call SalPicSet( hWndItem, resIdVerif,  PIC_FormatBitmap )
.head 3 -  Frame
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65340000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Resource Id: 4393
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.483"
.head 5 -  Top: 4.988"
.head 5 -  Width:  5.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.0"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Corners: Square
.head 4 -  Border Style: Raised-Shadow
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: 3D Shadow Color
.head 4 -  Background Color: Default
.head 3 +  Picture: picDisk1
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65340000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.483"
.head 5 -  Top: 0.988"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDisk[1] = hWndItem
.head 3 -  Background Text: Lecteur 1
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65340000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Resource Id: 4394
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.183"
.head 5 -  Top: 1.131"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.274"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 12
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Gray
.head 3 +  Multiline Field: mlDisk1
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65340000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left: 1.583"
.head 6 -  Top: 1.488"
.head 6 -  Width:  5.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.833"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Black
.head 5 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnMlDisk[1] = SalWindowHandleToNumber( hWndItem )
.head 6 +  If gsLangueSoft= 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lezer 1 (' || gsLecteur[1] ||')' )
.head 6 +  Else
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lecteur 1 (' || gsLecteur[1] ||')' )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  Frame
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4395
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.983"
.head 5 -  Top: 1.405"
.head 5 -  Width:  5.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.0"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Corners: Square
.head 4 -  Border Style: Raised-Shadow
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: 3D Shadow Color
.head 4 -  Background Color: Default
.head 3 +  Picture: picDisk2
.data CLASSPROPSSIZE
0000: 1900
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.983"
.head 5 -  Top: 0.988"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDisk[2] = hWndItem
.head 3 -  Background Text: Lecteur 2
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4396
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.683"
.head 5 -  Top: 1.131"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.274"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 12
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Gray
.head 3 +  Multiline Field: mlDisk2
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left: 7.083"
.head 6 -  Top: 1.488"
.head 6 -  Width:  5.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.833"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Black
.head 5 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnMlDisk[2] = SalWindowHandleToNumber( hWndItem )
.head 6 +  If gsLangueSoft= 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lezer 2 (' || gsLecteur[2] ||')' )
.head 6 +  Else
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lecteur 2 (' || gsLecteur[2] ||')' )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  Frame
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4397
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.483"
.head 5 -  Top: 1.405"
.head 5 -  Width:  5.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.0"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Corners: Square
.head 4 -  Border Style: Raised-Shadow
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: 3D Shadow Color
.head 4 -  Background Color: Default
.head 3 +  Picture: picDisk3
.data CLASSPROPSSIZE
0000: 1900
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.483"
.head 5 -  Top: 4.571"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDisk[3] = hWndItem
.head 3 -  Background Text: Lecteur 3
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4398
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.383"
.head 5 -  Top: 4.714"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.274"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 12
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Gray
.head 3 +  Multiline Field: mlDisk3
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left: 1.583"
.head 6 -  Top: 5.071"
.head 6 -  Width:  5.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.833"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Black
.head 5 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnMlDisk[3] = SalWindowHandleToNumber( hWndItem )
.head 6 +  If gsLangueSoft= 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lezer 3 (' || gsLecteur[3] ||')' )
.head 6 +  Else
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lecteur 3 (' || gsLecteur[3] ||')' )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  Frame
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4399
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.983"
.head 5 -  Top: 4.988"
.head 5 -  Width:  5.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.0"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Corners: Square
.head 4 -  Border Style: Raised-Shadow
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: 3D Shadow Color
.head 4 -  Background Color: Default
.head 3 +  Picture: picDisk4
.data CLASSPROPSSIZE
0000: 1900
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.983"
.head 5 -  Top: 4.571"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Gray
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDisk[4] = hWndItem
.head 3 -  Background Text: Lecteur 4
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Resource Id: 4400
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.783"
.head 5 -  Top: 4.714"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.274"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: 12
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Gray
.head 3 +  Multiline Field: mlDisk4
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6534000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  String Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? No
.head 5 -  Window Location and Size
.head 6 -  Left: 7.083"
.head 6 -  Top: 5.071"
.head 6 -  Width:  5.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.833"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Black
.head 5 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnMlDisk[4] = SalWindowHandleToNumber( hWndItem )
.head 6 +  If gsLangueSoft= 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lezer 4 (' || gsLecteur[4] ||')' )
.head 6 +  Else
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Lecteur 4 (' || gsLecteur[4] ||')' )
.head 5 +  On WM_MOUSEMOVE
.head 6 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 3 -  ! !
.head 3 -  ! ! Pb pour devalidés des listes ou des BV
.head 3 +  Pushbutton: pbDeValidListe
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.583"
.head 5 -  Top: 8.738"
.head 5 -  Width:  0.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SWTabsHideWindow( picTabs, pbDeValidListe )
.head 6 -  Call VisWinLoadAccelerator( pbDeValidListe, SAM_Click, KDS_AltCtrl, VK_F11, 0)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0 ) and  NOT SalIsWindowEnabled( pbValidListe ) and wnTabActif = 0
.head 7 -  Set wsInsSelect = tblFichier.colIns
.head 7 -  Call PalValidateListe( tblFichier.colIns, tblFichier.colTypeEl , NUMBER_Null, NUMBER_Null, TRUE, wsTmp )
.head 7 +  If SalIsWindowVisible( cmbCanton )
.head 8 -  Call SalSendMsg( cmbCanton, SAM_Click, 0, 0)
.head 7 +  Else
.head 8 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0)
.head 7 -  Call PalSelectLigne( tblFichier, tblFichier.colIns, wsInsSelect)
.head 3 +  Pushbutton: pbDeValidBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data CLASSPROPSSIZE
0000: 1700
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.383"
.head 5 -  Top: 9.238"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SWTabsHideWindow( picTabs, pbDeValidBV )
.head 6 -  Call VisWinLoadAccelerator( pbDeValidBV, SAM_Click, KDS_AltCtrl, VK_F12, 0)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV , 0,0)  and  NOT SalIsWindowEnabled( pbValidBV )  and wnTabActif = 1
.head 7 -  Set wsInsSelect = SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 7 -  Call PalValidBV( NUMBER_Null , SalNumberToStrX( tblCantonBV.colIns, 0), TRUE, wsTmp )
.head 7 -  Call SalSendMsg( tblCommuneBV,SAM_Click, 0,0)
.head 7 -  Call tblCommuneBV.PalPopulateCommune( gsRestrCom)
.head 7 -  Call PalSelectLigne( tblCommuneBV, tblCommuneBV.colIns, wsInsSelect)
.head 7 -  Call PalVerifValidCantonBV()
.head 7 -  Call PalVerifGenereDiskBV()
.head 3 -  ! ! ! Pb pour libérer le statut
.head 3 +  Pushbutton: pbLibereBV
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6531000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Libère BV
.head 4 -  Window Location and Size
.head 5 -  Left: 15.083"
.head 5 -  Top: 7.321"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SWTabsHideWindow( picTabs, pbLibereBV )
.head 6 -  Call VisWinLoadAccelerator( pbLibereBV, SAM_Click, KDS_AltCtrl, VK_F5, 0)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonBV, ROW_Selected, 0) and SalTblAnyRows( tblCommuneBV , 0,0)  and
	SalTblAnyRows( tblBureauVote , ROW_Selected, 0) and SalStrLeftX( tblBureauVote.colStatut, 4) = 'PREP' and wnTabActif = 1
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  Call PalLibereBV(gsTmp)
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 3 +  Pushbutton: pbLiberePCT
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6533000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Libère PCTTOT
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 7.988"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SWTabsHideWindow( picTabs, pbLiberePCT )
.head 6 -  Call VisWinLoadAccelerator( pbLiberePCT, SAM_Click, KDS_AltCtrl, VK_F6, 0)
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonPCT, ROW_Selected, 0) and SalTblAnyRows( tblCommunePCT , 0,0)  and
	( (SalTblAnyRows( tblPcTot , ROW_Selected, 0) and SalStrLeftX( tblPcTot.colStatut, 4) = 'PREP') 
	or (SalTblAnyRows( tblPcTotProv , ROW_Selected, 0) and SalStrLeftX( tblPcTotProv.colStatut, 4) = 'PREP')  )
 and wnTabActif = 2
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 7 +  If wbPWOk
.head 8 -  Call PalLiberePCT(gsTmp)
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 2 +  Functions
.head 3 -  ! Onglets
.head 3 +  Function: TabUserRequest
.head 4 -  Description: Onglets - Action suivant l'activation
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWnd
.head 5 -  Number: nTab
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call SWTabsHideWindow( picTabs, dfLibelleInfo )
.head 5 -  Call SWTabsHideWindow( picTabs, dfInfoClock )
.head 5 -  Call SWTabsHideWindow( picTabs, pbLibereBV )
.head 5 -  Call SWTabsHideWindow( picTabs, pbLiberePCT )
.head 5 -  Set wnTabActif = nTab
.head 5 -  Call PalTraductTabs()
.head 5 +  Select Case wnTabActif
.head 6 +  Case 0
.head 7 -  Set wbCapteMouseMove = TRUE
.head 7 +  ! If SalListQueryCount( cmbElection ) > 0
.head 8 -  Call SalSendMsg( cmbElection, SAM_Click, 0,0)
.head 7 +  If gsUserLog = 'SYSADM'
.head 8 -  Call SalDisableWindow( pbEditCdt )
.head 8 -  Call SalShowWindow( pbEditCdt )
.head 8 -  Call SalDisableWindow( pbEditListe )
.head 8 -  Call SalShowWindow(  pbEditListe )
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbEditCdt )
.head 8 -  Call SWTabsHideWindow( picTabs,  pbEditCdt )
.head 8 -  Call SalDisableWindow( pbEditListe )
.head 8 -  Call SWTabsHideWindow( picTabs,  pbEditListe )
.head 7 +  If NOT wbDemarrage
.head 8 +  If wsCommuneSelect != ''
.head 9 -  Call SalListSetSelect( cmbCommune, SalListSelectString( cmbCommune, -1, wsCommuneEnCours || ' - ' || wsCommuneSelect ) )
.head 9 -  Set wsCommuneSelectPCT= wsCommuneSelect
.head 9 -  Set wsCommuneSelectBV= wsCommuneSelect
.head 9 -  Call SalSendMsg( pbCommune, SAM_Click, -1, 0 )
.head 7 +  Else
.head 8 +  If SalTblAnyRows( tblFichier, ROW_Selected, 0)
.head 9 -  Call SalSendMsg( tblFichier, SAM_Click, 0,0)
.head 7 -  !
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Call SalShowWindow( dfTotCdt )
.head 8 -  Call SalHideWindow( dfTotCdtSup )
.head 7 +  Else
.head 8 -  Call SalHideWindow( dfTotCdt )
.head 8 -  Call SalHideWindow( dfTotCdtSup )
.head 7 -  Call SalPostMsg( tblFichier, SAM_Click , 0,0)
.head 7 -  Break
.head 6 +  Case 1
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Call SWTabsShowWindow( picTabs, cbRobot )
.head 7 +  Else
.head 8 -  Call SWTabsHideWindow( picTabs, cbRobot )
.head 7 -  !
.head 7 -  Set wbCapteMouseMove = TRUE
.head 7 -  Set cmbCommuneBV = ''
.head 7 -  Call tblCantonBV.PalPopulateCanton( gsRestrCom)
.head 7 +  If NOT wbDemarrage
.head 8 +  If wsCommuneSelect != ''
.head 9 -  ! Call SalListSetSelect( cmbCommuneBV, SalListSelectString( cmbCommuneBV, -1, wsCommuneSelect ) )
.head 9 -  Call PalRechercheInsBV( SalStrRightX( wsCommuneSelect,5) )
.head 9 -  Set wsCommuneSelectPCT= wsCommuneSelect
.head 9 -  Set wsCommuneSelectBV= wsCommuneSelect
.head 7 +  ! If wsCommuneSelectPCT != ''
.head 8 -  Call SalSendMsg( cmbCommuneBV, SAM_Click, 0, 0 )
.head 7 +  If wnBVActif != NUMBER_Null
.head 8 -  Call PalSearchBV( wnBVActif )
.head 7 -  Break
.head 6 +  Case 2
.head 7 -  Set wbCapteMouseMove = TRUE
.head 7 -  Call SalDisableWindow( pbRecipisseBureau )
.head 7 -  Set cmbCommunePCT = ''
.head 7 -  Call tblCantonPCT.PalPopulateCanton( gsRestrCom)
.head 7 +  If NOT wbDemarrage
.head 8 +  If wsCommuneSelect != ''
.head 9 -  ! Call SalListSetSelect( cmbCommunePCT, SalListSelectString( cmbCommunePCT, -1, wsCommuneSelect ) )
.head 9 -  Call PalRechercheInsPCT( SalStrRightX( wsCommuneSelect,5) )
.head 9 -  Set wsCommuneSelectPCT= wsCommuneSelect
.head 9 -  Set wsCommuneSelectBV= wsCommuneSelect
.head 7 +  If wsScrutinEl= '2'
.head 8 -  Call SWTabsHideWindowAndLabel( picTabs, tblCommunePCT )
.head 8 -  Call SWTabsHideWindowAndLabel( picTabs, tblPcTotProv )
.head 8 -  Call SalSetWindowSize( tblCantonPCT, 6.9, 6.25 )
.head 8 -  Call SalTblSetColumnWidth( tblCantonPCT.colCanton, 5.5 )
.head 8 +  If gsLangueSoft= 'N'
.head 9 -  Call SalSetWindowLabelText( tblPcTot, 'Totalisatie PC' )
.head 8 +  Else
.head 9 -  Call SalSetWindowLabelText( tblPcTot, 'PC de Totalisation' )
.head 7 +  Else If wsScrutinEl = '1'
.head 8 -  Call SWTabsShowWindowAndLabel( picTabs, tblCommunePCT )
.head 8 -  Call SalSetWindowSize( tblCantonPCT, 3.5, 6.25 )
.head 8 -  Call SalTblSetColumnWidth( tblCantonPCT.colCanton, 1.867 )
.head 7 -  Break
.head 6 +  Case 3
.head 7 -  Set wbCapteMouseMove = TRUE
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbLecteur
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Maize	 )
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), '' )
.head 8 +  If gsLangueSoft= 'N'
.head 9 -  Call SalSetWindowLabelText(  SalNumberToWindowHandle( wnMlDisk[i] ), 'Lezer '|| SalNumberToStrX( i, 0) ||' (' || gsLecteur[i] ||')' )
.head 8 +  Else
.head 9 -  Call SalSetWindowLabelText(  SalNumberToWindowHandle( wnMlDisk[i] ), 'Lecteur '|| SalNumberToStrX( i, 0) ||' (' || gsLecteur[i] ||')' )
.head 8 -  Set i  = i + 1
.head 7 -  Break
.head 5 -  Set wbDemarrage = FALSE
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalTraductTabs
.head 4 -  Description: Traduction des onglets
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsTitreTab[*]
.head 5 -  Number: lnI
.head 5 -  Number: lnNbTabs
.head 4 +  Actions
.head 5 -  Set lnNbTabs = 4
.head 5 +  If gsLangueSoft='N'
.head 6 -  Set lsTitreTab[0] = 'Parameters / Lijsten'
.head 6 -  Set lsTitreTab[1] = 'Stembureaus'
.head 6 +  If gnTypeVote = 1
.head 7 -  Set lsTitreTab[2] = 'Totalisatie PC'
.head 6 +  Else
.head 7 -  Set lsTitreTab[2] = 'Telbureaus'
.head 6 -  Set lsTitreTab[3] = 'Hulpmiddelen'
.head 5 +  Else
.head 6 -  Set lsTitreTab[0] = 'Paramètres / Listes'
.head 6 -  Set lsTitreTab[1] = 'Bureaux de vote'
.head 6 +  If gnTypeVote = 1
.head 7 -  Set lsTitreTab[2] = 'PC de totalisation'
.head 6 +  Else
.head 7 -  Set lsTitreTab[2] = 'Bureaux de dépouillement'
.head 6 -  Set lsTitreTab[3] = 'Utilitaires'
.head 5 -  Set lnI = 0
.head 5 +  While lnI < lnNbTabs
.head 6 +  If lnI = wnTabActif
.head 7 -  Call SWTabsSetLabel( picTabs, lnI, SalStrUpperX(lsTitreTab[lnI]), TRUE )
.head 6 +  Else
.head 7 -  Call SWTabsSetLabel( picTabs, lnI, lsTitreTab[lnI], TRUE )
.head 6 -  Set lnI = lnI+1
.head 3 -  ! ! Traduction et paramètres
.head 3 +  Function: TranslateMenu
.head 4 -  Description: Traduction des menus de la fenêtre principale
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nMenu
.head 5 -  Number: i
.head 5 -  Number: j
.head 4 +  Actions
.head 5 -  ! Traduction des menus
.head 5 -  Call LockWindowUpdate( frmGenere )
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  ! Menu Fichier
.head 6 -  Set nMenu = 0
.head 6 -  Call SetMainMenuLanguageText( frmGenere, nMenu, "&File" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 0, "Printer Kiezen" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 2, "Omtrent ..." )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 4, "Sluiten" )
.head 6 -  ! Menu Edition
.head 6 -  Set nMenu = nMenu+1
.head 6 -  Call SetMainMenuLanguageText( frmGenere, nMenu, "&Editie" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 0, "Vertaler van de foutcodes" )
.head 6 +  If gnTypeVote = 1
.head 7 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 2, "Beheer van de kandidaten, stembureaus en totalisatie PC" )
.head 6 +  Else
.head 7 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 2, "Beheer van de kandidaten en telbureaus" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 4, "Automatisch laden van de Formaat F bestanden" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 6, "Aanmaken van een master diskette - Ms-Dos 6.2 Systeem" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 7, "Aanmaken van een master diskette voor stembureaus" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 8, "Aanmaken van een master diskette voor de Backup van de totalisatie PC" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 10, "Aanmaken van diskettes voor lezers identificatie" )
.head 6 -  ! Call SetSubMenuItemLanguageText( frmGenere, nMenu, 12, "Aanmaken van een diskette voor DEMO" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 12, "Beheer van Labels voor stembureaus" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 12, 0,"Tweetalig Raad" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 12, 1,"Andere Raad" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 13, "Beheer van Labels voor de totalisatie PC" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 13, 0,"Brussels Raad" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 13, 1,"Vlaams Raad" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 13, 1,"Waals Raad" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 14, "Beheer van Ontvangstbewijs" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 14, 0,"Voor de voorzitter van het hoofdbureau" )
.head 6 -  Call SetSubSubSubMenuItemLanguageText( frmGenere, nMenu, 14, 0,0,"van Kanton" )
.head 6 -  Call SetSubSubSubMenuItemLanguageText( frmGenere, nMenu, 14, 0,1,"van Gemeente" )
.head 6 -  Call SetSubSubMenuItemLanguageText( frmGenere, nMenu, 14, 1,"Voor de voorzitters van stembureaus" )
.head 6 -  ! Menu Listes
.head 6 -  Set nMenu = nMenu+1
.head 6 -  Call SetMainMenuLanguageText( frmGenere, nMenu, "&Controlelijst" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 0, "Stand van aanmaken van de stembureaus" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 1, "Stand van aanmaken van de Totalisatie PC" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 3, "Stembureaus niet gecontroleerd" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 4, "Totalisatie PC  niet gecontroleerd" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 6, "Algemene stand van vooruitgang" )
.head 6 -  ! Menu Système
.head 6 -  Set nMenu = nMenu+1
.head 6 -  Call SetMainMenuLanguageText( frmGenere, nMenu, "&Systeem" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 0, "Beheer van de parameters" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 1, "Diskettelezers" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 3, "Beheer van de gebruikers " )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 4, "Wijziging van het wachtwoord " )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 6, "Beheer van de boodschappen " )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 7, "Beheer van de foutcodes " )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 9, "Backup van de database" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 11, "Wie heeft wat gedaan ?" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 12, "Wie is verbonden ?" )
.head 6 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 14, "Installatie controle" )
.head 6 -  !
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskBV
.head 7 -  Set j = SalStrScan( gsBV_Couleur[i], '|' )
.head 7 +  If j= -1
.head 8 -  Set j = 0
.head 7 -  Set gsBV_Couleur[i] = SalStrMidX( gsBV_Couleur[i], j+1, SalStrLength( gsBV_Couleur[i] ) )
.head 7 -  Set i = i +1
.head 6 -  !
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskPCT
.head 7 -  Set j = SalStrScan( gsPCT_Couleur[i], '|' )
.head 7 +  If j= -1
.head 8 -  Set j = 0
.head 7 -  Set gsPCT_Couleur[i] = SalStrMidX( gsPCT_Couleur[i], j+1, SalStrLength( gsPCT_Couleur[i] ) )
.head 7 -  Set i = i +1
.head 6 -  !
.head 5 +  Else
.head 6 -  Set nMenu = 0
.head 6 -  Set nMenu = nMenu+1
.head 6 +  If gnTypeVote = 1
.head 7 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 2, "Gestion des sièges à pourvoir, des bureaux de vote et des PC de totalisation" )
.head 6 +  Else
.head 7 -  Call SetSubMenuItemLanguageText( frmGenere, nMenu, 2, "Gestion des sièges à pourvoir et des bureaux de dépouillement" )
.head 6 -  !
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskBV
.head 7 -  Set j = SalStrScan( gsBV_Couleur[i], '|' )
.head 7 +  If j= -1
.head 8 -  Set j = SalStrLength( gsBV_Couleur[i] )
.head 7 -  Set gsBV_Couleur[i] = SalStrLeftX( gsBV_Couleur[i], j )
.head 7 -  Set i = i +1
.head 6 -  !
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskPCT
.head 7 -  Set j = SalStrScan( gsPCT_Couleur[i], '|' )
.head 7 +  If j= -1
.head 8 -  Set j = SalStrLength( gsPCT_Couleur[i] )
.head 7 -  Set gsPCT_Couleur[i] = SalStrLeftX( gsPCT_Couleur[i], j )
.head 7 -  Set i = i +1
.head 6 -  !
.head 5 -  Call LockWindowUpdate( hWndNULL )
.head 3 +  Function: PalChargeParam
.head 4 -  Description: Chargement des paramètres globaux
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsTitreF
.head 5 -  String: lsTitreN
.head 5 -  Number: lnAnnee
.head 5 -  Number: lnMois
.head 5 -  Number: lnJour
.head 5 -  Number: nMenu
.head 5 -  Number: lnI
.head 5 -  Number: lnNoEl
.head 5 -  String: lsWhere
.head 5 -  String: lsType
.head 5 -  String: lsOrdreEl
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Par_Date_El , par_scrutin_F, par_scrutin_N , par_PW_Master, par_ordre_el , Par_scrutin
	from PARAM 
	Into :gsDateEl, :gsTitreF, :gsTitreN , :gsPwMaster, :wsOrdreEl, :wsScrutinEl")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  !
.head 6 -  ! wsScrutinEl = 1 : COMMUNALES ET PROVINCIALES (CPAS et CDI)
.head 6 -  ! wsScrutinEl = 2 : LEGISLATIVES (SENAT - CHAMBRE) + EUROPE-REGIONS
.head 6 -  !
.head 6 -  Set gsTitreF = SalStrUpperX( gsTitreF)
.head 6 -  Set gsTitreN = SalStrUpperX( gsTitreN)
.head 6 -  !
.head 6 +  If gsLangueSoft= 'F'
.head 7 -  Set dfTitreEl = gsTitreF
.head 7 -  Call SalListPopulate( cmbElection, ghSqlMain, "Select El_nom_f from Election where el_no in (" || wsOrdreEl ||") 
	order by El_No"  )
.head 6 +  Else
.head 7 -  Set dfTitreEl = gsTitreN
.head 7 -  Call SalListPopulate( cmbElection, ghSqlMain, "Select El_nom_n from Election where el_no in (" || wsOrdreEl ||")
	order by El_No "  )
.head 6 -  !
.head 6 -  Set lnAnnee = SalStrToNumber( SalStrLeftX( gsDateEl, 4))
.head 6 -  Set lnMois = SalStrToNumber(SalStrMidX( gsDateEl, 4, 2))
.head 6 -  Set lnJour = SalStrToNumber(SalStrRightX( gsDateEl, 2))
.head 6 -  Set dfDateEl = SalDateConstruct( lnAnnee, lnMois, lnJour, 0,0,0)
.head 6 -  !
.head 6 +  If gsRestrRegion = "('BXL')"
.head 7 -  Call SalListSetSelect( cmbElection, 1 )
.head 7 -  Call SalDisableWindow( cmbElection )
.head 6 +  Else
.head 7 -  Call SalListSetSelect( cmbElection, 0 )
.head 6 -  Set lnI = 0
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select El_no from Election where el_no in (" || wsOrdreEl ||") 
	order by El_No
	into :lnNoEl "  )
.head 6 +  While SqlFetchNext(  ghSqlMain , Btmp)
.head 7 -  Set wnNoElection [lnI] = lnNoEl
.head 7 -  Set lnI = lnI +1
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  !
.head 5 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0 )
.head 3 -  ! Listes
.head 3 +  Function: PalPopulateCmbCanton
.head 4 -  Description: Charge cantons en fct de l'élection
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: psCanton
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsCPAS
.head 4 +  Actions
.head 5 -  Call SalTblReset( tblFichier )
.head 5 -  Call SalTblReset( tblListe )
.head 5 -  Call SalTblReset( tblCdt )
.head 5 -  Call SalTblReset( tblCdtSuppl )
.head 5 -  Set lsSelect = ''
.head 5 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 6 or
	wnNoElection[ SalListQuerySelection( cmbElection ) ] = 8 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 9
.head 6 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 9
.head 7 -  Set lsCPAS =" and B.EL_CPAS = 1 "
.head 6 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 8
.head 7 -  Set lsCPAS =" and B.EL_CDISTRICT = 1 "
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set lsSelect = "Select can_ins  ||'  -  '|| @IF(@Length(nom_N),Nom_N , nom_F) from base_commune A
	where A.type = 'CA' and exists (select com_ins from base_commune B where A.Can_ins = B.Can_Ins and type ='GE' and vote_el = :gnTypeVote " || lsCPAS ||" ) "
.head 6 +  Else
.head 7 -  Set lsSelect = "Select can_ins  ||'  -  '|| @IF(@Length(nom_F),Nom_F , nom_N) from base_commune A
	where A.type = 'CA' and exists (select com_ins from base_commune B where A.Can_ins = B.Can_Ins and type ='GE' and vote_el = :gnTypeVote " || lsCPAS ||" ) "
.head 6 +  If psCanton != ''
.head 7 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || psCanton || ") "
.head 6 +  If gsRestrRegion != ''
.head 7 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 6 -  Set lsSelect = lsSelect || " Order by can_ins "
.head 5 -  !
.head 5 +  If lsSelect != ''
.head 6 -  Call SalListPopulate( cmbCanton, ghSqlMain, lsSelect )
.head 6 -  Call SalListSetSelect( cmbCanton, 0 )
.head 6 +  If SalListQueryCount( cmbCanton ) > 0
.head 7 -  Call SalSendMsg( cmbCanton ,SAM_Click, 0,0)
.head 3 +  Function: PalGenereVisu
.head 4 -  Description: Simulation MaV - Liste des Listes / Cdts
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nType
.head 5 -  Number: nNoEl
.head 5 -  Boolean: bAuto
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: sBuffer
.head 5 -  Long String: sBuffer2
.head 5 -  Long String: sErrCaract
.head 5 -  Long String: sErreurAffich
.head 5 -  Long String: sErreur
.head 5 -  File Handle: hFile
.head 5 -  File Handle: lhFile
.head 5 -  File Handle: lhFile2
.head 5 -  String: sTrace
.head 5 -  String: lsNoEl
.head 5 -  String: lsNoArrond
.head 5 -  String: lsRegion
.head 5 -  String: lsRegLing
.head 5 -  String: lsRegLing2
.head 5 -  String: lsFile
.head 5 -  String: lsTmp
.head 5 -  String: lsNomListe
.head 5 -  String: lsBlanc
.head 5 -  String: lsNbListe
.head 5 -  String: lsTitre
.head 5 -  String: lsCollege
.head 5 -  String: lsGrLing
.head 5 -  String: lsLigne1Cdt
.head 5 -  String: lsLigne2Cdt
.head 5 -  String: lsListeLogo
.head 5 -  Number: nI
.head 5 -  Number: nRet
.head 5 -  Number: lnNbSiege
.head 5 -  Number: lnRowActu
.head 5 -  Number: lnLongTitre
.head 5 -  Number: nMaxSupp
.head 5 -  Number: nVisu
.head 5 -  Number: nPassage
.head 5 -  Number: nNbCdtE
.head 5 -  Number: nNbCdtS
.head 5 -  String: sLangueVisu[5]
.head 5 -  String: sParamAuto
.head 5 -  String: lsNbCol
.head 5 -  String: lsNoListe
.head 5 -  String: lsNoListePrec
.head 5 -  String: lsNoCdt
.head 5 -  String: lsCdt1
.head 5 -  String: lsCdt2
.head 5 -  String: lsLangueTmp
.head 5 -  Boolean: bOk
.head 5 -  String: sNomF
.head 5 -  String: sNomN
.head 5 -  String: sElection
.head 5 -  String: lsCdtType
.head 5 -  String: lsCdtTypePrec
.head 5 -  String: lsFileBmp
.head 5 -  Boolean: bWrite
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Set sErreur = ''
.head 5 +  If nNoEl = 5
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where dis_ins = :tblFichier.colIns and el_no = :nNoEl
	Into :lsNbListe ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where dis_ins = :tblFichier.colIns and type ='DI' 
	Into :sNomF, :sNomN ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select no_arrond, Region  from base_commune where dis_ins = :tblFichier.colIns and type ='CA' and no_arrond is not null 
	Into :lsNoArrond, :lsRegLing")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lsRegLing = 'WAL'
.head 7 -  Set lsRegLing2 = 'FF'
.head 7 -  Set lsRegLing = 'F'
.head 6 +  Else If lsRegLing = 'FLA'
.head 7 -  Set lsRegLing2 = 'NN'
.head 7 -  Set lsRegLing = 'N'
.head 6 -  !
.head 6 +  If lsRegLing = 'F' and SalStrLeftX(tblFichier.colIns,2) = '63' and nType != 3
.head 7 -  Set lsRegLing2 = 'FD'
.head 7 -  Set lsRegLing = 'FD'
.head 5 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 6 +  If nNoEl = 10
.head 7 -  Set lsGrLing = ''
.head 7 +  If nNoEl = 10 and nType = 2
.head 8 +  If not bAuto
.head 9 -  Call VisWaitCursor(FALSE)
.head 9 -  Set sParamAuto = ''
.head 9 -  ! Question du choix du groupe Ling
.head 9 -  Call SalModalDialog( dlgChoixGroupe, hWndForm , bOk, lsGrLing)
.head 9 +  If Not bOk
.head 10 -  Return (FALSE)
.head 9 -  Call VisWaitCursor(TRUE)
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where Circ_ins = :tblFichier.colIns and el_no = :nNoEl and @left(LIS_Grl,1) = :lsGrLing
	Into :lsNbListe ")
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where Circ_ins = :tblFichier.colIns and el_no = :nNoEl
	Into :lsNbListe ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  !
.head 6 +  If nNoEl  = 2
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where circ_ins = :tblFichier.colIns and type ='CI' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where circ_ins = :tblFichier.colIns and type ='CI' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  Else If nNoEl = 4
.head 7 +  If gsWL_Type = '0'
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where ARRON_INS = :tblFichier.colIns and type ='WR' 
	Into :sNomF, :sNomN ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where ARRON_INS = :tblFichier.colIns and type ='WR' 
	Into :lsRegion")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where circ_ins = :tblFichier.colIns and type ='WL' 
	Into :sNomF, :sNomN ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where circ_ins = :tblFichier.colIns and type ='WL' 
	Into :lsRegion")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  Else If nNoEl = 7
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where circ_ins = :tblFichier.colIns and type ='VL' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where circ_ins = :tblFichier.colIns and type ='VL' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  Else If nNoEl = 10
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where circ_ins = :tblFichier.colIns and type ='BR' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where circ_ins = :tblFichier.colIns and type ='BR' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  Else If nNoEl = 11
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where circ_ins = :tblFichier.colIns and type ='BV' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where circ_ins = :tblFichier.colIns and type ='BV' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lsRegion = 'WAL'
.head 7 -  Set lsRegLing2 = 'FF'
.head 7 -  Set lsRegLing = 'F'
.head 6 +  Else If lsRegion = 'FLA'
.head 7 -  Set lsRegLing2 = 'NN'
.head 7 -  Set lsRegLing = 'N'
.head 6 -  !
.head 6 +  If lsRegLing = 'F' and SalStrLeftX(tblFichier.colIns,2) = '63' and nType != 3
.head 7 -  Set lsRegLing2 = 'FD'
.head 7 -  Set lsRegLing = 'FD'
.head 6 +  If (SalStrScan( gsRestrRegion, 'BXL' ) != -1 and SalStrLeftX(tblFichier.colIns,2) = '21') or gsRestrRegion = ''
.head 7 -  Set lsRegLing2 = 'FN'
.head 7 -  Set lsRegLing = 'FN'
.head 5 +  Else If nNoEl = 3 or nNoEl = 1
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where Coll_ins = :tblFichier.colIns and el_no = :nNoEl
	Into :lsNbListe ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If nNoEl = 3
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where coll_ins = :tblFichier.colIns and type ='SE' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where coll_ins = :tblFichier.colIns and type ='SE' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  Else If nNoEl = 1
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  Nom_F, Nom_N  from base_commune where coll_ins = :tblFichier.colIns and type ='EU' 
	Into :sNomF, :sNomN ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select Region  from base_commune where coll_ins = :tblFichier.colIns and type ='EU' 
	Into :lsRegion")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lsRegion = 'WAL'
.head 7 -  Set lsRegLing2 = 'FF'
.head 7 -  Set lsRegLing = 'F'
.head 6 +  Else If lsRegion = 'FLA'
.head 7 -  Set lsRegLing2 = 'NN'
.head 7 -  Set lsRegLing = 'N'
.head 6 -  !
.head 6 +  If lsRegLing = 'F' and SalStrLeftX(tblFichier.colIns,2) = '63' and nType != 3
.head 7 -  Set lsRegLing2 = 'FD'
.head 7 -  Set lsRegLing = 'FD'
.head 6 +  If SalStrScan( gsRestrRegion, 'BXL' ) != -1 or gsRestrRegion = ''
.head 7 -  Set lsRegLing2 = 'FN'
.head 7 -  Set lsRegLing = 'FN'
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where com_ins = :tblFichier.colIns and el_no = :nNoEl
	Into :lsNbListe ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "select no_canton, Region, Nom_F, Nom_N  from base_commune where com_ins = :tblFichier.colIns and type ='GE' and no_arrond is not null 
	Into :lsNoArrond, :lsRegLing, :sNomF, :sNomN ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lsRegLing = 'WAL'
.head 7 -  Set lsRegLing2 = 'FF'
.head 7 -  Set lsRegLing = 'F'
.head 6 +  Else If lsRegLing = 'FLA'
.head 7 -  Set lsRegLing2 = 'NN'
.head 7 -  Set lsRegLing = 'N'
.head 6 +  Else If lsRegLing = 'BXL'
.head 7 -  Set lsRegLing2 = 'FN'
.head 7 -  Set lsRegLing = 'FN'
.head 6 -  !
.head 6 +  If lsRegLing = 'F' and SalStrLeftX(tblFichier.colIns,2) = '63' and nType != 3
.head 7 -  Set lsRegLing2 = 'FD'
.head 7 -  Set lsRegLing = 'FD'
.head 6 -  !
.head 5 +  If SalStrLength( lsRegLing) = 2
.head 6 +  If not bAuto
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Set sParamAuto = ''
.head 7 -  ! Question du choix de la langue
.head 7 -  Call SalModalDialog( dlgChoixLangue, hWndForm , lsRegLing, bOk, lsRegLing)
.head 7 +  If bOk
.head 8 -  Set lsRegLing2 =  lsRegLing || lsRegLing
.head 8 -  Set nPassage = 1
.head 8 -  Set sLangueVisu[1] =  lsRegLing
.head 7 +  Else
.head 8 -  Return (FALSE)
.head 7 -  Call VisWaitCursor(TRUE)
.head 6 +  Else
.head 7 -  Set sParamAuto = 'A'
.head 7 -  Set sLangueVisu[1] = SalStrLeftX( lsRegLing, 1 )
.head 7 -  Set sLangueVisu[2] = SalStrRightX( lsRegLing, 1 )
.head 7 -  Set nPassage = 2
.head 6 -  !
.head 5 +  Else
.head 6 -  Set nPassage = 1
.head 6 -  Set sLangueVisu[1] = lsRegLing
.head 6 +  If not bAuto
.head 7 -  Set sParamAuto = ''
.head 6 +  Else
.head 7 -  Set sParamAuto = 'A'
.head 5 +  If nNoEl = 10 and nType = 2 and bAuto
.head 6 -  Set nPassage = nPassage + 1
.head 6 -  ! Set sLangueVisu[nPassage] = SalStrLeftX( lsRegLing, 1 )
.head 6 -  Set sLangueVisu[nPassage] = SalStrRightX( lsRegLing, 1 )
.head 6 +  If SalStrLength( lsRegLing) = 2
.head 7 -  Set nPassage = nPassage + 1
.head 7 -  ! Set sLangueVisu[nPassage] = SalStrRightX( lsRegLing, 1 )
.head 7 -  Set sLangueVisu[nPassage] = SalStrLeftX( lsRegLing, 1 )
.head 5 -  !
.head 5 -  Set nVisu = 1
.head 5 +  While nVisu <= nPassage 
.head 6 -  Set lsRegLing = sLangueVisu[nVisu ]
.head 6 -  Set lsRegLing2 =  lsRegLing || lsRegLing
.head 6 +  If nType = 2
.head 7 +  If nNoEl = 10 and bAuto
.head 8 +  If nVisu = 1 or nVisu = 3
.head 9 -  Set lsGrLing = 'F'
.head 8 +  Else
.head 9 -  Set lsGrLing = 'N'
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select count(*) from Listes where Circ_ins = :tblFichier.colIns and el_no = :nNoEl and @left(LIS_Grl,1) = :lsGrLing
	Into :lsNbListe ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  ! Visualisation des listes
.head 7 -  ! Trace 
.head 7 -  Set sTrace = 'INS: ' || tblFichier.colIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) || '
' || PalTraductMsg( 'VISU_LI' )
.head 7 -  Call PalTraceAction( gsUserLog, "VISU", sTrace )
.head 7 -  !
.head 7 -  Set lnRowActu = SalTblQueryContext( tblListe )
.head 7 -  Set lsFile = gsPathSimul2 ||"LISTES"
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 +  If SalFileOpen( lhFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing2
.head 8 +  Else If wsScrutinEl = '2'
.head 9 +  If nNoEl = 2 or nNoEl = 4
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || 'NN'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || 'FF'
.head 10 +  Else
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing|| 'F'
.head 9 +  Else If nNoEl = 7
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || 'NN'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || 'FF'
.head 10 +  Else
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || lsRegLing|| 'F'
.head 9 +  Else If nNoEl = 10
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || 'F' || lsGrLing
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns  || 'F' || lsGrLing
.head 10 +  Else
.head 11 +  If bAuto
.head 12 +  If nVisu = 3 or nVisu = 4
.head 13 -  Set sBuffer = "4" || '21000'  || lsRegLing || 'F'
.head 12 +  Else
.head 13 -  Set sBuffer = "4" || tblFichier.colIns  || lsRegLing || 'F'
.head 11 +  Else
.head 12 -  Set sBuffer = "4" || tblFichier.colIns || lsRegLing|| 'F'
.head 9 +  ! Else If nNoEl = 10
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || 'NN'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || 'FF'
.head 10 +  Else 
.head 11 -  Set sBuffer = "4" || tblFichier.colIns || lsRegLing|| 'F'
.head 9 +  Else If nNoEl = 11
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = "7" || tblFichier.colIns || 'NN'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = "7" || tblFichier.colIns || 'FF'
.head 10 +  Else
.head 11 -  Set sBuffer = "7" || tblFichier.colIns || lsRegLing|| 'F'
.head 9 +  Else If nNoEl = 3 or nNoEl = 1
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing || 'N'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing || 'F'
.head 10 +  Else
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select region from base_commune where circ_ins = :tblFichier.colIns  into :lsCollege" )
.head 11 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 11 +  If lsCollege = 'FLA'
.head 12 -  Set lsCollege = 'N'
.head 11 +  Else
.head 12 -  Set lsCollege = 'F'
.head 11 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing || lsCollege
.head 9 +  ! Else
.head 10 -  Set sBuffer = SalNumberToStrX( nNoEl, 0) || tblFichier.colIns || lsRegLing2
.head 8 -  ! Set sBuffer = SalNumberToStrX( nNoEl, 0) ||' ' || lsNoArrond || ' ' || lsRegLing2
.head 8 -  Set sBuffer = PalLongueur( sBuffer, 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 -  Set sBuffer = PalLongueur( SalStrLeftX( cmbElection || SalStrRepeatX(' ' ,25) , 25) || SalStrRightX('00' || lsNbListe, 2) ||' ' || SalStrRightX('00' || lsNbListe , 2) ||' 00', 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 +  If nNoEl = 5
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set lsTitre = "Election Provinciale"
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set lsTitre = "Provincieraadsverkiezing"
.head 9 +  Else
.head 10 -  Set lsTitre = "Provinzialwahlen"
.head 8 +  Else If nNoEl = 2 or nNoEl = 3 or nNoEl = 1 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set lsTitre = "EL_NOM_F"
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set lsTitre = "EL_NOM_N"
.head 9 +  Else
.head 10 -  Set lsTitre = "EL_NOM_A"
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select " || lsTitre || " from election where el_no = :nNoEl  into :lsTitre" )
.head 9 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 9 -  Set lsTitre = SalStrUpperX( lsTitre)
.head 8 +  Else
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set lsTitre = "Election Communale"
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set lsTitre = "Gemeenteraadsverkiezing"
.head 9 +  Else
.head 10 -  Set lsTitre = "Kommunalwahlen"
.head 8 -  !
.head 8 +  If wsScrutinEl = '2'
.head 9 +  If tblFichier.colRegion = 'FLA'
.head 10 -  Set lsCollege = 'N'
.head 9 +  Else
.head 10 -  Set lsCollege = 'F'
.head 9 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select  Lis_logo from listes where CIRC_Ins = :tblFichier.colIns and lis_logo is not null 
	into :lsListeLogo ")
.head 9 +  Else If nNoEl = 3 or nNoEl = 1
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Lis_logo from listes where COLL_Ins = :tblFichier.colIns and lis_logo is not null  
	into  :lsListeLogo ")
.head 9 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 +  If nNoEl = 7
.head 11 -  Set lsFileBmp =  '4' || SalStrMidX( lsListeLogo, 1 ,3)
.head 10 +  Else If nNoEl = 10
.head 11 -  Set lsFileBmp =  '4' || SalStrMidX( lsListeLogo, 2 ,3)
.head 10 +  Else If nNoEl = 11
.head 11 -  Set lsFileBmp =  '7' || SalStrMidX( lsListeLogo, 2 ,3)
.head 10 +  Else
.head 11 -  Set lsFileBmp =  SalStrLeftX( lsListeLogo, 4) 
.head 10 -  Call VisFileCopy( gsPathLogo || lsListeLogo , gsPathSimul2 ||lsFileBmp || ".BMP"  )
.head 8 -  !
.head 8 -  Set sBuffer = PalLongueur( lsTitre || ' ('|| date_transforme(gsDateEl , '/') ||') ', 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set sBuffer = 'Appuyer sur une liste ou sur vote blanc'
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set sBuffer = 'Druk op een lijst of op blanco stem'
.head 8 +  Else
.head 9 -  Set sBuffer = 'Drücken Sie auf eine Liste oder auf Stimmenthaltung'
.head 9 -  Set sBuffer2 =  SalStrRepeatX(' ', SalStrLength( sBuffer ) )
.head 9 -  Call CharToOemA( sBuffer, sBuffer2)
.head 9 -  Set sBuffer = sBuffer2
.head 8 -  Set sBuffer = PalLongueur( sBuffer, 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 +  If nNoEl = 5
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set sBuffer = 'District : '|| sNomF
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set sBuffer = 'District : '|| sNomN
.head 9 +  Else
.head 10 -  Set sBuffer = 'Bezirk : '|| sNomN
.head 8 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 11
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set sBuffer = 'Circonscription : '|| sNomF
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set sBuffer = 'Kiesdistrict : '|| sNomN
.head 9 +  Else
.head 10 -  Set sBuffer = 'Kiesdistrict : '|| sNomN
.head 8 +  Else If nNoEl = 10
.head 9 +  If lsRegLing = 'F'
.head 10 +  If lsGrLing = 'F'
.head 11 -  Set sBuffer = "Groupe Liguistisque Français"
.head 10 +  Else
.head 11 -  Set sBuffer = "Groupe Liguistisque Néerlandais"
.head 9 +  Else If lsRegLing = 'N'
.head 10 +  If lsGrLing = 'F'
.head 11 -  Set sBuffer = "Frans Taalgroep"
.head 10 +  Else
.head 11 -  Set sBuffer = "Nederlands Taalgroep"
.head 9 +  ! Else
.head 10 -  Set sBuffer = 'Kiesdistrict : '|| sNomN
.head 8 +  Else If nNoEl = 3 or nNoEl = 1
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set sBuffer =  sNomF
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set sBuffer = sNomN
.head 9 +  Else
.head 10 -  Set sBuffer =  sNomN
.head 8 +  Else
.head 9 +  If lsRegLing = 'F'
.head 10 -  Set sBuffer = 'Commune : '|| sNomF
.head 9 +  Else If lsRegLing = 'N'
.head 10 -  Set sBuffer = 'Gemeente : '|| sNomN
.head 9 +  Else
.head 10 -  Set sBuffer = 'Gemeinde : '|| sNomN
.head 8 -  Set sBuffer2 = PalLongueur( sBuffer  , 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 8 -  Set sBuffer = SalStrRepeatX(' ', SalStrLength( sBuffer2))
.head 8 -  Call CharToOemA( sBuffer2 , sBuffer )
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 -  Set nI =0
.head 8 +  While nI <5
.head 9 -  Set sBuffer = PalLongueur( '' , 78, ' ' , SalStrLeftX(lsRegLing,1) ) ||'
'
.head 9 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 9 -  Set nI = nI + 1
.head 8 -  Set nI =-1
.head 8 +  While SalTblFindNextRow( tblListe , nI, 0,0)
.head 9 -  Call SalTblSetContext( tblListe, nI)
.head 9 -  !
.head 9 -  !
.head 9 +  If lsGrLing = ''
.head 10 -  Set bWrite = TRUE
.head 9 +  Else
.head 10 +  If tblListe.colGrpL = lsGrLing || lsGrLing
.head 11 -  Set bWrite = TRUE
.head 10 +  Else
.head 11 -  Set bWrite = FALSE
.head 9 +  If bWrite
.head 10 -  Set lsNomListe =  SalStrRepeatX(' ', 25)
.head 10 -  Call CharToOemA( tblListe.colNom, lsNomListe)
.head 10 +  If NOT PalCaractere437( lsNomListe , sErrCaract )
.head 11 +  If sErreur != ''
.head 12 -  Set sErreur = sErreur || '
'
.head 11 -  ! Caractères ne repondent pas au code page 437
.head 11 -  Set sErreur = sErreur || tblListe.colNo ||' - ' || tblListe.colNom || ' - ' || PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
'
.head 10 -  !
.head 10 +  If wsScrutinEl = '1'
.head 11 -  Set sBuffer = PalLongueur( SalStrLeftX(lsRegLing,1) || SalStrRightX( tblListe.colNo,2)|| lsNomListe , 78, ' ' , 'L' ) ||'
'
.head 10 +  Else If wsScrutinEl = '2'
.head 11 +  If lsRegion = 'FLA'
.head 12 -  Set sBuffer = PalLongueur( 'N' || SalStrRightX( tblListe.colNo,2)|| lsNomListe , 78, ' ' , 'L' ) ||'
'
.head 11 +  Else
.head 12 -  Set sBuffer = PalLongueur( 'F' || SalStrRightX( tblListe.colNo,2)|| lsNomListe , 78, ' ' , 'L' ) ||'
'
.head 11 +  ! Else
.head 12 -  Set sBuffer = PalLongueur( SalStrLeftX(lsRegLing,1) || SalStrRightX( tblListe.colNo,2)|| lsNomListe , 78, ' ' , 'L' ) ||'
'
.head 10 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsBlanc = 'Vote blanc'
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsBlanc = 'Blanco Stem'
.head 8 +  Else
.head 9 -  Set lsBlanc = 'Stimmenthaltung'
.head 8 -  Set sBuffer = PalLongueur( ' ' || lsBlanc, 78, ' ' , 'L' ) ||'
'
.head 8 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength( sBuffer) )
.head 8 -  Call SalFileClose( lhFile )
.head 8 -  !
.head 8 +  If sErreur != ''
.head 9 +  If PalCompteNbLigne( sErreur ) > 50
.head 10 -  Set sErreurAffich = PalTraductMsg( 'FoF24')
.head 9 +  Else
.head 10 -  Set sErreurAffich = sErreur
.head 9 +  If SalMessageBox( sErreurAffich ||'

' || PalTraductMsg( 'FoF19'), PalTraductMsg( 'ATTENTION'), MB_OkCancel | MB_IconExclamation ) = IDOK
.head 10 +  If SalFileOpen( hFile, gsPathTemp || 'ERR.TXT', OF_Create|OF_Text|OF_ReadWrite )
.head 11 -  Call SalGetWindowText( tblFichier.colCanton, lsTmp , 200 )
.head 11 -  Call SalFilePutStr( hFile, cmbElection || ' - ' || lsTmp || ' : '|| tblFichier.colCanton )
.head 11 -  Call SalFilePutStr( hFile, '--------------------
' )
.head 11 -  Call SalFilePutStr( hFile, sErreur )
.head 11 -  Call SalFileClose( hFile )
.head 11 -  Call PalEditFile( gsPathTemp || 'ERR.TXT' )
.head 11 -  Call VisFileDelete( gsPathTemp || 'ERR.TXT' )
.head 8 -  !
.head 8 -  !
.head 8 -  Call PalMakeAllDir( gsPathSimul ||"PCX_LI" )
.head 8 -  !
.head 8 -  Set lsFile = gsPathSimul2 ||"Liste.BAT"
.head 8 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 8 -  Call SalFileOpen( lhFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 8 -  !
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Set sBuffer =  "PUSHD " || gsPathSimul ||"PCX_LI
CALL " || gsPathSimul ||"_LISTES.EXE " || gsPathSimul2 ||"LISTES " || sParamAuto ||"
POPD"
.head 8 +  Else If wsScrutinEl = '2'
.head 9 -  Set sBuffer =  "PUSHD " || gsPathSimul ||"PCX_LI
CALL " || gsPathSimul ||"_LISTES2.EXE " || gsPathSimul2 ||"LISTES " || sParamAuto ||"
POPD"
.head 8 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 8 -  Call SalFileClose( lhFile )
.head 8 -  Call SalPause(300)
.head 8 -  ! Call SalFileSetCurrentDirectory( SalStrLeftX(gsPathSimul2, SalStrLength( gsPathSimul2) -1 )  )
.head 8 -  Call SalLoadAppAndWait( lsFile , Window_NotVisible , nRet )
.head 8 -  ! Call SalFileSetCurrentDirectory( SalStrLeftX(gsPathApplic, SalStrLength( gsPathApplic) -1 )  )
.head 8 -  Call SalPause(300)
.head 8 -  Set lsFile = gsPathSimul2 || "LISTES"
.head 8 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 8 -  Set lsFile = gsPathSimul2 || "LISTE.BAT"
.head 8 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 8 -  Call VisFileDelete( gsPathSimul2 || "*.BMP" )
.head 7 -  Call SalTblSetContext( tblListe, lnRowActu)
.head 7 -  Call SalTblSetFocusRow( tblListe, lnRowActu)
.head 6 +  Else If nType = 1
.head 7 -  ! Visualisation des candidats
.head 7 -  ! Trace 
.head 7 -  Set sTrace = 'INS: ' || tblFichier.colIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) || '  -  LI: '|| tblListe.colNo ||' - ' || tblListe.colNom ||'
' || PalTraductMsg( 'VISU_CDT' )
.head 7 -  Call PalTraceAction( gsUserLog, "VISU", sTrace )
.head 7 -  !
.head 7 -  Set lnNbSiege =  tblFichier.colNbCdt
.head 7 +  If wsScrutinEl = '1'
.head 8 +  If lnNbSiege >= 1 and lnNbSiege <= 48
.head 9 -  Set lsNbCol = '16'
.head 8 +  Else If lnNbSiege >= 49 and lnNbSiege <= 51
.head 9 -  Set lsNbCol = '17'
.head 8 +  Else If lnNbSiege >= 52 and lnNbSiege <= 54
.head 9 -  Set lsNbCol = '18'
.head 8 +  Else If lnNbSiege >= 55 and lnNbSiege <= 57
.head 9 -  Set lsNbCol = '19'
.head 8 -  !
.head 7 +  Else If wsScrutinEl = '2'
.head 8 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7  or nNoEl = 11
.head 9 -  Set lsNbCol = '14'
.head 9 -  ! Set nMaxSupp = SalNumberRound(tblFichier.colNbCdt/2+0.49999)+1
.head 9 +  If nNoEl = 4 
.head 10 -  Set nMaxSupp = tblFichier.colNbCdt
.head 9 +  Else If nNoEl = 7 or nNoEl = 10
.head 10 -  Set nMaxSupp = 16
.head 9 +  Else If nNoEl = 11
.head 10 -  Set nMaxSupp = 6
.head 9 -  !
.head 9 +  If nMaxSupp + 1 <= 14
.head 10 -  Set lsNbCol = '14'
.head 9 +  Else If nMaxSupp + 1 <= 22
.head 10 -  Set lsNbCol = '22'
.head 9 +  Else
.head 10 -  Set lsNbCol = '23'
.head 8 +  Else If nNoEl = 10
.head 9 -  Set lsNbCol = '23'
.head 8 +  Else If nNoEl = 1
.head 9 -  Set lsNbCol = '14'
.head 8 +  Else If nNoEl = 3
.head 9 -  Set lsNbCol = '22'
.head 7 -  !
.head 7 -  Set lsNoEl = SalNumberToStrX( nNoEl , 0 )
.head 7 +  If lsNoEl = '7' or lsNoEl = '10'
.head 8 -  Set lsNoEl = '4'
.head 7 +  Else If lsNoEl = '11' 
.head 8 -  Set lsNoEl = '7'
.head 7 -  !
.head 7 -  Set lsFile = gsPathSimul2 || "CANDIDAT.DAT"
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 -  Call SalFileOpen( lhFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 7 -  !
.head 7 +  If wsScrutinEl = '2'
.head 8 -  Set lsCollege = ''
.head 8 +  If tblFichier.colRegion = 'FLA'
.head 9 -  Set lsCollege = 'N'
.head 8 +  Else
.head 9 -  Set lsCollege = 'F'
.head 8 +  If lsNoEl = '3' or lsNoEl  = '1'
.head 9 -  Set lsCollege = lsCollege 
.head 8 +  Else
.head 9 -  Set lsCollege = lsCollege || '_' || tblFichier.colIns
.head 8 -  ! Call VisFileCopy( gsPathLogo || lsNoEl  || SalStrRightX('00' || tblListe.colNo, 2) || lsCollege || ".BMP", gsPathSimul2 || "CANDIDAT.BMP" )
.head 8 -  Call VisFileCopy( gsPathLogo || SalNumberToStrX( nNoEl, 0)  || SalStrRightX('00' || tblListe.colNo, 2) || lsCollege || ".BMP", gsPathSimul2 || "CANDIDAT.BMP" )
.head 7 -  !
.head 7 -  Set lsNomListe =  SalStrRepeatX(' ', 25)
.head 7 -  Call CharToOemA( tblListe.colNom, lsNomListe)
.head 7 -  !
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set sBuffer = SalStrLeftX( SalStrUpperX(cmbElection )|| SalStrRepeatX(' ' , 20) , 20) || SalStrRightX('00' || tblListe.colNo, 2) || SalStrLeftX( lsNomListe || SalStrRepeatX(' ' , 25) , 25) ||
	SalStrRightX('  ' || SalNumberToStrX( lnNbSiege,0), 2)||" 0" || SalStrRightX('00' ||  lsNbCol, 2) || SalStrRepeatX( ' ' , 6)  ||
	lsNoEl || lsRegLing2 || SalStrRightX('000' || tblListe.colNo, 3) || tblFichier.colIns || SalStrRepeatX( ' ' , 8) ||"F
"
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  ! Set sBuffer = SalStrLeftX( SalStrUpperX(cmbElection )|| SalStrRepeatX(' ' , 20) , 20) || SalStrRightX('00' || tblListe.colNo, 2) || SalStrLeftX( lsNomListe || SalStrRepeatX(' ' , 25) , 25) ||
	SalStrRightX('  ' || SalNumberToStrX(  tblFichier.colNbCdt +  (SalNumberRound(tblFichier.colNbCdt/2+0.49999)+1) ,0), 2)||
	SalStrRightX('  ' || SalNumberToStrX(  SalNumberRound(tblFichier.colNbCdt/2+0.49999)+1 ,0), 2) || 
	SalStrRightX('00' ||  lsNbCol, 2) || SalStrRepeatX( ' ' , 6)  ||
	lsNoEl || lsRegLing2 || SalStrRightX('000' || tblListe.colNo, 3) || tblFichier.colIns || SalStrRepeatX( ' ' , 8) ||"F
"
.head 8 -  Set nNbCdtE = tblFichier.colNbCdt
.head 8 +  If nNoEl = 2 
.head 9 -  Set nNbCdtS = SalNumberRound(nNbCdtE/2+0.49999)+1
.head 8 +  If nNoEl = 4 
.head 9 -  Set nNbCdtS = nNbCdtE
.head 8 +  Else If nNoEl = 7 or nNoEl = 10
.head 9 -  Set nNbCdtS = 16
.head 8 +  Else If nNoEl = 11
.head 9 -  Set nNbCdtS = 6
.head 8 +  Else If nNoEl = 3
.head 9 -  Set nNbCdtS = SalNumberRound(nNbCdtE/2+0.49999)+1
.head 8 +  Else If nNoEl = 1
.head 9 -  Set nNbCdtS = SalNumberRound(nNbCdtE/2+0.49999)+1
.head 9 +  If nNbCdtS < 6
.head 10 -  Set nNbCdtS = 6
.head 8 -  Set sBuffer = SalStrLeftX( SalStrUpperX(cmbElection )|| SalStrRepeatX(' ' , 20) , 20) || SalStrRightX('00' || tblListe.colNo, 2) || SalStrLeftX( lsNomListe || SalStrRepeatX(' ' , 25) , 25) ||
	SalStrRightX('00' || SalNumberToStrX( nNbCdtE + nNbCdtS + 1 ,0), 2)||
	SalStrRightX('00' || SalNumberToStrX(  nNbCdtS ,0), 2) || 
	SalStrRightX('00' ||  lsNbCol, 2) || SalStrRepeatX( ' ' , 6)  ||
	lsNoEl || lsRegLing2 || SalStrRightX('000' || tblListe.colNo, 3) || tblFichier.colIns || SalStrRepeatX( ' ' , 8) ||"F
"
.head 7 -  !
.head 7 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 +  If lsRegLing = 'N'
.head 8 +  If nNoEl = 5
.head 9 -  Set sBuffer = 'District: '
.head 8 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 9 -  Set sBuffer = 'Kiesdistrict:'
.head 8 +  Else If nNoEl = 3 or nNoEl = 1
.head 9 -  Set sBuffer = ''
.head 8 +  Else
.head 9 -  Set sBuffer = 'Gemeente:'
.head 8 -  Set sBuffer2 = "Verkiezing van " || date_transforme( gsDateEl, '/') ||" - " || SalStrUpperX(sBuffer)  || sNomN
.head 8 -  Set sBuffer = SalStrRepeatX(' ', SalStrLength( sBuffer2))
.head 8 -  Call CharToOemA( sBuffer2 , sBuffer )
.head 8 -  Set sBuffer =  SalStrLeftX( sBuffer || SalStrRepeatX(' ' , 78) , 78)  ||"F
"
.head 7 +  Else If lsRegLing = 'F'
.head 8 +  If nNoEl = 5
.head 9 -  Set sBuffer = 'District: '
.head 8 +  Else If nNoEl = 2 or nNoEl = 4  or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 9 -  Set sBuffer = 'Circonscription: '
.head 8 +  Else If nNoEl = 3 or nNoEl = 1
.head 9 -  Set sBuffer = ''
.head 8 +  Else
.head 9 -  Set sBuffer = 'Commune: '
.head 8 -  Set sBuffer2 = "Elections du " || date_transforme( gsDateEl, '/') ||" - " || SalStrUpperX(sBuffer) || sNomF
.head 8 -  Set sBuffer = SalStrRepeatX(' ', SalStrLength( sBuffer2))
.head 8 -  Call CharToOemA( sBuffer2 , sBuffer )
.head 8 -  Set sBuffer =  SalStrLeftX( sBuffer || SalStrRepeatX(' ' , 78), 78)  ||"F
"
.head 7 +  Else
.head 8 +  If nNoEl = 5
.head 9 -  Set sBuffer = 'Bezirk'
.head 8 +  Else If nNoEl = 2 or nNoEl = 4  or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 9 -  Set sBuffer = 'Kiesdistrict'
.head 8 +  Else If nNoEl = 3  or nNoEl = 1
.head 9 -  Set sBuffer = ''
.head 8 +  Else
.head 9 -  Set sBuffer = "Gemeinde"
.head 8 -  Set sBuffer2 = "Wahlen vom " || date_transforme( gsDateEl, '/') || " - "|| SalStrUpperX(sBuffer) ||": "|| sNomN
.head 8 -  Set sBuffer = SalStrRepeatX(' ', SalStrLength( sBuffer2))
.head 8 -  Call CharToOemA( sBuffer2 , sBuffer )
.head 8 -  Set sBuffer =  SalStrLeftX( sBuffer || SalStrRepeatX(' ' , 78), 78)  ||"F
"
.head 7 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 -  ! << 9.02b
.head 7 +  ! If nNoEl = 5
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsTitre = "Election Provinciale"
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsTitre = "Provincieraadsverkiezing"
.head 8 +  Else 
.head 9 -  Set lsTitre = "Provinzialwahlen"
.head 7 +  ! Else
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsTitre = "Election Communale"
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsTitre = "Gemeenteraadsverkiezing"
.head 8 +  Else 
.head 9 -  Set lsTitre = "Kommunalwahlen"
.head 7 -  ! Set sBuffer =  SalStrLeftX( SalStrUpperX(lsTitre ) || SalStrRepeatX(' ' , 78) , 78)  ||"F
"
.head 7 +  If nNoEl = 5
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsTitre = "Province"
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsTitre = "Provincie"
.head 8 +  Else
.head 9 -  Set lsTitre = "Provinz"
.head 7 +  Else If nNoEl = 2 or nNoEl = 3  or nNoEl = 1 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsTitre = "EL_NOM_F"
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsTitre = "EL_NOM_N"
.head 8 +  Else
.head 9 -  Set lsTitre = "EL_NOM_A"
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select " || lsTitre || " from election where el_no = :nNoEl  into :lsTitre" )
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 8 -  Set lsTitre = SalStrUpperX( lsTitre)
.head 7 +  Else
.head 8 +  If lsRegLing = 'F'
.head 9 -  Set lsTitre = "Commune"
.head 8 +  Else If lsRegLing = 'N'
.head 9 -  Set lsTitre = "Gemeente"
.head 8 +  Else
.head 9 -  Set lsTitre = "Gemeinde"
.head 7 -  Set sBuffer =  SalStrLeftX( lsTitre || SalStrRepeatX(' ' , 78) , 78)  ||"F
"
.head 7 -  ! >> 9.02b
.head 7 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 +  If lsRegLing = 'F'
.head 8 -  Set sBuffer =  SalStrLeftX( "SUPPLEANTS" || SalStrRepeatX(' ' , 78) , 78)  ||"F
"
.head 7 +  Else
.head 8 -  Set sBuffer =  SalStrLeftX( "OPVOLGERS" || SalStrRepeatX(' ' , 78) , 78)  ||"F
"
.head 7 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 -  !
.head 7 -  Set nI = -1
.head 7 +  While SalTblFindNextRow( tblCdt, nI, 0, 0 )
.head 8 -  Call SalTblSetContext( tblCdt, nI )
.head 8 -  !
.head 8 -  Set lsLigne1Cdt = SalStrRepeatX(' ', 25)
.head 8 -  Call CharToOemA( tblCdt.colNom, lsLigne1Cdt )
.head 8 +  If NOT PalCaractere437( lsLigne1Cdt , sErrCaract )
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Caractères ne repondent pas au code page 437
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF21') || ' - ' || tblCdt.colNo ||' - ' || PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
'
.head 8 -  Set lsLigne2Cdt = SalStrRepeatX(' ', 25)
.head 8 -  Call CharToOemA( tblCdt.colNom2, lsLigne2Cdt )
.head 8 +  If NOT PalCaractere437( lsLigne2Cdt , sErrCaract )
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Caractères ne repondent pas au code page 437
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF21') || ' - ' || tblCdt.colNo ||' - ' || PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
'
.head 8 -  !
.head 8 -  Set sBuffer = PalLongueur(  lsNoEl || SalStrRightX('00' ||  tblListe.colNo , 2)  ||  SalStrLeftX( lsLigne1Cdt || SalStrRepeatX(' ', 25) , 25) || SalStrLeftX( lsLigne2Cdt || SalStrRepeatX(' ', 25) , 25) , 78, ' ', 'E' )
.head 8 -  Set sBuffer = sBuffer ||"
"
.head 8 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 -  !
.head 7 +  If SalIsWindowVisible( tblCdtSuppl )
.head 8 -  Set nI = -1
.head 8 +  While SalTblFindNextRow( tblCdtSuppl, nI, 0, 0 )
.head 9 -  Call SalTblSetContext( tblCdtSuppl, nI )
.head 9 -  !
.head 9 -  Set lsLigne1Cdt = SalStrRepeatX(' ', 25)
.head 9 -  Call CharToOemA( tblCdtSuppl.colNom, lsLigne1Cdt )
.head 9 +  If NOT PalCaractere437( lsLigne1Cdt , sErrCaract )
.head 10 +  If sErreur != ''
.head 11 -  Set sErreur = sErreur || '
'
.head 10 -  ! Caractères ne repondent pas au code page 437
.head 10 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF22') || ' - ' || tblCdtSuppl.colNo ||' - ' || PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
'
.head 9 -  Set lsLigne2Cdt = SalStrRepeatX(' ', 25)
.head 9 -  Call CharToOemA( tblCdtSuppl.colNom2, lsLigne2Cdt )
.head 9 +  If NOT PalCaractere437( lsLigne2Cdt , sErrCaract )
.head 10 +  If sErreur != ''
.head 11 -  Set sErreur = sErreur || '
'
.head 10 -  ! Caractères ne repondent pas au code page 437
.head 10 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF22') || ' - ' || tblCdtSuppl.colNo ||' - ' || PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
'
.head 9 -  !
.head 9 -  Set sBuffer = PalLongueur(  lsNoEl || SalStrRightX('00' ||  tblListe.colNo , 2)  ||  SalStrLeftX( lsLigne1Cdt || SalStrRepeatX(' ', 25) , 25) || SalStrLeftX( lsLigne2Cdt || SalStrRepeatX(' ', 25) , 25) , 78, ' ', 'S' )
.head 9 -  Set sBuffer = sBuffer ||"
"
.head 9 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 -  Call SalFileClose( lhFile )
.head 7 -  !
.head 7 +  If sErreur != ''
.head 8 +  If PalCompteNbLigne( sErreur ) > 50
.head 9 -  Set sErreurAffich = PalTraductMsg( 'FoF24')
.head 8 +  Else
.head 9 -  Set sErreurAffich = sErreur
.head 8 +  If SalMessageBox( sErreurAffich ||'

' || PalTraductMsg( 'FoF19'), PalTraductMsg( 'ATTENTION'), MB_OkCancel | MB_IconExclamation ) = IDOK
.head 9 +  If SalFileOpen( hFile, gsPathTemp || 'ERR.TXT', OF_Create|OF_Text|OF_ReadWrite )
.head 10 -  Call SalFilePutStr( hFile, tblListe.colNom )
.head 10 -  Call SalFilePutStr( hFile, '--------------------
' )
.head 10 -  Call SalFilePutStr( hFile, sErreur )
.head 10 -  Call SalFileClose( hFile )
.head 10 -  Call PalEditFile( gsPathTemp || 'ERR.TXT' )
.head 10 -  Call VisFileDelete( gsPathTemp || 'ERR.TXT' )
.head 7 -  !
.head 7 -  Call PalMakeAllDir( gsPathSimul ||"PCX_CDT" )
.head 7 -  !
.head 7 -  Set lsFile = gsPathSimul2 ||"SIMUL.BAT"
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 -  Call SalFileOpen( lhFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set sBuffer =  "PUSHD " || gsPathSimul ||"PCX_CDT
CALL "|| gsPathSimul ||"SIMUL.EXE " || gsPathSimul2 ||"CANDIDAT.DAT " || sParamAuto ||"
POPD"
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Set sBuffer =  "PUSHD " || gsPathSimul ||"PCX_CDT
CALL "|| gsPathSimul ||"SIMUL2.EXE " || gsPathSimul2 ||"CANDIDAT.DAT " || sParamAuto ||"
POPD"
.head 7 -  Call SalFileWrite( lhFile, sBuffer , SalStrLength( sBuffer) )
.head 7 -  Call SalFileClose( lhFile )
.head 7 -  Call SalPause(300)
.head 7 -  Call SalLoadAppAndWait( lsFile , Window_NotVisible , nRet )
.head 7 -  Call SalPause(300)
.head 7 -  Set lsFile = gsPathSimul2 || "CANDIDAT.DAT"
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 -  Call VisFileDelete( gsPathSimul2 || "*.BMP" )
.head 7 -  Set lsFile = gsPathSimul2 || "SIMUL.BAT"
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 6 +  Else If nType = 3
.head 7 -  ! Edition des listes des candidats
.head 7 -  Set lsFile = gsPathTemp || tblFichier.colIns || '_' || SalNumberToStrX( nNoEl, 0) ||'.TXT'
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 -  Call SalFileOpen( lhFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 7 -  !
.head 7 -  Set lsLangueTmp = gsLangueSoft
.head 7 -  Set gsLangueSoft = lsRegLing
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set sBuffer = 'Kandidaatslijsten'
.head 7 +  Else
.head 8 -  Set sBuffer = 'Liste des Candidats'
.head 7 -  !
.head 7 +  If gsLangueSoft != lsLangueTmp
.head 8 +  If lsRegLing = 'F'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "select El_Nom_F from election where el_no = :nNoEl 
	Into :sElection ")
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "select El_Nom_N from election where el_no = :nNoEl 
	Into :sElection ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 8 +  If lsRegLing = 'F'
.head 9 +  If nNoEl = 2
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_F from base_commune where circ_ins = :tblFichier.colIns and type ='CI' 
	Into :sNomF ")
.head 9 +  Else If nNoEl = 3
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_F from base_commune where coll_ins = :tblFichier.colIns and type ='SE' 
	Into :sNomF ")
.head 9 +  Else
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_F from base_commune where com_ins = :tblFichier.colIns and type ='GE' and no_arrond is not null 
	Into :sNomF ")
.head 8 +  Else
.head 9 +  If nNoEl = 2
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_N from base_commune where circ_ins = :tblFichier.colIns and type ='CI' 
	Into :sNomF ")
.head 9 +  Else If nNoEl = 3
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_N from base_commune where coll_ins = :tblFichier.colIns and type ='SE' 
	Into :sNomF ")
.head 9 +  Else
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select Nom_N  from base_commune where com_ins = :tblFichier.colIns and type ='GE' and no_arrond is not null 
	Into :sNomF")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 8 +  If gsLangueSoft = 'F'
.head 9 +  If nNoEl = 5
.head 10 -  Set lsTmp = 'Canton'
.head 9 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 10 -  Set lsTmp = 'Circonscription électorale'
.head 9 +  Else If nNoEl = 3 or nNoEl = 1
.head 10 -  Set lsTmp = 'Collège électoral'
.head 9 +  Else
.head 10 -  Set lsTmp = 'Commune'
.head 8 +  Else
.head 9 +  If nNoEl = 5
.head 10 -  Set lsTmp = 'Kanton'
.head 9 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 10 -  Set lsTmp = 'Kiesdistrict'
.head 9 +  Else If nNoEl = 3  or nNoEl = 1
.head 10 -  Set lsTmp = 'Kiescollege'
.head 9 +  Else
.head 10 -  Set lsTmp = 'Gemeente'
.head 7 +  Else
.head 8 -  Set sNomF = tblFichier.colCanton
.head 8 -  Call SalTblGetColumnTitle( tblFichier.colCanton, lsTmp, 200 )
.head 8 -  Set sElection = cmbElection
.head 7 -  !
.head 7 -  Set lnLongTitre = SalStrLength( sBuffer )
.head 7 -  Set sBuffer = SalStrRepeatX( '=' , lnLongTitre ) ||'
' || SalStrUpperX( sBuffer) || '
' ||SalStrRepeatX( '=' , lnLongTitre ) ||'

'
.head 7 -  Call SalFileWrite( lhFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 -  !
.head 7 -  Set sBuffer = PalTraductMsg('ELECT') || " : " || sElection  ||"
" || SalStrUpperX(lsTmp) || ": " || sNomF || " (" || tblFichier.colIns ||")
=========================================
"
.head 7 -  Call SalFilePutStr( lhFile, sBuffer )
.head 7 -  Set lsNoListePrec = ''
.head 7 +  If nNoEl = 5
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select A.Lis_no, B.Lis_Nom, A.Cdt_no, A.cdt_Ligne1, A.Cdt_Ligne2 
	from candidats A, Listes B 
	where A.dis_ins = B.dis_ins and A.El_no = B.El_no and A.Lis_no = B.Lis_No and A.dis_ins = :tblFichier.colIns and A.el_no = :nNoEl
	order by A.Lis_no, A.Cdt_no
	Into :lsNoListe, :lsNomListe, :lsNoCdt, :lsCdt1, :lsCdt2" )
.head 7 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select A.Cdt_Type,A.Lis_no, B.Lis_Nom, A.Cdt_no, A.cdt_Ligne1, A.Cdt_Ligne2 
	from candidats A, Listes B 
	where A.Circ_ins = B.Circ_ins and A.El_no = B.El_no and A.Lis_no = B.Lis_No and A.Circ_ins = :tblFichier.colIns and A.el_no = :nNoEl
	order by A.Lis_no, 1, A.Cdt_no
	Into :lsCdtType, :lsNoListe, :lsNomListe, :lsNoCdt, :lsCdt1, :lsCdt2" )
.head 7 +  Else If nNoEl = 3 or nNoEl = 1
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select A.Cdt_Type,A.Lis_no, B.Lis_Nom, A.Cdt_no, A.cdt_Ligne1, A.Cdt_Ligne2 
	from candidats A, Listes B 
	where A.Coll_ins = B.Coll_ins and A.El_no = B.El_no and A.Lis_no = B.Lis_No and A.Coll_ins = :tblFichier.colIns and A.el_no = :nNoEl
	order by A.Lis_no, 1, A.Cdt_no
	Into :lsCdtType, :lsNoListe, :lsNomListe, :lsNoCdt, :lsCdt1, :lsCdt2" )
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select A.Lis_no, B.Lis_Nom, A.Cdt_no, A.cdt_Ligne1, A.Cdt_Ligne2 
	from candidats A, Listes B 
	where A.Com_ins = B.Com_ins and A.El_no = B.El_no and A.Lis_no = B.Lis_No and A.com_ins = :tblFichier.colIns and A.el_no = :nNoEl
	order by A.Lis_no, A.Cdt_no
	Into :lsNoListe, :lsNomListe, :lsNoCdt, :lsCdt1, :lsCdt2" )
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If lsNoListePrec != lsNoListe
.head 9 -  Set lsCdtTypePrec = 'E'
.head 9 -  Set sBuffer = "
" || lsNoListe || ' - ' || lsNomListe 
.head 9 -  Call SalFilePutStr( lhFile, sBuffer )
.head 8 +  If lsCdtTypePrec != lsCdtType
.head 9 -  Set lsCdtTypePrec = lsCdtType
.head 9 -  Set sBuffer = "
    " || PalTraductMsg('SUPPL') ||":"  
.head 9 -  Call SalFilePutStr( lhFile, sBuffer )
.head 8 -  Set sBuffer = "	" || lsNoCdt || " - " || SalStrTrimX( lsCdt1 || " " || lsCdt2 )
.head 8 -  Call SalFilePutStr( lhFile, sBuffer )
.head 8 -  Set lsNoListePrec = lsNoListe
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  Call SalFileClose(lhFile)
.head 7 -  !
.head 7 -  Set gsLangueSoft = lsLangueTmp
.head 7 -  Call PalEditFile( lsFile )
.head 7 -  Call SalBringWindowToTop( hWndForm )
.head 7 -  Call SalFileOpen( lhFile, lsFile, OF_Delete )
.head 7 -  !
.head 6 -  Call SalBringWindowToTop( hWndForm )
.head 6 -  Set nVisu = nVisu + 1
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalValidateListe
.head 4 -  Description: Validation des listes pour un commune/district
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: nNoEl
.head 5 -  Number: nV
.head 5 -  Number: nNbCdtMax
.head 5 -  Boolean: bArret
.head 5 -  Receive String: psMsg
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsTable
.head 5 -  String: lsChamp
.head 5 -  String: lsWhere
.head 5 -  String: lsCdtType
.head 5 -  Number: lnNbCdt
.head 5 -  Number: lnNbCdtSupp
.head 5 -  Number: lnNoCdt
.head 5 -  Number: lnNbListe
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  String: lsNo
.head 5 -  String: lsNomLis
.head 5 -  Boolean: lbOk
.head 5 -  Long String: sTrace
.head 5 -  String: sNN_EID
.head 4 +  Actions
.head 5 +  If nV = NUMBER_Null
.head 6 -  ! << V 9.01b
.head 6 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, sNN_EID)
.head 6 -  ! Call SalModalDialog( dlgPW, hWndForm, 'LISTE', lbOk)
.head 6 -  ! >> V 9.01b
.head 6 +  If NOT lbOk and bArret
.head 7 -  Set psMsg = PalTraductMsg( 'PW01' )
.head 7 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  ! << V9.01c
.head 6 +  If SalMessageBox(  PalTraductMsg( 'LISTE14' ) ,  PalTraductMsg( '?' ), MB_IconQuestion | MB_OkCancel) = IDCANCEL
.head 7 -  Return (FALSE)
.head 6 -  ! >> V9.01c
.head 6 -  ! Trace
.head 6 -  Set sTrace = 'INS: ' || sIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) || '   -   '
.head 6 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || 'PREPA')
.head 6 -  !
.head 6 -  Set lbOk = TRUE
.head 6 +  If nNoEl = 5
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsWhere = ' DIS_INS = :sIns '
.head 6 +  Else If nNoEl = 6
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsWhere = ' COM_INS = :sIns '
.head 6 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsWhere = ' CIRC_INS = :sIns '
.head 6 +  Else If nNoEl = 3 or nNoEl = 1
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsWhere = ' COLL_INS = :sIns '
.head 6 +  Else If nNoEl = 8
.head 7 -  Set lsTable = 'C_District'
.head 7 -  Set lsWhere = ' CDI_INS = :sIns '
.head 6 +  Else If nNoEl = 9
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsWhere = ' COM_INS = :sIns '
.head 6 -  ! Vérification si au moins une liste pour cette election de cette zone
.head 6 -  Call SqlPrepareAndExecute(  ghSqlMain, "Select * from Listes where El_no = :nNoEl and " || lsWhere )
.head 6 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set psMsg = PalTraductMsg( 'LISTE03' )
.head 7 +  If bArret
.head 8 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  Set lbOk = FALSE
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 7 -  !
.head 7 -  Return (FALSE)
.head 6 +  Else
.head 7 -  ! Vérification si le nombre de listes est inférieur à LISTE_MAX
.head 7 -  Call SqlPrepareAndExecute(  ghSqlMain, "Select count(*) from Listes where El_no = :nNoEl and " || lsWhere ||" into :lnNbListe " )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 +  If lnNbListe > LISTE_MAX
.head 8 -  Set psMsg = PalTraductMsg( 'LISTE09' ) || SalNumberToStrX( LISTE_MAX, 0)
.head 8 +  If bArret
.head 9 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Set lbOk = FALSE
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 8 -  !
.head 8 -  Return (FALSE)
.head 6 -  ! Vérification si le nb Cdt est <= nb sièges à pourvoir pour cette election
.head 6 -  Call SqlPrepareAndExecute(  ghSqlMain, "Select LIS_NOM, LIS_No, LIS_NB_EFF, Lis_Nb_Supp from Listes where El_no = :nNoEl and " || lsWhere ||"
	Order by 2,1
	Into :lsNomLis, :lsNo,:lnNbCdt, :lnNbCdtSupp "  )
.head 6 +  While SqlFetchNext( ghSqlMain, Btmp) and lbOk
.head 7 +  If lnNbCdt <= nNbCdtMax
.head 8 +  If nNoEl = 2 or nNoEl = 3
.head 9 +  If (lnNbCdt < 12 and lnNbCdtSupp != 6) 
or
   (lnNbCdt >= 12 and (lnNbCdtSupp > SalNumberRound( (lnNbCdt/2)+0.49999 ) + 1  or lnNbCdtSupp < 6) )
.head 10 +  If SalMessageBox( lsNo || '  -  ' || lsNomLis ||'
' || PalTraductMsg( 'LISTE18' ) ||'
' || PalTraductMsg( 'XML18' ) , PalTraductMsg( 'ERR' ) , MB_OkCancel ) = IDOK
.head 11 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, gsTmp)
.head 11 +  If lbOk
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ' || lsNo || '  -  ' || lsNomLis ||' : ' || PalTraductMsg( 'LISTE18' ))
.head 10 +  Else
.head 11 -  Set lbOk = FALSE
.head 10 +  If not lbOk
.head 11 -  Set psMsg = PalTraductMsg( 'LISTE15' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 11 +  If bArret
.head 12 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 11 -  Set lbOk = FALSE
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 11 -  !
.head 11 -  Return (FALSE)
.head 8 -  Set i = 0
.head 8 -  Set j = 0
.head 8 -  Call SqlPrepareAndExecute(  ghSqlSecondaire, "Select Cdt_no, cdt_type from Candidats where El_no = :nNoEl and " || lsWhere ||" and Lis_No = :lsNo
	order by 2,1
	Into :lnNoCdt, :lsCdtType " )
.head 8 +  While SqlFetchNext( ghSqlSecondaire, Btmp) and lbOk
.head 9 +  If lsCdtType = 'E'
.head 10 -  Set i = i + 1
.head 9 +  If lsCdtType = 'S'
.head 10 -  Set j = j + 1
.head 9 -  !
.head 9 +  If lnNoCdt != i and lsCdtType = 'E'
.head 10 -  Set psMsg = PalTraductMsg( 'LISTE05' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  Set lbOk = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 10 -  !
.head 10 -  Break
.head 9 +  If lnNoCdt != j and lsCdtType = 'S'
.head 10 -  Set psMsg = PalTraductMsg( 'LISTE16' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  Set lbOk = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 10 -  !
.head 10 -  Break
.head 8 -  !
.head 8 +  If i != lnNbCdt and lbOk
.head 9 -  Set psMsg = PalTraductMsg( 'LISTE06' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  Set lbOk = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 9 -  !
.head 9 -  Return (FALSE)
.head 8 +  If j != lnNbCdtSupp and lbOk
.head 9 -  Set psMsg = PalTraductMsg( 'LISTE17' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  Set lbOk = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 9 -  !
.head 9 -  Return (FALSE)
.head 7 +  Else
.head 8 -  Set psMsg = PalTraductMsg( 'LISTE04' ) || '
'||PalTraductMsg( 'LISTE02') || lsNo
.head 8 +  If bArret
.head 9 -  Call SalMessageBox( psMsg , PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Set lbOk = FALSE
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 8 -  !
.head 8 -  Return (FALSE)
.head 5 +  If lbOk
.head 6 +  If nNoEl = 5
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsChamp = 'V5'
.head 7 -  Set lsWhere = ' DIS_INS = :sIns '
.head 6 +  Else If nNoEl = 6
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsChamp = 'V6'
.head 7 -  Set lsWhere = ' COM_INS = :sIns '
.head 6 +  Else If nNoEl = 2
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V2'
.head 7 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'CI' "
.head 6 +  Else If nNoEl = 4
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V2'
.head 7 +  If gsWL_Type = '0'
.head 8 -  Set lsWhere = " ARRON_INS = :sIns and Type = 'WR' "
.head 7 +  Else
.head 8 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'WL' "
.head 6 +  Else If nNoEl = 7
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V2'
.head 7 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'VL' "
.head 6 +  Else If nNoEl = 10
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V2'
.head 7 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'BR' "
.head 6 +  Else If nNoEl = 11
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V2'
.head 7 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'BV' "
.head 6 +  Else If nNoEl = 3
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V3'
.head 7 -  Set lsWhere = " COLL_INS = :sIns and Type = 'SE' "
.head 6 +  Else If nNoEl = 1
.head 7 -  Set lsTable = 'Base_Commune'
.head 7 -  Set lsChamp = 'V3'
.head 7 -  Set lsWhere = " COLL_INS = :sIns and Type = 'EU' "
.head 6 +  Else If nNoEl = 8
.head 7 -  Set lsTable = 'C_District'
.head 7 -  Set lsChamp = 'V8'
.head 7 -  Set lsWhere = ' CDI_INS = :sIns '
.head 6 +  Else If nNoEl = 9
.head 7 -  Set lsTable = 'Commune'
.head 7 -  Set lsChamp = 'V9'
.head 7 -  Set lsWhere = ' COM_INS = :sIns '
.head 6 -  Call SqlPrepareAndExecute(  ghSqlMain, "Update "|| lsTable ||" set " || lsChamp ||" = :nV where " || lsWhere )
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 +  If nV != NUMBER_Null
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || 'OK' )
.head 7 -  !
.head 6 +  Else
.head 7 -  ! Trace
.head 7 +  If gsUserEID= '1' and sNN_EID != ''
.head 8 -  Set sNN_EID = ' - EID: ' || sNN_EID
.head 7 +  Else
.head 8 -  Set sNN_EID = ''
.head 7 -  Set sTrace = 'INS: ' || sIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) || sNN_EID || '   -   '
.head 7 -  Call PalTraceAction( gsUserLog, "DEVALID LI", sTrace || 'OK')
.head 7 -  !
.head 6 -  Set psMsg = 'OK'
.head 5 -  Return (lbOk)
.head 3 +  Function: PalRechercheIns
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sInsCom
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sInsPro
.head 5 -  String: sInsDis
.head 5 -  String: sInsCan
.head 5 -  String: sRegion
.head 5 -  Number: nRow
.head 5 -  Number: nRowActu
.head 5 -  Number: nCantonActu
.head 5 -  Number: nLigne
.head 5 -  Boolean: bOk
.head 5 -  Boolean: bReturn
.head 5 -  Boolean: bFind
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Set bReturn = TRUE
.head 5 -  Set nRowActu = SalTblQueryContext( tblFichier )
.head 5 +  If gnTypeVote = 1
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Dis_ins, Can_ins, Pro_ins, Region from Commune where Com_ins = :sInsCom into :sInsDis, :sInsCan, :sInsPro, :sRegion ")
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Dis_ins, Can_ins, Pro_ins, Region from Base_Commune where Com_ins = :sInsCom into :sInsDis, :sInsCan, :sInsPro, :sRegion ")
.head 5 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 5 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5
.head 6 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier ), ROW_Selected, FALSE )
.head 6 -  Set nRow = -1
.head 6 +  While SalTblFindNextRow( tblFichier, nRow, 0, 0 )
.head 7 -  Call SalTblSetContext( tblFichier, nRow)
.head 7 -  Call SalTblSetFocusRow( tblFichier, nRow)
.head 7 +  If tblFichier.colIns = sInsDis
.head 8 -  Call SalTblSetRowFlags( tblFichier, nRow, ROW_Selected, TRUE )
.head 8 -  Break
.head 6 -  Call SalSendMsg( tblFichier, SAM_Click, -1,0)
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 2
.head 6 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier ), ROW_Selected, FALSE )
.head 6 -  Set nRow = -1
.head 6 -  Set bFind = FALSE
.head 6 +  While SalTblFindNextRow( tblFichier, nRow, 0, 0 )
.head 7 -  Call SalTblSetContext( tblFichier, nRow)
.head 7 -  Call SalTblSetFocusRow( tblFichier, nRow)
.head 7 +  If tblFichier.colInsProv = sInsPro
.head 8 -  Call SalTblSetRowFlags( tblFichier, nRow, ROW_Selected, TRUE )
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 6 +  If not bFind
.head 7 -  Call SalTblSetContext( tblFichier, 0)
.head 7 -  Call SalTblSetFocusRow( tblFichier, 0)
.head 7 -  Call SalTblSetRowFlags( tblFichier, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblFichier, SAM_Click, -1,0)
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 3
.head 6 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier ), ROW_Selected, FALSE )
.head 6 -  Set nRow = -1
.head 6 -  Set bFind = FALSE
.head 6 +  While SalTblFindNextRow( tblFichier, nRow, 0, 0 )
.head 7 -  Call SalTblSetContext( tblFichier, nRow)
.head 7 -  Call SalTblSetFocusRow( tblFichier, nRow)
.head 7 +  If tblFichier.colInsProv = sRegion
.head 8 -  Call SalTblSetRowFlags( tblFichier, nRow, ROW_Selected, TRUE )
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 6 +  If not bFind
.head 7 -  Call SalTblSetContext( tblFichier, 0)
.head 7 -  Call SalTblSetFocusRow( tblFichier, 0)
.head 7 -  Call SalTblSetRowFlags( tblFichier, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblFichier, SAM_Click, -1,0)
.head 5 +  Else
.head 6 -  Set nCantonActu = SalListQuerySelection( cmbCanton )
.head 6 -  Set nLigne = 0
.head 6 -  Set bOk = FALSE
.head 6 +  While NOT bOk
.head 7 +  If SalListSetSelect( cmbCanton, nLigne )
.head 8 +  If SalStrLeftX( cmbCanton, 5) = sInsCan
.head 9 -  Set bOk = TRUE
.head 7 +  Else
.head 8 -  Set bOk = TRUE
.head 8 -  Set cmbCommune = ''
.head 8 -  Call SalListSetSelect( cmbCanton, nCantonActu )
.head 8 +  If SalTblAnyRows( tblFichier, 0,0)
.head 9 -  Call SalTblSetContext( tblFichier, nRowActu)
.head 9 -  Call SalTblSetFocusRow( tblFichier, nRowActu)
.head 9 -  Call SalTblSetRowFlags( tblFichier, nRowActu, ROW_Selected, TRUE )
.head 8 -  Set bReturn = FALSE
.head 8 -  ! Call SalMessageBox( PalTraductMsg('BV08') , PalTraductMsg( 'MSG'), MB_Ok )
.head 7 -  Set nLigne = nLigne +1
.head 6 +  If bOk and cmbCommune != ''
.head 7 -  Call SalSendMsg( cmbCanton, SAM_Click, -1 ,0)
.head 7 -  Call SalTblSetRowFlags( tblFichier, SalTblQueryContext( tblFichier ), ROW_Selected, FALSE )
.head 7 -  Set nRow = -1
.head 7 +  While SalTblFindNextRow( tblFichier, nRow, 0, 0 )
.head 8 -  Call SalTblSetContext( tblFichier, nRow)
.head 8 -  Call SalTblSetFocusRow( tblFichier, nRow)
.head 8 +  If tblFichier.colIns = sInsCom
.head 9 -  Call SalTblSetRowFlags( tblFichier, nRow, ROW_Selected, TRUE )
.head 9 -  Break
.head 7 -  Call SalSendMsg( tblFichier, SAM_Click, -1,0)
.head 5 -  Call VisWaitCursor(FALSE)
.head 5 -  Return (bReturn)
.head 3 +  Function: PalDeleteListeCdt
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsChamp
.head 5 -  String: lsLangue
.head 5 -  String: lsEntite
.head 4 +  Actions
.head 5 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5
.head 6 -  Set lsChamp = 'DIS_INS'
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 2 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 7 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 10 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 11
.head 6 -  Set lsChamp = 'CIRC_INS'
.head 6 +  If tblFichier.colRegion = 'FLA' 
.head 7 -  Set lsLangue = 'N'
.head 6 +  Else
.head 7 -  Set lsLangue = 'F'
.head 6 -  Set lsEntite = '_' || tblFichier.colIns
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 4
.head 6 -  Set lsChamp = 'CIRC_INS'
.head 6 +  If tblFichier.colRegion = 'FLA' 
.head 7 -  Set lsLangue = 'N'
.head 6 +  Else
.head 7 -  Set lsLangue = 'F'
.head 6 -  Set lsEntite = '_' || tblFichier.colIns
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 3
.head 6 -  Set lsChamp = 'COLL_INS'
.head 6 +  If tblFichier.colRegion = 'FLA' 
.head 7 -  Set lsLangue = 'N'
.head 6 +  Else
.head 7 -  Set lsLangue = 'F'
.head 6 -  Set lsEntite = ''
.head 5 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 1
.head 6 -  Set lsChamp = 'COLL_INS'
.head 6 +  If tblFichier.colRegion = 'FLA' 
.head 7 -  Set lsLangue = 'N'
.head 6 +  Else
.head 7 -  Set lsLangue = 'F'
.head 6 -  Set lsEntite = ''
.head 5 +  Else
.head 6 -  Set lsChamp = 'COM_INS'
.head 5 +  If SqlPrepareAndExecute( ghSqlMain, "Delete from  Candidats where  " || lsChamp || "= :tblFichier.colIns and LIS_NO = :tblListe.colNo and El_NO = :wnNoElection[ SalListQuerySelection( cmbElection ) ] " )
.head 6 +  If SqlPrepareAndExecute( ghSqlMain, "Delete from Listes where  " || lsChamp || "= :tblFichier.colIns and LIS_NO = :tblListe.colNo and El_NO = :wnNoElection[ SalListQuerySelection( cmbElection ) ] " )
.head 7 -  Call VisFileDelete( gsPathLogo || SalNumberToStrX( wnNoElection[ SalListQuerySelection( cmbElection ) ] , 0) || "??" || lsLangue || lsEntite ||".BMP" )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 7 -  Call SalMessageBox( PalTraductMsg( 'ERR' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ERR' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Return (FALSE)
.head 3 +  Function: PalSearchListe
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sListe
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Boolean: bFind
.head 4 +  Actions
.head 5 -  Call SalTblSetFlagsAnyRows( tblListe, ROW_Selected, FALSE, 0, 0 )
.head 5 -  Set bFind = FALSE
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( tblListe, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblListe, nRow )
.head 6 -  Call SalTblSetFocusRow( tblListe, nRow )
.head 6 +  If tblListe.colNo = sListe
.head 7 -  Call SalTblSetRowFlags( tblListe, nRow, ROW_Selected, TRUE )
.head 7 -  Set bFind = TRUE
.head 7 -  Break
.head 5 +  If NOT bFind
.head 6 -  Call SalTblSetContext( tblListe, 0 )
.head 6 -  Call SalTblSetFocusRow( tblListe, 0 )
.head 6 -  Call SalTblSetRowFlags( tblListe, 0, ROW_Selected, TRUE )
.head 5 -  Call SalSendMsg( tblListe, SAM_Click, 0,0)
.head 3 +  Function: PalSupprLogo
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nNoEl
.head 5 -  String: sColl
.head 5 -  String: sNoListe
.head 5 -  String: sIns
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sFile
.head 5 -  String: lsChamp
.head 5 -  String: sTrace
.head 4 +  Actions
.head 5 -  ! Trace
.head 5 -  Set sTrace = "INS: " || sIns ||'   -   LI N°' || sNoListe || ' - EL ' || SalNumberToStrX(nNoEl,0) || '  -->   '
.head 5 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'DELETE')
.head 5 -  !
.head 5 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 6 -  Set sFile = SalNumberToStrX( nNoEl, 0) || SalStrRightX( '000' || sNoListe, 2) || sColl || "_" || sIns || ".BMP"
.head 5 +  Else
.head 6 -  Set sFile = SalNumberToStrX( nNoEl, 0) || SalStrRightX( '000' || sNoListe, 2) || sColl || ".BMP"
.head 5 +  If VisFileDelete( gsPathLogo || sFile )
.head 6 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 7 -  Set lsChamp = 'CIRC_INS'
.head 6 +  Else If nNoEl = 3 or nNoEl = 1
.head 7 -  Set lsChamp = 'COLL_INS'
.head 6 +  If SqlPrepareAndExecute( ghSqlMain, "Update LISTES Set Lis_logo = ''
		where " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl " )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'DELETE OK')
.head 7 -  !
.head 7 -  Return ( TRUE )
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain,"ROLLBACK")
.head 7 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'ERR')
.head 7 -  !
.head 7 -  Call SalMessageBox( PalTraductMsg( 'BV32' ), PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'ERR')
.head 6 -  !
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ), PalTraductMsg( 'ERR' ), MB_Ok )
.head 6 -  Return (FALSE)
.head 3 +  Function: PalPrintVisuDirect
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: nNoEl
.head 5 -  Number: nType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsAFile[*]
.head 5 -  Number: nFile
.head 5 -  Number: i
.head 5 -  Number: nRow
.head 5 -  Number: nRet
.head 5 -  Number: nNoElAdapte
.head 5 -  String: sTrace
.head 5 -  Boolean: bOk
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call SalDisableWindow( hWndForm )
.head 5 -  Set dfLibelleInfo = PalTraductMsg('PRINT_VISU')
.head 5 -  Call SalShowWindow( dfLibelleInfo )
.head 5 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 5 -  Call DispatchMessage(  )
.head 5 +  If nType = 0
.head 6 -  Call SalTblSetFlagsAnyRows( tblListe, ROW_Selected, FALSE, 0, 0 )
.head 5 -  ! Balayage du tbl Liste de l'entité + Visu et création du Fichier
.head 5 +  If nType = 0 or nType = 1
.head 6 -  Call PalGenereVisu( 2, wnNoElection[ SalListQuerySelection( cmbElection ) ]  , TRUE )
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 5 +  If nType = 0
.head 6 -  Set nRow = -1
.head 6 +  While SalTblFindNextRow( tblListe, nRow, 0, 0 )
.head 7 -  Call SalTblSetRowFlags( tblListe, nRow-1, ROW_Selected, FALSE )
.head 7 -  Call SalTblSetContext( tblListe, nRow )
.head 7 -  Call SalTblSetFocusRow( tblListe, nRow )
.head 7 -  Call SalTblSetRowFlags( tblListe, nRow, ROW_Selected, TRUE )
.head 7 -  Call SalSendMsg( tblListe, SAM_Click, 0,0)
.head 7 -  Call PalGenereVisu( 1, wnNoElection[ SalListQuerySelection( cmbElection ) ]  , TRUE )
.head 7 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Call SalTblSetRowFlags( tblListe, nRow, ROW_Selected, FALSE )
.head 6 -  Call SalTblSetContext( tblListe, 0 )
.head 6 -  Call SalTblSetFocusRow( tblListe, 0 )
.head 6 -  Call SalTblSetRowFlags( tblListe, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblListe, SAM_Click, 0,0)
.head 5 +  Else If nType = 2
.head 6 -  Call PalGenereVisu( 1, wnNoElection[ SalListQuerySelection( cmbElection ) ]  , TRUE )
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 5 -  !
.head 5 -  Set bOk = FALSE
.head 5 +  If nType = 0
.head 6 +  If SalMessageBox( PalTraductMsg( 'PRINT_VISU2'), PalTraductMsg( '?' ) , MB_OkCancel | MB_IconQuestion ) = IDOK
.head 7 -  Set bOk = TRUE
.head 5 +  Else
.head 6 -  Set bOk = TRUE
.head 5 +  If bOk
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! Impression des Visu réalisés
.head 6 -  ! 1. Pour la liste des listes
.head 6 +  If nType = 0 or nType = 1
.head 7 -  Set nFile = VisDosEnumFiles( gsPathSimul || "PCX_LI\\*.*",  FA_Standard, lsAFile )
.head 7 -  Set i = 0
.head 7 +  While i < nFile
.head 8 +  If nNoEl = 7
.head 9 -  Set nNoElAdapte = 4
.head 8 +  Else If nNoEl = 10
.head 9 -  Set nNoElAdapte = 4
.head 8 +  Else If nNoEl = 11
.head 9 -  Set nNoElAdapte = 7
.head 8 +  Else
.head 9 -  Set nNoElAdapte = nNoEl
.head 8 +  If SalStrLeftX( lsAFile[i], 1) = SalNumberToStrX( nNoElAdapte , 0 ) and (SalStrMidX( lsAFile[i], 1,5) = sIns or (nNoEl=10 and SalStrMidX( lsAFile[i], 1,5) ='21000' ) )
.head 9 +  If VisFileCopy( gsPathSimul || "PCX_LI\\"|| lsAFile[i] , gsPathSimul2 ||"IMAGE.BMP" )
.head 10 -  Call SalLoadAppAndWait( gsPathSimul || 'i_view32 ' || gsPathSimul2 ||'IMAGE.BMP /Print'  , Window_Minimized , nRet)
.head 10 -  Call DispatchMessage(  )
.head 10 -  Call VisFileDelete( gsPathSimul2 ||'IMAGE.BMP' )
.head 10 -  ! Trace 
.head 10 -  Set sTrace = 'INS: ' || sIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) ||'
' || PalTraductMsg( 'VISU_LI' ) || ' : PRINT'
.head 10 -  Call PalTraceAction( gsUserLog, "VISU", sTrace )
.head 8 -  Call DispatchMessage(  )
.head 8 -  Set i = i + 1
.head 6 -  !
.head 6 -  ! 2. Pour la liste des cdts de chaque liste
.head 6 +  If nType = 0 or nType = 2
.head 7 -  Set nFile = VisDosEnumFiles( gsPathSimul || "PCX_CDT\\*.*",  FA_Standard, lsAFile )
.head 7 -  Set i = 0
.head 7 +  While i < nFile
.head 8 +  If nNoEl = 7
.head 9 -  Set nNoElAdapte = 4
.head 8 +  Else If nNoEl = 10
.head 9 -  Set nNoElAdapte = 4
.head 8 +  Else If nNoEl = 11
.head 9 -  Set nNoElAdapte = 7
.head 8 +  Else
.head 9 -  Set nNoElAdapte = nNoEl
.head 8 +  If (SalStrLeftX( lsAFile[i], 1) = SalNumberToStrX( nNoElAdapte , 0 ) and SalStrMidX( lsAFile[i], 3,5) = sIns and nType = 0) 
  OR
   (SalStrLeftX( lsAFile[i], 1) = SalNumberToStrX( nNoElAdapte , 0 ) and SalStrMidX( lsAFile[i], 1,2) = SalStrRightX('00' || tblListe.colNo, 2) and SalStrMidX( lsAFile[i], 3,5) = sIns and nType = 2) 
.head 9 +  If VisFileCopy( gsPathSimul || "PCX_CDT\\"|| lsAFile[i] , gsPathSimul2 ||"IMAGE.BMP" )
.head 10 -  Call SalLoadAppAndWait( gsPathSimul || 'i_view32 ' || gsPathSimul2 ||'IMAGE.BMP /Print'  , Window_Minimized , nRet)
.head 10 -  Call DispatchMessage(  )
.head 10 -  Call VisFileDelete( gsPathSimul2 ||'IMAGE.BMP' )
.head 10 -  ! Trace 
.head 10 -  Set sTrace = 'INS: ' || sIns || ' -  EL: ' || SalNumberToStrX( nNoEl, 0) || '  -  LI: '|| SalStrMidX( lsAFile[i], 1,2) ||'
' || PalTraductMsg( 'VISU_CDT' ) ||' : PRINT'
.head 10 -  Call PalTraceAction( gsUserLog, "VISU", sTrace )
.head 9 -  Call DispatchMessage(  )
.head 8 -  Set i = i + 1
.head 6 -  Call VisWaitCursor(FALSE)
.head 5 -  Call SalHideWindow( dfLibelleInfo )
.head 5 -  Call SWTabsHideWindow( picTabs, dfLibelleInfo )
.head 5 -  Call SalEnableWindow( hWndForm )
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 -  ! Bureaux de vote
.head 3 +  Function: PalVisuBV
.head 4 -  Description: Edition des divers BV d'un canton
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Boolean: bPw
.head 5 -  Number: nType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bOk
.head 5 -  String: lsInsCan
.head 5 -  String: lsCanton
.head 5 -  String: lsInsCom
.head 5 -  String: lsInsComPrec
.head 5 -  String: lsCom
.head 5 -  String: lsWhereCompl
.head 5 -  String: lsNoBv
.head 5 -  String: lsDesc
.head 5 -  String: lsAdr
.head 5 -  String: lsLoc
.head 5 -  String: lsPw
.head 5 -  String: lsCP
.head 5 -  String: lsPres
.head 5 -  String: lsCdi
.head 5 -  String: lsCdiPrec
.head 5 -  String: lsCdiLabel
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsTabul
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsNoPcTotProv
.head 5 -  String: lsOrdre
.head 5 -  Long String: sBuffer
.head 5 -  Number: lnLongTitre
.head 5 -  File Handle: hFile
.head 4 +  Actions
.head 5 -  Set bOk = FALSE
.head 5 -  Set lsInsCan = SalNumberToStrX( tblCantonBV.colIns, 0)
.head 5 -  Set lsCanton = tblCantonBV.colCanton
.head 5 -  Set lsInsComPrec = ''
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from bur_vote where CAN_Ins = :lsInsCan ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If SalFileOpen( hFile, gsPathTemp ||"BV.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set sBuffer = 'Lijst van Stembureaus'
.head 8 +  If bPw
.head 9 -  Set sBuffer = sBuffer || ' met Paswoorden'
.head 7 +  Else
.head 8 -  Set sBuffer = 'Liste des Bureaux de Vote'
.head 8 +  If bPw
.head 9 -  Set sBuffer = sBuffer || ' avec les Mots de passe'
.head 7 -  Set lnLongTitre = SalStrLength( sBuffer )
.head 7 -  Set sBuffer = SalStrRepeatX( '=' , lnLongTitre ) ||'
' || SalStrUpperX( sBuffer) || '
' ||SalStrRepeatX( '=' , lnLongTitre ) ||'

'
.head 7 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 +  If nType = 1
.head 8 -  Set sBuffer = PalTraductMsg( 'CAN' ) ||': ' || lsCanton ||' (' || lsInsCan ||')
'
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 +  If bPw or nType = 2
.head 8 -  Set lsWhereCompl = ' and A.COm_Ins = :tblCommuneBV.colIns '
.head 7 +  Else
.head 8 -  Set lsWhereCompl = ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select A.Com_ins, @TRIM(B.Nom_F ||'  '||B.Nom_N ), @right('000' || BV_NO,3 ) ,BV_DESCRIPTION,BV_ADRESSE,BV_LOCALITE,BV_CODE_POSTAL, BV_PRESIDENT,BV_COM_PCTOT, A.CDI_Ins, 
BV_Codebak, BV_CAN_PCTOT, BV_NOECRIT, @decode( B.com_ins , B.can_ins, '', B.com_ins)
	from Bur_vote A, Base_commune B
	Where A. CAN_Ins = :lsInsCan and A.Com_ins = B.Com_ins  and Type = 'GE' " || lsWhereCompl || "
	Order by 14,1,10,3 
	Into :lsInsCom,:lsCom,:lsNoBv,:lsDesc,:lsAdr,:lsLoc,:lsCP,:lsPres,:lsNoPcTot, :lsCdi, :lsPw, :lsNoPcTotProv, :lsNoEcrit, :lsOrdre")
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set lsTabul = ''
.head 8 +  If nType = 1
.head 9 -  Set lsTabul = '	'
.head 8 +  If lsInsComPrec != lsInsCom
.head 9 -  Set sBuffer = '
'|| lsTabul || PalTraductMsg( 'COM' ) ||': ' || lsCom ||' (' || lsInsCom ||')
'|| lsTabul || SalStrRepeatX('-', SalStrLength( PalTraductMsg( 'COM' ) ) ) ||'
'
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Set lsInsComPrec = lsInsCom
.head 8 +  If lsCdi != ''
.head 9 -  Set lsTabul = lsTabul || '	'
.head 9 +  If lsCdiPrec != ''
.head 10 -  Set sBuffer = '
'
.head 10 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 +  If lsCdiPrec != lsCdi
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select @trim( CDI_NOM_N || ' ' || CDI_NOM_F ) || ' (' ||  cdi_ins || ')'  from c_district where cdi_ins = :lsCdi 
	INTO :lsCdiLabel ")
.head 10 +  If SqlFetchNext( ghSqlSecondaire, Btmp)
.head 11 +  If gsLangueSoft = 'N'
.head 12 -  Set lsCdiLabel = 'Districtsraad: '|| lsCdiLabel 
.head 12 -  Set lnLongTitre = 13
.head 11 +  Else
.head 12 -  Set lsCdiLabel = 'Conseil de district: '|| lsCdiLabel 
.head 12 -  Set lnLongTitre = 19
.head 10 -  Set sBuffer = lsTabul || lsCdiLabel ||'
'|| lsTabul || SalStrRepeatX('-', lnLongTitre) ||'
'
.head 10 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Set lsCdiPrec = lsCdi
.head 8 +  Else
.head 9 -  Set lsCdiLabel = ''
.head 9 -  Set lsTabul = lsTabul || ''
.head 9 -  Set lsCdiPrec = ''
.head 8 +  If bPw
.head 9 +  If lsPw != ''
.head 10 -  Set lsPw = 'PW: ' || lsPw || ' (' || lsNoEcrit ||')'
.head 9 +  Else
.head 10 -  Set lsPw = ''
.head 8 +  Else
.head 9 -  Set lsPw = ''
.head 8 -  Set sBuffer = 
lsTabul || '		' || PalLongueur( SalStrRightX('  ' || lsNoBv, 3) ||' - ' || lsDesc, 40, ' ' , '') || lsPw
.head 8 +  If SalStrTrimX( lsAdr) != ''
.head 9 -  Set sBuffer = sBuffer || '
			'|| lsTabul || lsAdr
.head 8 +  If SalStrTrimX( lsLoc ) != '' or SalStrTrimX( lsCP ) != ''
.head 9 -  Set sBuffer = sBuffer || '  -  ' || lsCP ||' ' || lsLoc 
.head 8 -  !
.head 8 +  If wsScrutinEl = '1'
.head 9 +  If SalStrLeftX( lsInsCom,2) != '21'
.head 10 -  Set sBuffer = sBuffer ||'
			'|| lsTabul || PalTraductMsg( 'PCTOT' ) ||': ' || lsNoPcTot || '     -     ' || PalTraductMsg( 'CAN' ) ||' : ' ||  lsNoPcTotProv
.head 9 +  Else
.head 10 -  Set sBuffer = sBuffer ||'
			'|| lsTabul || PalTraductMsg( 'PCTOT' ) ||': '  || lsNoPcTot
.head 8 +  Else
.head 9 -  Set sBuffer = sBuffer ||'
			'|| lsTabul || PalTraductMsg( 'PCTOT' ) || ': ' ||  lsNoPcTotProv
.head 8 +  If lsPres != ''
.head 9 -  Set sBuffer = sBuffer || '
			'|| lsTabul || PalTraductMsg( 'PRESIDENT' ) || ' ' || lsPres 
.head 8 -  Set sBuffer = sBuffer || '
'|| lsTabul || '		' || SalStrRepeatX( '-' , 60)||'
'
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 -  Call SalFileClose( hFile )
.head 7 -  Call PalEditFile(gsPathTemp ||"BV.TXT" )
.head 7 -  Call SalBringWindowToTop( hWndForm )
.head 7 -  Call SalFileOpen( hFile, gsPathTemp ||"BV.TXT", OF_Delete )
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'BV02' ), PalTraductMsg( 'MSG' ), MB_Ok )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'BV01' ), PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalValidBV
.head 4 -  Description: Validation des BV
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nV
.head 5 -  String: lsInsCan
.head 5 -  Boolean: bArret
.head 5 -  Receive String: psMsg
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 5 -  Number: lnPcTot
.head 5 -  Number: lnPcTotErr
.head 5 -  Number: lnBvTot
.head 5 -  Number: lnMaxBV
.head 5 -  Number: lnNbBV
.head 5 -  String: lsInsCom
.head 5 -  String: sTemp
.head 5 -  Long String: sTrace
.head 5 -  String: sNN_EID
.head 4 +  Actions
.head 5 -  Set lbOk = FALSE
.head 5 +  If nV != NUMBER_Null
.head 6 -  ! << V9.01c
.head 6 +  If SalMessageBox(  PalTraductMsg( 'BV47' ) ,  PalTraductMsg( '?' ), MB_IconQuestion | MB_OkCancel) = IDCANCEL
.head 7 -  Return (FALSE)
.head 6 -  ! >> V9.01c
.head 6 -  Call SalShowWindow( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set dfLibelleInfo = 'Validatie ....'
.head 6 +  Else
.head 7 -  Set dfLibelleInfo = 'Validation ....'
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  ! Trace
.head 6 -  Set sTrace = 'INS: ' || lsInsCan || '   -   '
.head 6 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || 'PREPA')
.head 6 -  !
.head 6 -  ! Si les n° de BV sont uniques dans le canton
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select BV_NO,Can_Ins, count(*) from bur_vote where Can_Ins = :lsInsCan
		Group by 1,2
		Having count(*) >= 2")
.head 6 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Call DispatchMessage(  )
.head 7 -  ! Si au moins un bureau dans chaque commune
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select A.COM_INS from Base_commune A where A.Can_Ins = :lsInsCan and Vote_el = :gnTypeVote and Type = 'GE' and
		not exists(Select B.Com_ins from Bur_vote B where A.Com_ins = B.Com_Ins)")
.head 7 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Call DispatchMessage(  )
.head 8 +  If wsScrutinEl = '1'
.head 9 -  ! Vérif si le nb de BV est inférieur à BV_MAX par Pc_Tot Commune
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select BV_COM_PCTOT, com_ins, count(*) from bur_vote where Can_Ins = :lsInsCan group by 1,2 having count(*) > "|| SalNumberToStrX(BV_MAX,0) ||"
	into :lnPcTotErr, :lnBvTot")
.head 9 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 10 +  If lnBvTot > BV_MAX
.head 11 +  If gsLangueSoft = 'N'
.head 12 -  Set psMsg = 'Tot PC ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 11 +  Else
.head 12 -  Set psMsg = 'PC Tot ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 11 +  If bArret
.head 12 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 11 -  Set lbOk = FALSE
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 11 -  !
.head 11 -  Call SalHideWindow( dfLibelleInfo )
.head 11 -  Return (FALSE)
.head 8 -  ! Vérif si le nb de BV est inférieur à BV_MAX par Pc_Tot Province
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select BV_CAN_PCTOT, count(*) from bur_vote where COM_Ins = :lsInsCan group by 1 having count(*) > "|| SalNumberToStrX(BV_MAX,0) ||"
	into :lnPcTotErr, :lnBvTot")
.head 8 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 9 +  If lnBvTot > BV_MAX
.head 10 +  If gsLangueSoft = 'N'
.head 11 -  Set psMsg = 'Tot PC ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 10 +  Else
.head 11 -  Set psMsg = 'PC Tot ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  Set lbOk = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 10 -  !
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 -  Return (FALSE)
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Si tous les bureaux ont un N° de PcTot associé
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from bur_vote where Can_Ins = :lsInsCan and (BV_COM_PCTOT is null or BV_CAN_PCTOT is null) ")
.head 8 +  Else If wsScrutinEl = '2'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from bur_vote where Can_Ins = :lsInsCan and (BV_CAN_PCTOT is null) ")
.head 8 -  !
.head 8 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Call DispatchMessage(  )
.head 9 +  If wsScrutinEl = '1'
.head 10 -  ! Si tous les pc de tot communaux ont au moins un bureau
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select COM_NB_PCTOT, com_ins from commune where can_ins = :lsInsCan into :lnPcTot, :lsInsCom ")
.head 10 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 11 +  If lnPcTot != NUMBER_Null and lnPcTot > 0
.head 12 +  While lnPcTot > 0
.head 13 -  Call DispatchMessage(  )
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select * from bur_vote where bv_com_pctot = :lnPcTot and com_ins = :lsInsCom ")
.head 13 +  If Not SqlFetchNext(  ghSqlSecondaire, Btmp)
.head 14 -  Set psMsg = PalTraductMsg( 'BV10' ) || '
' || PalTraductMsg( 'PCTOT' ) || SalNumberToStrX( lnPcTot, 0)
.head 14 +  If bArret
.head 15 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 14 -  Set lbOk = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 14 -  !
.head 14 -  Call SalHideWindow( dfLibelleInfo )
.head 14 -  Return (FALSE)
.head 14 -  Break
.head 13 +  Else
.head 14 -  Set lnPcTot = lnPcTot - 1
.head 12 +  If lnPcTot = 0
.head 13 -  Call DispatchMessage(  )
.head 11 +  Else
.head 12 -  Set psMsg = PalTraductMsg( 'BV09' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 10 -  ! Si tous les pc de tot cantonaux ont au moins un bureau
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select CAN_NB_PC_TOT from commune where com_ins = :lsInsCan into :lnPcTot ")
.head 10 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 11 +  If lnPcTot != NUMBER_Null and lnPcTot > 0
.head 12 +  While lnPcTot > 0
.head 13 -  Call DispatchMessage(  )
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select * from bur_vote where bv_can_pctot = :lnPcTot and can_ins = :lsInsCan ")
.head 13 +  If Not SqlFetchNext(  ghSqlSecondaire, Btmp)
.head 14 -  Set psMsg = PalTraductMsg( 'BV10' ) || '
' || PalTraductMsg( 'PCTOT' ) || SalNumberToStrX( lnPcTot, 0)
.head 14 +  If bArret
.head 15 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 14 -  Set lbOk = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 14 -  !
.head 14 -  Call SalHideWindow( dfLibelleInfo )
.head 14 -  Return (FALSE)
.head 14 -  Break
.head 13 +  Else
.head 14 -  Set lnPcTot = lnPcTot - 1
.head 12 +  If lnPcTot = 0
.head 13 -  Call DispatchMessage(  )
.head 11 +  Else
.head 12 -  Set psMsg = PalTraductMsg( 'BV09' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 9 +  Else If wsScrutinEl = '2'
.head 10 -  ! Si tous les pc de tot de canton ont au moins un bureau
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select CAN_NB_PC_TOT from base_commune where can_ins = :lsInsCan and type = 'CA' into :lnPcTot ")
.head 10 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 11 +  If lnPcTot != NUMBER_Null and lnPcTot > 0
.head 12 +  While lnPcTot > 0
.head 13 -  Call DispatchMessage(  )
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select * from bur_vote where bv_can_pctot = :lnPcTot and can_ins = :lsInsCan ")
.head 13 +  If Not SqlFetchNext(  ghSqlSecondaire, Btmp)
.head 14 -  Set psMsg = PalTraductMsg( 'BV10' ) || '
' || PalTraductMsg( 'PCTOT' ) || SalNumberToStrX( lnPcTot, 0)
.head 14 +  If bArret
.head 15 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 14 -  Set lbOk = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 14 -  !
.head 14 -  Call SalHideWindow( dfLibelleInfo )
.head 14 -  Return (FALSE)
.head 14 -  Break
.head 13 +  Else
.head 14 -  Set lnPcTot = lnPcTot - 1
.head 12 +  If lnPcTot = 0
.head 13 -  Call DispatchMessage(  )
.head 11 +  Else
.head 12 -  Set psMsg = PalTraductMsg( 'BV09' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 9 -  ! Si les n° de BV sont successifs dans le canton
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select max(@value(BV_NO)) from bur_vote where Can_Ins = :lsInsCan into :lnMaxBV ")
.head 9 +  If SqlFetchNext(  ghSqlMain, Btmp)
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from bur_vote where Can_Ins = :lsInsCan into :lnNbBV ")
.head 10 +  If SqlFetchNext(  ghSqlMain, Btmp)
.head 11 +  If lnMaxBV != lnNbBV
.head 12 -  Set psMsg = PalTraductMsg( 'BV23' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 11 +  Else
.head 12 -  Set lbOk = TRUE
.head 8 +  Else
.head 9 -  Set psMsg = PalTraductMsg( 'BV05' )
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 9 -  !
.head 9 -  Call SalHideWindow( dfLibelleInfo )
.head 9 -  Return (FALSE)
.head 7 +  Else
.head 8 -  Set psMsg = PalTraductMsg( 'BV04' )
.head 8 +  If bArret
.head 9 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 8 -  !
.head 8 -  Call SalHideWindow( dfLibelleInfo )
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Set psMsg = PalTraductMsg( 'BV03' )
.head 7 +  If bArret
.head 8 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 7 -  !
.head 7 -  Call SalHideWindow( dfLibelleInfo )
.head 7 -  Return (FALSE)
.head 6 -  !
.head 6 +  If lbOk
.head 7 -  ! Verification du nombre de BV par rapport au chiffre théorique de BV encodés
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain , "select com_ins, @decode( com_ins , can_ins, '', com_ins) , count(*) from bur_vote where can_ins = :lsInsCan group by 1,2 order by 2 into :lsInsCom, :sTemp,  :lnNbBV ")
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 8 +  If lnNbBV > 0
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "select " || wsLabelCommune || ", Nb_bv from Base_commune where com_ins = :lsInsCom and type = 'GE' into  :sTemp, :lnMaxBV ")
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 +  If lnNbBV != lnMaxBV
.head 11 +  If SalMessageBox( lsInsCom || ' - ' || sTemp ||'
' || PalTraductMsg( 'BV52' ) ||'
' || PalTraductMsg( 'BV28' ), PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 12 -  ! Master code
.head 12 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, sNN_EID )
.head 12 +  If NOT lbOk
.head 13 -  Set psMsg = PalTraductMsg( 'PW01' )
.head 13 +  If bArret
.head 14 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 13 -  !
.head 13 -  Call SalHideWindow( dfLibelleInfo )
.head 13 -  Return (FALSE)
.head 12 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Update Base_commune set nb_bv = :lnNbBV where com_ins = :lsInsCom and type = 'GE' ")
.head 12 -  Call SqlCommit(ghSqlSecondaire )
.head 12 -  Set psMsg = PalTraductMsg( 'GC03' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 11 +  Else
.head 12 -  Set lbOk = FALSE
.head 12 -  Set psMsg = 'Cancel'
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 9 +  Else
.head 10 -  Set lbOk = FALSE
.head 10 -  Set psMsg = PalTraductMsg( 'BV08' )
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 10 -  !
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 -  Return (FALSE)
.head 8 +  Else
.head 9 -  Set lbOk = FALSE
.head 9 -  Set psMsg = PalTraductMsg( 'BV04' )
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 9 -  !
.head 9 -  Call SalHideWindow( dfLibelleInfo )
.head 9 -  Return (FALSE)
.head 5 +  Else
.head 6 +  If nV = NUMBER_Null
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, sNN_EID )
.head 7 +  If NOT lbOk
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 5 -  ! !
.head 5 +  If lbOk
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_Vote set BV_Valide = :nV where CAN_Ins = :lsInsCan ")
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 +  If nV != NUMBER_Null
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || 'OK' )
.head 7 -  !
.head 6 +  Else
.head 7 -  ! Trace
.head 7 +  If gsUserEID= '1' and sNN_EID != ''
.head 8 -  Set sNN_EID = ' - EID: ' || sNN_EID 
.head 7 +  Else
.head 8 -  Set sNN_EID = ''
.head 7 -  Set sTrace = 'INS: ' || lsInsCan || sNN_EID ||'   -   '
.head 7 -  Call PalTraceAction( gsUserLog, "DEVALID BV", sTrace || 'OK')
.head 7 -  !
.head 6 -  Set psMsg='OK' 
.head 5 -  Call SalHideWindow( dfLibelleInfo )
.head 5 -  Return (TRUE)
.head 3 +  Function: PalValidBV_Bxl
.head 4 -  Description: Validation des BV
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nV
.head 5 -  String: lsInsCom
.head 5 -  Boolean: bArret
.head 5 -  Receive String: psMsg
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: lbOk
.head 5 -  Number: lnPcTot
.head 5 -  Number: lnPcTotErr
.head 5 -  Number: lnBvTot
.head 5 -  Number: lnMaxBV
.head 5 -  Number: lnNbBV
.head 5 -  String: sTemp
.head 5 -  Long String: sTrace
.head 5 -  String: sNN_EID
.head 4 +  Actions
.head 5 -  Set lbOk = FALSE
.head 5 +  If nV != NUMBER_Null
.head 6 -  ! << V9.01c
.head 6 +  If SalMessageBox(  PalTraductMsg( 'BV47' ) ,  PalTraductMsg( '?' ), MB_IconQuestion | MB_OkCancel) = IDCANCEL
.head 7 -  Return (FALSE)
.head 6 -  ! >> V9.01c
.head 6 -  Call SalShowWindow( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set dfLibelleInfo = 'Validatie ....'
.head 6 +  Else
.head 7 -  Set dfLibelleInfo = 'Validation ....'
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  ! Trace
.head 6 -  Set sTrace = 'INS: ' || lsInsCom || '   -   '
.head 6 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || 'PREPA')
.head 6 -  !
.head 6 -  ! Si les n° de BV sont uniques dans la commune
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select BV_NO,Com_Ins, count(*) from bur_vote where COM_Ins = :lsInsCom
		Group by 1,2
		Having count(*) >= 2")
.head 6 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Call DispatchMessage(  )
.head 7 -  ! Si au moins un bureau dans la commune
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select A.COM_INS from Base_commune A where A.COM_Ins = :lsInsCom and Vote_el = 1and Type = 'GE' and
		not exists(Select B.Com_ins from Bur_vote B where A.Com_ins = B.Com_Ins)")
.head 7 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Vérif si le nb de BV est inférieur à BV_MAX par Pc_Tot
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select BV_COM_PCTOT, count(*) from bur_vote where COM_Ins = :lsInsCom group by 1 having count(*) > "|| SalNumberToStrX(BV_MAX,0) ||"
	into :lnPcTotErr, :lnBvTot")
.head 8 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 9 +  If lnBvTot > BV_MAX
.head 10 +  If gsLangueSoft = 'N'
.head 11 -  Set psMsg = 'Tot PC ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 10 +  Else
.head 11 -  Set psMsg = 'PC Tot ' || SalNumberToStrX(lnPcTotErr,0) ||' :'||  PalTraductMsg( 'BV41' ) || SalNumberToStrX( BV_MAX, 0)
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  Set lbOk = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID LI", sTrace || psMsg )
.head 10 -  !
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 -  Return (FALSE)
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Si tous les bureaux ont un N° de PcTot associé
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from bur_vote where com_Ins = :lsInsCom and BV_COM_PCTOT is null ")
.head 8 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Call DispatchMessage(  )
.head 9 -  ! Si tous les pc de tot ont au moins un bureaux
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select COM_NB_PCTOT from commune where com_ins = :lsInsCom into :lnPcTot ")
.head 9 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 10 +  If lnPcTot != NUMBER_Null and lnPcTot > 0
.head 11 +  While lnPcTot > 0
.head 12 -  Call DispatchMessage(  )
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "select * from bur_vote where bv_com_pctot = :lnPcTot and com_ins = :lsInsCom ")
.head 12 +  If Not SqlFetchNext(  ghSqlMain, Btmp)
.head 13 -  Set psMsg = PalTraductMsg( 'BV10' ) || '
' || PalTraductMsg( 'PCTOT' ) || SalNumberToStrX( lnPcTot, 0)
.head 13 +  If bArret
.head 14 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 13 -  Set lbOk = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 13 -  !
.head 13 -  Call SalHideWindow( dfLibelleInfo )
.head 13 -  Return (FALSE)
.head 13 -  Break
.head 12 +  Else
.head 13 -  Set lnPcTot = lnPcTot - 1
.head 11 +  If lnPcTot = 0
.head 12 -  Call DispatchMessage(  )
.head 12 -  ! Test des n° de PcTot avec Conseils de district sont corrects
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Select cdi_ins from bur_vote A where cdi_ins is not null and com_ins = :lsInsCom and
	exists( select B.bv_com_pctot from bur_vote B where A.cdi_ins != B.cdi_ins and A.bv_com_pctot = B.bv_com_pctot ) ")
.head 12 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 13 -  Set lbOk = TRUE
.head 12 +  Else
.head 13 -  Set psMsg = PalTraductMsg( 'BV05' )
.head 13 +  If bArret
.head 14 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 13 -  !
.head 13 -  Call SalHideWindow( dfLibelleInfo )
.head 13 -  Return (FALSE)
.head 12 -  ! << 9.02b
.head 12 -  ! Si les n° de BV sont successifs dans la commune
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Select max(@value(BV_NO)) from bur_vote where Com_Ins = :lsInsCom into :lnMaxBV ")
.head 12 +  If SqlFetchNext(  ghSqlMain, Btmp)
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from bur_vote where Com_Ins = :lsInsCom into :lnNbBV ")
.head 13 +  If SqlFetchNext(  ghSqlMain, Btmp)
.head 14 +  If lnMaxBV != lnNbBV
.head 15 -  Set psMsg = PalTraductMsg( 'BV23' )
.head 15 +  If bArret
.head 16 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 15 -  !
.head 15 -  Call SalHideWindow( dfLibelleInfo )
.head 15 -  Return (FALSE)
.head 14 +  Else
.head 15 -  Set lbOk = TRUE
.head 12 -  ! >> 9.02b
.head 10 +  Else
.head 11 -  Set psMsg = PalTraductMsg( 'BV09' )
.head 11 +  If bArret
.head 12 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 11 -  !
.head 11 -  Call SalHideWindow( dfLibelleInfo )
.head 11 -  Return (FALSE)
.head 9 +  Else
.head 10 -  Set psMsg = PalTraductMsg( 'BV08' )
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 10 -  !
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 -  Return (FALSE)
.head 8 +  Else
.head 9 -  Set psMsg = PalTraductMsg( 'BV05' )
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 9 -  !
.head 9 -  Call SalHideWindow( dfLibelleInfo )
.head 9 -  Return (FALSE)
.head 7 +  Else
.head 8 -  Set psMsg = PalTraductMsg( 'BV04' )
.head 8 +  If bArret
.head 9 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 8 -  !
.head 8 -  Call SalHideWindow( dfLibelleInfo )
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Set psMsg = PalTraductMsg( 'BV03' )
.head 7 +  If bArret
.head 8 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 7 -  !
.head 7 -  Call SalHideWindow( dfLibelleInfo )
.head 7 -  Return (FALSE)
.head 6 -  !
.head 6 +  If lbOk
.head 7 -  ! Verification du nombre de BV par rapport au chiffre théorique de BV encodés
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain , "select com_ins, @decode( com_ins , can_ins, '', com_ins) , count(*) from bur_vote where can_ins = :lsInsCan group by 1,2 order by 2 into :lsInsCom, :sTemp,  :lnNbBV ")
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 8 +  If lnNbBV > 0
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "select " || wsLabelCommune || ", Nb_bv from Base_commune where com_ins = :lsInsCom and type = 'GE' into  :sTemp, :lnMaxBV ")
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 +  If lnNbBV != lnMaxBV
.head 11 +  If SalMessageBox( lsInsCom || ' - ' || sTemp ||'
' || PalTraductMsg( 'BV52' ) ||'
' || PalTraductMsg( 'BV28' ), PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 12 -  ! Master code
.head 12 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, sNN_EID )
.head 12 +  If NOT lbOk
.head 13 -  Set psMsg = PalTraductMsg( 'PW01' )
.head 13 +  If bArret
.head 14 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 13 -  !
.head 13 -  Call SalHideWindow( dfLibelleInfo )
.head 13 -  Return (FALSE)
.head 12 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Update Base_commune set nb_bv = :lnNbBV where com_ins = :lsInsCom and type = 'GE' ")
.head 12 -  Call SqlCommit(ghSqlSecondaire )
.head 12 -  Set psMsg = PalTraductMsg( 'GC03' )
.head 12 +  If bArret
.head 13 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 11 +  Else
.head 12 -  Set lbOk = FALSE
.head 12 -  Set psMsg = 'Cancel'
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 12 -  !
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 -  Return (FALSE)
.head 9 +  Else
.head 10 -  Set lbOk = FALSE
.head 10 -  Set psMsg = PalTraductMsg( 'BV08' )
.head 10 +  If bArret
.head 11 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 10 -  !
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 -  Return (FALSE)
.head 8 +  Else
.head 9 -  Set lbOk = FALSE
.head 9 -  Set psMsg = PalTraductMsg( 'BV04' )
.head 9 +  If bArret
.head 10 -  Call SalMessageBox( psMsg, PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || psMsg )
.head 9 -  !
.head 9 -  Call SalHideWindow( dfLibelleInfo )
.head 9 -  Return (FALSE)
.head 5 +  Else
.head 6 +  If nV = NUMBER_Null
.head 7 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, sNN_EID)
.head 7 +  If NOT lbOk
.head 8 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 5 -  ! !
.head 5 +  If lbOk
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_Vote set BV_Valide = :nV where COM_Ins = :lsInsCom ")
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 +  If nV != NUMBER_Null
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "VALID BV", sTrace || 'OK' )
.head 7 -  !
.head 6 +  Else
.head 7 -  ! Trace
.head 7 +  If gsUserEID= '1' and sNN_EID != ''
.head 8 -  Set sNN_EID = ' - EID: ' || sNN_EID 
.head 7 +  Else
.head 8 -  Set sNN_EID = ''
.head 7 -  Set sTrace = 'INS: ' || lsInsCom || sNN_EID || '   -   '
.head 7 -  Call PalTraceAction( gsUserLog, "DEVALID BV", sTrace || 'OK')
.head 7 -  !
.head 6 -  Set psMsg='OK' 
.head 5 -  Call SalHideWindow( dfLibelleInfo )
.head 5 -  Return (TRUE)
.head 3 +  Function: PalVerifValidCantonBV
.head 4 -  Description: vérifie si tout le canton est validé
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nCommune
.head 5 -  Number: nCommuneTot
.head 5 -  Number: nValid
.head 5 -  Number: nBV
.head 5 -  Number: i
.head 5 -  String: lsCtrl
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(com_ins) from commune  where Can_Ins = :tblCantonBV.colIns
	into :nCommuneTot ")
.head 5 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 5 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(distinct com_ins) , sum(bv_valide) from Bur_vote where Can_Ins = :tblCantonBV.colIns
	into :nCommune, :nValid ")
.head 5 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 5 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select count(bv_No) from Bur_vote where Can_Ins = :tblCantonBV.colIns
	into :nBV ")
.head 5 -  Call SqlFetchNext( ghSqlTertiaire, Btmp )
.head 5 +  If nValid != NUMBER_Null and nCommune != NUMBER_Null
.head 6 -  Set tblCantonBV.colStatut= '1'
.head 5 +  Else
.head 6 -  Set tblCantonBV.colStatut= ''
.head 5 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_New , FALSE )
.head 5 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_Edited , FALSE )
.head 5 +  If tblCantonBV.colStatut= '1'
.head 6 -  Call VisTblSetRowColor( tblCantonBV, SalTblQueryContext( tblCantonBV) , COLOR_Red )
.head 6 -  !
.head 6 +  If NOT PalDtmCtrl( 'BV', tblCantonBV.colIns, 'CAN' )
.head 7 -  Call VisTblSetRowColor( tblCantonBV , SalTblQueryContext( tblCantonBV) , COLOR_DarkGreen )
.head 7 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_Edited, TRUE )
.head 7 -  Set tblCantonBV.colCtrl= 'v'
.head 5 +  Else If nBV > 0
.head 6 -  Call VisTblSetRowColor( tblCantonBV, SalTblQueryContext( tblCantonBV) , COLOR_Blue )
.head 6 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_New , TRUE )
.head 5 +  Else
.head 6 -  Call VisTblSetRowColor( tblCantonBV, SalTblQueryContext( tblCantonBV) , COLOR_DarkGray )
.head 6 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_Edited, FALSE )
.head 3 +  Function: PalVerifGenereDiskBV
.head 4 -  Description: Vérifier si on peut générer les disquettes BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nValid
.head 5 -  Number: nV2
.head 5 -  Number: nV3
.head 5 -  Number: nV3b
.head 5 -  String: sValid
.head 5 -  String: sV2
.head 5 -  String: sV3
.head 5 -  String: sV3b
.head 5 -  String: sV5
.head 5 -  String: sV6
.head 5 -  String: sV8
.head 5 -  String: sV9
.head 5 -  String: sInsPro
.head 5 -  String: sIns
.head 5 -  String: sRegion
.head 5 -  String: sElectionEnCours
.head 5 -  Boolean: bCPAS
.head 5 -  Boolean: bCDist
.head 5 -  Boolean: bOk
.head 5 -  Long String: lsSelect
.head 5 -  Long String: lsWhere
.head 4 +  Actions
.head 5 +  If tblCommuneBV.colStatut = '1'
.head 6 +  If wsScrutinEl = '1'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select V5,V6,V9,Com_el_cpas,com_el_cdistrict from commune where com_ins = :tblCommuneBV.colIns 
	Into :sV5,:sV6,:sV9,:bCPAS,:bCDist ")
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '21'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 +  If sV5 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 -  !
.head 8 +  If bOk and sV6 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 8 -  !
.head 6 +  ! Else If wsScrutinEl = '2'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins, Region from Commune where Com_ins = :tblCommuneBV.colIns  into :sInsPro, :sRegion ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set sV2 = ''
.head 7 -  Set sV3 = ''
.head 7 -  Set sV3b = ''
.head 7 -  Set lsSelect = "select V2,0,0 from Base_commune where Pro_ins = :sInsPro  and Type = 'CI' "
.head 7 +  If sRegion = 'BXL'
.head 8 -  Set lsSelect = lsSelect || "
UNION 
select 0,V3,0 from Base_commune where Region = 'WAL'  and Type = 'SE'
UNION 
select 0,0,V3 from Base_commune where Region = 'FLA'  and Type = 'SE'"
.head 7 +  Else 
.head 8 -  Set lsSelect = lsSelect || "
UNION 
select 0,V3,0 from Base_commune where Region = :sRegion  and Type = 'SE' "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2,:nV3,:nV3b ")
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 8 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 8 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 8 -  !
.head 7 +  If sV2 = '1'
.head 8 -  Set bOk = TRUE
.head 7 +  Else 
.head 8 -  Set bOk = FALSE
.head 7 +  If bOk and sV3 = '1'
.head 8 -  Set bOk = TRUE
.head 7 +  Else 
.head 8 -  Set bOk = FALSE
.head 7 +  If sRegion = 'BXL'
.head 8 +  If bOk and sV3b = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else 
.head 9 -  Set bOk = FALSE
.head 6 +  Else If wsScrutinEl = '2'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins, Region from Commune where Com_ins = :tblCommuneBV.colIns  into :sInsPro, :sRegion ")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set bOk = TRUE
.head 7 -  Set sElectionEnCours = ">," || wsOrdreEl ||",<"
.head 7 -  ! Europe
.head 7 +  If SalStrScan( sElectionEnCours , ",1,")!=-1 and bOk
.head 8 -  Set sV3 = ''
.head 8 -  Set sV3b = ''
.head 8 +  If sRegion = 'BXL'
.head 9 -  Set lsSelect ="select V3,0 from Base_commune where Region = 'WAL'  and Type = 'EU'
UNION 
select 0,V3 from Base_commune where Region = 'FLA'  and Type = 'EU' "
.head 8 +  Else
.head 9 -  Set lsSelect = "select V3,0 from Base_commune where Region = :sRegion  and Type = 'EU' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV3,:nV3b ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 9 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 9 -  !
.head 8 +  If bOk and sV3 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 8 +  If sRegion = 'BXL'
.head 9 +  If bOk and sV3b = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 7 -  ! Chambre
.head 7 +  If SalStrScan( sElectionEnCours , ",2,")!=-1 and bOk
.head 8 -  Set sV2 = ''
.head 8 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'CI' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 7 -  ! Sénat
.head 7 +  If SalStrScan( sElectionEnCours , ",3,")!=-1 and bOk
.head 8 -  Set sV3 = ''
.head 8 -  Set sV3b = ''
.head 8 +  If sRegion = 'BXL'
.head 9 -  Set lsSelect ="select V3,0 from Base_commune where Region = 'WAL'  and Type = 'SE'
UNION 
select 0,V3 from Base_commune where Region = 'FLA'  and Type = 'SE'"
.head 8 +  Else
.head 9 -  Set lsSelect = "select V3,0 from Base_commune where Region = :sRegion  and Type = 'SE' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV3,:nV3b ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 9 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 9 -  !
.head 8 +  If bOk and sV3 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 8 +  If sRegion = 'BXL'
.head 9 +  If bOk and sV3b = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 7 -  ! WL
.head 7 +  If SalStrScan( sElectionEnCours , ",4,")!=-1 and sRegion = 'WAL' and bOk
.head 8 +  If gsWL_Type = '0'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Arron_ins from Base_commune where Com_ins = :tblCommuneBV.colIns and type = 'GE' into :sIns")
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set lsWhere = " WL_INS_DEP like'%" || sIns ||"%' and Type = 'WR' "
.head 9 -  Set sV2 = ''
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select DIS_INS from Base_commune where Com_ins = :tblCommuneBV.colIns and type = 'GE' into :sIns")
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'WL' "
.head 8 -  Set sV2 = ''
.head 8 -  Set lsSelect = "select V2 from Base_commune where " || lsWhere
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 7 -  ! VL
.head 7 +  If SalStrScan( sElectionEnCours , ",7,")!=-1 and sRegion = 'FLA' and bOk
.head 8 -  Set sV2 = ''
.head 8 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'VL' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 7 -  ! BR
.head 7 +  If SalStrScan( sElectionEnCours , ",10,")!=-1 and sRegion = 'BXL' and bOk
.head 8 -  Set sV2 = ''
.head 8 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'BR' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 7 -  ! MBPF
.head 7 +  If SalStrScan( sElectionEnCours , ",11,")!=-1 and sRegion = 'BXL' and bOk
.head 8 -  Set sV2 = ''
.head 8 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'BV' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 6 +  If bOk
.head 7 +  If wbActivate
.head 8 -  Call SalEnableWindow( pbGenereBV )
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbGenereBV )
.head 7 -  Call PalVerifEtatBureau(1)
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbGenereBV )
.head 6 -  !
.head 3 +  Function: PalVerifEtatBureau
.head 4 -  Description: Vérification de l'état du BV + coloration de la ligne en fonction de l'état
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bEtatGenereBV
.head 5 -  Number: i
.head 5 -  String: lsCtrl
.head 5 -  String: lsIdentif
.head 4 +  Actions
.head 5 -  ! Return un boolean qui est l'état du bouton généré le BV
.head 5 -  Set bEtatGenereBV = FALSE
.head 5 +  If nType = 1
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select BV_Statut, BV_Createur , bv_identif from bur_vote 
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV 
	into :tblBureauVote.colStatut , :tblBureauVote.colUser, :lsIdentif " )
.head 6 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select bv_identif from bur_vote 
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV 
	into  :lsIdentif " )
.head 6 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 5 -  Call SalTblSetRowFlags( tblBureauVote, SalTblQueryContext( tblBureauVote), ROW_Edited, FALSE )
.head 5 -  Call SalTblSetRowFlags( tblBureauVote, SalTblQueryContext( tblBureauVote), ROW_New, FALSE )
.head 5 -  Set tblBureauVote.colCtrl = ''
.head 5 +  If tblBureauVote.colStatut = ''
.head 6 -  Set tblBureauVote.colStatutBV = ''
.head 6 -  Call VisTblSetRowColor( tblBureauVote, SalTblQueryContext( tblBureauVote) , COLOR_Black )
.head 6 -  Call SalDisableWindow( pbEtiquBV )
.head 6 +  If wbActivate
.head 7 -  Call SalEnableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = TRUE
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = FALSE
.head 5 +  Else If SalStrLeftX( SalStrUpperX(tblBureauVote.colStatut),5)  = 'PREPA'
.head 6 -  Set tblBureauVote.colStatutBV = PalTraductMsg( 'EN_COURS') || ' - ' || SalStrRightX(  tblBureauVote.colStatut, 19 )
.head 6 -  Call VisTblSetRowColor( tblBureauVote, SalTblQueryContext( tblBureauVote) , COLOR_Blue )
.head 6 -  Call SalTblSetRowFlags( tblBureauVote, SalTblQueryContext( tblBureauVote), ROW_New, TRUE )
.head 6 -  Call SalDisableWindow( pbGenereBV )
.head 6 -  Call SalDisableWindow( pbEtiquBV )
.head 6 -  Set bEtatGenereBV = FALSE
.head 5 +  Else If SalStrLeftX( SalStrUpperX(tblBureauVote.colStatut),4) = 'ECR.'
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set tblBureauVote.colStatutBV = VisStrSubstitute( tblBureauVote.colStatut, 'Ecr','Sch')
.head 6 +  Else
.head 7 -  Set tblBureauVote.colStatutBV = tblBureauVote.colStatut
.head 6 -  Call VisTblSetRowColor( tblBureauVote, SalTblQueryContext( tblBureauVote) , COLOR_Red )
.head 6 -  ! Call SalTblSetRowFlags( tblBureauVote, SalTblQueryContext( tblBureauVote), ROW_Edited, TRUE )
.head 6 -  Call SalEnableWindow( pbEtiquBV )
.head 6 +  If wbActivate
.head 7 -  Call SalEnableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = TRUE
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = FALSE
.head 6 +  If lsIdentif != ''
.head 7 -  Set lsCtrl = ''
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbDiskBV
.head 8 +  If lsCtrl != ''
.head 9 -  Set lsCtrl = lsCtrl ||"|"
.head 8 -  Set lsCtrl = lsCtrl || "1"
.head 8 -  Set i = i +1
.head 7 +  If lsIdentif = lsCtrl
.head 8 -  Set tblBureauVote.colCtrl = 'v'
.head 8 -  Call VisTblSetRowColor( tblBureauVote, SalTblQueryContext( tblBureauVote) , COLOR_DarkGreen )
.head 8 -  Call SalTblSetRowFlags( tblBureauVote, SalTblQueryContext( tblBureauVote), ROW_Edited, TRUE )
.head 8 +  If tblCommuneBV.colCtrl != 'v'
.head 9 +  If NOT PalDtmCtrl( 'BV', tblCommuneBV.colIns, 'COM' )
.head 10 -  Call VisTblSetRowColor( tblCommuneBV , SalTblQueryContext( tblCommuneBV) , COLOR_DarkGreen )
.head 10 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV), ROW_Edited, TRUE )
.head 10 -  Set tblCommuneBV.colCtrl = 'v'
.head 8 +  If tblCommuneBV.colCtrl = 'v' and tblCantonBV.colCtrl != 'v'
.head 9 +  If NOT PalDtmCtrl( 'BV', tblCantonBV.colIns, 'CAN' )
.head 10 -  Call VisTblSetRowColor( tblCantonBV , SalTblQueryContext( tblCantonBV) , COLOR_DarkGreen )
.head 10 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV), ROW_Edited, TRUE )
.head 10 -  Set tblCantonBV.colCtrl = 'v'
.head 5 +  Else If SalStrLeftX( SalStrUpperX(tblBureauVote.colStatut),3) = 'ERR'
.head 6 -  Set tblBureauVote.colStatutBV = tblBureauVote.colStatut
.head 6 -  Call VisTblSetRowColor( tblBureauVote, SalTblQueryContext( tblBureauVote) , COLOR_DarkAqua		 )
.head 6 -  Call SalDisableWindow( pbEtiquBV )
.head 6 +  If wbActivate
.head 7 -  Call SalEnableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = TRUE
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbGenereBV )
.head 7 -  Set bEtatGenereBV = FALSE
.head 5 -  !
.head 5 -  !
.head 5 -  Return ( bEtatGenereBV)
.head 3 +  Function: PalGenereDiskBV
.head 4 -  Description: Génération des diquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsTrace
.head 5 -  String: lsEtatPrec
.head 5 -  String: lsUserPrec
.head 5 -  String: lsLangue
.head 5 -  String: lsClef1
.head 5 -  String: lsClef2
.head 5 -  String: lsIVMac
.head 5 -  String: lsIVClef
.head 5 -  String: lsPwBV
.head 5 -  String: lsPwBVPrec
.head 5 -  String: lsClef1Prec
.head 5 -  String: lsClef2Prec
.head 5 -  String: lsCodeMacPrec
.head 5 -  String: lsNoElection
.head 5 -  ! Boolean: bContinue
.head 5 -  Boolean: bCPAS
.head 5 -  Boolean: bCDist
.head 5 -  String: lsTemp
.head 5 -  String: lsTemp2
.head 5 -  String: lsStatut
.head 5 -  String: lsCarCtrl
.head 5 -  String: lsDateHeure
.head 5 -  String: lsTraceDSK
.head 5 -  String: lsElectionCommune
.head 5 -  String: lsNoArrond
.head 5 -  String: lsNoCanton
.head 5 -  String: lsNbScrutin
.head 5 -  String: lsDateEl
.head 5 -  String: lsChamp
.head 5 -  String: lsLogoListe
.head 5 -  String: lsLogoListe2
.head 5 -  String: lsProIns
.head 5 -  String: lsCircIns
.head 5 -  String: lsCollIns
.head 5 -  String: lsSelect
.head 5 -  String: lsNbListe
.head 5 -  String: lsNoListe
.head 5 -  String: lsNomListe
.head 5 -  String: lsNomListeOem
.head 5 -  String: lsNom1
.head 5 -  String: lsNbCdt
.head 5 -  String: lsNbSupp
.head 5 -  String: lsNom2
.head 5 -  String: lsNom1Oem
.head 5 -  String: lsNom2Oem
.head 5 -  String: lsCdtType
.head 5 -  String: lsEffectif
.head 5 -  String: lsSuppl
.head 5 -  String: lsRegLing
.head 5 -  String: lsLangueColl
.head 5 -  String: lsRegion
.head 5 -  String: lsFile
.head 5 -  String: lsLecteurs
.head 5 -  String: lsPath
.head 5 -  String: lsTempColl
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsArrayFileDonnee[*]
.head 5 -  String: lsArrayFileFixe[*]
.head 5 -  Number: nFile
.head 5 -  Number: nFileTot
.head 5 -  Number: nFileDonnee
.head 5 -  Number: nFileFixe
.head 5 -  Number: nCaract
.head 5 -  Number: nEcritPrec
.head 5 -  Number: nTotalSpace
.head 5 -  Number: nFreeSpace
.head 5 -  Number: nMaxSupp
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  Number: nLigne
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  String: lsDate1
.head 5 -  String: lsDate2
.head 5 -  String: lsInsWL
.head 5 -  String: lsLisGrl
.head 5 -  String: lsGroupe
.head 4 +  Actions
.head 5 -  Set bContinue = TRUE
.head 5 +  If gnNbDiskBV = NUMBER_Null or gnNbDiskBV <= 0
.head 6 -  ! Aucun lecteur défini dans le .INI
.head 6 -  Call SalMessageBox(PalTraductMsg( "BV13" ) ,PalTraductMsg( "MSG" ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  If NOT PalDtmFloppy( gnNbLecteur, gsLettreLecteur, gnNbLecteurDtm)
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT01') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 5 +  If bContinue and PalVerifEtatBureau( 1 ) and PalVerifPcTot_BV( tblCommuneBV.colIns, tblBureauVote.colNoBV , tblBureauVote.colNoPcTotBV, tblBureauVote.colNoPcTotProvBV , tblCommuneBV.colInsCanton)
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call SalDisableWindow( hWndForm )
.head 6 -  Call SalDisableWindow( pbGenereBV )
.head 6 -  Call SalDisableWindow( pbEtiquBV )
.head 6 -  Call SalDisableWindow( pbPwBV )
.head 6 -  Set dfLibelleInfo = PalTraductMsg('PREPA')
.head 6 -  Call SalShowWindow( dfLibelleInfo )
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set lsEtatPrec = tblBureauVote.colStatut
.head 6 -  Set lsUserPrec = tblBureauVote.colUser
.head 6 -  Set nEcritPrec = tblBureauVote.colNoEcrit
.head 6 -  Set bContinue = TRUE
.head 6 -  Set lsDateHeure = PalDtmDateHeure( )
.head 6 -  Set lsStatut = 'PREPA     ' || lsDateHeure
.head 6 +  If SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur = :gsUserLog where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  Call PalVerifEtatBureau( 1 )
.head 7 +  If tblBureauVote.colStatut = lsStatut and tblBureauVote.colUser = gsUserLog
.head 8 -  Call tblBureauVote.PalDtmDetailBV( gsRestrCom )
.head 8 -  ! Trace
.head 8 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommuneBV.colIns,0) ||'   -   BV N°' || SalNumberToStrX( tblBureauVote.colNoBV,0) || '   -->   '
.head 8 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 8 -  !
.head 8 +  If tblBureauVote.colNoEcrit = NUMBER_Null
.head 9 -  Set lsTraceDSK =  '01' || SalStrLeftX( VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsDateHeure, 20) , ' ' , ''), '/', '') , '.', ''), 8)
.head 8 +  Else
.head 9 -  Set lsTraceDSK =  SalStrRightX('00' ||  SalNumberToStrX(tblBureauVote.colNoEcrit+1,0) ,2) || SalStrLeftX( VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsDateHeure, 20) , ' ' , ''), '/', '') , '.', ''), 8)
.head 8 -  Call VisFileDelete( gsPathBV||"*.*" )
.head 8 -  !
.head 8 +  If SalStrUpperX(SalStrLeftX(lsEtatPrec, 4)) = 'ECR.'
.head 9 -  Call SalHideWindow( dfLibelleInfo )
.head 9 +  If SalMessageBox(PalTraductMsg( "BV19" )||"
" || PalTraductMsg( "BV20" ) ,PalTraductMsg( "?" ), MB_OkCancel | MB_IconQuestion ) = IDCANCEL
.head 10 -  Set lsStatut = lsEtatPrec
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut, bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 10 -  Call SqlCommit( ghSqlMain )
.head 10 -  Set bContinue = FALSE
.head 10 -  ! Trace
.head 10 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommuneBV.colIns,0) ||'   -   BV N°' || SalNumberToStrX( tblBureauVote.colNoBV,0) || '   -->   '
.head 10 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Cancel')
.head 10 -  !
.head 9 +  If bContinue
.head 10 -  Call SalShowWindow( dfLibelleInfo )
.head 10 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 8 +  If bContinue
.head 9 -  ! En cours de création
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select A.Com_el_cpas,A.com_el_cdistrict,B.No_Arrond, B.No_Canton , A.Region, B.Reg_ling, B.Pro_ins, B.WL_INS_DEP
	from commune A, base_commune B
	where A.com_ins = :tblCommuneBV.colIns and A.Com_Ins = B.Com_ins and B.Type = 'GE'
	Into :bCPAS, :bCDist , :lsNoArrond, :lsNoCanton, :lsRegLing, :lsLangue, :lsProIns, :lsInsWL ")
.head 9 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 10 +  If wsScrutinEl = '2'
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Select B.No_Arrond, B.No_Canton 
	from base_commune B
	where B.Can_ins = :tblCommuneBV.colInsCanton and B.Type = 'CA'
	Into :lsNoArrond, :lsNoCanton ")
.head 11 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 12 -  ! Impossible de trouver la commune 
.head 12 -  Set bContinue = FALSE
.head 12 -  Set lsDateHeure = PalDtmDateHeure( )
.head 12 -  Set lsStatut = 'ERR. - DB2 b   ' || lsDateHeure
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 12 -  Call SqlCommit( ghSqlMain )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 12 -  !
.head 10 -  Set lsRegion = lsRegLing
.head 10 +  If wsScrutinEl  = '1'
.head 11 +  If lsRegLing = 'WAL' or lsRegLing= 'BXL'
.head 12 +  If lsLangue = 'F'
.head 13 -  ! << v9.01b
.head 13 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0) ,2) = '63' 
.head 14 -  ! << v9.01c
.head 14 -  Set lsRegLing = '8'
.head 14 -  ! Set lsRegLing = '5'
.head 14 -  ! << v9.01c
.head 13 +  Else
.head 14 -  Set lsRegLing = '7'
.head 13 -  ! Set lsRegLing = '7'
.head 13 -  ! >> v9.01b
.head 12 +  Else If lsLangue = 'NF' or lsLangue = 'FN'
.head 13 -  Set lsRegLing = '6'
.head 12 +  Else If lsLangue = 'FD' or lsLangue = 'DF'
.head 13 -  ! << v9.01c
.head 13 -  Set lsRegLing = '8'
.head 13 -  ! Set lsRegLing = '5'
.head 13 -  ! << v9.01c
.head 12 +  Else
.head 13 -  Set lsRegLing = '7'
.head 11 +  Else If lsRegLing = 'FLA'
.head 12 +  If lsLangue = 'N'
.head 13 -  Set lsRegLing = '0'
.head 12 +  Else If lsLangue = 'NF' or lsLangue = 'FN'
.head 13 -  Set lsRegLing = '4'
.head 12 +  Else If lsLangue = 'ND' or lsLangue = 'DN'
.head 13 -  Set lsRegLing = '6'
.head 12 +  Else
.head 13 -  Set lsRegLing = '2'
.head 11 +  Else
.head 12 -  Set lsRegLing = '7'
.head 10 +  Else If wsScrutinEl = '2'
.head 11 +  If lsRegion= 'BXL'
.head 12 -  Set lsRegLing = '4'
.head 11 +  Else If lsRegion = 'FLA'
.head 12 -  Set lsRegLing = '2'
.head 11 +  Else
.head 12 -  Set lsRegLing = '1'
.head 10 -  Set lsElectionCommune = VisStrSubstitute( PalTransElHexa(wsOrdreEl), ',' ,'' )
.head 10 +  If wsScrutinEl =  '1'
.head 11 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '21'
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '5', '')
.head 10 +  Else
.head 11 +  If SalStrLeftX( lsProIns, 2) != '21'
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, 'A', '')
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, 'B', '')
.head 12 +  If lsRegion = 'WAL'
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '7', '')
.head 12 +  Else
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '4', '')
.head 11 +  Else
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '4', '')
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '7', '')
.head 10 -  !
.head 10 -  Set lsNbScrutin = SalNumberToStrX( SalStrLength( lsElectionCommune), 0 )
.head 10 -  Set lsDateEl = SalStrRightX( gsDateEl, 2) || SalStrMidX( gsDateEl, 4,2) || SalStrMidX( gsDateEl, 2,2)
.head 10 -  !
.head 10 -  ! Vérification si Disquette déja crées --> Reprendre une partie du mot de passe
.head 10 +  If lsEtatPrec != ''
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Select  bv_codebak , bv_clef1 , bv_clef2 , bv_codemac
	From bur_vote
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV
	Into :lsPwBVPrec, :lsClef1Prec , :lsClef2Prec, :lsCodeMacPrec ")
.head 11 +  If not SqlFetchNext( ghSqlMain, Btmp)
.head 12 -  ! Impossible de vérifier si des codes ont déja été générés pour ce bureau de vote
.head 12 -  Set lsDateHeure = PalDtmDateHeure( )
.head 12 -  Set lsStatut = 'ERR. - DB10    ' || lsDateHeure
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 12 -  Call SqlCommit( ghSqlMain )
.head 12 -  Set bContinue = FALSE
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 12 -  !
.head 10 -  ! Vérification de No_Arrond et No_Canton
.head 10 +  If SalStrLength( lsNoArrond || lsNoCanton) != 6
.head 11 -  Set lsStatut = lsEtatPrec
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut, bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 11 -  Call SqlCommit( ghSqlMain )
.head 11 -  Set bContinue = FALSE
.head 11 -  Set lsStatut = 'ERR. - DB4a   ' || lsDateHeure
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace )
.head 11 -  !
.head 10 -  !
.head 10 -  ! Question: metttre les disquettes dans les lecteurs
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV
.head 12 +  If lsLecteurs != ''
.head 13 -  Set lsLecteurs = lsLecteurs ||'
'
.head 12 -  Set lsLecteurs = lsLecteurs || PalTraductMsg( 'LECTEUR') || ' ' || SalNumberToStrX( i, 0) || ' --> ' || gsLecteur[i]
.head 12 -  Set lsLecteurs = lsLecteurs || '    (' || gsBV_Couleur[i] ||')'
.head 12 -  Set i = i + 1
.head 11 -  Call SalHideWindow( dfLibelleInfo )
.head 11 +  If SalMessageBox(PalTraductMsg( "BV11" )||"
" || lsLecteurs ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 12 -  Set lsStatut = lsEtatPrec
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut, bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 12 -  Call SqlCommit( ghSqlMain )
.head 12 -  Set bContinue = FALSE
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Cancel')
.head 12 -  !
.head 11 +  If bContinue
.head 12 -  Call SalShowWindow( dfLibelleInfo )
.head 12 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! Vérification du SYS sur les lecteurs + labellisation
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM", OF_Exist ) 
.head 13 +  If SalMessageBox(PalTraductMsg( "BV12" )||" "  || SalNumberToStrX( i, 0) || " --> " ||  gsLecteur[i] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 14 -  Set lsStatut = lsEtatPrec
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Cancel')
.head 14 -  !
.head 14 -  Break
.head 12 +  Else
.head 13 +  If VisDosSetVolumeLabel( gsLecteur[i], "DISK_"|| SalNumberToStrX( i, 0 ) ) != VTERR_Ok
.head 14 -  ! Impossible de labelliser la disquette
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 13 -  Set i = i + 1
.head 11 -  ! Vérification de la présence d'une disquette dans un autre lecteur
.head 11 +  If bContinue
.head 12 +  While i <= gnNbLecteur
.head 13 +  If VisDosGetDriveSize ( gsLecteur[i] , nTotalSpace, nFreeSpace) = VTERR_Ok
.head 14 +  If SalMessageBox(PalTraductMsg( "BV37" )||" " || SalNumberToStrX( i, 0) || " --> " || gsLecteur[i] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 15 -  Set lsStatut = lsEtatPrec
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut , pct_createur = :lsUserPrec where com_ins = :tblCommunePCT.colIns and Pct_no = :tblPcTot.colNoPCT ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV37') ||'  --> Cancel')
.head 15 -  !
.head 15 -  Break
.head 13 +  Else
.head 14 -  Set i = i + 1
.head 10 -  Call DispatchMessage(  )
.head 10 -  !
.head 10 -  Call SalShowWindow( dfInfoClock )
.head 10 -  Call SalBringWindowToTop( dfInfoClock )
.head 10 +  If cbRobot
.head 11 -  Set gnTimerInfo_BV = gnTimerInfo_BV - 20
.head 10 -  Set wnPourcent = gnTimerInfo_BV
.head 10 -  Call PalTimer()
.head 10 -  Call SalTimerSet( hWndForm, 1, 1000 )
.head 10 -  !
.head 10 -  ! Vérification si ces disquettes ne contiennent que le système
.head 10 +  If bContinue 
.head 11 -  Set i = 1
.head 11 -  Call VisFileCopy( gsPathRef || 'CO_DOS62.COM', gsPathTemp || 'CO_DOS62.COM' )
.head 11 -  Call SalPause(500)
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 -  Set nFile = VisDosEnumFiles( gsLecteur[i]||'\\*.*', FA_Standard , lsArrayFile )
.head 12 +  If nFile > 1 and NOT cbRobot
.head 13 -  Set lsStatut = lsEtatPrec
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace ||  PalTraductMsg( 'BV14') ||' ' || SalNumberToStrX(i,0) ||' (' || gsLecteur[i] ||') -  Cancel'  )
.head 13 -  !
.head 13 -  Call SalMessageBox( PalTraductMsg( 'BV14')  ||' ' || SalNumberToStrX(i,0) ||' (' || gsLecteur[i] ||')' , PalTraductMsg('MSG') , MB_Ok)
.head 12 +  Else
.head 13 -  Set nFile= 1
.head 13 -  Set lsArrayFile[0] =  'FC ' || gsPathTemp || 'CO_DOS62.COM ' || gsLecteur[i] ||'\\COMMAND.COM  >'|| gsPathTemp||'FC.TXT'
.head 13 -  Set j = 0
.head 13 +  While j < nFile
.head 14 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 14 -  Call SalFileWrite( hFile, lsArrayFile[j] , SalStrLength( lsArrayFile[j]  ) )
.head 14 -  Call SalFileClose( hFile )
.head 14 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 14 -  Set nLigne = 0
.head 14 -  Call SalPause(500 + gnPauseCopie  )
.head 14 +  While NOT SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Exist ) and nLigne != 100
.head 15 -  Call SalPause(300)
.head 15 -  Set nLigne = nLigne + 1
.head 14 -  Call SalPause(500)
.head 14 +  If SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Read | OF_Text )
.head 15 -  Set nLigne = 0
.head 15 +  While SalFileGetStr( hFile, sBuffer, 250 )
.head 16 +  If SalStrTrimX( sBuffer)  != ''
.head 17 -  Set nLigne = nLigne + 1
.head 16 +  If nLigne > 2
.head 17 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 17 -  Set lsStatut = lsEtatPrec
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 17 -  !
.head 17 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 17 -  Break
.head 15 +  If nLigne = 0
.head 16 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 16 -  Set lsStatut = lsEtatPrec
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 16 -  !
.head 16 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 +  Else
.head 15 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 15 -  Set lsStatut = lsEtatPrec
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 15 -  !
.head 15 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 15 -  Break
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  Set j = j + 1
.head 13 -  !
.head 13 +  If bContinue
.head 14 -  Set nFile = VisDosEnumDirs( gsLecteur[i]||'\\*.*', lsArrayFile )
.head 14 +  If nFile > 0
.head 15 -  Set lsStatut = lsEtatPrec
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut , bv_createur= :lsUserPrec where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || PalTraductMsg( 'BV14')  ||' ' || SalNumberToStrX(i,0) ||' (' || gsLecteur[i] ||')  -  Cancel')
.head 15 -  !
.head 15 -  Call SalMessageBox( PalTraductMsg( 'BV14')  ||' ' || SalNumberToStrX(i,0) ||' (' || gsLecteur[i] ||')' , PalTraductMsg('MSG') , MB_Ok)
.head 12 -  Set i = i + 1
.head 11 -  Call VisFileDelete( gsPathTemp || 'CO_DOS62.COM' )
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! PHASE 1
.head 10 +  If bContinue
.head 11 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 1: ' || PalTraductMsg('CREAT1')
.head 11 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 11 -  Call SalBringWindowToTop( dfInfoClock )
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! Création des fichiers de données
.head 10 +  If bContinue
.head 11 -  ! Génération des clés
.head 11 -  Set lsClef1 = PalGenClef( wlsMoveMouse,  1 )
.head 11 -  Set lsClef2 = PalGenClef( wlsMoveMouse, 2 )
.head 11 -  Set lsIVClef = PalGenClef( wlsMoveMouse, 3 )
.head 11 -  Set i = 0
.head 11 +  While i <= 20
.head 12 -  Set lsPwBV = wsPWRandom
.head 12 +  If lsEtatPrec != '' and lsPwBVPrec  != '' and lsCodeMacPrec != ''
.head 13 -  Set lsIVMac = lsCodeMacPrec
.head 13 -  Set lsCarCtrl = PW_CAR_CTRL
.head 13 +  While SalStrFirstC( lsCarCtrl, nCaract )
.head 14 -  Set nCaract = SalStrToNumber(SalNumberToChar ( nCaract ) ) - 1
.head 14 +  If nCaract >= 0
.head 15 -  Set lsPwBV = SalStrReplaceX( lsPwBV, nCaract, 1, SalStrMidX( lsPwBVPrec, nCaract, 1) )
.head 12 +  Else
.head 13 -  Set lsIVMac = PalGenClef( wlsMoveMouse, 4 )
.head 12 +  If PalVerifPW( lsPwBV, 'BV' )
.head 13 -  Break
.head 12 +  Else
.head 13 -  Call PalDtmMove( 1 )
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Bur_vote set Bv_PwTemp = :lsPwBV where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 11 -  Call SqlCommit( ghSqlSecondaire )
.head 11 -  Set lsPwBV = lsPwBV || SalStrRightX('00' || SalNumberToStrX( 99 - SalNumberMod( SalStrToNumber( lsPwBV) , 97) , 0), 2)
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Création des fichiers Urne
.head 11 +  If bContinue
.head 12 +  If SalFileOpen( hFile , gsPathBV||"URNE.IND", OF_Create | OF_ReadWrite | OF_Text )
.head 13 -  Set sBuffer = lsNoArrond || lsNoCanton|| SalStrRightX('000' || SalNumberToStrX( tblBureauVote.colNoBV,0) ,3) || lsDateEl ||
	SalStrRightX('00000' || SalNumberToStrX(tblCommuneBV.colIns,0),5)  || '0123456789' || lsNbScrutin
.head 13 +  If SalFilePutStr( hFile, sBuffer )
.head 14 -  Call SalFileClose( hFile)
.head 14 -  Call DispatchMessage(  )
.head 14 +  If SalFileOpen( hFile , gsPathBV||"URNE.TBL", OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Set i = -1
.head 15 +  While i < SalStrToNumber( lsNbScrutin ) and bContinue
.head 16 -  Call DispatchMessage(  )
.head 16 +  If i= -1
.head 17 -  Set sBuffer = lsNoArrond || lsNoCanton|| SalStrRightX('000' || SalNumberToStrX( tblBureauVote.colNoBV,0) ,3) || lsDateEl ||
	SalStrRightX('00000' || SalNumberToStrX(tblCommuneBV.colIns,0),5)  || '0123456789' || lsNbScrutin
.head 16 +  Else
.head 17 -  Set bContinue = TRUE
.head 17 -  !
.head 17 -  Set sBuffer = SalStrMidX( lsElectionCommune, i, 1)
.head 17 -  !
.head 17 -  Set lsChamp = ''
.head 17 +  If sBuffer = '6'
.head 18 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 17 +  Else If sBuffer = '5'
.head 18 -  Set lsChamp = 'DIS_INS = ' || SalNumberToStrX( tblCommuneBV.colInsDis, 0)
.head 17 +  Else If sBuffer = '2'
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'CI'  into :lsCircIns ")
.head 18 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 18 +  Else
.head 19 -  ! Aucune circonscription pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU9    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = '3'
.head 18 -  Set lsCollIns = ''
.head 18 +  If lsRegion = 'BXL'
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where Type = 'SE'  into :lsTemp ")
.head 18 +  Else
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where REGION = :lsRegion  and Type = 'SE'  into :lsTemp ")
.head 18 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 +  If lsCollIns != ''
.head 20 -  Set lsCollIns = lsCollIns || ","
.head 19 -  Set lsCollIns = lsCollIns || lsTemp
.head 18 +  If lsCollIns != ''
.head 19 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 18 +  Else
.head 19 -  ! Aucun collège pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU10   ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = '1'
.head 18 -  Set lsCollIns = ''
.head 18 +  If lsRegion = 'BXL'
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where Type = 'EU' and REGION in ('WAL','FLA') into :lsTemp ")
.head 18 +  Else
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where REGION = :lsRegion  and Type = 'EU'  into :lsTemp ")
.head 18 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 +  If lsCollIns != ''
.head 20 -  Set lsCollIns = lsCollIns || ","
.head 19 -  Set lsCollIns = lsCollIns || lsTemp
.head 18 +  If lsCollIns != ''
.head 19 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 18 +  Else
.head 19 -  ! Aucun collège pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU10   ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = '4' 
.head 18 +  If gsWL_Type = '0'
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Arron_Ins from base_commune where Arron_INS = :lsInsWL  and Type = 'WR'  into :lsCircIns ")
.head 18 +  Else
.head 19 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'WL'  into :lsCircIns ")
.head 18 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 18 +  Else
.head 19 -  ! Aucune circonscription pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU9    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = '7' 
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'VL'  into :lsCircIns ")
.head 18 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 18 +  Else
.head 19 -  ! Aucune circonscription pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU9    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = 'A' 
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'BR'  into :lsCircIns ")
.head 18 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 18 +  Else
.head 19 -  ! Aucune circonscription pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU9    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 +  Else If sBuffer = 'B' 
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'BV'  into :lsCircIns ")
.head 18 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 19 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 18 +  Else
.head 19 -  ! Aucune circonscription pour cette commune
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU9    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 17 -  !
.head 17 -  Call DispatchMessage(  )
.head 17 +  If bContinue and lsChamp != ''
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from Listes where " || lsChamp || " And El_no = " || PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1)) ||" into :lsNbListe ")
.head 18 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 19 -  !
.head 19 -  Set lsNoElection = SalStrMidX( lsElectionCommune, i, 1)
.head 19 +  If lsNoElection = '7' or lsNoElection = 'A' 
.head 20 -  Set lsNoElection = '4'
.head 19 +  Else If lsNoElection = 'B'
.head 20 -  Set lsNoElection = '7'
.head 19 -  Set sBuffer = lsNoElection
.head 19 -  !
.head 19 -  Set sBuffer = sBuffer || SalStrRightX('00' || lsNbListe,2 )
.head 19 +  If SalStrMidX( lsElectionCommune, i, 1) = 'A'
.head 20 -  Call SqlPrepareAndExecute( ghSqlMain, "Select LIS_NB_EFF, LIS_NB_SUPP, LIS_GRL from Listes where " || lsChamp || " And El_no = " || PalStrToHexastr(SalStrMidX( lsElectionCommune, i, 1)) ||"
	Order by LIS_GRL ,  Lis_no
	into :lsEffectif, :lsSuppl, :lsLangueColl ")
.head 19 +  Else
.head 20 -  Call SqlPrepareAndExecute( ghSqlMain, "Select LIS_NB_EFF, LIS_NB_SUPP, Coll_ins from Listes where " || lsChamp || " And El_no = " || PalStrToHexastr(SalStrMidX( lsElectionCommune, i, 1)) ||"
	Order by Coll_ins desc, Lis_no
	into :lsEffectif, :lsSuppl, :lsLangueColl ")
.head 19 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 20 -  Call DispatchMessage(  )
.head 20 +  If wsScrutinEl = '1'
.head 21 -  Set sBuffer = sBuffer || '
'|| SalStrRightX('000' || lsEffectif , 3 ) || '00'
.head 20 +  Else
.head 21 -  Set sBuffer = sBuffer || '
'|| SalStrRightX('000' || lsEffectif , 3 ) ||  SalStrRightX('00' || lsSuppl , 2 )
.head 18 +  Else
.head 19 -  ! Aucune liste de trouvée pour le scrutin
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FU8    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 19 -  !
.head 16 +  If SalFilePutStr( hFile, sBuffer ) and bContinue
.head 17 -  Set i = i + 1
.head 16 +  Else
.head 17 -  ! Impossible d'écrire dans Urne.TBL sur le poste local
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - FU7    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 15 -  Call SalFileClose( hFile)
.head 15 -  Call DispatchMessage(  )
.head 14 +  Else
.head 15 -  ! Impossible de créer Urne.TBL sur le poste local
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - FU6    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 13 +  Else
.head 14 -  ! Impossible d'écrire dans Urne.ind sur le poste local
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - FU5    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 12 +  Else
.head 13 -  ! Impossible de créer Urne.ind sur le poste local
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - FU4    ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Création des fichiers MAV
.head 11 +  If bContinue
.head 12 +  If SalFileOpen( hFile , gsPathBV||"MACHVOTS.IND", OF_Create | OF_ReadWrite | OF_Text )
.head 13 -  Set sBuffer = lsNoArrond || lsNoCanton|| SalStrRightX('000' || SalNumberToStrX( tblBureauVote.colNoBV,0) ,3) || lsDateEl || lsRegLing ||
	SalStrRightX('00000' || SalNumberToStrX(tblCommuneBV.colIns,0),5)
.head 13 +  If SalFilePutStr( hFile, sBuffer )
.head 14 -  Call SalFileClose( hFile)
.head 14 -  Call DispatchMessage(  )
.head 14 +  If SalFileOpen( hFile , gsPathBV||"MACHVOTS.TBL", OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Set sBuffer = lsNoArrond || lsNoCanton|| SalStrRightX('000' || SalNumberToStrX( tblBureauVote.colNoBV,0) ,3) || lsDateEl || lsRegLing
.head 15 -  Set i = 0
.head 15 +  While i < SalStrToNumber( lsNbScrutin ) and bContinue
.head 16 -  Call DispatchMessage(  )
.head 16 -  Set sBuffer = sBuffer || SalNumberToStrX(i+1, 0)
.head 16 -  Set lsNbCdt = '0'
.head 16 -  Set lsNbSupp = '0'
.head 16 -  !
.head 16 -  Set lsNoElection = SalStrMidX( lsElectionCommune, i, 1)
.head 16 +  If lsNoElection = '7' or lsNoElection = 'A' 
.head 17 -  Set lsNoElection = '4'
.head 16 +  Else If lsNoElection = 'B'
.head 17 -  Set lsNoElection = '7'
.head 16 -  !
.head 16 +  If SalStrMidX( lsElectionCommune, i, 1) = '6'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where COM_INS = " || SalNumberToStrX( tblCommuneBV.colIns, 0) || " and Type = 'GE'
	into :lsNbCdt "
.head 17 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '5'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where DIS_INS = " || SalNumberToStrX( tblCommuneBV.colInsDis, 0)|| " and Type = 'DI'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'DIS_INS = ' || SalNumberToStrX( tblCommuneBV.colInsDis, 0)
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '2'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where Circ_INS = :lsCircIns and Type = 'CI'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '3'
.head 17 -  Set lsSelect = "Select Max(Nb_Cdt) from base_commune where Coll_INS in (" || lsCollIns ||")  and Type = 'SE'
	into :lsNbCdt"
.head 17 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '1'
.head 17 -  Set lsSelect = "Select Max(Nb_Cdt) from base_commune where Coll_INS in (" || lsCollIns ||")  and Type = 'EU'
	into :lsNbCdt"
.head 17 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '4'
.head 17 +  If gsWL_Type = '0'
.head 18 -  Set lsSelect = "Select Nb_Cdt from base_commune where Arron_INS = :lsInsWL and Type = 'WR'
	into :lsNbCdt"
.head 17 +  Else
.head 18 -  Set lsSelect = "Select Nb_Cdt from base_commune where Circ_INS = :lsCircIns and Type = 'WL'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '7'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where Circ_INS = :lsCircIns and Type = 'VL'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'A'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where Circ_INS = :lsCircIns and Type = 'BR'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'B'
.head 17 -  Set lsSelect = "Select Nb_Cdt from base_commune where Circ_INS = :lsCircIns and Type = 'BV'
	into :lsNbCdt"
.head 17 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 16 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 17 +  If SalStrMidX( lsElectionCommune, i, 1) = '2' or SalStrMidX( lsElectionCommune, i, 1) = '3'
.head 18 -  Set lsNbSupp = SalNumberToStrX( SalNumberRound( SalStrToNumber( lsNbCdt) /2+0.49999) + 1  , 0)
.head 17 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '4' or SalStrMidX( lsElectionCommune, i, 1) = '7' or
	SalStrMidX( lsElectionCommune, i, 1) = 'A' or SalStrMidX( lsElectionCommune, i, 1) = 'B' 
.head 18 +  If SalStrToNumber( lsNbCdt) < 4
.head 19 -  Set lsNbSupp = '4'
.head 18 +  Else If SalStrToNumber( lsNbCdt) > 16
.head 19 -  Set lsNbSupp = '16'
.head 18 +  Else
.head 19 -  Set lsNbSupp = lsNbCdt
.head 17 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '1'
.head 18 +  If SalStrToNumber( lsNbCdt) < 12
.head 19 -  Set lsNbSupp = '6'
.head 18 +  Else
.head 19 -  Set lsNbSupp = SalNumberToStrX( SalNumberRound( SalStrToNumber( lsNbCdt) /2+0.49999) + 1  , 0)
.head 17 -  Call DispatchMessage(  )
.head 17 -  ! ATTENTION : No election
.head 17 -  ! Set sBuffer = sBuffer || SalStrRightX('00' || SalNumberToStrX( SalStrToNumber(lsNbCdt) + SalStrToNumber(lsNbSupp)+1 , 0) ,2 ) ||
	SalStrRightX('00' || lsNbSupp , 2)  || SalStrMidX( lsElectionCommune, i, 1)
.head 17 -  Set sBuffer = sBuffer || SalStrRightX('00' || SalNumberToStrX( SalStrToNumber(lsNbCdt) + SalStrToNumber(lsNbSupp)+1 , 0) ,2 ) ||
	SalStrRightX('00' || lsNbSupp , 2)  || lsNoElection
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from Listes where " || lsChamp || " And El_no = " || PalStrToHexastr(SalStrMidX( lsElectionCommune, i, 1)) ||" into :lsNbListe ")
.head 17 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 18 -  Set sBuffer = sBuffer || SalStrRightX('00' || SalNumberToStrX( SalStrToNumber(lsNbListe)+1 , 0) ,2 )
.head 18 -  Set i= i+ 1
.head 17 +  Else
.head 18 -  ! Aucun listes trouvée pour ce scrutin
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - FM13    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 18 -  !
.head 16 +  Else
.head 17 -  ! Aucun paramètre de siège à pourvoir trouvé pour cette élection
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - FM12    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 15 +  If SalFilePutStr( hFile, sBuffer )
.head 16 -  Call SalFileClose( hFile)
.head 16 -  Call DispatchMessage(  )
.head 16 +  If SalFileOpen( hFile , gsPathBV||"MACHVOTL.TBL", OF_Create | OF_ReadWrite | OF_Text )
.head 17 -  Set i = 1
.head 17 +  While i <= SalStrToNumber( lsNbScrutin ) and bContinue
.head 18 -  Call DispatchMessage(  )
.head 18 -  Set sBuffer = ''
.head 18 +  If SalStrMidX( lsElectionCommune, i-1, 1) = '6' or SalStrMidX( lsElectionCommune, i-1, 1) = '9'
.head 19 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 18 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '5'
.head 19 -  Set lsChamp =  'DIS_INS = ' || SalNumberToStrX( tblCommuneBV.colInsDis, 0)
.head 18 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '8'
.head 19 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0) || ' and CDI_INS = ' ||  tblBureauVote.colCdi
.head 18 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '2' or SalStrMidX( lsElectionCommune, i-1, 1) = '4' or SalStrMidX( lsElectionCommune, i-1, 1) = '7' or
	SalStrMidX( lsElectionCommune, i-1, 1) = 'A' or SalStrMidX( lsElectionCommune, i-1, 1) = 'B'
.head 19 -  Set lsChamp =  'CIRC_INS = ' || lsCircIns
.head 18 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '3' or SalStrMidX( lsElectionCommune, i-1, 1) = '1'
.head 19 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 18 +  Else
.head 19 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Select @Right(LIS_NO,2), LIS_NOM, @Right('000' || LIS_NB_EFF,3) , @Right('000' || LIS_NB_SUPP,2), coll_ins, LIS_Grl
	from Listes where " || lsChamp || " And El_no = " || PalStrToHexastr( SalStrMidX( lsElectionCommune, i-1, 1)) ||"
	Order by LIS_Grl, Coll_ins desc, Lis_no
	into :lsNoListe, :lsNomListe, :lsEffectif, :lsSuppl, :lsTempColl, :lsLisGrl ")
.head 18 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 19 -  Call DispatchMessage(  )
.head 19 +  If sBuffer != ''
.head 20 -  Set sBuffer = sBuffer || '
'
.head 19 -  !
.head 19 -  Set lsNomListeOem =  SalStrRepeatX(' ', 25)
.head 19 -  Call CharToOemA( lsNomListe, lsNomListeOem)
.head 19 -  !
.head 19 +  If lsTempColl != '' and  lsRegion= 'BXL'
.head 20 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Select REG_LING from base_commune where Coll_Ins = :lsTempColl and type = 'SE' into :lsTemp ")
.head 20 +  If SqlFetchNext(ghSqlSecondaire, Btmp )
.head 21 -  Set sBuffer = sBuffer || SalNumberToStrX(i,0) || lsTemp || lsNoListe || SalStrLeftX(lsNomListeOem || SalStrRepeatX(' ', 25) , 25 ) || lsEffectif || lsSuppl
.head 20 +  Else
.head 21 -  ! Impossible de trouver le collège électoral
.head 21 -  Set lsDateHeure = PalDtmDateHeure( )
.head 21 -  Set lsStatut = 'ERR. - FM20   ' || lsDateHeure
.head 21 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 21 -  Call SqlCommit( ghSqlMain )
.head 21 -  Set bContinue = FALSE
.head 19 +  Else If lsRegion = 'BXL' and SalStrMidX( lsElectionCommune, i-1, 1) = 'A'
.head 20 -  Set sBuffer = sBuffer || SalNumberToStrX(i,0) || SalStrLeftX( lsLisGrl, 1) || lsNoListe || SalStrLeftX(lsNomListeOem || SalStrRepeatX(' ', 25) , 25 ) || lsEffectif  || lsSuppl
.head 19 +  Else
.head 20 -  Set sBuffer = sBuffer || SalNumberToStrX(i,0) ||'F' || lsNoListe || SalStrLeftX(lsNomListeOem || SalStrRepeatX(' ', 25) , 25 ) || lsEffectif  || lsSuppl
.head 18 -  Set sBuffer = sBuffer || '
'|| SalNumberToStrX(i,0) ||'FBLANC'
.head 18 +  If SalFilePutStr( hFile, sBuffer )
.head 19 -  Set i = i + 1
.head 18 +  Else
.head 19 -  ! Impossible d'écrire dans MachVotL.Tbl sur le poste local
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - FM16   ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 17 -  Call SalFileClose( hFile)
.head 17 +  If SalFileOpen( hFile , gsPathBV||"MACHVOTC.TBL", OF_Create | OF_ReadWrite | OF_Text )
.head 18 -  Set i = 1
.head 18 +  While i <= SalStrToNumber( lsNbScrutin ) and bContinue
.head 19 -  Call DispatchMessage(  )
.head 19 +  If SalStrMidX( lsElectionCommune, i-1, 1) = '6' or SalStrMidX( lsElectionCommune, i-1, 1) = '9'
.head 20 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 19 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '5'
.head 20 -  Set lsChamp = 'DIS_INS = ' || SalNumberToStrX( tblCommuneBV.colInsDis, 0)
.head 19 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '8'
.head 20 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)|| ' and CDI_INS = ' || tblBureauVote.colCdi
.head 19 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '2' or SalStrMidX( lsElectionCommune, i-1, 1) = '4' or SalStrMidX( lsElectionCommune, i-1, 1) = '7' or
	SalStrMidX( lsElectionCommune, i-1, 1) = 'A' or SalStrMidX( lsElectionCommune, i-1, 1) = 'B'
.head 20 -  Set lsChamp =  'CIRC_INS = ' || lsCircIns
.head 19 +  Else If SalStrMidX( lsElectionCommune, i-1, 1) = '3' or SalStrMidX( lsElectionCommune, i-1, 1) = '1'
.head 20 -  Set lsChamp = "COLL_INS in (" || lsCollIns ||") "
.head 19 +  Else
.head 20 -  Set lsChamp = 'COM_INS = ' || SalNumberToStrX( tblCommuneBV.colIns, 0)
.head 19 -  !
.head 19 +  If SalStrMidX( lsElectionCommune, i-1, 1) = 'A'
.head 20 -  Call SqlPrepareAndExecute( ghSqlMain, "Select @Right(A.LIS_NO,2), CDT_Ligne1,Cdt_LIgne2 , cdt_type 
	from Candidats A, Listes B 
	where A." || lsChamp || " And A.El_no = " || PalStrToHexastr( SalStrMidX( lsElectionCommune, i-1, 1)) ||" and A.CIRC_INS =B.CIRC_INS And A.El_no = B.EL_NO and A.LIs_No = B.LIs_NO
	Order by B.Lis_GRL, A.coll_ins desc, A.Lis_no, cdt_Type, Cdt_No
	into :lsNoListe, :lsNom1, :lsNom2, :lsCdtType ")
.head 19 +  Else
.head 20 -  Call SqlPrepareAndExecute( ghSqlMain, "Select @Right(LIS_NO,2), CDT_Ligne1,Cdt_LIgne2 , cdt_type 
	from Candidats 
	where " || lsChamp || " And El_no = " || PalStrToHexastr( SalStrMidX( lsElectionCommune, i-1, 1)) ||"
	Order by coll_ins desc, Lis_no, cdt_Type, Cdt_No
	into :lsNoListe, :lsNom1, :lsNom2, :lsCdtType ")
.head 19 +  While SqlFetchNext( ghSqlMain, Btmp ) and bContinue
.head 20 -  !
.head 20 -  Call DispatchMessage(  )
.head 20 -  Set lsNom1Oem =  SalStrRepeatX(' ', 25)
.head 20 -  Call CharToOemA( lsNom1 , lsNom1Oem)
.head 20 -  Set lsNom2Oem =  SalStrRepeatX(' ', 25)
.head 20 -  Call CharToOemA( lsNom2 , lsNom2Oem)
.head 20 -  !
.head 20 +  If wsScrutinEl = '1'
.head 21 -  Set sBuffer = PalLongueur( SalNumberToStrX(i,0) || lsNoListe || SalStrLeftX(lsNom1Oem || SalStrRepeatX(' ', 25) , 25 ) || lsNom2Oem, 78, ' ' , 'E')
.head 20 +  Else
.head 21 -  Set sBuffer = PalLongueur( SalNumberToStrX(i,0) || lsNoListe || SalStrLeftX(lsNom1Oem || SalStrRepeatX(' ', 25) , 25 ) || lsNom2Oem, 78, ' ' , lsCdtType)
.head 20 +  If SalFilePutStr( hFile, sBuffer )
.head 21 -  Set bContinue = TRUE
.head 20 +  Else
.head 21 -  ! Impossible d'écrire dans MachVotC.Tbl sur le poste local
.head 21 -  Set lsDateHeure = PalDtmDateHeure( )
.head 21 -  Set lsStatut = 'ERR. - FM18   ' || lsDateHeure
.head 21 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 21 -  Call SqlCommit( ghSqlMain )
.head 21 -  Set bContinue = FALSE
.head 19 +  If bContinue
.head 20 -  Set i = i + 1
.head 18 -  Call SalFileClose( hFile)
.head 17 +  Else
.head 18 -  ! Impossible de créer MACHVOTC.TBL sur le poste local
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - FM17    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 18 -  !
.head 16 +  Else
.head 17 -  ! Impossible de créer MACHVOTL.TBL sur le poste local
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - FM15    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 15 +  Else
.head 16 -  ! Impossible d'écrire dans MachVotS.Tbl sur le poste local
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - FM14   ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 14 +  Else
.head 15 -  ! Impossible de créer MachVotS.TBL sur le poste local
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - FM11    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 13 +  Else
.head 14 -  ! Impossible d'écrire dans MachVotS.ind sur le poste local
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - FM10   ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 12 +  Else
.head 13 -  ! Impossible de créer MachVotS.ind sur le poste local
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - FM9    ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! PARAM.TBL pour chambre et sénat
.head 11 +  If bContinue
.head 12 +  If wsScrutinEl = '2'
.head 13 +  If SalFileOpen( hFile , gsPathBV||"PARAM.TBL", OF_Create | OF_ReadWrite | OF_Text )
.head 14 -  Set i = 0
.head 14 +  While i < SalStrLength( lsElectionCommune ) and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 +  If SalStrMidX( lsElectionCommune, i, 1) = '2' 
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns|| " and Type = 'CI' "
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '7' 
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns|| " and Type = 'VL' "
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'A' 
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns|| " and Type = 'BR' "
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'B' 
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns|| " and Type = 'BV' "
.head 15 +  Else If (SalStrMidX( lsElectionCommune, i, 1) = '4' and gsWL_Type= '0')
.head 16 +  If gsWL_Type = '0'
.head 17 -  Set lsTemp = 'ARRON_INS = ' || lsInsWL || " and Type = 'WR' "
.head 16 +  Else
.head 17 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns || " and Type = 'WL' "
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '3' 
.head 16 -  Set lsTemp = "COLL_INS in (" || lsCollIns ||") " || " and Type = 'SE' "
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '1'
.head 16 -  Set lsTemp = "COLL_INS in (" || lsCollIns ||") "|| " and Type = 'EU' "
.head 15 -  Set lsSelect = "Select Nb_cdt from Base_commune where " || lsTemp ||" 
	into :lsTemp2 "
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect )
.head 15 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 +  If SalStrMidX( lsElectionCommune, i, 1) = '2' or SalStrMidX( lsElectionCommune, i, 1) = '3'
.head 17 -  Set nMaxSupp = SalNumberRound( SalStrToNumber( lsTemp2) /2 + 0.49999) + 1
.head 17 +  If SalStrMidX( lsElectionCommune, i, 1) = '2'
.head 18 +  If nMaxSupp + 1 <= 13
.head 19 -  Set sBuffer = '14'
.head 18 +  Else If nMaxSupp + 1 <= 18
.head 19 -  Set sBuffer = '18'
.head 18 +  Else
.head 19 -  Set sBuffer = '23'
.head 17 +  If SalStrMidX( lsElectionCommune, i, 1) = '3'
.head 18 -  Set sBuffer = '18'
.head 16 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '1' or SalStrMidX( lsElectionCommune, i, 1) = '4' or SalStrMidX( lsElectionCommune, i, 1) = '7' or 
	SalStrMidX( lsElectionCommune, i, 1) = 'A' or SalStrMidX( lsElectionCommune, i, 1) = 'B'
.head 17 +  If SalStrToNumber( lsTemp2) < 4
.head 18 -  Set nMaxSupp = 4
.head 17 +  Else If SalStrToNumber( lsTemp2) > 16
.head 18 -  Set nMaxSupp = 16
.head 17 +  Else
.head 18 -  Set nMaxSupp = SalStrToNumber( lsTemp2)
.head 17 -  Set sBuffer = '18'
.head 17 -  !
.head 17 +  If nMaxSupp + 1 <= 13
.head 18 -  Set sBuffer = '14'
.head 17 +  Else If nMaxSupp + 1 <= 18
.head 18 -  Set sBuffer = '18'
.head 17 +  Else
.head 18 -  Set sBuffer = '23'
.head 16 -  !
.head 16 +  If NOT SalFilePutStr( hFile, sBuffer )
.head 17 -  ! Impossible d'écrire dans PARAM.TBL sur le poste local
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - FM22   ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 16 -  Call DispatchMessage(  )
.head 15 +  Else
.head 16 -  ! Aucun paramètre de siège à pourvoir trouvé pour cette élection
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - FM12    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 -  Set i = i + 1
.head 14 -  Call SalFileClose( hFile)
.head 13 +  Else
.head 14 -  ! Impossible de créer PARAM.TBL sur le poste local
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - FM21    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! BMP éventuelles
.head 11 +  If bContinue
.head 12 +  If wsScrutinEl = '2'
.head 13 -  Set i = 0
.head 13 +  While i < SalStrLength( lsElectionCommune )
.head 14 -  Call DispatchMessage(  )
.head 14 +  If SalStrMidX( lsElectionCommune, i, 1) = '2'
.head 15 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns 
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '4'
.head 15 +  If gsWL_Type = '0'
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsInsWL 
.head 15 +  Else
.head 16 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns 
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '7'
.head 15 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns 
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'A'
.head 15 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns 
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'B'
.head 15 -  Set lsTemp = 'CIRC_INS = ' || lsCircIns
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '3'
.head 15 -  Set lsTemp = "COLL_INS in (" || lsCollIns ||") " 
.head 14 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '1'
.head 15 -  Set lsTemp = "COLL_INS in (" || lsCollIns ||") "
.head 14 -  Set lsSelect = "Select Lis_logo, Lis_GRL from Listes where " || lsTemp ||" and Lis_logo is not null and EL_No = " || PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1)) ||"
	into :lsLogoListe, :lsGroupe "
.head 14 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect )
.head 14 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 15 +  If SalStrMidX( lsElectionCommune, i, 1) = 'A' 
.head 16 -  Set lsLogoListe2 = '4' || SalStrMidX( lsLogoListe,2,2) || SalStrLeftX( lsGroupe, 1)
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = '7' 
.head 16 -  Set lsLogoListe2 = '4' || SalStrMidX( lsLogoListe,1,3)
.head 15 +  Else If SalStrMidX( lsElectionCommune, i, 1) = 'B' 
.head 16 -  Set lsLogoListe2 = '7' || SalStrMidX( lsLogoListe,2,3)
.head 15 +  Else
.head 16 -  Set lsLogoListe2 = SalStrLeftX( lsLogoListe,4)
.head 15 +  If VisFileCopy( gsPathLogo || lsLogoListe , gsPathBV || lsLogoListe2 ||".BMP"  ) != 1
.head 16 -  ! Erreur de copie du logo
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - FM19   ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 -  Call DispatchMessage(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set i = i + 1
.head 11 -  !
.head 11 -  ! Sauvegarde des fichiers données dans un array
.head 11 +  If bContinue
.head 12 -  Set nFileDonnee = VisDosEnumFiles( gsPathBV||'*.*', FA_Standard , lsArrayFileDonnee )
.head 10 -  Call DispatchMessage(  )
.head 10 -  !
.head 10 -  ! Copie des données sur les disquettes 
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 -  Call DispatchMessage(  )
.head 12 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM", OF_Exist )
.head 13 -  ! La disquette d'un des lecteurs n'est pas une disquette système
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - C19    ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 12 +  Else
.head 13 +  If wsScrutinEl = '1' and i = gnNbDiskBV and ( SalStrLeftX(SalNumberToStrX( tblCommuneBV.colIns , 0) , 2) = '21' OR (gnNbDiskBV = 5 and gnNbLecteur = 5) )
.head 14 -  Set lsFile = gsLecteur[i] ||"\\1.DSK"
.head 13 +  Else
.head 14 -  Set lsFile = gsLecteur[i] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 13 +  If NOT SalFileOpen( hFile , lsFile, OF_Create | OF_ReadWrite )
.head 14 -  ! Impossible de créer le fichier de controle x.DSK (x étant le n° de la disquette)
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C20    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 13 +  Else
.head 14 -  Call DispatchMessage(  )
.head 14 -  Call SalFileWrite( hFile, SalNumberToStrX( i, 0), SalStrLength( SalNumberToStrX( i, 0) ) )
.head 14 -  Call SalFileWrite( hFile, lsTraceDSK, SalStrLength( lsTraceDSK ) )
.head 14 -  Call SalFileClose( hFile )
.head 14 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "DISK_" || SalNumberToStrX( i, 0 )
.head 15 -  ! La disquette du lecteur n'a pas le bon label
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C21    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 14 +  Else
.head 15 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Set sBuffer  = 'Copy ' || gsPathBV ||'*.* ' || gsLecteur[i] ||'
DIR ' || gsLecteur[i] ||'\\*.* >'|| gsPathTemp ||'P1_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 15 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 15 -  Call DispatchMessage(  )
.head 15 -  Set i = i +1
.head 11 -  !
.head 11 -  Set i = 1
.head 11 +  While i <= nFileDonnee
.head 12 -  Call SalPause( 500 )
.head 12 -  Call DispatchMessage(  )
.head 12 -  Set i = i +1
.head 11 -  !
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 -  Call DispatchMessage(  )
.head 12 -  Set j = 1
.head 12 +  While Not SalFileOpen( hFile, gsPathTemp ||'P1_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 13 -  Call DispatchMessage(  )
.head 13 -  Call SalPause( gnPauseCopie)
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 14 -  ! Disquette manquante
.head 14 -  Set bContinue = FALSE
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 14 -  Break
.head 13 -  Set j = j + 1
.head 13 +  If j > 20
.head 14 -  ! Erreur de copie sur une des disquettes des données variables  (Phase 1 non terminée)
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C22    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 14 -  Break
.head 12 -  Set i = i + 1
.head 11 -  !
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! PHASE 2
.head 10 +  If bContinue
.head 11 +  If Not cbRobot
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 2: ' || PalTraductMsg('CREAT2')
.head 11 +  Else
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 2: ' || PalTraductMsg('CREAT7')
.head 11 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 11 -  Call SalBringWindowToTop( dfInfoClock )
.head 10 -  Call DispatchMessage(  )
.head 10 -  !
.head 10 -  ! Sauvegarde des fichiers fixe dans un array
.head 10 +  If bContinue
.head 11 -  Set nFileFixe = PalChargeRef_Cfg( 'BV_CFG', wsScrutinEl, gsPathBV_Cfg ,  lsArrayFileFixe )
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! Copie des fichiers fixes sur disquette
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 +  If wsScrutinEl = '1' and i = gnNbDiskBV and ( SalStrLeftX(SalNumberToStrX( tblCommuneBV.colIns, 0) , 2) = '21'  OR (gnNbDiskBV = 5 and gnNbLecteur = 5) )
.head 13 -  Set lsFile = gsLecteur[i] ||"\\1.DSK"
.head 12 +  Else
.head 13 -  Set lsFile = gsLecteur[i] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 12 +  If NOT SalFileOpen( hFile, lsFile, OF_Exist ) or
 NOT SalFileOpen( hFile, gsLecteur[i]||"\\urne.ind", OF_Exist )
.head 13 -  ! La disquette d'un des lecteurs ne contient pas les données variables du bureau
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - C23   ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 12 +  Else
.head 13 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "DISK_" || SalNumberToStrX( i, 0 )
.head 14 -  ! La disquette du lecteur n'a pas le bon label
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C24    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 13 +  Else
.head 14 +  If not cbRobot
.head 15 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Set sBuffer  = 'Copy ' || gsPathBV_Cfg ||'*.* ' || gsLecteur[i] ||'
DIR ' || gsLecteur[i] ||'\\*.* >'|| gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 15 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 14 +  Else If bContinue and cbRobot
.head 15 -  Set j = 0
.head 15 +  While j < nFileFixe and bContinue
.head 16 +  If NOT SalFileOpen( hFile, gsLecteur[i] || '\\' || lsArrayFileFixe[j], OF_Exist )
.head 17 -  ! Un fichier manquant sur une disquette BV
.head 17 -  Set bContinue = FALSE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - CTRL1  ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut || '  ' || lsArrayFile[j] )
.head 17 -  !
.head 17 -  Break
.head 16 -  Set j = j + 1
.head 14 -  Set i = i +1
.head 11 -  !
.head 11 +  If NOT cbRobot
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskBV and bContinue
.head 13 -  Set j = 1
.head 13 +  While Not SalFileOpen( hFile, gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 14 -  Call SalPause(3000)
.head 14 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 15 -  ! Disquette manquante
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 15 -  Break
.head 14 -  Set j = j + 1
.head 14 +  If j > 40
.head 15 -  ! Erreur de copie sur une des disquettes des données fixes (Phase 2 non terminée)
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C25    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 15 -  Break
.head 13 -  Set i = i + 1
.head 11 -  !
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! PHASE 3
.head 10 +  If bContinue
.head 11 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 3: ' || PalTraductMsg('CREAT3')
.head 11 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 11 -  Call SalBringWindowToTop( dfInfoClock )
.head 10 -  Call DispatchMessage(  )
.head 10 -  ! Rijndael - Signature des disquettes
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 +  If wsScrutinEl = '1' and i = gnNbDiskBV and ( SalStrLeftX(SalNumberToStrX( tblCommuneBV.colIns , 0) , 2) = '21' OR (gnNbDiskBV = 5 and gnNbLecteur = 5) )
.head 13 -  Set lsFile = gsLecteur[i] ||"\\1.DSK"
.head 12 +  Else
.head 13 -  Set lsFile = gsLecteur[i] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 12 +  If NOT SalFileOpen( hFile, lsFile, OF_Exist ) or
 NOT SalFileOpen( hFile, gsLecteur[i]||"\\urne.ind", OF_Exist ) or
 NOT SalFileOpen( hFile, gsLecteur[i]||"\\urne.exe", OF_Exist ) or
 NOT SalFileOpen( hFile, gsLecteur[i]||"\\blanc.exe", OF_Exist )
.head 13 -  ! La disquette d'un des lecteurs ne contient pas les données variables et fixes du bureau
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - R26   ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 12 +  Else
.head 13 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "DISK_" || SalNumberToStrX( i, 0 )
.head 14 -  ! La disquette du lecteur n'a pas le bon label
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - R27    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 13 +  Else
.head 14 -  Set lsFile = gsPathTemp ||"P3_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 +  If SalStrRightX( gsPathCle ,1 ) ="\\"
.head 15 -  Set lsPath = SalStrLeftX( gsPathCle , SalStrLength( gsPathCle) - 1 )
.head 14 +  Else
.head 15 -  Set lsPath =  gsPathCle
.head 14 +  If bContinue and i = 1
.head 15 +  If bContinue and NOT  SalFileOpen( hFile , gsPathCle ||"MAC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 16 -  ! Erreur de création du fichier MAC.BE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - R28    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 +  Else
.head 16 +  If NOT SalFileWrite( hFile , lsClef1, SalStrLength( lsClef1) )
.head 17 -  ! Erreur d'écriture dans le fichier MAC.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R29    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 15 +  If bContinue and NOT  SalFileOpen( hFile , gsPathCle ||"ENC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 16 -  ! Erreur de création du fichier ENC.BE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - R30    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 +  Else
.head 16 +  If NOT SalFileWrite( hFile , lsClef2, SalStrLength( lsClef2) )
.head 17 -  ! Erreur d'écriture dans le fichier ENC.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R31    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 15 +  If bContinue and NOT  SalFileOpen( hFile , gsPathCle ||"IVCLE.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 16 -  ! Erreur de création du fichier IVCle.BE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - R32    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 +  Else
.head 16 +  If NOT SalFileWrite( hFile , lsIVClef, SalStrLength( lsIVClef) )
.head 17 -  ! Erreur d'écriture dans le fichier IVCle.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R33    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 15 +  If bContinue and NOT  SalFileOpen( hFile , gsPathCle ||"IVMAC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 16 -  ! Erreur de création du fichier IVMac.BE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - R34    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 15 +  Else
.head 16 +  If NOT SalFileWrite( hFile , lsIVMac ,SalStrLength( lsIVMac ) )
.head 17 -  ! Erreur d'écriture dans le fichier IVMac.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R35    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 15 +  If bContinue
.head 16 -  Set sBuffer  = 'DEL ' || gsPathCle||'LOG.ERR
' || gsPathRijndael || 'FLOPPY W ' || lsPwBV ||' ' || lsPath || ' ' || lsPath || ' ' || lsPath ||'
DIR ' || gsPathCle ||'\\*.* >'|| gsPathTemp ||'P3_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 16 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 16 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 16 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 16 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 16 -  Call SalFileClose( hFile )
.head 16 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 16 -  !
.head 16 -  Set j = 1
.head 16 +  While Not SalFileOpen( hFile, gsPathTemp ||'P3_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 17 -  Call SalPause(1000)
.head 17 -  Set j = j + 1
.head 17 +  If j > 50 or SalFileOpen( hFile, gsPathCle ||'LOG.ERR', OF_Exist )
.head 18 -  ! Erreur de création du floppy.be (phase 3 non terminée)
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - R36    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 18 -  !
.head 18 -  Break
.head 16 -  !
.head 14 -  ! Copie du FLOPPY.BE sur disquette
.head 14 +  If bContinue
.head 15 -  Call SalPause( 300 + gnPauseCopie )
.head 15 +  If SalFileCopy( gsPathCle||'FLOPPY.BE', gsLecteur[i] ||"\\FLOPPY.BE", TRUE ) != FILE_CopyOK
.head 16 -  ! Erreur de copie du floppy.be sur la disquette
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - R37    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 14 -  ! Signature de la disquette
.head 14 +  If bContinue
.head 15 +  If wsScrutinEl = '1'
.head 16 -  Set sBuffer  = 'DEL ' || gsLecteur[i] ||'\\LOG.ERR
' || gsPathRijndael || 'RIJNDAEL W 2 ' || lsPwBV ||' ' || gsLecteur[i]  || ' ' || gsLecteur[i]  || ' ' || lsPath ||'
DIR ' || gsLecteur[i] ||'\\be*.* >'|| gsPathTemp ||'P4_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 15 +  Else If wsScrutinEl = '2'
.head 16 -  ! Obtention d'un BE.2 (urne) et d'un BE.4 (MaV)
.head 16 -  Set sBuffer  = 'DEL ' || gsLecteur[i] ||'\\LOG.ERR
' || gsPathRijndael || 'RIJNDAEL W 9 ' || lsPwBV ||' ' || gsLecteur[i]  || ' ' || gsLecteur[i]  || ' ' || lsPath ||'
DIR ' || gsLecteur[i] ||'\\be*.* >'|| gsPathTemp ||'P4_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 15 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 14 -  Set i = i +1
.head 10 -  Call DispatchMessage(  )
.head 10 -  !
.head 10 +  If bContinue
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskBV and bContinue
.head 12 -  Set j = 1
.head 12 +  While Not SalFileOpen( hFile, gsPathTemp ||'P4_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 13 -  Call SalPause(2000)
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 14 -  ! Disquette manquante
.head 14 -  Set bContinue = FALSE
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 14 -  Break
.head 13 -  Set j = j + 1
.head 13 +  If j > 20 or SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 14 -  ! Erreur signature de la disquette (Phase 4 non terminée)
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - R38    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 14 -  Break
.head 12 +  If bContinue and SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 13 -  ! Erreur signature de la disquette (Phase 4 non terminée)
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - R38    ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 13 -  Break
.head 12 -  Set i = i + 1
.head 10 -  Call DispatchMessage(  )
.head 10 -  !
.head 10 -  ! Effacement des fichiers temporaires
.head 10 -  Set i = 1
.head 10 +  While i <= gnNbDiskBV
.head 11 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"P3_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"P4_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set i = i + 1
.head 10 -  !
.head 9 +  Else
.head 10 -  ! Impossible de trouver la commune et de savoir si il y a une election CPAS ou Conseil District
.head 10 -  Set bContinue = FALSE
.head 10 -  Set lsDateHeure = PalDtmDateHeure( )
.head 10 -  Set lsStatut = 'ERR. - DB2     ' || lsDateHeure
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 10 -  Call SqlCommit( ghSqlMain )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 10 -  !
.head 7 +  Else
.head 8 -  ! Erreur dans la correspondance de l'Utilisateur qui devait générer ce BV
.head 8 -  Set bContinue = FALSE
.head 8 -  Set lsDateHeure = PalDtmDateHeure( )
.head 8 -  Set lsStatut = 'ERR. - DB1     ' || lsDateHeure
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 7 -  Set bContinue = FALSE
.head 6 -  ! PHASE 4
.head 6 -  ! Verification du contenu de chaque disquette
.head 6 +  If bContinue
.head 7 -  Call SalPause(1000)
.head 7 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 7 -  Call SalBringWindowToTop( dfInfoClock )
.head 7 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 4: ' || PalTraductMsg('CREAT4')
.head 7 -  Call DispatchMessage(  )
.head 7 -  Set nFile= nFileDonnee + nFileFixe
.head 7 -  Set i = 0
.head 7 +  While i < nFile and bContinue
.head 8 +  If i < nFileDonnee
.head 9 -  Set lsArrayFile[i] = lsArrayFileDonnee[i]
.head 8 +  Else
.head 9 -  Set lsArrayFile[i] = lsArrayFileFixe[i - nFileDonnee]
.head 9 +  If VisFileCopy( gsPathBV_Cfg || lsArrayFile[i], gsPathTemp || lsArrayFile[i]) <= 0
.head 10 -  ! Un fichier manquant dans BV_Cfg
.head 10 -  Set bContinue = FALSE
.head 10 -  Set lsDateHeure = PalDtmDateHeure( )
.head 10 -  Set lsStatut = 'ERR. - CTRL4  ' || lsDateHeure
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 10 -  Call SqlCommit( ghSqlMain )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut || '  ' || lsArrayFile[j] )
.head 10 -  !
.head 10 -  Break
.head 8 -  Set i = i + 1
.head 7 +  If bContinue
.head 8 -  Call SalPause(3000 + gnPauseCopie )
.head 8 -  Set i = 1
.head 8 +  While i <= gnNbDiskBV and bContinue
.head 9 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 4: ' || PalTraductMsg('CREAT4') || ' - ' || PalTraductMsg( 'LECTEUR' ) || ' ' || SalNumberToStrX( i,0)
.head 9 -  Call DispatchMessage(  )
.head 9 -  Set lsArrayFile[nFile] = 'FLOPPY.BE'
.head 9 +  If wsScrutinEl = '1' and i = gnNbDiskBV and ( SalStrLeftX(SalNumberToStrX( tblCommuneBV.colIns, 0) , 2) = '21'  OR (gnNbDiskBV = 5 and gnNbLecteur = 5) )
.head 10 -  Set lsFile = "1.DSK"
.head 9 +  Else
.head 10 -  Set lsFile = SalNumberToStrX( i, 0) ||".DSK"
.head 9 -  Set lsArrayFile[nFile+1] = lsFile
.head 9 -  Set lsArrayFile[nFile+2] = 'BE.2'
.head 9 -  Set nFileTot = nFile + 2
.head 9 +  If wsScrutinEl = '2'
.head 10 -  Set lsArrayFile[nFile+3] = 'BE.4'
.head 10 -  Set nFileTot = nFile + 3
.head 9 -  Set j = 0
.head 9 +  While j <= nFileTot and bContinue
.head 10 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\"|| lsArrayFile[j] , OF_Exist)
.head 11 -  ! Un fichier manquant sur une disquette BV
.head 11 -  Set bContinue = FALSE
.head 11 -  Set lsDateHeure = PalDtmDateHeure( )
.head 11 -  Set lsStatut = 'ERR. - CTRL1  ' || lsDateHeure
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 11 -  Call SqlCommit( ghSqlMain )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut || '  ' || lsArrayFile[j] )
.head 11 -  !
.head 11 -  Break
.head 10 +  Else
.head 11 +  If j < nFile
.head 12 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 +  If j < nFileDonnee
.head 13 -  Set sBuffer  = 'FC ' || gsPathBV || lsArrayFile[j] ||' ' || gsLecteur[i] ||'\\'|| lsArrayFile[j] ||'  >'|| gsPathTemp||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 12 +  Else
.head 13 -  Set sBuffer  = 'FC ' || gsPathTemp || lsArrayFile[j] ||' ' || gsLecteur[i] ||'\\'|| lsArrayFile[j] ||'  >'|| gsPathTemp||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 13 -  ! Set sBuffer  = 'FC ' || gsPathBV_Cfg || lsArrayFile[j] ||' ' || gsLecteur[i] ||'\\'|| lsArrayFile[j] ||'  >'|| gsPathTemp||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 12 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0) ||'_' ||SalNumberToStrX( j,0)  || ".BAT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 12 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 12 -  Call SalFileClose( hFile )
.head 12 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 10 -  Set j = j + 1
.head 9 -  ! Vérif FC
.head 9 +  If bContinue
.head 10 -  Call SalPause(1000)
.head 9 +  While j <= nFile and bContinue
.head 10 +  If j < nFile
.head 11 -  Set nLigne = 0
.head 11 +  While NOT SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT', OF_Exist ) and nLigne != 100
.head 12 -  Call SalPause(300)
.head 12 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 13 -  ! Disquette manquante
.head 13 -  Set bContinue = FALSE
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut )
.head 13 -  !
.head 13 -  Break
.head 12 -  Set nLigne = nLigne + 1
.head 11 -  Call SalPause(100)
.head 11 +  If SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT', OF_Read | OF_Text )
.head 12 -  Set nLigne = 0
.head 12 +  While SalFileGetStr( hFile, sBuffer, 250 ) and bContinue
.head 13 +  If SalStrTrimX( sBuffer)  != ''
.head 14 -  Set nLigne = nLigne + 1
.head 13 +  If nLigne > 2
.head 14 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 14 -  Set bContinue = FALSE
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - CTRL2 a ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut|| ' --> ' || lsArrayFile[j])
.head 14 -  !
.head 14 -  Break
.head 12 -  Call SalFileClose( hFile )
.head 12 +  If nLigne = 0
.head 13 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 13 -  Set bContinue = FALSE
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - CTRL2 b ' || lsDateHeure
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut|| ' --> ' || lsArrayFile[j])
.head 13 -  !
.head 13 -  Break
.head 11 +  Else
.head 12 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 12 -  Set bContinue = FALSE
.head 12 -  Set lsDateHeure = PalDtmDateHeure( )
.head 12 -  Set lsStatut = 'ERR. - CTRL2 c ' || lsDateHeure
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 12 -  Call SqlCommit( ghSqlMain )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut || ' --> ' || lsArrayFile[j])
.head 12 -  !
.head 12 -  Break
.head 11 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 10 -  Set j = j + 1
.head 9 +  If VisDosSetVolumeLabel( gsLecteur[i], "DISK_"|| SalNumberToStrX( i, 0 ) ) != VTERR_Ok
.head 10 -  ! Impossible de labelliser la disquette
.head 10 -  Set lsDateHeure = PalDtmDateHeure( )
.head 10 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 10 -  Call SqlCommit( ghSqlMain )
.head 10 -  Set bContinue = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 10 -  !
.head 9 -  Set i = i + 1
.head 6 -  ! Timer : estimation du prochain temps
.head 6 -  Call SalTimerKill( hWndForm, 1 )
.head 6 +  If bContinue
.head 7 +  If wnPourcent != 0
.head 8 -  Set gnTimerInfo_BV = gnTimerInfo_BV - wnPourcent
.head 7 +  If cbRobot
.head 8 -  Set gnTimerInfo_BV = gnTimerInfo_BV + 20
.head 7 -  Call SalSetProfileString( 'UNITE', 'TIMER_BV', SalNumberToStrX( gnTimerInfo_BV,0) , gsIniLocal )
.head 6 -  Call DispatchMessage(  )
.head 6 -  !
.head 6 -  ! Effacement des fichiers Temporaire, MaV , Urne et clef
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskBV
.head 7 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P3_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P4_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set j = 0
.head 7 +  While j <= nFile
.head 8 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT'
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 8 -  Set lsFile = gsPathTemp ||'COPY' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.BAT'
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 8 -  Set j = j + 1
.head 7 -  Set i = i + 1
.head 6 -  Set i = 0
.head 6 +  While i < nFile
.head 7 +  If i >= nFileDonnee
.head 8 -  Set lsArrayFile[i] = lsArrayFileFixe[i - nFileDonnee]
.head 8 -  Call VisFileDelete( gsPathTemp || lsArrayFile[i])
.head 7 -  Set i = i + 1
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"URNE.IND", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"URNE.TBL", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"MACHVOTS.IND", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"MACHVOTS.TBL", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"MACHVOTL.TBL", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"MACHVOTC.TBL", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathBV||"PARAM.TBL", OF_Delete )
.head 6 -  Call VisFileDelete( gsPathBV||"*.BMP" )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"MAC.BE", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"ENC.BE", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"IVCLE.BE", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"IVMAC.BE", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"FLOPPY.BE", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathCle||"LOG.ERR", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathTemp||"FC.TXT", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathTemp||"COPY.BAT", OF_Delete )
.head 6 -  Call SalFileOpen( hFile, gsPathTemp || 'CO_DOS62.COM', OF_Delete )
.head 6 -  !
.head 6 -  Set wbCapteMouseMove = TRUE
.head 6 +  If bContinue
.head 7 -  Set lsDateHeure = PalDtmDateHeure( )
.head 7 +  If nEcritPrec != NUMBER_Null or nEcritPrec > 0
.head 8 -  Set lsStatut = 'Ecr.Disk ' || SalNumberToStrX( nEcritPrec + 1, 0)  || SalStrRepeatX(' ' , 5) || lsDateHeure
.head 8 -  Set nEcritPrec = nEcritPrec + 1
.head 7 +  Else
.head 8 -  Set lsStatut = 'Ecr.Disk 1' || SalStrRepeatX(' ' , 5) || lsDateHeure
.head 8 -  Set nEcritPrec = 1
.head 7 -  !
.head 7 -  Set i = 1
.head 7 -  Set lsTemp = ''
.head 7 +  While i <= gnNbDiskBV
.head 8 +  If lsTemp != ''
.head 9 -  Set lsTemp = lsTemp ||'|'
.head 8 -  Set lsTemp = lsTemp ||'0'
.head 8 -  Set i = i + 1
.head 7 -  !
.head 7 +  If SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote
	set bv_statut = :lsStatut , bv_codebak=:lsPwBV , bv_clef1=:lsClef1 , bv_clef2=:lsClef2 , bv_codemac=:lsIVMac , BV_NoEcrit = :nEcritPrec,BV_Identif =:lsTemp
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut || '
Gen: '|| lsTraceDSK ||'
PW: ' || lsPwBV ||'
Cle1: ' || lsClef1 ||'
Cle2: ' || lsClef2 ||'
 IVMax: '|| lsIVMac)
.head 8 -  !
.head 7 +  Else
.head 8 -  ! Erreur de mise à jour Bur_Vote alors que tout c'est bien passé
.head 8 -  Set bContinue = FALSE
.head 8 -  Set lsDateHeure = PalDtmDateHeure( )
.head 8 -  Set lsStatut = 'ERR. - DB39     ' || lsDateHeure
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 8 -  !
.head 7 -  Call VisWaitCursor(FALSE)
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Bur_vote set Bv_PwTemp = '"|| SalStrLeftX( lsPwBVPrec,8) ||"' where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 7 -  Call SqlCommit( ghSqlSecondaire )
.head 6 -  Call SalSendMsg( tblBureauVote, SAM_Click, 0,0)
.head 6 +  If NOT bContinue and SalStrUpperX(SalStrLeftX( tblBureauVote.colStatut, 4)) = 'ERR.' and tblBureauVote.colStatut != lsEtatPrec
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbDiskBV
.head 8 -  Set lsFile = gsLecteur[i] ||"FLOPPY.BE"
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 8 -  Set i = i + 1
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || PalTraductMsg( "ERR_DISK" ) )
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg( "ERR_DISK" ) ,PalTraductMsg( "ERR" ), MB_Ok )
.head 6 -  !
.head 6 -  Call SalHideWindow( dfLibelleInfo )
.head 6 -  Call SalHideWindow( dfInfoClock )
.head 6 -  Call SalEnableWindow( hWndForm )
.head 6 -  Set wbCapteMouseMove = TRUE
.head 6 -  !
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  Call SalEnableWindow( pbGenereBV )
.head 6 -  Call SalEnableWindow( pbEtiquBV )
.head 6 -  Call SalEnableWindow( pbPwBV )
.head 6 -  !
.head 6 -  Call SalSendMsg( tblBureauVote, SAM_Click, 0,0)
.head 6 -  !
.head 6 -  ! Impression des étiquettes
.head 6 +  If bContinue
.head 7 +  If SalMessageBox(PalTraductMsg( 'BV15' ) ||'
' || PalTraductMsg( 'BV16' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 8 -  Call PalCreationEtiquetteBV()
.head 6 -  !
.head 3 +  Function: PalGenereMasterDiskBV
.head 4 -  Description: Génération d'une diquette MASTER pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsTrace
.head 5 -  String: lsEtatPrec
.head 5 -  String: lsUserPrec
.head 5 -  String: lsLangue
.head 5 -  String: lsClef1
.head 5 -  String: lsClef2
.head 5 -  String: lsIVMac
.head 5 -  String: lsIVClef
.head 5 -  String: lsPwBV
.head 5 -  String: lsPwBVPrec
.head 5 -  String: lsClef1Prec
.head 5 -  String: lsClef2Prec
.head 5 -  String: lsCodeMacPrec
.head 5 -  Boolean: bContinue
.head 5 -  Boolean: bCPAS
.head 5 -  Boolean: bCDist
.head 5 -  String: lsStatut
.head 5 -  String: lsCarCtrl
.head 5 -  String: lsDateHeure
.head 5 -  String: lsElectionCommune
.head 5 -  String: lsNoArrond
.head 5 -  String: lsNoCanton
.head 5 -  String: lsNbScrutin
.head 5 -  String: lsDateEl
.head 5 -  String: lsChamp
.head 5 -  String: lsSelect
.head 5 -  String: lsNbListe
.head 5 -  String: lsNoListe
.head 5 -  String: lsNomListe
.head 5 -  String: lsNomListeOem
.head 5 -  String: lsNom1
.head 5 -  String: lsNom2
.head 5 -  String: lsNom1Oem
.head 5 -  String: lsNom2Oem
.head 5 -  String: lsEffectif
.head 5 -  String: lsRegLing
.head 5 -  String: lsFile
.head 5 -  String: lsLecteurs
.head 5 -  String: lsPath
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsArrayFileDonnee[*]
.head 5 -  String: lsArrayFileFixe[*]
.head 5 -  Number: nFile
.head 5 -  Number: nFileDonnee
.head 5 -  Number: nFileFixe
.head 5 -  Number: nCaract
.head 5 -  Number: nEcritPrec
.head 5 -  Number: nTotalSpace
.head 5 -  Number: nFreeSpace
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  Number: nLigne
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 -  Set bContinue = TRUE
.head 5 +  If gsLecteur[1] = ''
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT04') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 6 -  Return (FALSE)
.head 5 +  If gnNbDiskBV = NUMBER_Null or gnNbDiskBV <= 0
.head 6 -  ! Aucun lecteur défini dans le .INI
.head 6 -  Call SalMessageBox(PalTraductMsg( "BV13" ) ,PalTraductMsg( "MSG" ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  If NOT PalDtmFloppy( gnNbLecteur, gsLettreLecteur, gnNbLecteurDtm)
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT01') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 5 +  If bContinue
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call SalDisableWindow( hWndForm )
.head 6 -  Set dfLibelleInfo = PalTraductMsg('PREPA')
.head 6 -  Call SalShowWindow( dfLibelleInfo )
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! Trace
.head 6 -  Set lsTrace = 'MASTER --> ' 
.head 6 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg('PREPA') )
.head 6 -  ! Question: metttre les disquettes dans les lecteurs
.head 6 +  If bContinue
.head 7 -  Set i = 1
.head 7 +  While i <= 1
.head 8 +  If lsLecteurs != ''
.head 9 -  Set lsLecteurs = lsLecteurs ||'
'
.head 8 -  Set lsLecteurs = lsLecteurs || PalTraductMsg( 'LECTEUR') || ' ' || SalNumberToStrX( i, 0) || ' --> ' || gsLecteur[i]
.head 8 -  Set i = i + 1
.head 7 -  Call SalHideWindow( dfLibelleInfo )
.head 7 +  If SalMessageBox(PalTraductMsg( "BV11" )||"
" || lsLecteurs ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 8 -  Set bContinue = FALSE
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || 'Cancel')
.head 8 -  !
.head 7 +  If bContinue
.head 8 -  Call SalShowWindow( dfLibelleInfo )
.head 8 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! Vérification du SYS sur les lecteurs + labellisation
.head 6 +  If bContinue
.head 7 -  Set i = 1
.head 7 +  While i <= 1 and bContinue
.head 8 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM", OF_Exist ) 
.head 9 +  If SalMessageBox(PalTraductMsg( "BV12" )||" "  || SalNumberToStrX( i, 0) || " --> " ||  gsLecteur[i] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 10 -  Set bContinue = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || 'Cancel')
.head 10 -  !
.head 10 -  Break
.head 8 +  Else
.head 9 +  If VisDosSetVolumeLabel( gsLecteur[i], "MASTER_BV" ) != VTERR_Ok
.head 10 -  ! Impossible de labelliser la disquette
.head 10 -  Set lsDateHeure = PalDtmDateHeure( )
.head 10 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 10 -  Set bContinue = FALSE
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 10 -  !
.head 9 -  Set i = i + 1
.head 6 -  Call DispatchMessage(  )
.head 6 -  !
.head 6 -  ! Vérification si ces disquettes ne contiennent que le système
.head 6 +  If bContinue 
.head 7 -  Set i = 1
.head 7 +  While i <= 1 and bContinue
.head 8 -  Set nFile = VisDosEnumFiles( gsLecteur[i]||'\\*.*', FA_Standard , lsArrayFile )
.head 8 +  If nFile > 1
.head 9 -  Set bContinue = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace ||  PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] ||'  -  Cancel'  )
.head 9 -  !
.head 9 -  Call SalMessageBox( PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 8 +  Else
.head 9 -  Set nFile= 1
.head 9 -  Set lsArrayFile[0] =  'FC ' || gsPathRef || 'CO_DOS62.COM ' || gsLecteur[i] ||'\\COMMAND.COM  >'|| gsPathTemp||'FC.TXT'
.head 9 -  Set j = 0
.head 9 +  While j < nFile
.head 10 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 10 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 10 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 10 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 10 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 10 -  Call SalFileWrite( hFile, lsArrayFile[j] , SalStrLength( lsArrayFile[j]  ) )
.head 10 -  Call SalFileClose( hFile )
.head 10 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 10 -  Set nLigne = 0
.head 10 -  Call SalPause(500)
.head 10 +  While NOT SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Exist ) and nLigne != 100
.head 11 -  Call SalPause(300)
.head 11 -  Set nLigne = nLigne + 1
.head 10 -  Call SalPause(500)
.head 10 +  If SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Read | OF_Text )
.head 11 -  Set nLigne = 0
.head 11 +  While SalFileGetStr( hFile, sBuffer, 250 )
.head 12 +  If SalStrTrimX( sBuffer)  != ''
.head 13 -  Set nLigne = nLigne + 1
.head 12 +  If nLigne > 2
.head 13 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 13 -  !
.head 13 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 13 -  Break
.head 11 -  Call SalFileClose( hFile )
.head 11 +  If nLigne = 0
.head 12 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 12 -  Set bContinue = FALSE
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 12 -  !
.head 12 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 10 +  Else
.head 11 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 11 -  Set bContinue = FALSE
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 11 -  !
.head 11 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 11 -  Break
.head 10 -  Call SalFileClose( hFile )
.head 10 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 10 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 10 -  Set j = j + 1
.head 9 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 9 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  !
.head 9 +  If bContinue
.head 10 -  Set nFile = VisDosEnumDirs( gsLecteur[i]||'\\*.*', lsArrayFile )
.head 10 +  If nFile > 0
.head 11 -  Set bContinue = FALSE
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] || '  -  Cancel')
.head 11 -  !
.head 11 -  Call SalMessageBox( PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 8 -  Set i = i + 1
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! PHASE 1
.head 6 +  If bContinue
.head 7 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 1: ' || PalTraductMsg('CREAT2')
.head 7 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Call DispatchMessage(  )
.head 6 -  !
.head 6 -  ! Sauvegarde des fichiers fixe dans un array
.head 6 +  If bContinue
.head 7 -  Set nFile = VisDosEnumFiles( gsPathBV_Cfg ||'*.* ' , FA_Standard , lsArrayFile )
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! Copie des fichiers fixes sur disquette
.head 6 +  If bContinue
.head 7 -  Set i = 1
.head 7 +  While i <= 1 and bContinue
.head 8 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "MASTER_BV"
.head 9 -  ! La disquette du lecteur n'a pas le bon label
.head 9 -  Set lsDateHeure = PalDtmDateHeure( )
.head 9 -  Set lsStatut = 'ERR. - C24    ' || lsDateHeure
.head 9 -  Set bContinue = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 9 -  !
.head 8 +  Else
.head 9 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 9 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  Set sBuffer  = 'Copy ' || gsPathBV_Cfg ||'*.* ' || gsLecteur[i] ||'
DIR ' || gsLecteur[i] ||'\\*.* >'|| gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 9 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 9 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 9 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 9 -  Set i = i +1
.head 7 -  !
.head 6 -  !
.head 6 -  Set i = 1
.head 6 +  While i <= 1 and bContinue
.head 7 -  Set j = 1
.head 7 +  While Not SalFileOpen( hFile, gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 8 -  Call SalPause(3000)
.head 8 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 9 -  ! Disquette manquante
.head 9 -  Set bContinue = FALSE
.head 9 -  Set lsDateHeure = PalDtmDateHeure( )
.head 9 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 9 -  !
.head 9 -  Break
.head 8 -  Set j = j + 1
.head 8 +  If j > 40
.head 9 -  ! Erreur de copie sur une des disquettes des données fixes (Phase 2 non terminée)
.head 9 -  Set lsDateHeure = PalDtmDateHeure( )
.head 9 -  Set lsStatut = 'ERR. - C25    ' || lsDateHeure
.head 9 -  Set bContinue = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 9 -  !
.head 9 -  Break
.head 7 -  Set i = i + 1
.head 6 -  !
.head 6 -  ! PHASE 2
.head 6 -  ! Vérification de l'intégrité de la disquette
.head 6 +  If bContinue
.head 7 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 7 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 2: ' || PalTraductMsg('CREAT4')
.head 7 -  Set i = 1
.head 7 +  While i <= 1 and bContinue
.head 8 -  Set j = 0
.head 8 +  While j < nFile and bContinue
.head 9 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\"|| lsArrayFile[j] , OF_Exist)
.head 10 -  ! Un fichier manquant sur une disquette BV
.head 10 -  Set bContinue = FALSE
.head 10 -  Set lsDateHeure = PalDtmDateHeure( )
.head 10 -  Set lsStatut = 'ERR. - CTRL1  ' || lsDateHeure
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut || '  ' || lsArrayFile[j] )
.head 10 -  !
.head 10 -  Break
.head 9 +  Else
.head 10 +  If j < nFile
.head 11 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set sBuffer  = 'FC ' || gsPathBV_Cfg || lsArrayFile[j] ||' ' || gsLecteur[i] ||'\\'|| lsArrayFile[j] ||'  >'|| gsPathTemp||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 11 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 11 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 11 -  Call SalFileClose( hFile )
.head 11 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 11 -  Set nLigne = 0
.head 11 +  While NOT SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT', OF_Exist ) and nLigne != 100
.head 12 -  Call SalPause(300)
.head 12 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 13 -  ! Disquette manquante
.head 13 -  Set bContinue = FALSE
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut )
.head 13 -  !
.head 13 -  Break
.head 12 -  Set nLigne = nLigne + 1
.head 11 -  Call SalPause(100)
.head 11 +  If SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT', OF_Read | OF_Text )
.head 12 -  Set nLigne = 0
.head 12 +  While SalFileGetStr( hFile, sBuffer, 250 ) and bContinue
.head 13 +  If SalStrTrimX( sBuffer)  != ''
.head 14 -  Set nLigne = nLigne + 1
.head 13 +  If nLigne > 2
.head 14 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 14 -  Set bContinue = FALSE
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - CTRL2  ' || lsDateHeure
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 14 -  !
.head 14 -  Break
.head 12 -  Call SalFileClose( hFile )
.head 12 +  If nLigne = 0
.head 13 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 13 -  Set bContinue = FALSE
.head 13 -  Set lsDateHeure = PalDtmDateHeure( )
.head 13 -  Set lsStatut = 'ERR. - CTRL2  ' || lsDateHeure
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 13 -  !
.head 13 -  Break
.head 11 +  Else
.head 12 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 12 -  Set bContinue = FALSE
.head 12 -  Set lsDateHeure = PalDtmDateHeure( )
.head 12 -  Set lsStatut = 'ERR. - CTRL2  ' || lsDateHeure
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 12 -  !
.head 12 -  Break
.head 11 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' ||SalNumberToStrX( j,0) ||'.TXT'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  Set j = j + 1
.head 8 +  If VisDosSetVolumeLabel( gsLecteur[i], "MASTER_BV" ) != VTERR_Ok
.head 9 -  ! Impossible de labelliser la disquette
.head 9 -  Set lsDateHeure = PalDtmDateHeure( )
.head 9 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote set bv_statut = :lsStatut where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set bContinue = FALSE
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || lsStatut)
.head 9 -  !
.head 8 -  Set i = i + 1
.head 6 -  !
.head 6 -  ! Effacement des fichiers Temporaire, MaV , Urne et clef
.head 6 -  Set i = 1
.head 6 +  While i <= 1
.head 7 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P3_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"P4_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  Set i = i + 1
.head 6 -  Call SalFileOpen( hFile , gsPathTemp||"FC.TXT", OF_Delete )
.head 6 -  Call SalFileOpen( hFile , gsPathTemp||"COPY.BAT", OF_Delete )
.head 6 -  !
.head 6 +  If bContinue
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || 'OK')
.head 7 -  !
.head 7 -  Call VisWaitCursor(FALSE)
.head 6 -  !
.head 6 -  Call SalHideWindow( dfLibelleInfo )
.head 6 -  Call SalEnableWindow( hWndForm )
.head 6 -  !
.head 6 +  If NOT bContinue and SalStrUpperX(SalStrLeftX( tblBureauVote.colStatut, 4)) = 'ERR.'
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "MASTER DISK BV", lsTrace || PalTraductMsg( "ERR_DISK" ) )
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg( "ERR_DISK" ) ,PalTraductMsg( "ERR" ), MB_Ok )
.head 6 -  ! Impression des étiquettes
.head 6 +  If bContinue
.head 7 +  If SalMessageBox(PalTraductMsg( 'BV42' ) ||'
' || PalTraductMsg( 'BV16' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 8 -  Call PalCreationEtiquetteMasterBV()
.head 6 -  !
.head 6 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalCreationEtiquetteBV
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  String: lsNoBV
.head 5 -  String: lsNomBV
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsComF
.head 5 -  String: lsComN
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsCodeInt
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 +  If SqlPrepareAndExecute( ghSqlMain,"Select bv_no, BV_DESCRIPTION, Bv_President, BV_Adresse, Bv_Code_Postal, BV_Localite, BV_Com_pcTot, BV_Codebak , BV_STATUT, BV_NoEcrit
	from bur_vote 
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV
	Into :lsNoBV,:lsNomBV,:lsPres,:lsAdr,:lsCP,:lsLoc,:lsNoPcTot,:lsPW, :lsStatut, :lsNoEcrit ")
.head 6 +  If SqlFetchNext( ghSqlMain , Btmp)
.head 7 -  Set lsRegion = 'WAL'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain,"Select Region, nom_n, Nom_f from base_commune 
	where com_ins = :tblCommuneBV.colIns
	Into :lsRegion, :lsComN, :lsComF ")
.head 7 -  Call SqlFetchNext( ghSqlMain , Btmp)
.head 7 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 8 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '21' or SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '63' 
.head 9 -  Set sBuffer = "{Election}|{Election_Nl}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Commune_Nl}|{Ins_Comm}|{PcTot}|{PassWord}|{President}|{CodeInt}
"
.head 8 +  Else
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{PcTot}|{PassWord}|{President}|{CodeInt}
"
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  !
.head 8 -  Set lsCodeInt = SalStrRightX('00' || lsNoEcrit , 2) || VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsStatut, 20) , ' ' , ''), '/', '') , '.', '')
.head 8 -  !
.head 8 +  If lsRegion = 'FLA'
.head 9 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoBV ||"|" || lsNomBV ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || lsComN  || "|" || SalNumberToStrX(tblCommuneBV.colIns,0)  ||"|" || lsNoPcTot ||"|"
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres ||"|"|| lsCodeInt
.head 8 +  Else If lsRegion = 'BXL'
.head 9 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoBV ||"|" || lsNomBV ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || lsComF||"|"|| lsComN  || "|" || SalNumberToStrX(tblCommuneBV.colIns,0)  ||"|" || lsNoPcTot ||"|"
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres||"|"|| lsCodeInt
.head 8 +  Else If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '63'
.head 9 -  Set sBuffer = gsTitreF|| "|" ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoBV ||"|" || lsNomBV ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || lsComF||"|"|| lsComN  || "|" || SalNumberToStrX(tblCommuneBV.colIns,0)  ||"|" || lsNoPcTot ||"|"
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres||"|"|| lsCodeInt
.head 8 +  Else
.head 9 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoBV ||"|" || lsNomBV ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || lsComF  || "|" || SalNumberToStrX(tblCommuneBV.colIns,0)  ||"|" || lsNoPcTot ||"|"
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres||"|"|| lsCodeInt
.head 8 -  Set sBuffer = sBuffer ||"
"
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Call SalFileClose( hFile )
.head 8 -  ! Copie du fichier en local
.head 8 +  If gsFormatEtiq = 'A4'
.head 9 +  If lsRegion = 'BXL'
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQBV_BXL.Doc'
.head 9 +  Else If lsRegion = 'WAL' and SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '63'
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQBV_DE.Doc'
.head 9 +  Else
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQBV.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'ETIQBV.Doc'
.head 8 +  Else If gsFormatEtiq = 'ETIQ'
.head 9 -  Set lsFile1 =  gsPathRpt || 'DYMO_BV.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'DYMO_BV.Doc'
.head 8 +  Else If gsFormatEtiq = 'ETIQ2'
.head 9 -  Set lsFile1 =  gsPathRpt || 'DYMO_BV2.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'DYMO_BV2.Doc'
.head 8 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 8 -  ! Publipostage
.head 8 +  If cbPrintBV
.head 9 -  Call ShellExecute( hWndForm, 'Print', lsFile2, ''
, gsPathTemp , SW_HIDE )
.head 9 -  Call SalBringWindowToTop( hWndForm )
.head 8 +  Else
.head 9 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 5 +  Else
.head 6 -  Set bContinue = FALSE
.head 3 +  Function: PalCreationEtiquetteBV_Master
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sRegion
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  String: lsNoBV
.head 5 -  String: lsNomBV
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsComF
.head 5 -  String: lsComN
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsCodeInt
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 +  If sRegion = 'BXL'
.head 7 -  Set sBuffer = "{Election}|{Election_Nl}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Commune_Nl}|{Ins_Comm}|{PcTot}|{PassWord}|{President}|{CodeInt}
"
.head 6 +  Else
.head 7 -  Set sBuffer = "{Election}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{PcTot}|{PassWord}|{President}|{CodeInt}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  !
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 +  If sRegion = 'BXL'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQBV_BXL.Doc'
.head 7 +  ! Else If sRegion = 'WAL' and SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQBV_DE.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQBV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_BV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_BV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_BV2.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_BV2.Doc'
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalVerifPcTot_BV
.head 4 -  Description: Fct vérifiant si le PC tot a deja été créé pour ce bureau de vote
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nIns
.head 5 -  Number: nNoBV
.head 5 -  String: sNoPcTot
.head 5 -  String: sNoPcTotProv
.head 5 -  Number: nInsCanton
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bOk
.head 5 -  String: lsStatut
.head 4 +  Actions
.head 5 -  Set bOk = TRUE
.head 5 +  If wsScrutinEl = '1'
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select pct_statut from pc_tot
	where  ( (com_ins = :nIns and pct_no = :sNoPcTot and pct_type = 'COM') or  (can_ins = :nInsCanton and pct_no = :sNoPcTotProv and pct_type = 'CAN') ) and pct_statut is not null
	into :lsStatut")
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select pct_statut from pc_tot
	where  can_ins = :nInsCanton and pct_no = :sNoPcTotProv and pct_statut is not null
	into :lsStatut")
.head 5 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 6 +  If lsStatut != ''
.head 7 +  If SalStrUpperX( SalStrLeftX( lsStatut , 4 ) ) = 'ECR.'
.head 8 +  If SalMessageBox(PalTraductMsg('ATTENTION') ||'

' || PalTraductMsg( 'PCT03' ) ||'

' || PalTraductMsg( 'BV40' ) , PalTraductMsg( '?' ) , MB_OkCancel | MB_IconQuestion ) = IDOK
.head 9 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', bOk, gsTmp)
.head 9 +  If not bOk
.head 10 -  Call SalMessageBox(PalTraductMsg('PW_ERR') , PalTraductMsg('MSG'), MB_Ok )
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 5 -  Return (bOk)
.head 3 +  Function: PalRechercheInsBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sInsCom
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sInsDis
.head 5 -  String: sInsCan
.head 5 -  Number: nRow
.head 5 -  Number: nRowActu
.head 5 -  Number: nCantonActu
.head 5 -  Number: nLigne
.head 5 -  Boolean: bOk
.head 5 -  Boolean: bOk2
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Set bOk = FALSE
.head 5 -  Set bOk2 = FALSE
.head 5 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Can_ins from Commune where Com_ins = :sInsCom into :sInsCan ")
.head 5 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 5 -  Call SalTblSetRowFlags( tblCantonBV, SalTblQueryContext( tblCantonBV ), ROW_Selected, FALSE )
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( tblCantonBV, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblCantonBV, nRow)
.head 6 -  Call SalTblSetFocusRow( tblCantonBV, nRow)
.head 6 +  If tblCantonBV.colIns = SalStrToNumber(sInsCan)
.head 7 -  Set bOk = TRUE
.head 7 -  Set nRowActu = SalListQuerySelection( cmbCommuneBV )
.head 7 -  Call SalTblSetRowFlags( tblCantonBV, nRow, ROW_Selected, TRUE )
.head 7 -  Call SalSendMsg( tblCantonBV, SAM_Click, -1,0)
.head 7 -  Call SalTblSetRowFlags( tblCommuneBV, SalTblQueryContext( tblCommuneBV ), ROW_Selected, FALSE )
.head 7 -  Set nRow = -1
.head 7 +  While SalTblFindNextRow( tblCommuneBV, nRow, 0, 0 )
.head 8 -  Set bOk2 = TRUE
.head 8 -  Call SalTblSetContext( tblCommuneBV, nRow)
.head 8 -  Call SalTblSetFocusRow( tblCommuneBV, nRow)
.head 8 +  If tblCommuneBV.colIns = SalStrToNumber(sInsCom)
.head 9 -  Call SalTblSetRowFlags( tblCommuneBV, nRow, ROW_Selected, TRUE )
.head 9 -  Call SalListSetSelect( cmbCommuneBV, nRowActu )
.head 9 -  Call SalSendMsg( tblCommuneBV, SAM_Click, -2 ,0)
.head 9 -  Break
.head 7 -  Break
.head 5 +  If NOT bOk
.head 6 -  Call SalTblSetContext( tblCantonBV, 0)
.head 6 -  Call SalTblSetFocusRow( tblCantonBV, 0)
.head 6 -  Call SalTblSetRowFlags( tblCantonBV, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblCantonBV, SAM_Click, -1,0)
.head 5 +  If NOT bOk2
.head 6 -  Call SalTblSetContext( tblCommuneBV, 0)
.head 6 -  Call SalTblSetFocusRow( tblCommuneBV, 0)
.head 6 -  Call SalTblSetRowFlags( tblCommuneBV, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblCommuneBV, SAM_Click, -2,0)
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalLibereBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sNN
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsTrace
.head 4 +  Actions
.head 5 +  If SalTblAnyRows( tblBureauVote , ROW_Selected, 0) and SalStrLeftX( tblBureauVote.colStatut, 4) = 'PREP' and wnTabActif = 1
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote
	set bv_statut = 'ERR. Time Out'
	where com_ins = :tblCommuneBV.colIns and bv_no = :tblBureauVote.colNoBV ")
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 -  Call SalSendMsg( tblBureauVote, SAM_Click, 0,0)
.head 6 -  !
.head 6 -  ! Trace
.head 6 +  If sNN != ''
.head 7 -  Set sNN = '- EID: ' || sNN ||'  '
.head 6 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommuneBV.colIns,0) ||'   -   BV N°' || SalNumberToStrX( tblBureauVote.colNoBV,0) || '   ' || sNN ||'-->   '
.head 6 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Time Out')
.head 6 -  !
.head 6 -  !
.head 3 +  Function: PalSearchBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nBV
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Boolean: bFind
.head 4 +  Actions
.head 5 -  Call SalTblSetFlagsAnyRows( tblBureauVote, ROW_Selected, FALSE, 0, 0 )
.head 5 -  Set bFind = FALSE
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( tblBureauVote, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblBureauVote, nRow )
.head 6 -  Call SalTblSetFocusRow( tblBureauVote, nRow )
.head 6 +  If tblBureauVote.colNoBV= nBV
.head 7 -  Call SalTblSetRowFlags( tblBureauVote, nRow, ROW_Selected, TRUE )
.head 7 -  Set bFind = TRUE
.head 7 -  Break
.head 5 +  If NOT bFind
.head 6 -  Call SalTblSetContext( tblBureauVote, 0 )
.head 6 -  Call SalTblSetFocusRow( tblBureauVote, 0 )
.head 6 -  Call SalTblSetRowFlags( tblBureauVote, 0, ROW_Selected, TRUE )
.head 5 -  Call SalSendMsg( tblBureauVote, SAM_Click, 0,0)
.head 3 -  ! PC totalisation
.head 3 +  Function: PalVisuPCT
.head 4 -  Description: Edition de la répartition des BV sur le(s) PC de totalisation
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Boolean: bPw
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsTmp
.head 5 -  String: lsInsCan
.head 5 -  String: lsCanton
.head 5 -  String: lsInsCom
.head 5 -  String: lsInsComPrec
.head 5 -  String: lsCom
.head 5 -  String: lsNoBv
.head 5 -  String: lsDesc
.head 5 -  String: lsAdr
.head 5 -  String: lsLoc
.head 5 -  String: lsCP
.head 5 -  String: lsPw
.head 5 -  String: lsPwPct
.head 5 -  String: lsPres
.head 5 -  String: lsInsCdi
.head 5 -  String: lsCdi
.head 5 -  String: lsType
.head 5 -  String: lsTypePrec
.head 5 -  String: lsCdiPrec
.head 5 -  String: lsCdiLabel
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsTabul
.head 5 -  Long String: sBuffer
.head 5 -  File Handle: hFile
.head 5 -  Number: i
.head 5 -  Number: lnLongTitre
.head 4 +  Actions
.head 5 -  Set lsInsCan = SalNumberToStrX( tblCantonPCT.colIns, 0)
.head 5 -  Set lsCanton = tblCantonPCT.colCanton
.head 5 -  Set lsInsComPrec = ''
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from pc_tot where COM_Ins = :tblCommunePCT.colIns ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If SalFileOpen( hFile, gsPathTemp ||"PCT.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set sBuffer = 'Lijst van Totalisatie PC en Stembureaus'
.head 8 +  If bPw
.head 9 -  Set sBuffer = sBuffer || ' met Paswoorden'
.head 7 +  Else
.head 8 -  Set sBuffer = 'Liste des PC de Totalisation et des Bureaux de Vote'
.head 8 +  If bPw
.head 9 -  Set sBuffer = sBuffer || ' avec les Mots de passe'
.head 7 -  Set lnLongTitre = SalStrLength( sBuffer )
.head 7 -  Set sBuffer = SalStrRepeatX( '=' , lnLongTitre ) ||'
' || SalStrUpperX( sBuffer) || '
' ||SalStrRepeatX( '=' , lnLongTitre ) ||'

'
.head 7 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 -  Set sBuffer = PalTraductMsg( 'CAN' ) ||': ' || lsCanton ||' (' || lsInsCan ||')

'
.head 7 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Set sBuffer = PalTraductMsg( 'COM' ) ||': ' || tblCommunePCT.colCanton ||' (' || SalNumberToStrX( tblCommunePCT.colIns, 0) ||')
'|| SalStrRepeatX('-', SalStrLength(PalTraductMsg( 'COM' ) ) ) ||'
'
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 -  Set i = 1
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select pct_type, pct_no, pct_description,pct_adresse,pct_localite,pct_Code_postal, pct_president , pct_codebak, @Right('000' || pct_no, 3)
	from pc_tot 
	where com_ins = :tblCommunePCT.colIns 
	order by 1,9
	Into :lsType, :lsNoPcTot,:lsDesc,:lsAdr,:lsLoc,:lsCP,:lsPres, :lsPwPct, :lsTmp ")
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If i = 1
.head 9 -  Set sBuffer = ''
.head 9 +  If lsAdr != ''
.head 10 -  Set sBuffer = '	' || lsAdr 
.head 9 +  If lsCP != ''
.head 10 -  Set sBuffer = sBuffer||  '
	'|| lsCP 
.head 9 +  If lsLoc != ''
.head 10 -  Set sBuffer = sBuffer ||' ' || lsLoc 
.head 9 +  If lsPres != ''
.head 10 -  Set sBuffer = sBuffer ||'
	' || PalTraductMsg( 'PRESIDENT' ) ||': '  || lsPres
.head 9 -  Set sBuffer = sBuffer ||'

'
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  !
.head 8 +  If lsType != lsTypePrec
.head 9 -  Set sBuffer = ''
.head 9 +  If i != 1
.head 10 -  Set sBuffer = sBuffer || SalStrRepeatX('-', 65)||'
'
.head 9 -  Set sBuffer = sBuffer || '
' || SalStrUpperX(PalTraductMsg( lsType )) ||': 
'|| SalStrRepeatX('*', SalStrLength( PalTraductMsg( lsType )))  ||'

'
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Set lsTypePrec = lsType
.head 8 -  !
.head 8 -  Set i = i + 1
.head 8 +  If bPw
.head 9 +  If lsPwPct != ''
.head 10 -  Set lsPwPct = 'PW: ' || lsPwPct
.head 9 +  Else
.head 10 -  Set lsPwPct = ''
.head 8 +  Else
.head 9 -  Set lsPwPct = ''
.head 8 -  !
.head 8 -  Set lsInsCdi = ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select distinct cdi_ins from bur_vote 
	where com_ins = :tblCommunePCT.colIns and BV_COM_PCTOT = :lsNoPcTot
	Into :lsInsCdi ")
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 8 +  If lsInsCdi != ''
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set lsInsCdi = 'Districtsraad: '|| lsInsCdi ||'
'
.head 9 +  Else
.head 10 -  Set lsInsCdi = 'Conseil de district: '|| lsInsCdi ||'
'
.head 8 -  !
.head 8 -  Set sBuffer = PalLongueur( lsDesc, 15, ' ', '' ) || lsPwPct || '
' || SalStrRepeatX( '=', SalStrLength( lsDesc ) ) ||' ' || lsInsCdi ||'
'
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 +  If lsType = 'COM'
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select @right('000' || bv_no, 3) , bv_description , bv_codebak , bv_noecrit
	from bur_vote 
	where com_ins = :tblCommunePCT.colIns and BV_COM_PCTOT = :lsNoPcTot
	order by 1
	Into :lsNoBv, :lsDesc, :lsPw , :lsNoEcrit")
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select @right('000' || bv_no, 3) , bv_description , bv_codebak , bv_noecrit
	from bur_vote 
	where can_ins = :tblCommunePCT.colIns and BV_CAN_PCTOT = :lsNoPcTot  
	order by 1
	Into :lsNoBv, :lsDesc, :lsPw , :lsNoEcrit ")
.head 8 +  While SqlFetchNext( ghSqlSecondaire, Btmp)
.head 9 +  If bPw
.head 10 +  If lsPw != ''
.head 11 -  Set lsPw = 'PW: ' || lsPw || "  (" || lsNoEcrit || ")"
.head 10 +  Else
.head 11 -  Set lsPw = ''
.head 9 +  Else
.head 10 -  Set lsPw = ''
.head 9 -  Set sBuffer = '	' || PalLongueur( SalStrRightX('   ' || lsNoBv, 3) ||' - ' || lsDesc, 40, ' ', '') || lsPw ||'
'
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Set sBuffer = '
'
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 7 -  Call SalFileClose( hFile )
.head 7 -  Call PalEditFile(gsPathTemp ||"PCT.TXT" )
.head 7 -  Call SalBringWindowToTop( hWndForm )
.head 7 -  Call SalFileOpen( hFile, gsPathTemp ||"PCT.TXT", OF_Delete )
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PCT02' ), PalTraductMsg( 'MSG' ), MB_Ok )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'NO_PCTOT' ), PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalVerifEtatPCT
.head 4 -  Description: Vérification de l'état du PCTOT + coloration de la ligne en fonction de l'état
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  Number: nType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bEtatGenerePCT
.head 5 -  Boolean: bOk
.head 5 -  Boolean: bPWOk
.head 5 -  String: lsWhere
.head 5 -  String: sV5
.head 5 -  String: sV6
.head 5 -  String: sEtatPC
.head 5 -  String: sInsPro
.head 5 -  String: sRegion
.head 5 -  Number: nV2
.head 5 -  Number: nV3
.head 5 -  Number: nV3b
.head 5 -  String: sV2
.head 5 -  String: sV3
.head 5 -  String: sV3b
.head 5 -  Long String: lsSelect
.head 5 -  String: sControle
.head 5 -  Number: i
.head 5 -  String: lsIdentif
.head 5 -  String: lsCtrl
.head 5 -  String: sElectionEnCours
.head 5 -  String: sIns
.head 4 +  Actions
.head 5 -  Call SalDisableWindow( hWndForm )
.head 5 -  ! Return un boolean qui est l'état du bouton pour générer les PCTOT
.head 5 -  Call SalDisableWindow( pbGenerePCT )
.head 5 -  Call SalDisableWindow( pbEtiquPCT )
.head 5 -  Call SalDisableWindow( pbPwPCT)
.head 5 -  Call SalEnableWindow( pbModifPCT )
.head 5 -  Call SalEnableWindow( pbModifPCTProv )
.head 5 -  Set bEtatGenerePCT = FALSE
.head 5 -  Set bOk = TRUE
.head 5 +  If gnTypeVote = 1
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :tblCommunePCT.colIns ")
.head 5 +  Else
.head 6 -  ! Vérification PC TOT de la commune existe
.head 6 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "select * from pc_tot where com_ins = :tblCommunePCT.colIns ")
.head 5 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 6 +  If gnTypeVote = 0
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Call SqlPrepareAndExecute( ghSqlQuaternaire, "select V5,V6 from commune where com_ins = :tblCommunePCT.colIns 
	Into :sV5,:sV6 ")
.head 8 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 9 +  If sV5 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 9 -  !
.head 9 +  If bOk and sV6 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 +  Else
.head 9 -  Call SalDisableWindow( pbGenerePCT )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 -  Call SalDisableWindow( pbPwPCT)
.head 9 -  Set bEtatGenerePCT = FALSE
.head 7 +  ! Else If wsScrutinEl = '2'
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins, Region from Commune where Com_ins = :tblCommunePCT.colIns  into :sInsPro, :sRegion ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set sV2 = ''
.head 8 -  Set sV3 = ''
.head 8 -  Set sV3b = ''
.head 8 -  Set lsSelect = "select V2,0,0 from Base_commune where Pro_ins = :sInsPro  and Type = 'CI' "
.head 8 +  If sRegion = 'BXL'
.head 9 -  Set lsSelect = lsSelect || "
UNION 
select 0,V3,0 from Base_commune where Region = 'WAL'  and Type = 'SE'
UNION 
select 0,0,V3 from Base_commune where Region = 'FLA'  and Type = 'SE'"
.head 8 +  Else 
.head 9 -  Set lsSelect = lsSelect || "
UNION 
select 0,V3,0 from Base_commune where Region = :sRegion  and Type = 'SE' "
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2,:nV3,:nV3b ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 9 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 9 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 9 -  !
.head 8 +  If sV2 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else 
.head 9 -  Set bOk = FALSE
.head 8 +  If bOk and sV3 = '1'
.head 9 -  Set bOk = TRUE
.head 8 +  Else 
.head 9 -  Set bOk = FALSE
.head 8 +  If sRegion = 'BXL'
.head 9 +  If bOk and sV3b = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else 
.head 10 -  Set bOk = FALSE
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins, Region from Commune where Com_ins = :tblCommuneBV.colIns  into :sInsPro, :sRegion ")
.head 8 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set bOk = TRUE
.head 8 -  Set sElectionEnCours = ">," || wsOrdreEl ||",<"
.head 8 -  ! Europe
.head 8 +  If SalStrScan( sElectionEnCours , ",1,")!=-1 and bOk
.head 9 -  Set sV3 = ''
.head 9 -  Set sV3b = ''
.head 9 +  If sRegion = 'BXL'
.head 10 -  Set lsSelect ="select V3,0 from Base_commune where Region = 'WAL'  and Type = 'EU'
UNION 
select 0,V3 from Base_commune where Region = 'FLA'  and Type = 'EU' "
.head 9 +  Else
.head 10 -  Set lsSelect = "select V3,0 from Base_commune where Region = :sRegion  and Type = 'EU' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV3,:nV3b ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 10 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 10 -  !
.head 9 +  If bOk and sV3 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 9 +  If sRegion = 'BXL'
.head 10 +  If bOk and sV3b = '1'
.head 11 -  Set bOk = TRUE
.head 10 +  Else
.head 11 -  Set bOk = FALSE
.head 8 -  ! Chambre
.head 8 +  If SalStrScan( sElectionEnCours , ",2,")!=-1 and bOk
.head 9 -  Set sV2 = ''
.head 9 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'CI' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 10 -  !
.head 9 +  If sV2 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 -  ! Sénat
.head 8 +  If SalStrScan( sElectionEnCours , ",3,")!=-1 and bOk
.head 9 -  Set sV3 = ''
.head 9 -  Set sV3b = ''
.head 9 +  If sRegion = 'BXL'
.head 10 -  Set lsSelect ="select V3,0 from Base_commune where Region = 'WAL'  and Type = 'SE'
UNION 
select 0,V3 from Base_commune where Region = 'FLA'  and Type = 'SE'"
.head 9 +  Else
.head 10 -  Set lsSelect = "select V3,0 from Base_commune where Region = :sRegion  and Type = 'SE' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV3,:nV3b ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV3 = SalNumberToStrX( SalStrToNumber(sV3) + nV3, 0)
.head 10 -  Set sV3b = SalNumberToStrX( SalStrToNumber(sV3b) + nV3b, 0)
.head 10 -  !
.head 9 +  If bOk and sV3 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 9 +  If sRegion = 'BXL'
.head 10 +  If bOk and sV3b = '1'
.head 11 -  Set bOk = TRUE
.head 10 +  Else
.head 11 -  Set bOk = FALSE
.head 8 -  ! WL
.head 8 +  If SalStrScan( sElectionEnCours , ",4,")!=-1 and sRegion = 'WAL' and bOk
.head 9 +  If gsWL_Type = '0'
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Arron_ins from Base_commune where Com_ins = :tblCommuneBV.colIns and type = 'GE' into :sIns")
.head 10 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set lsWhere = " WL_INS_DEP like'%" || sIns ||"%' and Type = 'WR' "
.head 10 -  Set sV2 = ''
.head 9 +  Else
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "Select DIS_INS from Base_commune where Com_ins = :tblCommuneBV.colIns and type = 'GE' into :sIns")
.head 10 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set lsWhere = " CIRC_INS = :sIns and Type = 'WL' "
.head 9 -  Set sV2 = ''
.head 9 -  Set lsSelect = "select V2 from Base_commune where " || lsWhere
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 10 -  !
.head 9 +  If sV2 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 -  ! VL
.head 8 +  If SalStrScan( sElectionEnCours , ",7,")!=-1 and sRegion = 'FLA' and bOk
.head 9 -  Set sV2 = ''
.head 9 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'VL' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 10 -  !
.head 9 +  If sV2 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 -  ! BR
.head 8 +  If SalStrScan( sElectionEnCours , ",10,")!=-1 and sRegion = 'BXL' and bOk
.head 9 -  Set sV2 = ''
.head 9 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'BR' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 10 -  !
.head 9 +  If sV2 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 8 -  ! MBPF
.head 8 +  If SalStrScan( sElectionEnCours , ",11,")!=-1 and sRegion = 'BXL' and bOk
.head 9 -  Set sV2 = ''
.head 9 -  Set lsSelect = "select V2 from Base_commune where Pro_ins = :sInsPro  and Type = 'BV' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect ||"
	Into :nV2 ")
.head 9 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set sV2 = SalNumberToStrX( SalStrToNumber(sV2) + nV2, 0)
.head 10 -  !
.head 9 +  If sV2 = '1'
.head 10 -  Set bOk = TRUE
.head 9 +  Else
.head 10 -  Set bOk = FALSE
.head 6 +  Else
.head 7 +  If wsScrutinEl = '1'
.head 8 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 9 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :tblCommunePCT.colIns and BV_COM_PCTOT = :tblPcTot.colNoPCT and (bv_valide != 1 or bv_statut is null or 
				@upper(@left(bv_statut,4)) != 'ECR.' or bv_codebak = '' or bv_clef1= '' or bv_clef2= '' or 
				bv_codemac = '' or bv_codebak is null or bv_clef1 is null or bv_clef2 is null or bv_codemac is null  ) ")
.head 8 +  Else If SalTblAnyRows( tblPcTotProv , ROW_Selected, 0)
.head 9 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where can_ins = :tblCommunePCT.colIns and BV_CAN_PCTOT = :tblPcTotProv.colNoPCT and (bv_valide != 1 or bv_statut is null or 
				@upper(@left(bv_statut,4)) != 'ECR.' or bv_codebak = '' or bv_clef1= '' or bv_clef2= '' or 
				bv_codemac = '' or bv_codebak is null or bv_clef1 is null or bv_clef2 is null or bv_codemac is null  ) ")
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :tblCommunePCT.colIns and (bv_valide != 1 or bv_statut is null or 
				@upper(@left(bv_statut,4)) != 'ECR.' or bv_codebak = '' or bv_clef1= '' or bv_clef2= '' or 
				bv_codemac = '' or bv_codebak is null or bv_clef1 is null or bv_clef2 is null or bv_codemac is null  ) ")
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where can_ins = :tblCantonPCT.colIns and (bv_valide != 1 or bv_statut is null or 
				@upper(@left(bv_statut,4)) != 'ECR.' or bv_codebak = '' or bv_clef1= '' or bv_clef2= '' or 
				bv_codemac = '' or bv_codebak is null or bv_clef1 is null or bv_clef2 is null or bv_codemac is null  ) ")
.head 7 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 8 -  Set bOk = FALSE
.head 6 +  If NOT bOk
.head 7 -  Call SalDisableWindow( pbGenerePCT )
.head 7 -  Call SalDisableWindow( pbEtiquPCT )
.head 7 -  Call SalDisableWindow( pbPwPCT)
.head 7 -  Set bEtatGenerePCT = FALSE
.head 6 +  Else
.head 7 +  If wbActivate
.head 8 -  Call SalEnableWindow( pbGenerePCT )
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbGenerePCT )
.head 8 -  Set bEtatGenerePCT = FALSE
.head 7 -  Call SalEnableWindow( pbEtiquPCT )
.head 7 +  If gbAdminSys
.head 8 -  Call SalEnableWindow( pbPwPCT)
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbPwPCT)
.head 7 +  If wsScrutinEl = '1'
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and PCT_Type = 'COM' and ( pct_statut is not null or pct_statut != '' )  ")
.head 8 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 9 -  Call SalDisableWindow( pbModifPCT )
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and PCT_Type = 'CAN' and ( pct_statut is not null or pct_statut != '' )  ")
.head 8 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 9 -  Call SalDisableWindow( pbModifPCTProv )
.head 7 +  Else If wsScrutinEl = '2'
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and ( pct_statut is not null or pct_statut != '' )  ")
.head 8 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 9 -  Call SalDisableWindow( pbModifPCT)
.head 7 -  !
.head 7 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Set lsWhere = " and pct_no = :tblPcTot.colNoPCT and PCT_Type = 'COM' "
.head 8 +  Else
.head 9 -  Set lsWhere = " and pct_no = :tblPcTot.colNoPCT "
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select pct_statut, pct_createur, pct_identif from pc_tot
	where com_ins = :tblCommunePCT.colIns " || lsWhere || " 
	into :tblPcTot.colStatut, :tblPcTot.colUser, :lsIdentif ")
.head 7 +  Else If SalTblAnyRows( tblPcTotProv, ROW_Selected, 0)
.head 8 -  Set lsWhere = " and pct_no = :tblPcTotProv.colNoPCT and  PCT_Type = 'CAN' "
.head 8 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select pct_statut, pct_createur, pct_identif from pc_tot
	where com_ins = :tblCommunePCT.colIns " || lsWhere || " 
	into :tblPcTotProv.colStatut, :tblPcTotProv.colUser, :lsIdentif ")
.head 7 +  Else
.head 8 -  Set lsWhere = ""
.head 7 -  Call SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 7 -  !
.head 7 -  Set bEtatGenerePCT = TRUE
.head 7 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 8 +  If tblPcTot.colStatut = ''
.head 9 -  Set tblPcTot.colStatutPCT = ''
.head 9 -  Set tblPcTot.colUser = ''
.head 9 -  Call VisTblSetRowColor( tblPcTot, SalTblQueryContext( tblPcTot) , COLOR_Black )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTot.colStatut),5)  = 'PREPA'
.head 9 -  Set tblPcTot.colStatutPCT = PalTraductMsg( 'EN_COURS') || ' - ' || SalStrRightX(  tblPcTot.colStatut, 19 )
.head 9 -  Call VisTblSetRowColor( tblPcTot, SalTblQueryContext( tblPcTot) , COLOR_Blue )
.head 9 -  Call SalTblSetRowFlags( tblPcTot, SalTblQueryContext( tblPcTot), ROW_New, TRUE )
.head 9 -  Call SalDisableWindow( pbGenerePCT )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTot.colStatut),4) = 'ECR.'
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set tblPcTot.colStatutPCT = VisStrSubstitute( tblPcTot.colStatut, 'Ecr','Sch')
.head 9 +  Else
.head 10 -  Set tblPcTot.colStatutPCT = tblPcTot.colStatut
.head 9 -  Call VisTblSetRowColor( tblPcTot, SalTblQueryContext( tblPcTot) , COLOR_Red )
.head 9 -  ! Call SalTblSetRowFlags( tblPcTot, SalTblQueryContext( tblPcTot), ROW_Edited, TRUE )
.head 9 -  Call SalEnableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTot.colStatut),3) = 'ERR'
.head 9 -  Set tblPcTot.colStatutPCT = tblPcTot.colStatut
.head 9 -  Call VisTblSetRowColor( tblPcTot, SalTblQueryContext( tblPcTot) , COLOR_DarkAqua  )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 7 +  Else If SalTblAnyRows( tblPcTotProv, ROW_Selected, 0)
.head 8 +  If tblPcTotProv.colStatut = ''
.head 9 -  Set tblPcTotProv.colStatutPCT = ''
.head 9 -  Set tblPcTotProv.colUser = ''
.head 9 -  Call VisTblSetRowColor( tblPcTotProv, SalTblQueryContext( tblPcTotProv) , COLOR_Black )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTotProv.colStatut),5)  = 'PREPA'
.head 9 -  Set tblPcTotProv.colStatutPCT = PalTraductMsg( 'EN_COURS') || ' - ' || SalStrRightX(  tblPcTot.colStatut, 19 )
.head 9 -  Call VisTblSetRowColor( tblPcTotProv, SalTblQueryContext( tblPcTotProv) , COLOR_Blue )
.head 9 -  Call SalTblSetRowFlags( tblPcTotProv, SalTblQueryContext( tblPcTotProv), ROW_New, TRUE )
.head 9 -  Call SalDisableWindow( pbGenerePCT )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTotProv.colStatut),4) = 'ECR.'
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set tblPcTotProv.colStatutPCT = VisStrSubstitute( tblPcTotProv.colStatut, 'Ecr','Sch')
.head 9 +  Else
.head 10 -  Set tblPcTotProv.colStatutPCT = tblPcTotProv.colStatut
.head 9 -  Call VisTblSetRowColor( tblPcTotProv, SalTblQueryContext( tblPcTotProv) , COLOR_Red )
.head 9 -  ! Call SalTblSetRowFlags( tblPcTotProv, SalTblQueryContext( tblPcTotProv), ROW_Edited, TRUE )
.head 9 -  Call SalEnableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 8 +  Else If SalStrLeftX( SalStrUpperX(tblPcTotProv.colStatut),3) = 'ERR'
.head 9 -  Set tblPcTotProv.colStatutPCT = tblPcTotProv.colStatut
.head 9 -  Call VisTblSetRowColor( tblPcTotProv, SalTblQueryContext( tblPcTotProv) , COLOR_DarkAqua  )
.head 9 -  Call SalDisableWindow( pbEtiquPCT )
.head 9 +  If wbActivate
.head 10 -  Call SalEnableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = TRUE
.head 9 +  Else
.head 10 -  Call SalDisableWindow( pbGenerePCT )
.head 10 -  Set bEtatGenerePCT = FALSE
.head 5 +  Else
.head 6 -  Call SalDisableWindow( pbGenerePCT )
.head 6 -  Call SalDisableWindow( pbEtiquPCT )
.head 6 -  Call SalDisableWindow( pbPwPCT)
.head 6 -  Set bEtatGenerePCT = FALSE
.head 5 -  !
.head 5 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0) and tblPcTot.colStatutPCT = ''
.head 6 -  Set tblPcTot.colUser = ''
.head 5 +  If SalTblAnyRows( tblPcTotProv, ROW_Selected, 0) and tblPcTotProv.colStatutPCT = ''
.head 6 -  Set tblPcTotProv.colUser = ''
.head 5 -  !
.head 5 +  If SalStrLeftX( SalStrUpperX(tblPcTot.colStatut),4) = 'ECR.' or
   SalStrLeftX( SalStrUpperX(tblPcTotProv.colStatut),4) = 'ECR.' 
.head 6 -  Set tblPcTot.colCtrl = ''
.head 6 +  If lsIdentif != ''
.head 7 -  Set lsCtrl = ''
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbDiskPCT
.head 8 +  If lsCtrl != ''
.head 9 -  Set lsCtrl = lsCtrl ||"|"
.head 8 -  Set lsCtrl = lsCtrl || "1"
.head 8 -  Set i = i +1
.head 7 +  If lsIdentif = lsCtrl
.head 8 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 9 -  Set tblPcTot.colCtrl = 'v'
.head 9 -  Call VisTblSetRowColor( tblPcTot, SalTblQueryContext( tblPcTot) , COLOR_DarkGreen )
.head 9 -  Call SalTblSetRowFlags( tblPcTot, SalTblQueryContext( tblPcTot), ROW_Edited, TRUE )
.head 8 +  Else If SalTblAnyRows( tblPcTotProv, ROW_Selected, 0)
.head 9 -  Set tblPcTotProv.colCtrl = 'v'
.head 9 -  Call VisTblSetRowColor( tblPcTotProv, SalTblQueryContext( tblPcTotProv) , COLOR_DarkGreen )
.head 9 -  Call SalTblSetRowFlags( tblPcTotProv, SalTblQueryContext( tblPcTotProv), ROW_Edited, TRUE )
.head 8 +  If NOT PalDtmCtrl( 'PCT', tblCantonPCT.colIns, 'CAN' )
.head 9 -  Call VisTblSetRowColor( tblCantonPCT , SalTblQueryContext( tblCantonPCT) , COLOR_DarkGreen )
.head 9 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT), ROW_Edited, TRUE )
.head 5 -  !
.head 5 -  ! Vérification si traitement en cours sur un autre PC TOT de la commune
.head 5 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and pct_statut like 'PREPA%'   ")
.head 5 +  If SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 6 -  Call SalDisableWindow( pbGenerePCT )
.head 6 -  Call SalDisableWindow( pbEtiquPCT )
.head 6 -  Call SalDisableWindow( pbPwPCT)
.head 6 -  Set bEtatGenerePCT = FALSE
.head 5 -  ! Vérification si tout est créé pour cette entité (BV et PC tot) --> Active Bouton pour récépissés
.head 5 +  If wsScrutinEl = '1'
.head 6 -  Call SalDisableWindow( pbRecipisseBureau )
.head 5 +  Else If wsScrutinEl = '2'
.head 6 -  Call SalDisableWindow( pbRecipisseBureau )
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote
	where can_ins = :tblCommunePCT.colIns and @upper(bv_statut) not like 'ECR%'   ")
.head 6 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from pc_tot
	where com_ins = :tblCommunePCT.colIns and @upper(pct_statut) not like 'ECR%'   ")
.head 7 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 8 +  If gbAdminSys
.head 9 -  Call SalEnableWindow( pbRecipisseBureau )
.head 8 +  Else
.head 9 -  Call SalDisableWindow( pbRecipisseBureau )
.head 5 -  ! Vérification si tous les BV sont controlés
.head 5 +  If nType = 1
.head 6 -  Set sControle = ''
.head 6 -  Set i = 1
.head 6 +  While i <= gnNbDiskBV
.head 7 +  If sControle != '' 
.head 8 -  Set sControle = sControle || '|'
.head 7 -  Set sControle = sControle || '1'
.head 7 -  Set i = i + 1
.head 6 -  !
.head 6 +  If wsScrutinEl = '1'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain , " Select *
	from bur_vote
	where com_ins = :tblCommunePCT.colIns and (bv_identif != :sControle or bv_identif is null)")
.head 6 +  Else If wsScrutinEl = '2'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain , " Select *
	from bur_vote
	where can_ins = :tblCommunePCT.colIns and (bv_identif != :sControle or bv_identif is null) ")
.head 6 -  !
.head 6 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 7 +  If SalMessageBox( PalTraductMsg( 'BV51' ) ||'
' ||PalTraductMsg( 'XML18' ) , PalTraductMsg( 'ATTENTION' ), MB_OkCancel | MB_IconExclamation ) = IDCANCEL
.head 8 -  Set bEtatGenerePCT = FALSE
.head 7 +  Else
.head 8 -  ! Mot de pass master à encoder
.head 8 -  Set bPWOk = FALSE
.head 8 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', bPWOk, gsTmp)
.head 8 +  If bPWOk
.head 9 -  ! Trace
.head 9 -  ! Génération d'un PC tot alors que tous les BV ne sont pas contrôlés
.head 9 -  Call PalTraceAction( gsUserLog, "DISK PCT", "INS: " || SalNumberToStrX( tblCommunePCT.colIns,0) ||"
" || PalTraductMsg('BV51')  )
.head 9 -  Set bEtatGenerePCT = TRUE
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  Set bEtatGenerePCT = FALSE
.head 6 +  Else
.head 7 -  Set bEtatGenerePCT = TRUE
.head 5 -  !
.head 5 -  Call SalEnableWindow( hWndForm )
.head 5 -  Return ( bEtatGenerePCT)
.head 3 +  Function: PalGenereDiskPCT
.head 4 -  Description: Génération des diquettes pour les PCTOT de la commune
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsTrace
.head 5 -  String: lsPathDBF
.head 5 -  String: lsPathPcTot
.head 5 -  String: lsPathPcTotStru
.head 5 -  String: lsEtatPrec
.head 5 -  String: lsUserPrec
.head 5 -  String: lsClef1
.head 5 -  String: lsClef2
.head 5 -  String: lsIVMac
.head 5 -  String: lsIVClef
.head 5 -  String: lsFileReg
.head 5 -  String: lsCleResult1
.head 5 -  String: lsCleResult2
.head 5 -  String: lsPwPCT
.head 5 -  String: lsPwPCTPrec
.head 5 -  String: lsClef1Prec
.head 5 -  String: lsClef2Prec
.head 5 -  String: lsCodeMacPrec
.head 5 -  String: lsTraceDSK
.head 5 -  String: lsCollIns
.head 5 -  String: lsCollGrp
.head 5 -  String: lsRegion
.head 5 -  String: lsProIns
.head 5 -  String: lsComIns
.head 5 -  String: lsCanIns
.head 5 -  String: lsDisIns
.head 5 -  String: lsCpasIns
.head 5 -  String: lsCdiIns
.head 5 -  String: lsArrIns
.head 5 -  String: lsCircIns
.head 5 -  String: lsTypeVote
.head 5 -  ! Boolean: bContinue
.head 5 -  Boolean: bCPAS
.head 5 -  Boolean: bCDist
.head 5 -  Boolean: bAleatoire
.head 5 -  String: lsStatut
.head 5 -  String: lsCarCtrl
.head 5 -  String: lsDateHeure
.head 5 -  String: lsElectionCommune
.head 5 -  String: lsNomEl
.head 5 -  String: lsNomElF
.head 5 -  ! << 9.02b
.head 5 -  String: lsNomElA
.head 5 -  ! >> 9.02b
.head 5 -  String: lsNoArrond
.head 5 -  String: lsNoCanton
.head 5 -  String: lsNbScrutin
.head 5 -  String: lsDateEl
.head 5 -  String: lsDateEl_F
.head 5 -  String: lsChamp
.head 5 -  String: lsTable
.head 5 -  String: lsInsWL
.head 5 -  String: lsSelect
.head 5 -  String: lsSelect2
.head 5 -  String: lsTypePcTot
.head 5 -  String: lsTypePcTotTrace
.head 5 -  String: lsWhere
.head 5 -  String: lsWhereTypePc
.head 5 -  String: lsTYPREC
.head 5 -  Window Handle: hTblPcTot
.head 5 -  String: lsArray1[5]
.head 5 -  String: lsArray2[5]
.head 5 -  String: lsArray3[5]
.head 5 -  !
.head 5 -  Number: lnNoBV
.head 5 -  String: lsBurMin
.head 5 -  String: lsBurMax
.head 5 -  String: lsDescBV
.head 5 -  String: lsAdrBV	
.head 5 -  String: lsPresBV
.head 5 -  String: lsStatutBV
.head 5 -  String: lsCle
.head 5 -  String: lsCle1BV
.head 5 -  String: lsCle2BV
.head 5 -  String: lsCodebakBV
.head 5 -  String: lsCodemacBV
.head 5 -  String: lsIVMacResult
.head 5 -  String: lsNoPcTotProv
.head 5 -  String: lsNoPcTotCom
.head 5 -  String: lsCommuneA
.head 5 -  String: lsCommuneF
.head 5 -  String: lsCommuneN
.head 5 -  !
.head 5 -  String: lsNbListe
.head 5 -  String: lsNoListe
.head 5 -  String: lsNoListePrec
.head 5 -  String: lsNomListe
.head 5 -  String: lsNomListeOem
.head 5 -  String: lsEffSup
.head 5 -  !
.head 5 -  String: lsNom1Dis
.head 5 -  String: lsNom2Dis
.head 5 -  String: lsNom1
.head 5 -  String: lsNom2
.head 5 -  String: lsNom1Oem
.head 5 -  String: lsNom2Oem
.head 5 -  String: lsNoCdt
.head 5 -  String: lsEffectif
.head 5 -  String: lsRegLing
.head 5 -  String: lsFile
.head 5 -  String: lsTypeEl
.head 5 -  String: lsAbrevEl
.head 5 -  String: lsLecteurs
.head 5 -  String: lsPath
.head 5 -  String: lsTemp
.head 5 -  String: lsTmp
.head 5 -  String: lsNomArrond1
.head 5 -  String: lsNomArrond2
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsArrayPathFile[*]
.head 5 -  String: lsArrayPathFileLecteur[*]
.head 5 -  String: lsArrayFileDonnee[*]
.head 5 -  String: lsArrayFileDonnee1[*]
.head 5 -  String: lsArrayFileDonnee2[*]
.head 5 -  String: lsArrayFileFixe[*]
.head 5 -  String: lsArrayFileFixe2[*]
.head 5 -  String: lsArrayFileXML[*]
.head 5 -  Number: lnArrayNbListe[100]
.head 5 -  Number: lnArrayNbCdt[100, 100]
.head 5 -  Number: nFile
.head 5 -  Number: nFileDonnee
.head 5 -  Number: nFileDonnee1
.head 5 -  Number: nFileFixe
.head 5 -  Number: nFileDonnee2
.head 5 -  Number: nFileFixe2
.head 5 -  Number: nFileXML
.head 5 -  Number: nCaract
.head 5 -  Number: nEcritPrec
.head 5 -  Number: lnNbListe
.head 5 -  Number: lnNbCdt
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbEff
.head 5 -  Number: lnNbSupp
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  Number: nLigne
.head 5 -  Number: nRet
.head 5 -  Number: nTotalSpace
.head 5 -  Number: nFreeSpace
.head 5 -  Number: lnPcTotCan
.head 5 -  Number: lnPcTotCom
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  FunctionalVar: ExportDBF
.head 6 -  Class: clsExportData
.head 5 -  Boolean: lbMP_Existant
.head 4 +  Actions
.head 5 -  Set bContinue = TRUE
.head 5 +  If gnNbDiskPCT = NUMBER_Null or gnNbDiskPCT <= 0
.head 6 -  ! Aucun lecteur défini dans le .INI
.head 6 -  Call SalMessageBox(PalTraductMsg( "BV13" ) ,PalTraductMsg( "MSG" ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  If NOT PalDtmFloppy( gnNbLecteur, gsLettreLecteur, gnNbLecteurDtm)
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT01') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 5 +  If bContinue and PalVerifEtatPCT( 0 )
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call SalDisableWindow( pbGenerePCT )
.head 6 -  Call SalDisableWindow( pbEtiquPCT )
.head 6 -  Call SalDisableWindow( pbPwPCT )
.head 6 +  If wsScrutinEl = '1'
.head 7 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 8 -  Set lsWhereTypePc = "  and PCT_Type = 'COM' "
.head 8 -  Set hTblPcTot = tblPcTot
.head 8 -  Set lsTypePcTot = 'C'
.head 8 -  Set lsTypePcTotTrace = 'COM'
.head 7 +  Else If SalTblAnyRows(tblPcTotProv, ROW_Selected, 0)
.head 8 -  Set lsWhereTypePc = " and  PCT_Type = 'CAN' "
.head 8 -  Set hTblPcTot = tblPcTotProv
.head 8 -  Set lsTypePcTot = ''
.head 8 -  Set lsTypePcTotTrace = 'CAN'
.head 7 +  Else
.head 8 -  Set lsWhere = ""
.head 8 -  Call VisWaitCursor(FALSE)
.head 8 -  Return FALSE
.head 6 +  Else If wsScrutinEl = '2'
.head 7 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 8 -  Set lsWhereTypePc = ""
.head 8 -  Set hTblPcTot = tblPcTot
.head 8 -  Set lsTypePcTot = 'K'
.head 8 -  Set lsTypePcTotTrace = 'LEGIS'
.head 7 +  Else
.head 8 -  Set lsWhere = ""
.head 8 -  Call VisWaitCursor(FALSE)
.head 8 -  Return FALSE
.head 6 +  Else
.head 7 -  Set lsWhere = ""
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Return FALSE
.head 6 -  Call SalDisableWindow( hWndForm )
.head 6 -  Call SalShowWindow( dfLibelleInfo )
.head 6 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 6 -  Set dfLibelleInfo = PalTraductMsg('PREPA')
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set lsEtatPrec = hTblPcTot.colStatut
.head 6 -  Set lsUserPrec = hTblPcTot.colUser
.head 6 -  Set nEcritPrec = hTblPcTot.colNoEcrit
.head 6 -  Set bContinue = TRUE
.head 6 -  Set lsDateHeure = PalDtmDateHeure( )
.head 6 -  Set lsStatut = 'PREPA     ' || lsDateHeure
.head 6 +  If SqlPrepareAndExecute( ghSqlMain, "Update PC_TOT set pct_statut = :lsStatut , pct_createur = :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 +  If PalVerifEtatPCT( 1 )
.head 8 +  If hTblPcTot.colStatut = lsStatut and hTblPcTot.colUser = gsUserLog
.head 9 -  ! Trace
.head 9 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommunePCT.colIns,0) ||'   -   PC N°' || SalNumberToStrX( hTblPcTot.colNoPCT ,0) || '   ' || lsTypePcTotTrace ||' -->   '
.head 9 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 9 -  !
.head 9 +  If nEcritPrec = NUMBER_Null
.head 10 -  Set lsTraceDSK =  '01' || SalStrLeftX( VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsDateHeure, 20) , ' ' , ''), '/', '') , '.', ''), 8)
.head 9 +  Else
.head 10 -  Set lsTraceDSK =  SalStrRightX('00' ||  SalNumberToStrX(nEcritPrec+1,0) ,2) || SalStrLeftX( VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsDateHeure, 20) , ' ' , ''), '/', '') , '.', ''), 8)
.head 9 -  !
.head 9 +  If SalStrUpperX(SalStrLeftX(lsEtatPrec, 4)) = 'ECR.'
.head 10 -  Call SalHideWindow( dfLibelleInfo )
.head 10 +  If SalMessageBox(PalTraductMsg( "PCT03" )||"
" || PalTraductMsg( "PCT04" ) ,PalTraductMsg( "?" ), MB_OkCancel | MB_IconQuestion ) = IDCANCEL
.head 11 -  Set lsStatut = lsEtatPrec
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur=:lsUserPrec where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 11 -  Call SqlCommit( ghSqlMain )
.head 11 -  Set bContinue = FALSE
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || 'Cancel')
.head 11 -  !
.head 10 +  If bContinue
.head 11 -  Call SalShowWindow( dfLibelleInfo )
.head 11 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 9 -  Call DispatchMessage(  )
.head 9 +  If bContinue
.head 10 -  ! En cours de création
.head 10 +  If wsScrutinEl = '1'
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Select  A.Com_el_cpas,A.com_el_cdistrict,B.No_Arrond, B.No_Canton , A.Region, B.Nom_F, B.Nom_N, B.arron_ins, B.Vote_el_type, B.Dis_ins, B.Can_ins, B.Pro_ins, B.Region, B.WL_INS_DEP
	from commune A, base_commune B
	where A.com_ins = :tblCommunePCT.colIns and A.Com_Ins = B.Com_ins and B.Type = 'GE'
	Into  :bCPAS, :bCDist , :lsNoArrond, :lsNoCanton, :lsRegLing, :lsNom1, :lsNom2 , :lsArrIns , :lsTypeVote, :lsDisIns, :lsCanIns, :lsProIns, :lsRegion, :lsInsWL ")
.head 10 +  Else If wsScrutinEl = '2'
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Select  A.Com_el_cpas,A.com_el_cdistrict,B.No_Arrond, B.No_Canton , A.Region, B.Nom_F, B.Nom_N, B.arron_ins, B.Vote_el_type, B.Dis_ins, B.Can_ins, B.Pro_ins, B.Region, B.WL_INS_DEP
	from commune A, base_commune B
	where A.can_ins = :tblCommunePCT.colIns and A.Can_Ins = B.Can_ins and B.Type = 'CA'
	Into  :bCPAS, :bCDist , :lsNoArrond, :lsNoCanton, :lsRegLing, :lsNom1, :lsNom2 , :lsArrIns , :lsTypeVote, :lsDisIns, :lsCanIns, :lsProIns, :lsRegion, :lsInsWL ")
.head 10 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 11 +  If wsScrutinEl = '2'
.head 12 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select   B.WL_INS_DEP
	from commune A, base_commune B
	where A.com_ins = :tblCommunePCT.colIns and A.Com_Ins = B.Com_ins and B.Type = 'GE'
	Into  :lsInsWL ")
.head 12 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 11 +  If lsRegLing = 'WAL'
.head 12 -  Set lsRegLing = '1'
.head 11 +  Else If lsRegLing = 'FLA'
.head 12 -  Set lsRegLing = '2'
.head 11 +  Else
.head 12 -  Set lsRegLing = '4'
.head 11 -  !
.head 11 -  Set lsComIns = SalNumberToStrX(tblCommunePCT.colIns, 0)
.head 11 -  Set lsDisIns =  SalNumberToStrX(tblCommunePCT.colInsDis, 0)
.head 11 -  Set lsCpasIns = ''
.head 11 -  Set lsCdiIns = ''
.head 11 -  !
.head 11 +  If lsTypeVote = 'D'
.head 12 -  Set lsPathPcTot = gsPathPcTot_Cfg
.head 12 -  Set lsPathPcTotStru = gsPathPcTot_CfgStru
.head 11 +  Else If lsTypeVote = 'J'
.head 12 -  Set lsPathPcTot = gsPathPcTot_Cfg_Jites
.head 12 -  Set lsPathPcTotStru = gsPathPcTot_CfgStru_Jites
.head 11 +  Else
.head 12 -  ! Ce type de vote n'existe pas
.head 12 -  Set lsDateHeure = PalDtmDateHeure( )
.head 12 -  Set lsStatut = 'ERR. - DB4     ' || lsDateHeure
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 12 -  Call SqlCommit( ghSqlMain )
.head 12 -  Set bContinue = FALSE
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 12 -  !
.head 11 -  !
.head 11 -  ! Set lsElectionCommune = VisStrSubstitute(wsOrdreEl, ',' ,'' )
.head 11 -  Set lsElectionCommune = VisStrSubstitute( PalTransElHexa(wsOrdreEl), ',' ,'' )
.head 11 +  ! If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '21'
.head 12 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '5', '')
.head 11 +  If wsScrutinEl =  '1'
.head 12 +  If SalStrLeftX( SalNumberToStrX( tblCommuneBV.colIns, 0), 2) = '21'
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '5', '')
.head 11 +  Else
.head 12 +  If SalStrLeftX( lsProIns, 2) != '21'
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, 'A', '')
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, 'B', '')
.head 13 +  If lsRegion = 'WAL'
.head 14 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '7', '')
.head 13 +  Else
.head 14 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '4', '')
.head 12 +  Else
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '4', '')
.head 13 -  Set lsElectionCommune = VisStrSubstitute( lsElectionCommune, '7', '')
.head 11 -  Set lsNbScrutin = SalNumberToStrX( SalStrLength( lsElectionCommune), 0 )
.head 11 -  Set lsDateEl = SalStrRightX( gsDateEl, 2) || SalStrMidX( gsDateEl, 4,2) || SalStrMidX( gsDateEl, 2,2)
.head 11 -  Set lsDateEl_F = SalStrRightX( gsDateEl, 6)
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Vérification si Disquette déja crées --> Reprendre une partie du mot de passe
.head 11 +  If bContinue
.head 12 -  Set lbMP_Existant = FALSE
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Select  pct_codebak , pct_clef1 , pct_clef2 , pct_codemac
	From pc_tot
	where com_ins = :tblCommunePCT.colIns "|| lsWhereTypePc ||" and pct_codebak is not null
	Into :lsPwPCTPrec, :lsClef1Prec , :lsClef2Prec, :lsCodeMacPrec ")
.head 12 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 13 -  Set lbMP_Existant = TRUE
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Question : mettre les disquettes dans les lecteurs
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT
.head 13 +  If lsLecteurs != ''
.head 14 -  Set lsLecteurs = lsLecteurs ||'
'
.head 13 -  Set lsLecteurs = lsLecteurs || PalTraductMsg( 'LECTEUR') || ' ' || SalNumberToStrX( i, 0) || ' --> ' || gsLecteur[i]
.head 13 -  Set lsLecteurs = lsLecteurs || '    (' || gsPCT_Couleur[i] ||')'
.head 13 -  Set i = i + 1
.head 12 -  Call SalHideWindow( dfLibelleInfo )
.head 12 +  If SalMessageBox(PalTraductMsg( "BV11" )||"
" || lsLecteurs ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 13 -  Set lsStatut = lsEtatPrec
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :lsUserPrec where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 13 -  Call SqlCommit( ghSqlMain )
.head 13 -  Set bContinue = FALSE
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || 'Cancel')
.head 13 -  !
.head 12 +  If bContinue
.head 13 -  Call SalShowWindow( dfLibelleInfo )
.head 13 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Vérification du SYS sur les lecteurs + labellisation
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call VisDosSetVolumeLabel( gsLecteur[i], '' ) 
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM", OF_Exist )
.head 14 +  If SalMessageBox(PalTraductMsg( "BV12" )||" " || SalNumberToStrX( i, 0) || " --> " || gsLecteur[i] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 15 -  Set lsStatut = lsEtatPrec
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut , pct_createur = :lsUserPrec where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV12') ||'  --> Cancel')
.head 15 -  !
.head 15 -  Break
.head 13 +  Else
.head 14 +  If VisDosSetVolumeLabel( gsLecteur[i], "PCTOT_"|| SalNumberToStrX( i, 0 ) ) != VTERR_Ok
.head 15 -  ! Impossible de labelliser la disquette
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 15 -  !
.head 14 -  Set i = i + 1
.head 12 -  ! Vérification de la présence d'une disquette dans un autre lecteur
.head 12 +  If bContinue
.head 13 +  While i <= gnNbLecteur
.head 14 +  If VisDosGetDriveSize ( gsLecteur[i] , nTotalSpace, nFreeSpace) = VTERR_Ok
.head 15 +  If SalMessageBox(PalTraductMsg( "BV37" )||" " || SalNumberToStrX( i, 0) || " --> " || gsLecteur[i] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 16 -  Set lsStatut = lsEtatPrec
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut , pct_createur = :lsUserPrec where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV37') ||'  --> Cancel')
.head 16 -  !
.head 16 -  Break
.head 14 +  Else
.head 15 -  Set i = i + 1
.head 11 -  !
.head 11 -  Call SalShowWindow( dfInfoClock )
.head 11 -  Call SalBringWindowToTop( dfInfoClock )
.head 11 -  Set wnPourcent = gnTimerInfo_PCT
.head 11 -  Call PalTimer()
.head 11 -  Call SalTimerSet( hWndForm, 1, 1000 )
.head 11 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Vérification si ces disquettes ne contiennent que le système
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 -  Call VisFileCopy( gsPathRef || 'CO_DOS62.COM', gsPathTemp || 'CO_DOS62.COM' )
.head 12 -  Call SalPause(500)
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Set nFile = VisDosEnumFiles( gsLecteur[i]||'\\*.*', FA_Standard , lsArrayFile )
.head 13 +  If nFile > 1
.head 14 -  Set lsStatut = lsEtatPrec
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  Call SalMessageBox( PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] || ' -- > Cancel ')
.head 14 -  !
.head 13 +  Else
.head 14 -  Set nFile= 1
.head 14 -  Set lsArrayFile[0] =  'FC ' || gsPathRef || 'CO_DOS62.COM ' || gsLecteur[i] ||'\\COMMAND.COM  >'|| gsPathTemp||'FC.TXT'
.head 14 -  Set j = 0
.head 14 +  While j < nFile
.head 15 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Call SalFileWrite( hFile, lsArrayFile[j] , SalStrLength( lsArrayFile[j]  ) )
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 15 -  Set nLigne = 0
.head 15 -  Call SalPause(500 + gnPauseCopie )
.head 15 +  While NOT SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Exist ) and nLigne != 100
.head 16 -  Call SalPause(300)
.head 16 -  Set nLigne = nLigne + 1
.head 15 -  Call SalPause( 500 )
.head 15 +  If SalFileOpen( hFile, gsPathTemp ||"FC.TXT", OF_Read | OF_Text )
.head 16 -  Set nLigne = 0
.head 16 +  While SalFileGetStr( hFile, sBuffer, 250 )
.head 17 +  If SalStrTrimX( sBuffer)  != ''
.head 18 -  Set nLigne = nLigne + 1
.head 17 +  If nLigne > 2
.head 18 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 18 -  Set lsStatut = lsEtatPrec
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i])
.head 18 -  !
.head 18 -  Break
.head 16 -  Call SalFileClose( hFile )
.head 16 +  If nLigne = 0
.head 17 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 17 -  Set lsStatut = lsEtatPrec
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i])
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 15 +  Else
.head 16 -  ! Différence entre un fichier système de la disquette et ceux de référence du serveur
.head 16 -  Set lsStatut = lsEtatPrec
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  Call SalMessageBox( PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV17') || ' ' || gsLecteur[i] )
.head 16 -  !
.head 16 -  Break
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Set j = j + 1
.head 14 -  Set lsFile = gsPathTemp ||"FC.TXT"
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  !
.head 14 +  If bContinue
.head 15 -  Set nFile = VisDosEnumDirs( gsLecteur[i]||'\\*.*', lsArrayFile )
.head 15 +  If nFile > 0
.head 16 -  Set lsStatut = lsEtatPrec
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  Call SalMessageBox( PalTraductMsg( 'BV14') || ' ' || gsLecteur[i] , PalTraductMsg('MSG') , MB_Ok)
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( 'BV14') || ' ' || gsLecteur[i])
.head 16 -  !
.head 13 -  Set i = i + 1
.head 12 -  Call VisFileDelete( gsPathTemp || 'CO_DOS62.COM' )
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! PHASE 1
.head 11 +  If bContinue
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 1: ' || PalTraductMsg('CREAT1')
.head 12 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 12 -  Call SalBringWindowToTop( dfInfoClock )
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Création des fichiers de données
.head 11 +  If bContinue
.head 12 -  ! Génération des clés
.head 12 +  If lbMP_Existant and lsClef1Prec != '' and lsPwPCTPrec != ''
.head 13 -  Set lsClef1 = lsClef1Prec
.head 13 -  Set lsClef2 = lsClef2Prec
.head 13 -  Set lsIVClef = PalGenClef( wlsMoveMouse, 3 )
.head 13 -  Set lsPwPCT = lsPwPCTPrec
.head 13 -  Set lsIVMac = lsCodeMacPrec
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Pc_tot set pct_PwTemp = '"|| SalStrLeftX( lsPwPCT,8) ||"' where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 13 -  Call SqlCommit( ghSqlSecondaire )
.head 12 +  Else
.head 13 -  Set lsClef1 = PalGenClef( wlsMoveMouse, 1 )
.head 13 -  Set lsClef2 = PalGenClef( wlsMoveMouse, 2 )
.head 13 -  Set lsIVClef = PalGenClef( wlsMoveMouse, 3 )
.head 13 -  ! Set lsPwPCT = SalStrRightX( '0000' || SalNumberToStrX( SalNumberRandom(), 0), 4) || SalStrRightX( '0000' || SalNumberToStrX( SalNumberRandom(), 0), 4)
.head 13 -  Set i = 0
.head 13 +  While i <= 20
.head 14 -  Set lsPwPCT = wsPWRandom
.head 14 +  If PalVerifPW( lsPwPCT, 'PCT' )
.head 15 -  Break
.head 14 +  Else
.head 15 -  Call PalDtmMove( 1 )
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Pc_tot set pct_PwTemp = :lsPwPCT where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 13 -  Call SqlCommit( ghSqlSecondaire )
.head 13 -  Set lsIVMac = PalGenClef( wlsMoveMouse, 4 )
.head 13 -  Set lsPwPCT = lsPwPCT || SalStrRightX('00' || SalNumberToStrX( 99 - SalNumberMod( SalStrToNumber( lsPwPCT) , 97) , 0), 2)
.head 12 -  !
.head 12 -  ! Génération des BDF
.head 12 -  ! 1. Scrutin.Dbf -> SCaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'SC'|| lsDateEl_F ||'.DBF'
.head 13 -  ! S_CODE	C	1
  S_NOMF	C	50
  S_NOMN	C	50
  S_MAX_EFF	N	3	0
  S_MAX_SUP	N	3	0
  S_NBR_VBE	N	6	0
  S_NBR_VBN	N	6	0


.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'S_CODE', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'S_NOMF', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'S_NOMN', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'S_MAX_EFF', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'S_NBR_VBE', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'S_NBR_VBN', 'N', 6, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Set i = 0
.head 14 +  While i < SalStrLength( lsElectionCommune) and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 +  If ((lsTypePcTot = 'C' or (lsTypePcTot = '' and SalStrMidX(lsElectionCommune,i,1) = '5' )) and wsScrutinEl = '1') 
  or
   (wsScrutinEl='2' and  lsTypePcTot = 'K' )
.head 16 -  Set lsTmp = PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1))
.head 16 +  If lsTmp = '7' or lsTmp = '10'
.head 17 -  Set lsTmp = '4'
.head 16 +  Else If lsTmp = '11'
.head 17 -  Set lsTmp = '7'
.head 16 -  Call ExportDBF.SetString( 'S_CODE', lsTmp  )
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select EL_Nom_N, EL_NOm_F, el_nom_a
	from Election
	where El_No = " ||  PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1)) ||"
	Into :lsNomEl,:lsNomElF, :lsNomElA ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 +  If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns,0) , 2) = '63'
.head 17 -  Call ExportDBF.SetString( 'S_NOMN', lsNomElA )
.head 16 +  Else
.head 17 -  Call ExportDBF.SetString( 'S_NOMN', lsNomEl )
.head 16 -  Call ExportDBF.SetString( 'S_NOMF', lsNomElF )
.head 16 -  !
.head 16 +  If SalStrMidX(lsElectionCommune,i,1) = '5'
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'DI' and DIS_Ins = :lsDisIns "
.head 17 -  Set lsSelect2 = " DIS_Ins = :lsDisIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '6'
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'GE' and Com_Ins = :lsComIns "
.head 17 -  Set lsSelect2 = " Com_Ins = :lsComIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '2'
.head 17 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'CI'  into :lsCircIns ")
.head 17 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 -  Set lsSelect2 = " CIRC_INS = :lsCircIns "
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'CI' and circ_ins = :lsCircIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '3'
.head 17 -  Set lsCollIns = ''
.head 17 +  If lsRegion = 'BXL'
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where Type = 'SE'  into :lsTmp ")
.head 17 +  Else
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where REGION = :lsRegion  and Type = 'SE'  into :lsTmp ")
.head 17 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 +  If lsCollIns != ''
.head 19 -  Set lsCollIns = lsCollIns || ","
.head 18 -  Set lsCollIns = lsCollIns || lsTmp
.head 17 +  If lsCollIns != ''
.head 18 -  Set lsSelect2 = "COLL_INS in (" || lsCollIns ||") "
.head 17 -  Set lsSelect = "Select max(NB_CDT) from base_commune where type = 'SE' and " || lsSelect2
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '1'
.head 17 -  Set lsCollIns = ''
.head 17 +  If lsRegion = 'BXL'
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where Type = 'EU'  into :lsTmp ")
.head 17 +  Else
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Coll_Ins from base_commune where REGION = :lsRegion  and Type = 'EU'  into :lsTmp ")
.head 17 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 +  If lsCollIns != ''
.head 19 -  Set lsCollIns = lsCollIns || ","
.head 18 -  Set lsCollIns = lsCollIns || lsTmp
.head 17 +  If lsCollIns != ''
.head 18 -  Set lsSelect2 = "COLL_INS in (" || lsCollIns ||") "
.head 17 -  Set lsSelect = "Select max(NB_CDT) from base_commune where type = 'EU' and " || lsSelect2
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '4' 
.head 17 +  If gsWL_Type = '0'
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Arron_Ins from base_commune where Arron_INS = :lsInsWL  and Type = 'WR'  into :lsCircIns ")
.head 17 +  Else
.head 18 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'WL'  into :lsCircIns ")
.head 17 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 17 +  If gsWL_Type = '0'
.head 18 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'WR' and circ_ins = :lsCircIns "
.head 17 +  Else
.head 18 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'WL' and circ_ins = :lsCircIns "
.head 17 -  Set lsSelect2 = 'CIRC_INS = ' || lsCircIns 
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '7' 
.head 17 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'VL'  into :lsCircIns ")
.head 17 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'VL' and circ_ins = :lsCircIns "
.head 17 -  Set lsSelect2 = 'CIRC_INS = ' || lsCircIns 
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = 'A' 
.head 17 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'BR'  into :lsCircIns ")
.head 17 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BR' and circ_ins = :lsCircIns "
.head 17 -  Set lsSelect2 = 'CIRC_INS = ' || lsCircIns 
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = 'B' 
.head 17 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select Circ_Ins from base_commune where PRO_INS = :lsProIns  and Type = 'BV'  into :lsCircIns ")
.head 17 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 18 -  Set lsChamp = 'CIRC_INS = ' || lsCircIns 
.head 17 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BV' and circ_ins = :lsCircIns "
.head 17 -  Set lsSelect2 = 'CIRC_INS = ' || lsCircIns 
.head 16 -  !
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect ||"
	Into :lnNbCdt ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 -  Call ExportDBF.SetNumber( 'S_MAX_EFF', lnNbCdt  )
.head 16 -  Call ExportDBF.SetNumber( 'S_MAX_SUP', 0  )
.head 16 -  !
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select count(*) from listes
	where El_No = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||" and " || lsSelect2 || "
	Into :lnNbListe ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 -  Set lnArrayNbListe[ SalStrToNumber( PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ) ] = lnNbListe
.head 16 -  !
.head 16 -  Call ExportDBF.SetNumber( 'S_NBR_VBE', 0  )
.head 16 -  Call ExportDBF.SetNumber( 'S_NBR_VBN', 0  )
.head 16 +  If NOT  ExportDBF.WriteRow(  )
.head 17 -  ! Erreur d'écriture dans le fichier SCxxxxxx.DBF
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - F51    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc )
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 15 -  Set i = i + 1
.head 14 -  Call DispatchMessage(  )
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier SCxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F47    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 -  !
.head 12 -  ! 2. Votes.Dbf -> RVaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'RV'|| lsDateEl_F||'.DBF'
.head 13 -  ! RV_NUMBUR	N	3	0
  RV_CODESCR	C	1
  RV_COLLEGE	C	1
  RV_NUM_LIST	C	2
  RV_EFF_SUP	C	1
  RV_NUMCAND	C	3
  RV_NBRVOTE	C	20

.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'RV_NUMBUR', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_CODESCR', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_COLLEGE', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_NUM_LIST', 'C', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_NUMCAND', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_EFF_SUP', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'RV_NBRVOTE', 'C', 20, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call ExportDBF.Close(  )
.head 14 -  Call DispatchMessage(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier RVxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F48    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 3. Param.Dbf -> PAaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'PA'|| lsDateEl_F||'.DBF'
.head 13 -  ! P_DATEELEC	D	8
  P_NUMARRON	C	3
  P_ARRON     	C	30
  P_CODEDIST	C	3
  P_DISTRICT	C	30
  P_NUMCAN    	C	3
  P_COMMUN    	C	30
  P_BURDEP    	C	30
  P_REPONSAB  	C	30
  P_REGLING	N	1
  P_NBRBUR    	N	3	0
  P_STATUT    	C	30
  P_EURCOLL	C 	30
  P_EURCIRE	C	30
  P_BURPCOM	C	30
  P_PREPCOM	C	30
  P_OPERELE	C	1
  P_CLODEPOU	B
  P_BURCOMMU	C	1
  P_NOPCLUT   	C	5
  P_NOPC      	C	2

.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'P_DATEELEC', 'D', 8, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_NUMARRON', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_ARRON', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_CODEDIST', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_DISTRICT', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_NUMCAN', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_COMMUN', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_BURDEP', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_REPONSAB', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_REGLING', 'N', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_NBRBUR', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_STATUT', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_EURCOLL', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_EURCIRE', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_BURPCOM', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_PREPCOM', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_OPERELE', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_CLODEPOU', 'L', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_BURCOMMU', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_NOPCLUT', 'C', 9, 0 )
.head 13 -  Call ExportDBF.AddField( 'P_NOPC', 'C', 1, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Call ExportDBF.SetDatetime( 'P_DATEELEC', dfDateEl  )
.head 14 -  !
.head 14 -  Call ExportDBF.SetString( 'P_NUMARRON', lsNoArrond )
.head 14 -  !
.head 14 +  If gsWL_Type = '0' and lsRegion = 'WAL'
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select nom_f, nom_n
	from base_commune
	where Arron_Ins = :lsArrIns and type = 'WR'
	Into :lsNomArrond1, :lsNomArrond2 ")
.head 14 +  Else
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select nom_f, nom_n
	from base_commune
	where Arron_Ins = :lsArrIns and type = 'AR'
	Into :lsNomArrond1, :lsNomArrond2 ")
.head 14 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 +  If lsNomArrond1 != ''
.head 15 -  Call ExportDBF.SetString( 'P_ARRON', lsNomArrond1 )
.head 14 +  Else
.head 15 -  Call ExportDBF.SetString( 'P_ARRON', lsNomArrond2 )
.head 14 -  !
.head 14 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select nom_f, nom_N
	from base_commune
	where Dis_Ins = :lsDisIns and type = 'DI'
	Into :lsNom1Dis, :lsNom2Dis ")
.head 14 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 -  Call ExportDBF.SetString( 'P_CODEDIST', SalStrRightX( lsDisIns ,3) )
.head 14 +  If lsNom1Dis != ''
.head 15 -  Call ExportDBF.SetString( 'P_DISTRICT', lsNom1Dis )
.head 14 +  Else
.head 15 -  Call ExportDBF.SetString( 'P_DISTRICT', lsNom1Dis )
.head 14 -  !
.head 14 -  Call ExportDBF.SetString( 'P_NUMCAN', lsNoCanton )
.head 14 +  If lsNom1 != ''
.head 15 -  Call ExportDBF.SetString( 'P_COMMUN', lsNom1 )
.head 15 -  Call ExportDBF.SetString( 'P_BURDEP', lsNom1 )
.head 14 +  Else
.head 15 -  Call ExportDBF.SetString( 'P_COMMUN', lsNom2 )
.head 15 -  Call ExportDBF.SetString( 'P_BURDEP', lsNom2 )
.head 14 -  !
.head 14 -  Call ExportDBF.SetString( 'P_RESPONSAB', '' )
.head 14 -  Call ExportDBF.SetString( 'P_REGLING', lsRegLing )
.head 14 -  !
.head 14 +  If lsTypePcTot = 'C'
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select count(*)
	from Bur_vote
	where  BV_COM_PCTOT = :hTblPcTot.colNoPCT and com_ins = :tblCommunePCT.colIns
	Into :lnNbBV ")
.head 14 +  Else
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select count(*)
	from Bur_vote
	where  BV_CAN_PCTOT = :hTblPcTot.colNoPCT and can_ins = :tblCommunePCT.colIns
	Into :lnNbBV ")
.head 14 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 -  Call ExportDBF.SetNumber( 'P_NBRBUR', lnNbBV  )
.head 14 -  !
.head 14 -  Call ExportDBF.SetString( 'P_STATUT', 'Début' )
.head 14 -  Call ExportDBF.SetString( 'P_PREPCOM', hTblPcTot.colPresPCT )
.head 14 +  If wsScrutinEl = '1'
.head 15 +  If SalStrLeftX( SalNumberToStrX(tblCommunePCT.colIns,0), 2) = '21'
.head 16 -  Call ExportDBF.SetString( 'P_OPERELE', '5' )
.head 15 +  Else
.head 16 -  Call ExportDBF.SetString( 'P_OPERELE', '2' )
.head 14 +  Else If wsScrutinEl = '2'
.head 15 -  !
.head 15 +  If wsOrdreEl = '2,3'
.head 16 -  Call ExportDBF.SetString( 'P_OPERELE', '3' )
.head 15 +  Else If wsOrdreEl = '1,4,7,10,11'
.head 16 -  Call ExportDBF.SetString( 'P_OPERELE', '7' )
.head 15 +  Else If wsOrdreEl = '1,2,3,4,7,10,11'
.head 16 -  Call ExportDBF.SetString( 'P_OPERELE', '8' )
.head 15 -  !
.head 14 -  Call ExportDBF.SetString( 'P_CLODEPOU', 'F' )
.head 14 -  Call ExportDBF.SetString( 'P_BURCOMMU', lsTypePcTot )
.head 14 -  Call ExportDBF.SetString( 'P_NOPCLUT', '' )
.head 14 -  Call ExportDBF.SetString( 'P_NOPC', SalStrRightX('00' || SalNumberToStrX(hTblPcTot.colNoPCT,0) , 1) )
.head 14 -  !
.head 14 +  If bContinue
.head 15 +  If NOT ExportDBF.WriteRow(  )
.head 16 -  ! Erreur d'écriture dans le fichier PAxxxxxx.DBF
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - F52    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier PAxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F49    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 4. BurVote.Dbf -> BVaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'BV'|| lsDateEl_F||'.DBF'
.head 13 -  ! B_NUMERO    	N    3    0         
B_BUREAU    	C   30              
B_ADRESSE   	C   30              
B_PRESIDEN  	C   27              
B_NBR_INSC  	N    6    0         
B_NBR_VOTN 	N    6    0         
B_NBR_VOTS  	N    6    0         
B_NBR_VOTE  	N    6    0         
B_NBR_NULE  	N    6    0
B_NBR_NULS  	N    6    0
B_NBR_NULN  	N    6    0
B_STATUT    	C   36
B_ENVELOPE  	N    2    0
B_CODEBAK   	C   10
B_NUMTOT    	N    2    0
B_DEPCOMMU  	N    1    0
B_CODCOM    	C    2
B_COMMUN    	C   30
B_NOPCTOT   	N    1    0
B_NOPCCOM   	N    1    0
B_NOBURCOM  	N    3    0
B_CLEF1     	C   32
B_CLEF2     	C   32
B_CODEMAC   	C   32

.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'B_NUMERO', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_BUREAU', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_ADRESSE', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_PRESIDEN', 'C', 27, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_INSC', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_VOTN', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_VOTS', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_VOTE', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_NULE', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_NULS', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NBR_NULN', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_STATUT', 'C', 36, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_ENVELOPE', 'N', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_CODEBAK', 'C', 10, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NUMTOT', 'N', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_DEPCOMMU', 'N', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_CODCOM', 'C', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_COMMUN', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NOPCTOT', 'N', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NOPCCOM', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_NOBURCOM', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_CLEF1', 'C', 32, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_CLEF2', 'C', 32, 0 )
.head 13 -  Call ExportDBF.AddField( 'B_CODEMAC', 'C', 32, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set j = 0
.head 14 +  If lsTypePcTot = 'C'
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Select bv_no, bv_description, bv_adresse,bv_president,bv_statut, bv_codebak, bv_clef1, bv_clef2, bv_codemac,bv_com_pctot, bv_can_pctot
	from bur_vote
	where bv_com_pctot = :hTblPcTot.colNoPCT and com_ins = :tblCommunePCT.colIns
	order by 1
	into :lnNoBV,:lsDescBV,:lsAdrBV,:lsPresBV,:lsStatutBV,:lsCodebakBV,:lsCle1BV,:lsCle2BV,:lsCodemacBV, :lsNoPcTotCom ,:lsNoPcTotProv   ")
.head 14 +  Else
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Select bv_no, bv_description, bv_adresse,bv_president,bv_statut, bv_codebak, bv_clef1, bv_clef2, bv_codemac,bv_com_pctot, bv_can_pctot
	from bur_vote
	where bv_can_pctot = :hTblPcTot.colNoPCT and can_ins = :tblCommunePCT.colIns
	order by 1
	into :lnNoBV,:lsDescBV,:lsAdrBV,:lsPresBV,:lsStatutBV,:lsCodebakBV,:lsCle1BV,:lsCle2BV,:lsCodemacBV, :lsNoPcTotCom ,:lsNoPcTotProv   ")
.head 14 +  While SqlFetchNext( ghSqlMain, Btmp ) and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NUMERO', lnNoBV  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NOBURCOM', lnNoBV  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_VOTN', 0  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_VOTE', 0  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_VOTS', 0  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_NULN', 0  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_NULE', 0  )
.head 15 -  Call ExportDBF.SetNumber( 'B_NBR_NULS', 0  )
.head 15 -  Call ExportDBF.SetString( 'B_BUREAU', lsDescBV)
.head 15 -  Call ExportDBF.SetString( 'B_ADRESSE', lsAdrBV )
.head 15 -  Call ExportDBF.SetString( 'B_PRESIDEN', lsPresBV )
.head 15 -  Call ExportDBF.SetString( 'B_STATUT', lsStatutBV )
.head 15 -  Call ExportDBF.SetString( 'B_CODEBAK', lsCodebakBV )
.head 15 -  Call ExportDBF.SetString( 'B_CLEF1', lsCle1BV )
.head 15 -  Call ExportDBF.SetString( 'B_CLEF2', lsCle2BV )
.head 15 -  Call ExportDBF.SetString( 'B_CODEMAC', lsCodemacBV )
.head 15 -  !
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom_F from base_commune where com_ins = :tblCommunePCT.colIns
	Into :lsCommuneF ")
.head 15 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 15 -  Call ExportDBF.SetString( 'B_COMMUN', lsCommuneF )
.head 15 -  !
.head 15 +  If lsTypePcTot = 'C'
.head 16 -  Call ExportDBF.SetNumber( 'B_NOPCTOT', SalStrToNumber(lsNoPcTotCom) )
.head 16 -  Call ExportDBF.SetNumber( 'B_NOPCCOM', SalStrToNumber( lsNoPcTotCom) )
.head 15 +  Else
.head 16 -  Call ExportDBF.SetNumber( 'B_NOPCTOT', SalStrToNumber(lsNoPcTotProv) )
.head 16 -  Call ExportDBF.SetNumber( 'B_NOPCCOM', SalStrToNumber( lsNoPcTotProv) )
.head 15 +  If NOT ExportDBF.WriteRow(  )
.head 16 -  ! Erreur d'écriture dans le fichier BVxxxxxx.DBF
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - F54    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 15 -  Set j = j +1
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 14 -  !
.head 14 -  ! Contrôle du nombre de BV inscrits dans BVxxxxxx.DBF
.head 14 +  If bContinue and lnNbBV != j
.head 15 -  ! Le nbr de BV insérés est erroné dans BVxxxxxx.DBF
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - F59    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier BVxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F53    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 5. Listes.Dbf -> LIaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'LI'|| lsDateEl_F||'.DBF'
.head 13 -  ! L_CODESCRU  	C	1
  L_NUMERO    	C	2
  L_NOM       	C	25
  L_COLLEGE	C	1
  L_NBREFFEC  	N	3	0
  L_NBRESUPP	N	3	0
  L_NBR_V_TL  	N	6	0
  L_NBR_V_SP  	N	6	0
  L_NBR_V_EX  	N	6	0
  L_NBR_V_EF  	N	6	0
 

.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'L_CODESCRU', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NUMERO', 'C', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NOM', 'C', 25, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_COLLEGE', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBREFFEC', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBRSUPLE', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBR_V_TL', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBR_V_SP', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBR_V_EX', 'N', 6, 0 )
.head 13 -  Call ExportDBF.AddField( 'L_NBR_V_EF', 'N', 6, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Set i = 0
.head 14 +  While i < SalStrLength( lsElectionCommune) and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 +  If lsTypePcTot = 'C' or (lsTypePcTot = '' and SalStrMidX(lsElectionCommune,i,1) = '5' ) or lsTypePcTot = 'K'
.head 16 -  Set lsTmp = PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1))
.head 16 +  If lsTmp = '7' or lsTmp = '10'
.head 17 -  Set lsTmp = '4'
.head 16 +  Else If lsTmp = '11'
.head 17 -  Set lsTmp = '7'
.head 16 -  Call ExportDBF.SetString( 'L_CODESCRU', lsTmp  )
.head 16 +  If SalStrMidX(lsElectionCommune,i,1) = 'A'
.head 17 -  Set lsSelect = "Select @right(lis_no,2) , lis_nom, lis_nb_eff, lis_nb_supp, Lis_Grl
	from listes
	where "
.head 16 +  Else
.head 17 -  Set lsSelect = "Select @right(lis_no,2) , lis_nom, lis_nb_eff, lis_nb_supp, coll_ins
	from listes
	where "
.head 16 +  If SalStrMidX(lsElectionCommune,i,1) = '5'
.head 17 -  Set lsSelect = lsSelect || " DIS_Ins = :lsDisIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '6'
.head 17 -  Set lsSelect = lsSelect || " COM_Ins = :lsComIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '2'
.head 17 -  Set lsSelect = lsSelect || " CIRC_Ins = :lsCircIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '3'
.head 17 -  Set lsSelect = lsSelect || "COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '1'
.head 17 -  Set lsSelect = lsSelect || "COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '4' or SalStrMidX(lsElectionCommune,i,1) = '7' or SalStrMidX(lsElectionCommune,i,1) = 'A' or SalStrMidX(lsElectionCommune,i,1) = 'B'
.head 17 -  Set lsSelect = lsSelect || " CIRC_Ins = :lsCircIns "
.head 16 -  Set j = 0
.head 16 -  Set lnNbSupp = 0
.head 16 +  ! If SalStrMidX(lsElectionCommune,i,1) = '1'
.head 17 -  Set lsSelect = lsSelect || "and el_no = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||"
	Order by 5 desc,1
	into :lsNoListe, :lsNomListe, :lnNbEff , :lnNbSupp, :lsCollGrp "
.head 16 +  ! Else If SalStrMidX(lsElectionCommune,i,1) = 'A'
.head 17 -  ! Set lsSelect = lsSelect || "and el_no = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||"
	Order by 5,1
	into :lsNoListe, :lsNomListe, :lnNbEff , :lnNbSupp, :lsCollGrp "
.head 16 +  ! Else
.head 17 -  Set lsSelect = lsSelect || "and el_no = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||"
	Order by 5,1
	into :lsNoListe, :lsNomListe, :lnNbEff , :lnNbSupp, :lsCollGrp "
.head 16 -  Set lsSelect = lsSelect || "and el_no = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||"
	Order by 5,1
	into :lsNoListe, :lsNomListe, :lnNbEff , :lnNbSupp, :lsCollGrp "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect)
.head 16 +  While SqlFetchNext( ghSqlSecondaire, Btmp ) and bContinue
.head 17 -  Call DispatchMessage(  )
.head 17 -  Set lsTmp = PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1))
.head 17 +  If lsTmp = '7' or lsTmp = '10'
.head 18 -  Set lsTmp = '4'
.head 17 +  Else If lsTmp = '11'
.head 18 -  Set lsTmp = '7'
.head 17 -  Call ExportDBF.SetString( 'L_CODESCRU', lsTmp )
.head 17 -  Call ExportDBF.SetString( 'L_NUMERO', lsNoListe )
.head 17 -  !
.head 17 -  ! << 9.03
.head 17 -  Set lsNomListeOem =  lsNomListe
.head 17 -  ! Set lsNomListeOem =  SalStrRepeatX(' ', 25)
.head 17 -  ! Call CharToOemA( lsNomListe ,lsNomListeOem)
.head 17 -  ! >> 9.03
.head 17 -  !
.head 17 -  Call ExportDBF.SetString( 'L_NOM', lsNomListeOem )
.head 17 +  If wsScrutinEl = '1'
.head 18 -  Call ExportDBF.SetString( 'L_COLLEGE', 'F' )
.head 17 +  Else If wsScrutinEl = '2' 
.head 18 +  If SalStrMidX(lsElectionCommune,i,1) = '3' or SalStrMidX(lsElectionCommune,i,1) = '1'
.head 19 +  If lsCollGrp = '92094'
.head 20 -  Call ExportDBF.SetString( 'L_COLLEGE', 'F' )
.head 19 +  Else If lsCollGrp = '12025'
.head 20 -  Call ExportDBF.SetString( 'L_COLLEGE', 'N' )
.head 18 +  Else If SalStrMidX(lsElectionCommune,i,1) = 'A'
.head 19 -  Call ExportDBF.SetString( 'L_COLLEGE',  SalStrLeftX( lsCollGrp, 1) )
.head 18 +  Else
.head 19 -  Call ExportDBF.SetString( 'L_COLLEGE', 'F' )
.head 17 -  Call ExportDBF.SetNumber( 'L_NBREFFEC', lnNbEff )
.head 17 -  Set lnArrayNbCdt[ SalStrToNumber( PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ), SalStrToNumber(lsNoListe) ] = lnNbEff + lnNbSupp
.head 17 +  If wsScrutinEl = '1'
.head 18 -  Call ExportDBF.SetNumber( 'L_NBRSUPLE', 0  )
.head 17 +  Else
.head 18 -  Call ExportDBF.SetNumber( 'L_NBRSUPLE',  lnNbSupp )
.head 17 -  Call ExportDBF.SetNumber( 'L_NBR_V_TL', 0  )
.head 17 -  Call ExportDBF.SetNumber( 'L_NBR_V_SP', 0  )
.head 17 -  Call ExportDBF.SetNumber( 'L_NBR_V_EX', 0  )
.head 17 -  Call ExportDBF.SetNumber( 'L_NBR_V_EF', 0  )
.head 17 +  If NOT ExportDBF.WriteRow(  )
.head 18 -  ! Erreur d'écriture dans le fichier LIxxxxxx.DBF
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - F56    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  Set j = j + 1
.head 16 -  !
.head 16 -  ! Contrôle du Nbr de listes inscrites dans LIxxxxxx.DBF pour ce scrutin
.head 16 +  If lnArrayNbListe[ SalStrToNumber( PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ) ] != j
.head 17 -  ! Le nbr de listes pour un scrutin est erroné (LIxxxxxx.DBF)
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - F60    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 15 -  Set i = i + 1
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier LIxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F55    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 6. Candidats.Dbf -> CDaammjj.DBF
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'CD'|| lsDateEl_F||'.DBF'
.head 13 -  ! C_CODESCRU  	C	1
  C_NUMLISTE  	C	2
  C_NUMCANDI  	C	3
  C_NOM1      	C	25
  C_NOM2      	C	25
  C_NBR_V_CA  	N	6	0


.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'C_CODESCRU', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_COLLEGE', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NUMLISTE', 'C', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NUMCANDI', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NOM1', 'C', 25, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NOM2', 'C', 25, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NOM3', 'C', 20, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_EFF_SUP', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'C_NBR_V_CA', 'N', 6, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set i = 0
.head 14 +  While i < SalStrLength( lsElectionCommune) and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 +  If lsTypePcTot = 'C' or (lsTypePcTot = '' and SalStrMidX(lsElectionCommune,i,1) = '5' ) or lsTypePcTot = 'K'
.head 16 -  Set lsTmp = PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1))
.head 16 +  If lsTmp = '7' or lsTmp = '10'
.head 17 -  Set lsTmp = '4'
.head 16 +  Else If lsTmp = '11'
.head 17 -  Set lsTmp = '7'
.head 16 -  Call ExportDBF.SetString( 'C_CODESCRU', lsTmp )
.head 16 +  If SalStrMidX(lsElectionCommune,i,1) = 'A'
.head 17 -  Set lsSelect = "select @right(A.lis_no,2),@right(cdt_no,3), cdt_ligne1, cdt_ligne2, CDT_TYPE, Lis_GRL
	from candidats A, Listes B
	where A.El_No = B.El_No and A.Lis_no = B.LIs_NO and "
.head 16 +  Else
.head 17 -  Set lsSelect = "select @right(A.lis_no,2),@right(cdt_no,3), cdt_ligne1, cdt_ligne2, CDT_TYPE, coll_ins
	from candidats A
	where "
.head 16 +  If SalStrMidX(lsElectionCommune,i,1) = '5'
.head 17 -  Set lsSelect = lsSelect || " A.DIS_Ins = :lsDisIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '6'
.head 17 -  Set lsSelect = lsSelect || " A.COM_Ins = :lsComIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '6'
.head 17 -  Set lsSelect = lsSelect || " A.COM_Ins = :lsComIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '2'
.head 17 -  Set lsSelect = lsSelect || " A.CIRC_Ins = :lsCircIns "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '3'
.head 17 -  Set lsSelect = lsSelect || " A.COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '1'
.head 17 -  Set lsSelect = lsSelect || " A.COLL_INS in (" || lsCollIns ||") "
.head 16 +  Else If SalStrMidX(lsElectionCommune,i,1) = '4' or SalStrMidX(lsElectionCommune,i,1) = '7' or SalStrMidX(lsElectionCommune,i,1) = 'A' or SalStrMidX(lsElectionCommune,i,1) = 'B'
.head 17 -  Set lsSelect = lsSelect || " A.CIRC_Ins = :lsCircIns "
.head 16 -  Set j = 0
.head 16 -  Set lsNoListePrec = ''
.head 16 -  Set lsSelect = lsSelect ||" and A.el_no = " || PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ||"
	Order by 1,2
	into :lsNoListe, :lsNoCdt, :lsNom1, :lsNom2, :lsEffSup, :lsCollGrp  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect)
.head 16 +  While SqlFetchNext( ghSqlSecondaire, Btmp ) and bContinue
.head 17 -  Call DispatchMessage(  )
.head 17 -  Set lsTmp = PalStrToHexastr( SalStrMidX( lsElectionCommune, i, 1))
.head 17 +  If lsTmp = '7' or lsTmp = '10'
.head 18 -  Set lsTmp = '4'
.head 17 +  Else If lsTmp = '11'
.head 18 -  Set lsTmp = '7'
.head 17 -  Call ExportDBF.SetString( 'C_CODESCRU', lsTmp )
.head 17 +  If wsScrutinEl = '1'
.head 18 -  Call ExportDBF.SetString( 'C_COLLEGE', 'F' )
.head 17 +  Else
.head 18 +  If SalStrMidX(lsElectionCommune,i,1) = '3' or SalStrMidX(lsElectionCommune,i,1) = '1'
.head 19 +  If lsCollGrp = '92094'
.head 20 -  Call ExportDBF.SetString('C_COLLEGE', 'F' )
.head 19 +  Else If lsCollGrp = '12025'
.head 20 -  Call ExportDBF.SetString( 'C_COLLEGE', 'N' )
.head 18 +  Else If SalStrMidX(lsElectionCommune,i,1) = 'A'
.head 19 -  Call ExportDBF.SetString('C_COLLEGE', SalStrLeftX( lsCollGrp ,1))
.head 18 +  Else
.head 19 -  Call ExportDBF.SetString( 'C_COLLEGE', 'F' )
.head 17 -  Call ExportDBF.SetString( 'C_NUMLISTE', lsNoListe )
.head 17 -  Call ExportDBF.SetString( 'C_NUMCANDI', lsNoCdt )
.head 17 -  !
.head 17 -  Set lsNom1Oem =  lsNom1
.head 17 -  Set lsNom2Oem =  lsNom2
.head 17 -  !
.head 17 -  Call ExportDBF.SetString( 'C_NOM1', lsNom1Oem )
.head 17 -  Call ExportDBF.SetString( 'C_NOM2', lsNom2Oem )
.head 17 +  If wsScrutinEl = '1'
.head 18 -  Call ExportDBF.SetString( 'C_EFF_SUP', 'E' )
.head 17 +  Else
.head 18 -  Call ExportDBF.SetString( 'C_EFF_SUP', lsEffSup )
.head 17 -  Call ExportDBF.SetNumber( 'C_NBR_V_CA', 0  )
.head 17 +  If NOT ExportDBF.WriteRow(  )
.head 18 -  ! Erreur d'écriture dans le fichier LIxxxxxx.DBF
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - F56    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  !
.head 17 -  ! Contrôle du nombre de Cdt de la liste (CDxxxxxx.DBF)
.head 17 +  If lsNoListePrec != '' and lsNoListe != lsNoListePrec
.head 18 +  If lnArrayNbCdt[ SalStrToNumber( PalStrToHexastr(SalStrMidX(lsElectionCommune,i,1)) ), SalStrToNumber(lsNoListePrec) ] != j
.head 19 -  ! Le nbr de CDT insérés est erroné pour une liste (CDxxxxxx.DBF)
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - F61    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 19 -  !
.head 18 -  Set j = 0
.head 17 -  Set j = j + 1
.head 17 -  Set lsNoListePrec = lsNoListe
.head 15 -  Set i = i + 1
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier LIxxxxxx.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F57    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 7. ELECT.Dbf
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'ELECT.DBF'
.head 13 -  ! ELEC_DIR  	C	8
  ELEC_DATEC  	D	8
  ELEC_VERS	C	4

.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'ELEC_DIR', 'C', 8, 0 )
.head 13 -  Call ExportDBF.AddField( 'ELEC_DATEC', 'D', 8, 0 )
.head 13 -  Call ExportDBF.AddField( 'ELEC_VERS', 'C', 4, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Call ExportDBF.SetString( 'ELEC_DIR', 'EL' || lsDateEl_F )
.head 14 -  Call ExportDBF.SetDatetime( 'ELEC_DATEC',  dfDateEl )
.head 14 -  Call ExportDBF.SetString( 'ELEC_VERS', '' )
.head 14 +  If NOT ExportDBF.WriteRow(  )
.head 15 -  ! Erreur d'écriture dans le fichier ELECT.DBF
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - F63    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier ELECT.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F62    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 8. JTARROND.Dbf
.head 12 +  If bContinue
.head 13 -  Set lsFile = 'JTARROND.DBF'
.head 13 -  ! ARON_CODE 	C	3
  ARON_NOM	C	30
  ARON_PATH	C	5
  ARON_CODLG	N	1	0
  ARON_EFF1	N	3	0
  ARON_EFF1F	N	3	0
  ARON_SUP1	N	3	0
  ARON_SUP1F	N	3	0
  ARON_EFF2	N	3	0
  ARON_SUP2	N	3	0
  ARON_EFF3	N	3	0
  ARON_SUP3	N	3	0
  ARON_EFF3F	N	3	0
  ARON_SUP3F	N	3	0
  ARON_EFF4	N	3	0
  ARON_SUP4	N	3	0
  ARON_PROV1	C	5
  ARON_PROV2	C	30
  ARON_EFF7F	N	3	0
  ARON_SUP7F	N	3	0
  ARON_EFF4F	N	3	0
  ARON_SUP4F	N	3	0
 
.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'ARON_CODE', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_NOM', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_PATH', 'C', 5, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_CODLG', 'N', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF1', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF1F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP1', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP1F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF2', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP2', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF3', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP3', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF3F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP3F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF4', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP4', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_PROV1', 'C', 5, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_PROV2', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF7F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP7F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP7F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_EFF4F', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'ARON_SUP4F', 'N', 3, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Call DispatchMessage(  )
.head 14 -  Call ExportDBF.SetString( 'ARON_CODE', lsNoArrond )
.head 14 +  If lsNomArrond1 != ''
.head 15 -  Call ExportDBF.SetString( 'ARON_NOM', lsNomArrond1 )
.head 15 -  Call ExportDBF.SetString( 'ARON_PATH', SalStrLeftX( lsNomArrond1,5) )
.head 14 +  Else
.head 15 -  Call ExportDBF.SetString( 'ARON_NOM', lsNomArrond2 )
.head 15 -  Call ExportDBF.SetString( 'ARON_PATH', SalStrLeftX( lsNomArrond2,5) )
.head 14 -  !
.head 14 +  If wsScrutinEl = '2'
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',1,' ) != -1
.head 16 -  ! Europe
.head 16 -  Set lsSelect = "Select NB_CDT, coll_ins from base_commune where type = 'EU' and COLL_INS in (" || lsCollIns ||")  into :lnNbEff, :lsTmp "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = SalNumberRound( lnNbEff/2 + 0.49999 ) +1
.head 17 +  If lnNbSupp < 6
.head 18 -  Set lnNbSupp  = 6
.head 17 +  If lsTmp = '12025' 
.head 18 -  Call ExportDBF.SetNumber( 'ARON_EFF3', lnNbEff )
.head 18 -  Call ExportDBF.SetNumber( 'ARON_SUP3', lnNbSupp )
.head 17 +  Else If lsTmp = '92094'
.head 18 -  Call ExportDBF.SetNumber( 'ARON_EFF3F', lnNbEff )
.head 18 -  Call ExportDBF.SetNumber( 'ARON_SUP3F', lnNbSupp )
.head 17 -  Else If lsTmp = '63023'
.head 17 +  Else
.head 18 -  ! Ce type de vote n'existe pas
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - DB4b     ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 18 -  !
.head 15 -  !
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',2,' ) != -1
.head 16 -  ! Chambre
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'CI' and circ_ins = :lsCircIns  into :lnNbEff  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = SalNumberRound( lnNbEff/2 + 0.49999 ) +1
.head 17 -  Call ExportDBF.SetNumber( 'ARON_EFF2', lnNbEff )
.head 17 -  Call ExportDBF.SetNumber( 'ARON_SUP2', lnNbSupp )
.head 16 +  Else
.head 17 -  ! Ce type de vote n'existe pas
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - DB4a     ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 17 -  !
.head 15 -  !
.head 15 +  If SalStrScan( wsOrdreEl || ',', ',3,' ) != -1
.head 16 -  ! Sénat
.head 16 -  Set lsSelect = "Select NB_CDT, coll_ins from base_commune where type = 'SE' and COLL_INS in (" || lsCollIns ||")  into :lnNbEff, :lsTmp "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = SalNumberRound( lnNbEff/2 + 0.49999 ) +1
.head 17 +  If lsTmp = '12025' 
.head 18 -  Call ExportDBF.SetNumber( 'ARON_EFF3', lnNbEff )
.head 18 -  Call ExportDBF.SetNumber( 'ARON_SUP3', lnNbSupp )
.head 17 +  Else If lsTmp = '92094'
.head 18 -  Call ExportDBF.SetNumber( 'ARON_EFF3F', lnNbEff )
.head 18 -  Call ExportDBF.SetNumber( 'ARON_SUP3F', lnNbSupp )
.head 17 +  Else
.head 18 -  ! Ce type de vote n'existe pas
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - DB4c     ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 18 -  !
.head 15 -  !
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',4,' ) != -1 and lsRegion = 'WAL'
.head 16 -  ! RW
.head 16 +  If gsWL_Type = '0'
.head 17 -  Set lsTemp = "Type = 'WR' and Arron_ins = :lsCircIns "
.head 16 +  Else
.head 17 -  Set lsTemp = "Type = 'WL' and circ_ins = :lsCircIns "
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where " || lsTemp ||"   into :lnNbEff  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = lnNbEff
.head 17 +  If lnNbSupp < 4
.head 18 -  Set lnNbSupp  = 4
.head 17 -  Call ExportDBF.SetNumber( 'ARON_EFF2', lnNbEff )
.head 17 -  Call ExportDBF.SetNumber( 'ARON_SUP2', lnNbSupp )
.head 16 +  Else
.head 17 -  ! Ce type de vote n'existe pas
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - DB4d     ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 17 -  !
.head 15 -  !
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',7,' ) != -1 and lsRegion = 'FLA'
.head 16 -  ! VL
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'VL' and circ_ins = :lsCircIns  into :lnNbEff  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = lnNbEff
.head 17 -  Call ExportDBF.SetNumber( 'ARON_EFF2', lnNbEff )
.head 17 -  Call ExportDBF.SetNumber( 'ARON_SUP2', lnNbSupp )
.head 16 +  Else
.head 17 -  ! Ce type de vote n'existe pas
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - DB4e     ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 17 -  !
.head 15 -  !
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',10,' ) != -1 and lsRegion = 'BXL'
.head 16 -  ! BV
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BR' and circ_ins = :lsCircIns  into :lnNbEff  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = 16
.head 17 -  Call ExportDBF.SetNumber( 'ARON_EFF2', lnNbEff )
.head 17 -  Call ExportDBF.SetNumber( 'ARON_SUP2', lnNbSupp )
.head 16 +  Else
.head 17 -  ! Ce type de vote n'existe pas
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - DB4f     ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 17 -  !
.head 15 -  !
.head 15 +  If SalStrScan( ',' || wsOrdreEl || ',', ',11,' ) != -1 and lsRegion = 'BXL'
.head 16 -  ! BV
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BV' and circ_ins = :lsCircIns  into :lnNbEff  "
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  lsSelect)
.head 16 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 17 -  Set lnNbSupp  = lnNbEff
.head 17 -  Call ExportDBF.SetNumber( 'ARON_EFF2', lnNbEff )
.head 17 -  Call ExportDBF.SetNumber( 'ARON_SUP2', lnNbSupp )
.head 16 +  Else
.head 17 -  ! Ce type de vote n'existe pas
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - DB4g     ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :gsUserLog where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 17 -  !
.head 14 -  !
.head 14 +  If NOT ExportDBF.WriteRow(  )
.head 15 -  ! Erreur d'écriture dans le fichier JTARROND.DBF
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - F67    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier ELECT.DBF
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F66    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 9. JTCANTON.DBF
.head 12 +  If bContinue
.head 13 -  !
.head 13 -  Set i = 1
.head 13 +  While i <= 3 and bContinue
.head 14 -  Set lsCommuneA = ''
.head 14 +  If i = 1
.head 15 -  ! DISTRICT
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom_F, Nom_N from base_commune where dis_ins = :lsDisIns
	Into :lsArray1[1],:lsArray1[2] ")
.head 15 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 +  Else If i = 2
.head 15 -  ! CANTON
.head 15 -  Set lnPcTotCom = 0
.head 15 -  Set lsTYPREC = 'CANT'
.head 15 +  If wsScrutinEl = '1'
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select CAN_NB_PC_TOT from base_commune where com_ins = :lsCanIns 
	Into :lsArray2[3] ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom_F, Nom_N from base_commune where can_ins = :lsCanIns
	Into :lsArray2[1],:lsArray2[2] ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 15 +  Else If wsScrutinEl = '2'
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select CAN_NB_PC_TOT from base_commune where can_ins = :lsCanIns and type = 'CA'
	Into :lsArray2[3] ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 16 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom_F, Nom_N from base_commune where can_ins = :lsCanIns and type = 'CA'
	Into :lsArray2[1],:lsArray2[2] ")
.head 16 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 +  Else If i = 3
.head 15 -  ! COMMUNE
.head 15 -  Set lsTYPREC = 'COMM'
.head 15 -  Set lsArray3[3] = lsArray2[3]
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select NB_PC_TOT from base_commune where com_ins = :lsComIns
	Into :lsArray3[4] ")
.head 15 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom_F, Nom_N from base_commune where com_ins = :tblCommunePCT.colIns
	Into :lsArray3[1],:lsArray3[2]  ")
.head 15 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 14 -  Set i=i+1
.head 13 -  Call SqlCommit(ghSqlSecondaire)
.head 13 -  !
.head 13 -  ! 1  CAN_ARROND  Caractère    3               9  CAN_REPERT  Caractère    2
2  CAN_CODE    Caractère    3              10  CAN_NBURTO  Numérique    1    0
3  CAN_TYPREC  Caractère    4              11  CAN_ACTIF   Caractère    1
4  CAN_NOMF    Caractère   30              12  CAN_NBURCO  Numérique    1    0
5  CAN_NOMN    Caractère   30
6  CAN_NOMA    Caractère   30
7  CAN_DIST    Caractère    3
8  CAN_MX_EFF  Numérique    3    0
.head 13 -  Set lsFile = 'JTCANTON.DBF'
.head 13 -  Call ExportDBF.Init(  )
.head 13 -  Call ExportDBF.SetType( cExportdBase )
.head 13 -  Call ExportDBF.SetFileName( gsPathPcTot || lsFile )
.head 13 -  Call ExportDBF.ClearFields(  )
.head 13 -  Call ExportDBF.AddField( 'CAN_ARROND', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_CODE', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_TYPREC', 'C', 4, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_NOMF', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_NOMN', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_NOMA', 'C', 30, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_DIST', 'C', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_MX_EFF', 'N', 3, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_REPERT', 'C', 2, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_NBURTO', 'N', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_ACTIF', 'C', 1, 0 )
.head 13 -  Call ExportDBF.AddField( 'CAN_NBURCO', 'N', 1, 0 )
.head 13 +  If ExportDBF.Open(  )
.head 14 -  Set i = 1
.head 14 +  While i <= 3 and bContinue
.head 15 -  Call DispatchMessage(  )
.head 15 -  Set lsCommuneA = ''
.head 15 +  If i = 1
.head 16 -  ! DISTRICT
.head 16 -  Set lsCommuneF = lsArray1[1]
.head 16 -  Set lsCommuneN = lsArray1[2]
.head 16 -  Set lnPcTotCan = 0
.head 16 -  Set lnPcTotCom = 0
.head 16 -  Set lsTYPREC = 'DIST'
.head 15 +  Else If i = 2
.head 16 -  ! CANTON
.head 16 -  Set lsCommuneF = lsArray2[1]
.head 16 -  Set lsCommuneN = lsArray2[2]
.head 16 -  Set lnPcTotCom = 0
.head 16 -  Set lnPcTotCan = SalStrToNumber( lsArray2[3])
.head 16 -  Set lsTYPREC = 'CANT'
.head 15 +  Else If i = 3
.head 16 -  ! COMMUNE
.head 16 -  Set lsCommuneF = lsArray3[1]
.head 16 -  Set lsCommuneN = lsArray3[2]
.head 16 -  Set lnPcTotCan = SalStrToNumber( lsArray3[3])
.head 16 -  Set lnPcTotCom = SalStrToNumber( lsArray3[4])
.head 16 -  Set lsTYPREC = 'COMM'
.head 15 -  Call ExportDBF.SetString( 'CAN_TYPREC', lsTYPREC )
.head 15 -  Call ExportDBF.SetString( 'CAN_NOMF', lsCommuneF )
.head 15 -  Call ExportDBF.SetString( 'CAN_NOMN', lsCommuneN )
.head 15 -  Call ExportDBF.SetString( 'CAN_NOMA', lsCommuneA)
.head 15 -  Call ExportDBF.SetString( 'CAN_ARROND', lsNoArrond )
.head 15 -  Call ExportDBF.SetString( 'CAN_CODE', lsNoCanton )
.head 15 -  Call ExportDBF.SetNumber( 'CAN_NBURTO', lnPcTotCan  )
.head 15 -  Call ExportDBF.SetNumber( 'CAN_NBURCO', lnPcTotCom  )
.head 15 +  If NOT ExportDBF.WriteRow(  )
.head 16 -  ! Erreur d'écriture dans le fichier JTARROND.DBF
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - F69    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 15 -  Set i=i+1
.head 14 -  !
.head 14 -  Call ExportDBF.Close(  )
.head 13 +  Else
.head 14 -  ! Erreur d'ouverture du fichier JTCANTON
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - F68   ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 12 -  ! 10. PC.IND
.head 12 +  If bContinue
.head 13 +  If NOT SalFileOpen( hFile , gsPathPcTot || 'PC.IND', OF_Create | OF_ReadWrite | OF_Text )
.head 14 -  ! Impossible de créer le fichier de controle PC.IND
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C46    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 +  Else
.head 14 -  ! Ecriture : PC.IND
.head 14 +  If lsTypePcTot = 'C'
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select min(bv_no) , max(bv_no)
	from bur_vote
	where com_ins = :tblCommunePCT.colIns
	order by 1
	into :lsBurMin, :lsBurMax  ")
.head 14 +  Else
.head 15 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select min(@value(bv_no)) , max(@value(bv_no))
	from bur_vote
	where can_ins = :tblCommunePCT.colIns
	order by 1
	into :lsBurMin, :lsBurMax ")
.head 14 +  If SqlFetchNext( ghSqlSecondaire, Btmp ) 
.head 15 -  Set sBuffer = SalNumberToStrX( hTblPcTot.colNoPCT,0) || SalStrRightX('   ' || lsBurMin,3) || SalStrRightX('   ' || lsBurMax,3)
.head 15 +  If SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer) ) <= 0
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - C46    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 14 -  Call SalFileClose( hFile )
.head 12 -  ! 11. ???.REG
.head 12 +  If bContinue
.head 13 +  If SalStrLeftX(SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '21'
.head 14 -  Set lsFileReg = 'BXL.REG'
.head 13 +  Else If SalStrLeftX(SalNumberToStrX( tblCommunePCT.colIns , 0), 1) = '7'
.head 14 -  Set lsFileReg = 'FLA.REG'
.head 13 +  Else
.head 14 -  Set lsFileReg = 'WAL.REG'
.head 13 +  If NOT SalFileOpen( hFile , gsPathPcTot || lsFileReg, OF_Create | OF_ReadWrite | OF_Text )
.head 14 -  ! Impossible de créer le fichier de controle ???.REG
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C46    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 +  Else
.head 14 -  ! Ecriture
.head 14 +  If SalFileWrite( hFile, lsFileReg, SalStrLength(lsFileReg) ) <= 0
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C46    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 -  Call SalFileClose( hFile )
.head 12 -  Call DispatchMessage(  )
.head 12 -  !
.head 12 -  ! Encryptage des zones mots de passe
.head 12 +  If bContinue
.head 13 -  Set lsPathDBF = SalStrLeftX( gsPathPcTot, SalStrLength( gsPathPcTot ) - 1 )
.head 13 -  Call SalFileSetCurrentDirectory( lsPathDBF )
.head 13 -  Call SalLoadAppAndWait( gsPathRijndael || "CRYPTE.EXE " || lsDateEl_F || " " || lsPwPCT || PW_CODE_INTERNE,  Window_NotVisible, nRet )
.head 13 -  Set lsPathDBF = SalStrLeftX( gsPathApplic , SalStrLength( gsPathApplic ) - 1 )
.head 13 -  Call SalFileSetCurrentDirectory( lsPathDBF )
.head 12 -  Call DispatchMessage(  )
.head 12 -  !
.head 12 -  ! Sauvegarde des fichiers données dans un array
.head 12 +  If bContinue
.head 13 -  Set nFileDonnee = VisDosEnumFiles( gsPathPcTot ||'ELECT.DBF', FA_Standard , lsArrayFileDonnee )
.head 13 -  Set nFileDonnee1 = VisDosEnumFiles( gsPathPcTot ||'JT*.DBF', FA_Standard , lsArrayFileDonnee1 )
.head 13 -  Set j = nFileDonnee
.head 13 -  Set i = 0
.head 13 +  While i < nFileDonnee1
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set lsArrayFileDonnee[j] = lsArrayFileDonnee1[i]
.head 14 -  Set i = i + 1
.head 14 -  Set j = j + 1
.head 13 -  Set nFileDonnee = nFileDonnee + nFileDonnee1
.head 13 -  Set nFileDonnee1 = VisDosEnumFiles( gsPathPcTot ||'PC.IND', FA_Standard , lsArrayFileDonnee1 )
.head 13 -  Set lsArrayFileDonnee1[nFileDonnee1] = lsFileReg
.head 13 -  Set nFileDonnee1 = nFileDonnee1 + 1
.head 13 -  Set j = nFileDonnee
.head 13 -  Set i = 0
.head 13 +  While i < nFileDonnee1
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set lsArrayFileDonnee[j] = lsArrayFileDonnee1[i]
.head 14 -  Set i = i + 1
.head 14 -  Set j = j + 1
.head 13 -  Set nFileDonnee = nFileDonnee + nFileDonnee1
.head 13 -  Set nFileDonnee2 = VisDosEnumFiles( gsPathPcTot ||'??'|| lsDateEl_F ||'.DBF', FA_Standard , lsArrayFileDonnee2 )
.head 12 -  Call DispatchMessage(  )
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! Copie des données sur les disquettes
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM", OF_Exist )
.head 14 -  ! La disquette d'un des lecteurs n'est pas une disquette système
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C19    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 +  Else
.head 14 +  If wsScrutinEl = '1'
.head 15 +  If lsTypePcTot = 'C'
.head 16 -  Set lsTmp = 'COMM.PC'
.head 15 +  Else
.head 16 -  Set lsTmp = 'PROV.PC'
.head 14 +  Else If wsScrutinEl = '2'
.head 15 -  Set lsTmp = 'CANTON.PC'
.head 14 +  If NOT SalFileOpen( hFile , gsLecteur[i] ||"\\"||lsTmp, OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  ! Impossible de créer le fichier de controle COMM.PC ou PROV.PC ou CANTON.PC
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C43    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 +  Else
.head 15 -  ! Ecriture : Type de PC
.head 15 -  Set sBuffer = 'Pc type'
.head 15 +  If SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer) ) <= 0
.head 16 -  ! Erreur d'écriture dans le fichier COMM.PC ou PROV.PC
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - C44    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 15 -  Call SalFileClose( hFile )
.head 14 +  If bContinue
.head 15 +  If NOT SalFileOpen( hFile , gsLecteur[i] ||"\\PCT"|| SalNumberToStrX( i, 0) ||".DSK", OF_Create | OF_ReadWrite | OF_Text )
.head 16 -  ! Impossible de créer le fichier de controle PCTx.DSK (x étant le n° de la disquette)
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - C41    ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  Set bContinue = FALSE
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 16 -  !
.head 15 +  Else
.head 16 -  ! Ecriture : dateEl, NoPc et InsCom
.head 16 -  Set sBuffer = gsDateEl ||'
' || SalNumberToStrX(hTblPcTot.colNoPCT,0) ||'
' || lsComIns ||'
' || lsTraceDSK
.head 16 +  If SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer) ) <= 0
.head 17 -  ! Erreur d'écriture dans le fichier PCTx.DSK
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - C42    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 16 -  Call SalFileClose( hFile )
.head 16 +  If bContinue
.head 17 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "PCTOT_" || SalNumberToStrX( i, 0 )
.head 18 -  ! La disquette du lecteur n'a pas le bon label
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - C21    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 +  Else
.head 18 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 18 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 18 -  Set sBuffer  = "Md " || gsLecteur[i] || "\\EL"|| lsDateEl_F || "
Copy " || gsPathPcTot || "??" || lsDateEl_F || ".DBF " || gsLecteur[i] || "\\EL"|| lsDateEl_F ||"
Copy " || gsPathPcTot ||"ELECT.DBF "|| gsLecteur[i] ||"\\
Copy " || gsPathPcTot ||"JTARROND.DBF "|| gsLecteur[i] ||"\\
Copy " || gsPathPcTot ||"JTCANTON.DBF "|| gsLecteur[i] ||"\\
Copy " || gsPathPcTot ||"PC.IND "|| gsLecteur[i] ||"\\
Copy " || gsPathPcTot || lsFileReg ||" "|| gsLecteur[i] ||"\\
DIR " || gsLecteur[i] || "\\*.DBF >"|| gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 18 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 18 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 18 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 18 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 18 -  Call SalFileClose( hFile )
.head 18 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 18 -  Set i = i +1
.head 12 -  !
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 -  Set j = 1
.head 13 +  While Not SalFileOpen( hFile, gsPathTemp ||'P1_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 14 -  Call SalPause(1000)
.head 14 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 15 -  ! Disquette manquante
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 15 -  Break
.head 14 -  Set j = j + 1
.head 14 +  If j > 20
.head 15 -  ! Erreur de copie sur une des disquettes des données variables  (Phase 1 non terminée)
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C22    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 15 -  Break
.head 13 -  Set i = i + 1
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! PHASE 2
.head 11 +  If bContinue
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 2: ' || PalTraductMsg('CREAT5')
.head 12 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 12 -  Call SalBringWindowToTop( dfInfoClock )
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! Sauvegarde des fichiers fixe dans un array
.head 11 +  If bContinue
.head 12 -  Set nFileFixe2 = 0
.head 12 +  If lsTypeVote = 'D'
.head 13 -  Set nFileFixe = PalChargeRef_Cfg( 'PCTOT_CFG', wsScrutinEl , lsPathPcTot ,  lsArrayFileFixe )
.head 12 +  Else If lsTypeVote = 'J'
.head 13 -  Set nFileFixe = PalChargeRef_Cfg( 'PCTOT_CFG_JITES', wsScrutinEl,  lsPathPcTot ,  lsArrayFileFixe )
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Copie des fichiers fixes sur disquette
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\PCT"|| SalNumberToStrX( i, 0 )  || ".DSK", OF_Exist ) or 
  NOT SalFileOpen( hFile, gsLecteur[i]||"\\ELECT.DBF", OF_Exist )
.head 14 -  ! La disquette d'un des lecteurs ne contient pas les données variables du bureau
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - C23   ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 +  Else
.head 14 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "PCTOT_" || SalNumberToStrX( i, 0 )
.head 15 -  ! La disquette du lecteur n'a pas le bon label
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C24    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 +  Else
.head 15 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Set sBuffer  = 'XCopy ' || lsPathPcTot ||'*.* ' || gsLecteur[i] ||' /S /Y
DIR ' || gsLecteur[i] ||'\\*.* >'|| gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 15 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 15 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 15 -  Call SalFileClose( hFile )
.head 15 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 15 -  Set i = i +1
.head 12 -  !
.head 12 +  If lsTypeVote = 'D'
.head 13 -  Set j = 1
.head 13 +  While j <= 10
.head 14 -  Call SalPause(3000)
.head 14 -  Set j = j + 1
.head 12 -  !
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 -  Set j = 1
.head 13 +  While Not SalFileOpen( hFile, gsPathTemp ||'P2_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 14 -  Call SalPause(3000)
.head 14 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 15 -  ! Disquette manquante
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 15 -  Break
.head 14 -  Set j = j + 1
.head 14 +  If j > 35
.head 15 -  ! Erreur de copie sur une des disquettes des données fixes (Phase 2 non terminée)
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - C25    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 15 -  Break
.head 13 -  Set i = i + 1
.head 12 -  !
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! Rijndael (PHASE 3)
.head 11 +  If bContinue
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 3: ' || PalTraductMsg('CREAT3')
.head 12 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 12 -  Call SalBringWindowToTop( dfInfoClock )
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\PCT"|| SalNumberToStrX( i, 0 )  || ".DSK", OF_Exist ) or 
  NOT SalFileOpen( hFile, gsLecteur[i]||"\\ELECT.DBF", OF_Exist )  or 
  NOT SalFileOpen( hFile, gsLecteur[i]||"\\TOTALI.ZIP", OF_Exist )
.head 14 -  ! La disquette d'un des lecteurs ne contient pas les données variables et fixes du bureau
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - R26   ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 13 +  Else
.head 14 +  If NOT SalStrUpperX(VisDosGetVolumeLabel( gsLecteur[i] )) = "PCTOT_" || SalNumberToStrX( i, 0 )
.head 15 -  ! La disquette du lecteur n'a pas le bon label
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - R27    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 14 +  Else
.head 15 -  Set lsFile = gsPathTemp ||"P4_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 15 -  Call DispatchMessage(  )
.head 15 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 15 +  If SalStrRightX( gsPathCle ,1 ) ="\\"
.head 16 -  Set lsPath = SalStrLeftX( gsPathCle , SalStrLength( gsPathCle) - 1 )
.head 15 +  Else
.head 16 -  Set lsPath =  gsPathCle
.head 15 +  If bContinue and i = 1
.head 16 +  If bContinue and NOT SalFileOpen( hFile , gsPathCle ||"MAC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 17 -  ! Erreur de création du fichier MAC.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R28    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 16 +  Else
.head 17 +  If NOT SalFileWrite( hFile , lsClef1, SalStrLength( lsClef1) )
.head 18 -  ! Erreur d'écriture dans le fichier MAC.BE
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - R29    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  Call SalFileClose( hFile )
.head 16 +  If bContinue and NOT  SalFileOpen( hFile , gsPathCle ||"ENC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 17 -  ! Erreur de création du fichier ENC.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R30    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 16 +  Else
.head 17 +  If NOT SalFileWrite( hFile , lsClef2, SalStrLength( lsClef2) )
.head 18 -  ! Erreur d'écriture dans le fichier ENC.BE
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - R31    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  Call SalFileClose( hFile )
.head 16 +  If bContinue and NOT SalFileOpen( hFile , gsPathCle ||"IVCLE.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 17 -  ! Erreur de création du fichier IVCle.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R32    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 16 +  Else
.head 17 +  If NOT SalFileWrite( hFile , lsIVClef, SalStrLength( lsIVClef) )
.head 18 -  ! Erreur d'écriture dans le fichier IVCle.BE
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - R33    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  Call SalFileClose( hFile )
.head 16 +  If bContinue and NOT SalFileOpen( hFile , gsPathCle ||"IVMAC.BE", OF_Create | OF_ReadWrite | OF_Text)
.head 17 -  ! Erreur de création du fichier IVMac.BE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R34    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 16 +  Else
.head 17 +  If NOT SalFileWrite( hFile , lsIVMac ,SalStrLength( lsIVMac ) )
.head 18 -  ! Erreur d'écriture dans le fichier IVMac.BE
.head 18 -  Set lsDateHeure = PalDtmDateHeure( )
.head 18 -  Set lsStatut = 'ERR. - R35    ' || lsDateHeure
.head 18 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 18 -  Call SqlCommit( ghSqlMain )
.head 18 -  Set bContinue = FALSE
.head 18 -  ! Trace
.head 18 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 18 -  !
.head 17 -  Call SalFileClose( hFile )
.head 16 +  If bContinue
.head 17 -  Set sBuffer  = 'DEL ' || gsPathCle||'LOG.ERR
' || gsPathRijndael || 'FLOPPY W ' || lsPwPCT ||' ' || lsPath || ' ' || lsPath || ' ' || lsPath ||'
DIR ' || gsPathCle ||'\\*.* >'|| gsPathTemp ||'P4_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 17 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 17 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 17 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 17 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 17 -  Call SalFileClose( hFile )
.head 17 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 17 -  !
.head 17 -  Set j = 1
.head 17 +  While Not SalFileOpen( hFile, gsPathTemp ||'P4_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 18 -  Call SalPause(1000)
.head 18 -  Set j = j + 1
.head 18 +  If j > 50 or SalFileOpen( hFile, gsPathCle ||'LOG.ERR', OF_Exist )
.head 19 -  ! Erreur de création du floppy.be (phase 3 non terminée)
.head 19 -  Set lsDateHeure = PalDtmDateHeure( )
.head 19 -  Set lsStatut = 'ERR. - R36    ' || lsDateHeure
.head 19 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 19 -  Call SqlCommit( ghSqlMain )
.head 19 -  Set bContinue = FALSE
.head 19 -  ! Trace
.head 19 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 19 -  !
.head 19 -  Break
.head 17 -  !
.head 15 -  ! Copie du FLOPPY.BE sur disquette
.head 15 +  If bContinue
.head 16 +  If SalFileCopy( gsPathCle||'FLOPPY.BE', gsLecteur[i] ||"\\FLOPPY.BE", TRUE ) != FILE_CopyOK
.head 17 -  ! Erreur de copie du floppy.be sur la disquette
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - R37    ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  Set bContinue = FALSE
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 17 -  !
.head 15 -  ! Signature de la disquette
.head 15 +  If bContinue
.head 16 -  Set lsFile = gsPathTemp ||"P5_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 16 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 16 -  Set sBuffer  = 'DEL ' || gsLecteur[i] ||'\\LOG.ERR
' || gsPathRijndael || 'RIJNDAEL W 1 ' || lsPwPCT ||' ' || gsLecteur[i]  || ' ' || gsLecteur[i]  || ' ' || lsPath ||'
DIR ' || gsLecteur[i] ||'\\be*.* >'|| gsPathTemp ||'P5_COPY' || SalNumberToStrX( i, 0)  ||'.TXT'
.head 16 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 16 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 16 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 16 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 16 -  Call SalFileClose( hFile )
.head 16 -  Call DispatchMessage(  )
.head 16 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 15 -  Set i = i +1
.head 11 -  Call DispatchMessage(  )
.head 11 -  ! Vérification fin de phase 3 (Signature)
.head 11 +  If bContinue
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Call DispatchMessage(  )
.head 13 -  Set j = 1
.head 13 +  While Not SalFileOpen( hFile, gsPathTemp ||'P5_COPY' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist )
.head 14 -  Call SalPause(2000)
.head 14 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 15 -  ! Disquette manquante
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 15 -  !
.head 15 -  Break
.head 14 -  Set j = j + 1
.head 14 +  If j > 20 or SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 15 -  ! Erreur signature de la disquette (Phase 4 non terminée)
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. -R38    ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  Set bContinue = FALSE
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 15 -  !
.head 15 -  Break
.head 13 +  If bContinue and SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 14 -  ! Erreur signature de la disquette (Phase 4 non terminée)
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - R38    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 14 -  !
.head 14 -  Break
.head 13 -  Set i = i + 1
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! PHASE 4
.head 11 -  ! Verification du contenu de chaque disquette
.head 11 +  If bContinue
.head 12 -  Call SalPause(1000)
.head 12 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 12 -  Call SalBringWindowToTop( dfInfoClock )
.head 12 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 4: ' || PalTraductMsg('CREAT4')
.head 12 -  Call DispatchMessage(  )
.head 12 -  ! Mise en mémoire des fichiers à traiter dans FC
.head 12 -  Set nFile= nFileDonnee + nFileDonnee2 + nFileFixe + nFileFixe2 + 1
.head 12 -  Set i = 0
.head 12 -  Set j = 0
.head 12 +  While i < nFileDonnee
.head 13 -  Set lsArrayFile[j] = lsArrayFileDonnee[i]
.head 13 -  Set lsArrayPathFile[j] = gsPathPcTot
.head 13 -  Set lsArrayPathFileLecteur[j] = ''
.head 13 -  Set i = i + 1
.head 13 -  Set j = j + 1
.head 12 -  Set i = 0
.head 12 +  While i < nFileDonnee2
.head 13 -  Set lsArrayFile[j] = lsArrayFileDonnee2[i]
.head 13 -  Set lsArrayPathFile[j] = gsPathPcTot
.head 13 -  Set lsArrayPathFileLecteur[j] = 'EL'|| lsDateEl_F ||'\\'
.head 13 -  Set i = i + 1
.head 13 -  Set j = j + 1
.head 12 -  Call DispatchMessage(  )
.head 12 -  Call PalMakeAllDir( gsPathTemp  || VisStrSubstitute( lsPathPcTotStru, lsPathPcTot , '' ) )
.head 12 -  Set i = 0
.head 12 +  While i < nFileFixe
.head 13 -  Set lsArrayFile[j] = lsArrayFileFixe[i]
.head 13 -  Set lsArrayPathFile[j] = gsPathTemp
.head 13 -  Set lsArrayPathFileLecteur[j] = ''
.head 13 +  If VisFileCopy( lsPathPcTot || lsArrayFile[j], gsPathTemp || lsArrayFile[j] ) <= 0
.head 14 -  ! Un fichier manquant dans PCTOT_Cfg
.head 14 -  Set bContinue = FALSE
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - CTRL4  ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut || '  ' || lsArrayFile[j] )
.head 14 -  !
.head 14 -  Break
.head 13 -  Set i = i + 1
.head 13 -  Set j = j + 1
.head 12 +  If lsTypePcTot = 'C'
.head 13 -  Set lsArrayFile[j] = 'COMM.PC'
.head 12 +  Else If lsTypePcTot = 'K'
.head 13 -  Set lsArrayFile[j] = 'CANTON.PC'
.head 12 +  Else
.head 13 -  Set lsArrayFile[j] = 'PROV.PC'
.head 12 -  Set lsArrayPathFile[j] = gsPathTemp
.head 12 -  Set lsArrayPathFileLecteur[j] = ''
.head 12 -  Set i = 1
.head 12 +  While i < nFileFixe
.head 13 -  Call SalPause( 150 )
.head 13 -  Call DispatchMessage(  )
.head 13 -  Set i = i + 1
.head 12 -  Set i = 1
.head 12 +  While i <= gnNbDiskPCT and bContinue
.head 13 -  Set dfLibelleInfo = PalTraductMsg('PHASE') ||' 4: ' || PalTraductMsg('CREAT4') || ' - ' || PalTraductMsg( 'LECTEUR' ) || ' ' || SalNumberToStrX( i,0)
.head 13 -  Call DispatchMessage(  )
.head 13 -  Set lsArrayFile[nFile] = 'FLOPPY.BE'
.head 13 -  Set lsArrayFile[nFile+1] = 'PCT' || SalNumberToStrX( i, 0)  || ".DSK"
.head 13 -  Set lsArrayFile[nFile+2] = 'BE.1'
.head 13 -  Set lsArrayFile[nFile+3] = lsFileReg
.head 13 -  Set j = 0
.head 13 +  While j <= nFile+3 and bContinue
.head 14 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\"||lsArrayPathFileLecteur[j] ||  lsArrayFile[j] , OF_Exist)
.head 15 -  ! Un fichier manquant sur une disquette PCTOT
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL1  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut ||' - ' || lsArrayFile[j])
.head 15 -  !
.head 15 -  Break
.head 14 +  Else
.head 15 +  If j < nFile - 1
.head 16 -  ! Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT'
.head 16 -  ! Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 16 -  Set sBuffer  = 'FC ' ||  lsArrayPathFile[j] || lsArrayFile[j] ||' ' || gsLecteur[i] ||'\\' || lsArrayPathFileLecteur[j] || lsArrayFile[j] ||' >'|| gsPathTemp||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT'
.head 16 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)||'_'||  SalNumberToStrX( j, 0) || ".BAT"
.head 16 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 16 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 16 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 16 -  Call SalFileClose( hFile )
.head 16 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 14 -  Set j = j + 1
.head 13 -  ! Vérification FC
.head 13 +  If bContinue
.head 14 -  Set j = 1
.head 14 +  While j < nFile
.head 15 -  Call SalPause( 150 )
.head 15 -  Call DispatchMessage(  )
.head 15 -  Set j = j + 1
.head 14 -  ! Call SalPause(150*nFile + gnPauseCopie)
.head 13 -  Set j = 0
.head 13 -  ! Call SalPause(100+gnPauseCopie)
.head 13 +  While j < nFile-1 and bContinue
.head 14 -  Call DispatchMessage(  )
.head 14 -  Set nLigne = 0
.head 14 +  While NOT SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT', OF_Exist ) and nLigne != 100
.head 15 -  Call SalPause(200)
.head 15 +  If NOT SalFileOpen( hFile, gsLecteur[i]||"\\COMMAND.COM" , OF_Exist)
.head 16 -  ! Disquette manquante
.head 16 -  Set bContinue = FALSE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - CTRL3  ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || lsStatut)
.head 16 -  !
.head 16 -  Break
.head 15 -  Set nLigne = nLigne + 1
.head 14 +  If SalFileOpen( hFile, gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT', OF_Read | OF_Text )
.head 15 -  Set nLigne = 0
.head 15 +  While SalFileGetStr( hFile, sBuffer, 250 ) and bContinue
.head 16 +  If SalStrTrimX( sBuffer)  != ''
.head 17 -  Set nLigne = nLigne + 1
.head 16 +  If nLigne > 2
.head 17 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 17 -  Set bContinue = FALSE
.head 17 -  Set lsDateHeure = PalDtmDateHeure( )
.head 17 -  Set lsStatut = 'ERR. - CTRL2 a  ' || lsDateHeure
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 17 -  Call SqlCommit( ghSqlMain )
.head 17 -  ! Trace
.head 17 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut || ' -->' ||  lsArrayFile[j]  )
.head 17 -  !
.head 17 -  Break
.head 15 -  Call SalFileClose( hFile )
.head 15 +  If nLigne = 0
.head 16 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 16 -  Set bContinue = FALSE
.head 16 -  Set lsDateHeure = PalDtmDateHeure( )
.head 16 -  Set lsStatut = 'ERR. - CTRL2 b  ' || lsDateHeure
.head 16 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 16 -  Call SqlCommit( ghSqlMain )
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut || ' --> ' ||  lsArrayFile[j]  )
.head 16 -  !
.head 16 -  Break
.head 14 +  Else
.head 15 -  ! Différence entre un fichier de la disquette et du pc / serveur
.head 15 -  Set bContinue = FALSE
.head 15 -  Set lsDateHeure = PalDtmDateHeure( )
.head 15 -  Set lsStatut = 'ERR. - CTRL2 c  ' || lsDateHeure
.head 15 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 15 -  Call SqlCommit( ghSqlMain )
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut || ' --> ' ||  lsArrayFile[j] )
.head 15 -  !
.head 15 -  Break
.head 14 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT'
.head 14 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 14 -  Set j = j + 1
.head 13 -  !
.head 13 +  If VisDosSetVolumeLabel( gsLecteur[i], "PCTOT_"|| SalNumberToStrX( i, 0 ) ) != VTERR_Ok
.head 14 -  ! Impossible de labelliser la disquette
.head 14 -  Set lsDateHeure = PalDtmDateHeure( )
.head 14 -  Set lsStatut = 'ERR. - D0    ' || lsDateHeure
.head 14 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 14 -  Call SqlCommit( ghSqlMain )
.head 14 -  Set bContinue = FALSE
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 14 -  !
.head 13 -  Set i = i + 1
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! Timer : estimation du prochain temps
.head 11 -  Call SalTimerKill( hWndForm, 1 )
.head 11 +  If bContinue
.head 12 +  If wnPourcent != 0
.head 13 -  Set gnTimerInfo_PCT = gnTimerInfo_PCT - wnPourcent
.head 12 -  Call SalSetProfileString( 'UNITE', 'TIMER_PCT', SalNumberToStrX( gnTimerInfo_PCT,0) , gsIniLocal )
.head 11 -  Call DispatchMessage(  )
.head 11 -  !
.head 11 -  ! Effacement des fichiers temporaires
.head 11 -  Set i = 1
.head 11 +  While i <= gnNbDiskPCT
.head 12 -  Set lsFile = gsPathTemp ||"P1_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set lsFile = gsPathTemp ||"P2_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set lsFile = gsPathTemp ||"P3_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set lsFile = gsPathTemp ||"P4_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set lsFile = gsPathTemp ||"P5_COPY" || SalNumberToStrX( i, 0)  || ".TXT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 12 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 12 -  Set j = 0
.head 12 +  While j <= nFile
.head 13 -  Set lsFile = gsPathTemp ||'COPY' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.BAT'
.head 13 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 13 -  Set lsFile = gsPathTemp ||'FC' || SalNumberToStrX( i, 0)  ||'_' || SalNumberToStrX( j,0) ||'.TXT'
.head 13 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 13 -  Set j = j + 1
.head 12 -  Set i = i + 1
.head 11 -  Set i = 0
.head 11 +  While i < nFileFixe
.head 12 -  Call VisFileDelete( gsPathTemp || lsArrayFileFixe[i] )
.head 12 -  Set i = i + 1
.head 11 -  Set i = 0
.head 11 +  While i < nFileFixe2
.head 12 -  Call VisFileDelete( gsPathTemp || VisStrSubstitute( lsPathPcTotStru, lsPathPcTot , '' ) || lsArrayFileFixe2[i] )
.head 12 -  Set i = i + 1
.head 11 -  Set lsFile = gsPathTemp ||'EFFACE.BAT'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 11 -  Set lsTmp = gsPathTemp || VisStrSubstitute( lsPathPcTotStru, lsPathPcTot , '' )
.head 11 +  If SalStrRightX( lsTmp , 1 ) = '\\'
.head 12 -  Set lsTmp = SalStrLeftX( lsTmp , SalStrLength( lsTmp) - 1 )
.head 11 -  Set sBuffer  = gsPathRijndael ||'DELDIR '|| lsTmp
.head 11 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 11 -  Call SalFileClose( hFile )
.head 11 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 11 -  Set lsFile = gsPathCle ||"ENC.BE"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathCle ||"IVCLE.BE"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathCle ||"FLOPPY.BE"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathCle ||"IVMAC.BE"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathCle ||"MAC.BE"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"EML.ZIP"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"PR.XML"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"GE.XML"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"OC.XML"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathTemp ||"DI.XML"
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'SC'|| lsDateEl_F||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'RV'|| lsDateEl_F||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'PA'|| lsDateEl_F||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'BV'|| lsDateEl_F||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'LI'|| lsDateEl_F||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'CD'|| lsDateEl_F ||'.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'ELECT.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'JTCANTON.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'JTARROND.DBF'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Set lsFile = gsPathPcTot || 'PC.IND'
.head 11 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 11 -  Call SalFileOpen( hFile, gsPathTemp || 'CO_DOS62.COM', OF_Delete )
.head 11 -  !
.head 10 +  Else
.head 11 -  ! Impossible de trouver la commune et de savoir si il y a une election CPAS ou Conseil District
.head 11 -  Set bContinue = FALSE
.head 11 -  Set lsDateHeure = PalDtmDateHeure( )
.head 11 -  Set lsStatut = 'ERR. - DB2     ' || lsDateHeure
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 11 -  Call SqlCommit( ghSqlMain )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut)
.head 11 -  !
.head 8 +  Else
.head 9 -  ! Erreur dans la correspondance de l'Utilisateur qui devait générer ce PCTOT
.head 9 -  Set bContinue = FALSE
.head 9 -  Set lsDateHeure = PalDtmDateHeure( )
.head 9 -  Set lsStatut = 'ERR. - DB1     ' || lsDateHeure
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Update PC_TOT set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 9 -  Call SqlCommit( ghSqlMain )
.head 7 +  Else
.head 8 -  ! Annulation car tous les BV ne sont pas controles
.head 8 -  Set lsStatut = lsEtatPrec
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut, pct_createur= :lsUserPrec where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  Set bContinue = FALSE
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 7 -  Set bContinue = FALSE
.head 6 -  !
.head 6 -  !
.head 6 -  Call DispatchMessage(  )
.head 6 +  If bContinue
.head 7 -  Set lsDateHeure = PalDtmDateHeure( )
.head 7 +  If nEcritPrec != NUMBER_Null or nEcritPrec > 0
.head 8 -  Set lsStatut = 'Ecr.Disk ' || SalNumberToStrX( nEcritPrec + 1, 0)  || SalStrRepeatX(' ' , 5) || lsDateHeure
.head 8 -  Set nEcritPrec = nEcritPrec + 1
.head 7 +  Else
.head 8 -  Set lsStatut = 'Ecr.Disk 1' || SalStrRepeatX(' ' , 5) || lsDateHeure
.head 8 -  Set nEcritPrec = 1
.head 7 -  !
.head 7 -  Set i = 1
.head 7 -  Set lsTemp = ''
.head 7 +  While i <= gnNbDiskPCT
.head 8 +  If lsTemp != ''
.head 9 -  Set lsTemp = lsTemp ||'|'
.head 8 -  Set lsTemp = lsTemp ||'0'
.head 8 -  Set i = i + 1
.head 7 -  !
.head 7 +  If SqlPrepareAndExecute( ghSqlMain, "Update Pc_Tot
	set pct_statut = :lsStatut , pct_codebak=:lsPwPCT , pct_clef1=:lsClef1 , pct_clef2=:lsClef2 , pct_codemac=:lsIVMac , pct_NoEcrit = :nEcritPrec, PCT_Identif =:lsTemp
	where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  ! Trace
.head 8 -  ! Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut  )
.head 8 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut ||'
' || lsPwPCT ||'
' || lsClef1 ||'
' || lsClef2 ||'
 '|| lsIVMac  )
.head 8 -  !
.head 7 +  Else
.head 8 -  ! Erreur de mise à jour PcTotalors que tout c'est bien passé
.head 8 -  Set bContinue = FALSE
.head 8 -  Set lsDateHeure = PalDtmDateHeure( )
.head 8 -  Set lsStatut = 'ERR. - DB40     ' || lsDateHeure
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_tot set pct_statut = :lsStatut where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || lsStatut )
.head 8 -  !
.head 7 -  Call VisWaitCursor(FALSE)
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Pc_tot set pct_PwTemp = '"|| SalStrLeftX( lsPwPCTPrec,8) ||"' where com_ins = :tblCommunePCT.colIns and pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc)
.head 7 -  Call SqlCommit( ghSqlSecondaire )
.head 6 -  Call SalSendMsg( hTblPcTot, SAM_Click, 0,0)
.head 6 +  If NOT bContinue and SalStrUpperX(SalStrLeftX( hTblPcTot.colStatut, 4)) = 'ERR.' and hTblPcTot.colStatut != lsEtatPrec
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbDiskBV
.head 8 -  Set lsFile = gsLecteur[i] ||"FLOPPY.BE"
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 8 -  Set i = i + 1
.head 7 -  ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "DISK PCT", lsTrace || PalTraductMsg( "ERR_DISK" )  )
.head 7 -  !
.head 7 -  Call SalMessageBox(PalTraductMsg( "ERR_DISK" ) ,PalTraductMsg( "ERR" ), MB_Ok )
.head 6 -  !
.head 6 -  Call SalHideWindow( dfLibelleInfo )
.head 6 -  Call SalHideWindow( dfInfoClock )
.head 6 -  Call SalEnableWindow( hWndForm )
.head 6 -  Call SalEnableWindow( pbGenerePCT )
.head 6 -  Call SalEnableWindow( pbEtiquPCT )
.head 6 -  Call SalEnableWindow( pbPwPCT )
.head 6 -  Set wbCapteMouseMove = TRUE
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  !
.head 6 -  ! Impression des étiquettes
.head 6 +  If bContinue
.head 7 +  If SalMessageBox(PalTraductMsg( 'BV18' ) ||'
' || PalTraductMsg( 'BV16' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 8 -  Call PalCreationEtiquettePCT()
.head 6 -  !
.head 5 -  Set wbCapteMouseMove = TRUE
.head 3 +  Function: PalCreationEtiquettePCT
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  Number: nRet
.head 5 -  String: lsNoPCT
.head 5 -  String: lsNomPCT
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  String: sComF
.head 5 -  String: sComN
.head 5 -  String: lsTypePc
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsCodeInt
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  String: lsWhereTypePc
.head 5 -  String: lsDescPcTotType
.head 5 -  Window Handle: hTblPcTot
.head 4 +  Actions
.head 5 +  If wsScrutinEl = '1'
.head 6 +  If SalTblAnyRows( tblPcTot, ROW_Selected, 0)
.head 7 -  Set lsWhereTypePc = "  and PCT_Type = 'COM' "
.head 7 -  Set hTblPcTot = tblPcTot
.head 7 -  Set lsTypePc = 'C'
.head 6 +  Else If SalTblAnyRows(tblPcTotProv, ROW_Selected, 0)
.head 7 -  Set lsWhereTypePc = " and  PCT_Type = 'CAN' "
.head 7 -  Set hTblPcTot = tblPcTotProv
.head 7 -  Set lsTypePc = 'P'
.head 6 +  Else
.head 7 -  Set lsWhereTypePc = ""
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Return FALSE
.head 5 +  Else If wsScrutinEl = '2'
.head 6 -  Set lsWhereTypePc = " "
.head 6 -  Set hTblPcTot = tblPcTot
.head 6 -  Set lsTypePc = 'K'
.head 5 +  Else
.head 6 -  Set lsWhereTypePc = ""
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  Return FALSE
.head 5 +  If SqlPrepareAndExecute( ghSqlMain,"Select pct_no, pct_DESCRIPTION, pct_President, pct_Adresse, pct_Code_Postal, pct_Localite, pct_Codebak , pct_Statut, PCT_NOECRIT
	from pc_tot
	where com_ins = :tblCommunePCT.colIns and Pct_no = :hTblPcTot.colNoPCT " || lsWhereTypePc ||"
	Into :lsNoPCT,:lsNomPCT,:lsPres,:lsAdr,:lsCP,:lsLoc,:lsPW,:lsStatut, :lsNoEcrit ")
.head 6 +  If SqlFetchNext( ghSqlMain , Btmp)
.head 7 -  !
.head 7 -  Set lsCodeInt = SalStrRightX('00' || lsNoEcrit , 2) || VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsStatut, 20) , ' ' , ''), '/', '') , '.', '')
.head 7 -  !
.head 7 -  Set lsRegion = 'WAL'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain,"Select Region, nom_f, nom_N from base_commune 
	where com_ins = :tblCommunePCT.colIns
	Into :lsRegion , :sComF, :sComN ")
.head 7 -  Call SqlFetchNext( ghSqlMain , Btmp)
.head 7 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 8 +  If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '21' or SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 9 -  Set sBuffer = "{Election}|{Election_Nl}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Commune_Nl}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 8 +  Else
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Pct_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Set nEtiq = 1
.head 8 +  If lsTypePc = 'C'
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set lsDescPcTotType = 'Gemeente Tot.'
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 10 -  Set lsDescPcTotType = 'Gemeinde Tot. Commune'
.head 9 +  Else If lsRegion = 'WAL'
.head 10 -  Set lsDescPcTotType = 'Tot. Commune'
.head 8 +  Else
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set lsDescPcTotType = 'Kanton Tot.'
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 10 -  Set lsDescPcTotType = 'Tot. Canton / Kanton Tot.'
.head 9 +  Else If lsRegion = 'WAL'
.head 10 -  Set lsDescPcTotType = 'Tot. Canton'
.head 8 +  ! While nEtiq <= gnNbDiskPCT
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN  ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer ||"Diskette " || SalNumberToStrX(nEtiq,0) ||"|" || lsPW || "|" || lsPres || "|"|| lsDescPcTotType
.head 9 +  Else If lsRegion = 'BXL'
.head 10 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 10 +  If lsTypePc = 'C'
.head 11 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|GEM. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 +  Else 
.head 11 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|KAN. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else 
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" ||  sComF ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 -  Set sBuffer = sBuffer ||"
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Set nEtiq = nEtiq + 1
.head 8 -  !
.head 8 +  ! While nEtiq <= 3
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT  ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || tblCommunePCT.colCanton ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer ||"Diskette " || SalNumberToStrX(nEtiq,0) ||"|" || lsPW || "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else If lsRegion = 'BXL' 
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || tblCommunePCT.colCanton ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer ||"Disque " || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 10 +  If lsTypePc = 'C'
.head 11 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|GEM. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 +  Else 
.head 11 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|KAN. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer ||"Disque " || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else 
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || tblCommunePCT.colCanton ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer ||"Disque " || SalNumberToStrX(nEtiq,0) ||"|"|| lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 9 -  Set sBuffer = sBuffer ||"
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Set nEtiq = nEtiq + 1
.head 8 -  !
.head 8 +  If lsRegion = 'FLA'
.head 9 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 9 -  Set sBuffer = sBuffer || lsPW || "|" || lsPres|| "|"|| lsDescPcTotType
.head 8 +  Else If lsRegion = 'BXL'
.head 9 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 9 -  Set sBuffer = sBuffer ||  lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 8 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 9 +  If lsTypePc = 'C'
.head 10 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|GEM. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 9 +  Else
.head 10 -  Set sBuffer = gsTitreF||"|"|| gsTitreN ||"|"||date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|KAN. " || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|"|| sComN ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 8 +  Else
.head 9 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || lsNoPCT ||"|" || lsNomPCT ||"|" || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|" || SalNumberToStrX(tblCommunePCT.colIns,0)  ||"|" 	
.head 9 -  Set sBuffer = sBuffer || lsPW ||  "|" || lsPres|| "|"|| lsDescPcTotType
.head 8 -  Set sBuffer = sBuffer ||"|"|| lsCodeInt ||"
"
.head 8 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 8 -  Call SalFileClose( hFile )
.head 8 -  ! Copie du fichier en local
.head 8 +  If gsFormatEtiq = 'A4'
.head 9 +  If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '21'
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_BXL.Doc'
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_DE.Doc'
.head 9 +  Else If lsRegion ='FLA'
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_NL.Doc'
.head 9 +  Else
.head 10 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'ETIQPCT.Doc'
.head 8 +  Else If gsFormatEtiq = 'ETIQ'
.head 9 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT.Doc'
.head 8 +  Else If gsFormatEtiq = 'ETIQ2'
.head 9 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT2.Doc'
.head 9 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT2.Doc'
.head 8 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 8 -  ! Publipostage
.head 8 +  If cbPrintPCT
.head 9 -  Call ShellExecute( hWndForm, 'Print', lsFile2, ''
, gsPathTemp , SW_HIDE )
.head 9 -  Call SalBringWindowToTop( hWndForm )
.head 9 -  Call SalBringWindowToTop( dfInfoClock )
.head 8 +  Else
.head 9 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 5 +  Else
.head 6 -  Set bContinue = FALSE
.head 3 +  Function: PalCreationEtiquettePCT_Master
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sRegion
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  Number: nRet
.head 5 -  String: lsNoPCT
.head 5 -  String: lsNomPCT
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  String: sComF
.head 5 -  String: sComN
.head 5 -  String: lsTypePc
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsCodeInt
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  String: lsWhereTypePc
.head 5 -  String: lsDescPcTotType
.head 5 -  Window Handle: hTblPcTot
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 +  If sRegion = 'BXL'
.head 7 -  Set sBuffer = "{Election}|{Election_Nl}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Commune_Nl}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 6 +  Else
.head 7 -  Set sBuffer = "{Election}|{Date_El}|{Pct_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 +  If sRegion = 'BXL'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_BXL.Doc'
.head 7 +  ! Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_DE.Doc'
.head 7 +  Else If sRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_NL.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQPCT.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT2.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT2.Doc'
.head 6 -  ! Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalCreationRecepisse_Master
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  Number: nRet
.head 5 -  String: lsNo
.head 5 -  String: lsNoPCT
.head 5 -  String: lsNomPCT
.head 5 -  String: lsWhere
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsNoPcTot_Lettre
.head 5 -  String: lsTypePcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsRegLing
.head 5 -  String: lsFile1
.head 5 -  String: lsFileWord
.head 5 -  String: lsFile2
.head 5 -  String: sComF
.head 5 -  String: sComN
.head 5 -  String: lsTypePc
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsCodeInt
.head 5 -  String: lsNbBV
.head 5 -  String: lsNbBV_Lettre
.head 5 -  Number: nPassage
.head 5 -  File Handle: hFile
.head 5 -  Boolean: bOk
.head 5 -  Long String: sBuffer
.head 5 -  String: lsWhereTypePc
.head 5 -  String: lsDescPcTotType
.head 5 -  String: lsDesc
.head 5 -  Window Handle: hTblPcTot
.head 4 +  Actions
.head 5 +  ! If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 +  If sRegion = 'BXL'
.head 7 -  Set sBuffer = "{Election}|{Election_Nl}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Commune_Nl}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 6 +  Else 
.head 7 -  Set sBuffer = "{Election}|{Date_El}|{Pct_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{PassWord}|{President}|{Type_Tot}|{Code_int}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 +  If sRegion = 'BXL'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_BXL.Doc'
.head 7 +  ! Else If SalStrLeftX( SalNumberToStrX( tblCommunePCT.colIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_DE.Doc'
.head 7 +  Else If sRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT_NL.Doc'
.head 7 +  Else 
.head 8 -  Set lsFile1 =  gsPathRpt || 'ETIQPCT.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQPCT.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_PCT2.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_PCT2.Doc'
.head 6 -  ! Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  ! Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 5 -  Set lsRegion = 'BXL'
.head 5 -  Set sComF = '{Commune F}'
.head 5 -  Set sComN = '{Gemeente N}'
.head 5 +  If lsRegion = 'BXL' 
.head 6 -  ! Question du choix de la langue
.head 6 -  ! Set lsRegLing = 'FND'
.head 6 -  Set lsRegLing = 'FN'
.head 6 -  Call SalModalDialog( dlgChoixLangue, hWndForm , lsRegLing, bOk, lsRegLing)
.head 6 +  If bOk
.head 7 +  If lsRegLing =  'F'
.head 8 -  Set lsRegion = 'WAL'
.head 7 +  Else If lsRegLing =  'N'
.head 8 -  Set lsRegion = 'FLA'
.head 6 +  Else
.head 7 -  Return (FALSE)
.head 5 -  !
.head 5 -  ! Récépissé PC TOT
.head 5 -  Call SalDisableWindow( hWndForm )
.head 5 -  Call VisWaitCursor( TRUE )
.head 5 +  If sType = 'CAN' or sType ='COM'
.head 6 -  ! Set lsWhere = ""
.head 6 +  ! If rbCom
.head 7 -  Set lsWhere = " com_ins = :nIns AND Pct_type = 'COM' "
.head 6 +  ! Else
.head 7 -  Set lsWhere = " can_ins = :nIns AND (Pct_type != 'COM' or pct_type is null ) "
.head 6 +  If TRUE
.head 7 -  Set lsPres = '{President}'
.head 7 -  Set lsAdr = '{Adresse}'
.head 7 -  Set lsCP = '{CP}'
.head 7 -  Set lsLoc = '{Localite}'
.head 7 -  Set lsTypePc = '{Type PC}'
.head 7 -  Set lsPW = '{Mot de passe}'
.head 7 -  Set lsNoPCT = '{No PC Tot}'
.head 7 -  ! Copie du fichier en local
.head 7 +  ! If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP_DE.Doc'
.head 8 -  Set lsFileWord = 'RECEP_DE.Doc'
.head 7 +  If lsRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP_NL.Doc'
.head 8 -  Set lsFileWord = 'RECEP_NL.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP.Doc'
.head 8 -  Set lsFileWord = 'RECEP.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'RECEP.Doc'
.head 7 +  If VisFileCopy( lsFile1 , lsFile2 ) != 1
.head 8 -  Set bContinue = FALSE
.head 8 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ) || '
' || lsFile1 , PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 +  Else
.head 8 -  Set bContinue = TRUE
.head 7 -  !
.head 7 +  If bContinue
.head 8 -  !
.head 8 -  Set lsNbBV = '{Nb BV}'
.head 8 +  ! If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 9 -  Set lsNbBV_Lettre = CHIFLETDE(  SalStrToNumber( lsNbBV ) )
.head 8 +  If lsRegion= 'FLA'
.head 9 -  Set lsNbBV_Lettre = '{Nb BV en lettres}'
.head 8 +  Else
.head 9 -  Set lsNbBV_Lettre = '{Nb BV en lettres NL}'
.head 8 -  !
.head 8 -  !
.head 8 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{President}|{Type_Tot}|{NbPcTot}|{NbDisquette}|{NbPcTot_Lettre}|{NbBV}|{NbBV_Lettre}|{PW}
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  !
.head 9 +  ! If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set lsNoPcTot_Lettre = CHIFLETDE(  SalStrToNumber( lsNoPCT ) )
.head 9 +  If lsRegion= 'FLA'
.head 10 -  Set lsNoPcTot_Lettre = '{Nb PcTot en lettres}'
.head 9 +  Else
.head 10 -  Set lsNoPcTot_Lettre = '{Nb PcTot en lettres NL}'
.head 9 -  !
.head 9 +  If lsTypePc = 'COM'
.head 10 +  ! If lsRegion = 'FLA'
.head 11 -  Set lsDescPcTotType = 'Gemeentehoofdbureau'
.head 10 +  ! Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 11 -  Set lsDescPcTotType = 'Gemeinde Tot. Commune'
.head 10 +  ! Else If lsRegion = 'WAL'
.head 11 -  Set lsDescPcTotType = 'Bureau principal de commune'
.head 10 -  ! Else If lsRegion = 'BXL'
.head 10 -  Set lsDescPcTotType = '{Bureau principal de commune}'
.head 9 +  Else
.head 10 +  ! If lsRegion = 'FLA'
.head 11 -  Set lsDescPcTotType = 'Kantonhoofdbureau'
.head 10 +  ! Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 11 -  Set lsDescPcTotType = 'Tot. Canton / Kanton Tot.'
.head 10 -  ! Else If lsRegion = 'WAL'
.head 10 -  Set lsDescPcTotType = '{Bureau principal de canton}'
.head 9 -  !
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|{INS}|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres|| "|"|| lsDescPcTotType
.head 9 +  ! Else If SalStrLeftX(SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set sBuffer = gsTitreN||"|"||date_transforme( gsDateEl, '/') || "|"  ||lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|{INS}|" 	
.head 10 -  Set sBuffer = sBuffer  || lsPres|| "|"|| lsDescPcTotType
.head 9 -  Set sBuffer = sBuffer || "|"|| lsNoPCT ||"|"|| SalNumberToStrX(gnNbDiskPCT,0) ||"|"|| lsNoPcTot_Lettre ||"|"|| lsNbBV ||"|"|| lsNbBV_Lettre ||"|"|| lsPW ||"
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 9 -  Set bContinue = FALSE
.head 8 -  ! Publipostage
.head 8 +  If bContinue
.head 9 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 -  ! Récépissé BV
.head 5 +  Else If sType = 'BV'
.head 6 +  If TRUE
.head 7 -  Set lsNo = '{No}'
.head 7 -  Set lsDesc ='{Description}'
.head 7 -  Set lsPres = '{President}'
.head 7 -  Set lsAdr = '{Adresse}'
.head 7 -  Set lsCP = '{CP}'
.head 7 -  Set lsLoc = '{Localite}'
.head 7 -  Set lsStatut = '{Statut}'
.head 7 -  Set lsPW = '{Mot de passe}'
.head 7 -  Set lsNoEcrit = '{Nb creation}'
.head 7 -  ! Copie du fichier en local
.head 7 +  ! If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV_DE.Doc'
.head 8 -  Set lsFileWord = 'RECBV_DE.Doc'
.head 7 +  If lsRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV_NL.Doc'
.head 8 -  Set lsFileWord = 'RECBV_NL.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV.Doc'
.head 8 -  Set lsFileWord = 'RECBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'RECBV.Doc'
.head 7 +  If VisFileCopy( lsFile1 , lsFile2 ) != 1
.head 8 -  Set bContinue = FALSE
.head 8 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ) || '
' || lsFile1 , PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 +  Else
.head 8 -  Set bContinue = TRUE
.head 7 -  !
.head 7 +  If bContinue
.head 8 -  !
.head 8 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ2.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{President}|{NbDisquette}|{PW}|{CodeInt}
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  !
.head 9 -  Set lsCodeInt = SalStrRightX('00' || lsNoEcrit , 2) || VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsStatut, 20) , ' ' , ''), '/', '') , '.', '')
.head 9 -  !
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/')  ||"|"  || lsNo  ||"|"  || lsDesc  ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|{INS}|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres 
.head 9 +  ! Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set sBuffer = gsTitreN||"|"||date_transforme( gsDateEl, '/') ||"|"  || lsNo  ||"|"  || lsDesc|| "|"  ||lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|{INS}|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres
.head 9 +  Else
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsNo  ||"|"  || lsDesc||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|{INS}|" 	
.head 10 -  Set sBuffer = sBuffer  || lsPres 
.head 9 -  Set sBuffer = sBuffer || "|"|| SalNumberToStrX(gnNbDiskBV,0) || "|"|| lsPW || "|"|| lsCodeInt || "
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 9 -  Set bContinue = FALSE
.head 8 -  ! Publipostage
.head 8 +  If bContinue
.head 9 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 -  Call VisWaitCursor( FALSE )
.head 5 -  Call SalEnableWindow( hWndForm )
.head 3 +  Function: PalRechercheInsPCT
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sInsCom
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sInsDis
.head 5 -  String: sInsCan
.head 5 -  Number: nRow
.head 5 -  Number: nRowActu
.head 5 -  Number: nCantonActu
.head 5 -  Number: nLigne
.head 5 -  Boolean: bOk
.head 5 -  Boolean: bOk2
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 +  If gnTypeVote = 1
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Can_ins from Commune where Com_ins = :sInsCom into :sInsCan ")
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Can_ins from Base_Commune where Com_ins = :sInsCom into :sInsCan ")
.head 5 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 5 -  Call SalTblSetRowFlags( tblCantonPCT, SalTblQueryContext( tblCantonPCT ), ROW_Selected, FALSE )
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( tblCantonPCT, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblCantonPCT, nRow)
.head 6 -  Call SalTblSetFocusRow( tblCantonPCT, nRow)
.head 6 +  If tblCantonPCT.colIns = SalStrToNumber(sInsCan)
.head 7 -  Set bOk = TRUE
.head 7 -  Set nRowActu = SalListQuerySelection( cmbCommunePCT )
.head 7 -  Call SalTblSetRowFlags( tblCantonPCT, nRow, ROW_Selected, TRUE )
.head 7 -  Call SalSendMsg( tblCantonPCT, SAM_Click, -1,0)
.head 7 -  Call SalTblSetRowFlags( tblCommunePCT, SalTblQueryContext( tblCommunePCT ), ROW_Selected, FALSE )
.head 7 -  Set nRow = -1
.head 7 +  While SalTblFindNextRow( tblCommunePCT, nRow, 0, 0 )
.head 8 -  Call SalTblSetContext( tblCommunePCT, nRow)
.head 8 -  Call SalTblSetFocusRow( tblCommunePCT, nRow)
.head 8 +  If tblCommunePCT.colIns = SalStrToNumber(sInsCom)
.head 9 -  Set bOk2 = TRUE
.head 9 -  Call SalTblSetRowFlags( tblCommunePCT, nRow, ROW_Selected, TRUE )
.head 9 -  Call SalListSetSelect( cmbCommunePCT, nRowActu )
.head 9 -  Call SalSendMsg( tblCommunePCT, SAM_Click, -2,0)
.head 9 -  Break
.head 7 -  Break
.head 5 +  If NOT bOk
.head 6 -  Call SalTblSetContext( tblCantonPCT, 0)
.head 6 -  Call SalTblSetFocusRow( tblCantonPCT, 0)
.head 6 -  Call SalTblSetRowFlags( tblCantonPCT, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblCantonPCT, SAM_Click, -1,0)
.head 5 +  If NOT bOk2
.head 6 -  Call SalTblSetContext( tblCommunePCT, 0)
.head 6 -  Call SalTblSetFocusRow( tblCommunePCT, 0)
.head 6 -  Call SalTblSetRowFlags( tblCommunePCT, 0, ROW_Selected, TRUE )
.head 6 -  Call SalSendMsg( tblCommunePCT, SAM_Click, -2,0)
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalLiberePCT
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sNN
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsTrace
.head 4 +  Actions
.head 5 +  If SalTblAnyRows( tblPcTot , ROW_Selected, 0) and SalStrLeftX( tblPcTot.colStatut, 4) = 'PREP' and wnTabActif = 2
.head 6 +  If wsScrutinEl = '1'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_Tot
	set pct_statut = 'ERR. Time Out'
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTot.colNoPCT  and PCT_Type = 'COM'  ")
.head 6 +  Else If wsScrutinEl = '2'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_Tot
	set pct_statut = 'ERR. Time Out'
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTot.colNoPCT  ")
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 -  ! Trace
.head 6 +  If sNN != ''
.head 7 -  Set sNN = '- EID: ' || sNN ||'  '
.head 6 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommunePCT.colIns,0) ||'   -   BV N°' || SalNumberToStrX(tblPcTot.colNoPCT,0) || '   ' || sNN ||'-->   '
.head 6 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Time Out')
.head 6 -  !
.head 6 -  Call SalSendMsg( tblPcTot, SAM_Click, 0,0)
.head 5 +  Else If SalTblAnyRows( tblPcTotProv , ROW_Selected, 0) and SalStrLeftX( tblPcTotProv.colStatut, 4) = 'PREP' and wnTabActif = 2
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_Tot
	set pct_statut = 'ERR. Time Out'
	where com_ins = :tblCommunePCT.colIns and pct_no = :tblPcTotProv.colNoPCT  and PCT_Type = 'CAN'  ")
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 -  ! Trace
.head 6 +  If sNN != ''
.head 7 -  Set sNN = '- EID: ' || sNN ||'  '
.head 6 -  Set lsTrace = "INS: " || SalNumberToStrX( tblCommunePCT.colIns,0) ||'   -   BV N°' || SalNumberToStrX(tblPcTotProv.colNoPCT,0) || '   ' || sNN ||'-->   '
.head 6 -  Call PalTraceAction( gsUserLog, "DISK BV", lsTrace || 'Time Out')
.head 6 -  !
.head 6 -  Call SalSendMsg( tblPcTotProv, SAM_Click, 0,0)
.head 3 -  ! Utilitaires
.head 3 +  Function: PalIdentificationDisk
.head 4 -  Description: Identification des disquettes présentes dans les lecteurs 1, 2 et/ou 3
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Boolean: bContinue[5]
.head 5 -  Boolean: bIdLecteur[5]
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  Number: nFile
.head 5 -  Number: nFile2
.head 5 -  Number: nLigne
.head 5 -  Number: nTotalSpace
.head 5 -  Number: nFreeSpace
.head 5 -  Number: nFreeSpaceD[5]
.head 5 -  Number: nFreeSpaceMin
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsArrayFileFixe[*]
.head 5 -  String: lsArrayFileFixe2[*]
.head 5 -  String: lsLabel[5]
.head 5 -  String: lsType[5]
.head 5 -  String: lsPassWord[5]
.head 5 -  Number: lnNoDisk[5]
.head 5 -  String: sTypePcTot[5]
.head 5 -  String: sNoPcTot[5]
.head 5 -  String: sIns[5]
.head 5 -  String: sBureau[5]
.head 5 -  String: lsFile
.head 5 -  String: sBuffer
.head 5 -  Long String: llsTmp
.head 5 -  String: lsTmp
.head 5 -  String: lsArron
.head 5 -  String: lsCanton
.head 5 -  String: lsBureau
.head 5 -  String: lsDateEl
.head 5 -  String: lsDesc
.head 5 -  String: lsDiskIdentif
.head 5 -  String: lsTypeDisk[5]
.head 5 -  String: lsAdr
.head 5 -  String: lsLoc
.head 5 -  String: lsInsCom
.head 5 -  String: lsCP
.head 5 -  String: lsPres
.head 5 -  String: lsCommune
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsComIns
.head 5 -  String: lsTypePcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRepEl
.head 5 -  String: lsPath
.head 5 -  Number: nRet
.head 5 -  Long String: lsTrace[5]
.head 5 -  Number: nFileFixe
.head 5 -  String: lsTypeVote
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call SalDisableWindow( hWndForm)
.head 5 -  Call SalPicClear( picDisk1 )
.head 5 -  Call SalPicClear( picDisk2 )
.head 5 -  Call SalPicClear( picDisk3 )
.head 5 -  Call SalPicClear( picDisk4 )
.head 5 -  Call SalShowWindow( dfLibelleInfo )
.head 5 -  Set dfLibelleInfo = PalTraductMsg('IDENTIFICATION')
.head 5 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 5 -  Call SalGetProfileString( 'UNITE', 'FREE_MIN','300000', lsTmp , gsIniFilePathAndName )
.head 5 -  Set nFreeSpaceMin = SalStrToNumber( lsTmp )
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur
.head 6 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Maize	 )
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), '' )
.head 6 -  Set bContinue[i] =TRUE
.head 6 -  Set i  = i + 1
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur
.head 6 -  Set llsTmp = VisDosGetVolumeLabel( gsLecteur[i] )
.head 6 +  If llsTmp != ''
.head 7 -  Set lsLabel[i] = llsTmp
.head 7 -  ! Trace
.head 7 -  Set lsTrace[i] =  gsLecteur[i] ||' ' || lsLabel[i] 
.head 7 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] )
.head 7 -  Set lsTrace[i] =  lsTrace[i] || '   -   ' 
.head 7 -  !
.head 7 +  If SalStrLeftX( lsLabel[i], 7) = 'LECTEUR'
.head 8 -  Set bIdLecteur[i] = TRUE
.head 7 +  Else
.head 8 -  Set bIdLecteur[i] = FALSE
.head 7 -  !
.head 6 -  Set i  = i + 1
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call DispatchMessage(  )
.head 5 -  ! Vérification présence d'une disquette
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i]
.head 7 +  If VisDosGetDriveSize ( gsLecteur[i] , nTotalSpace, nFreeSpace) != VTERR_Ok
.head 8 -  Set bContinue[i] = FALSE
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('NO_DISK')
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Maize )
.head 7 +  Else
.head 8 -  Set nFreeSpaceD[i] = nFreeSpace
.head 6 -  Set i  = i + 1
.head 5 -  ! Vérification si disquette système + comparaison avec système cfg
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i] and Not bIdLecteur[i]
.head 7 +  If Not SalFileOpen ( hFile , gsLecteur[i]||'\\COMMAND.COM', OF_Exist )
.head 8 -  Set bContinue[i] = FALSE
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('NO_DISK_SYS')||'
' || PalTraductMsg ('ERR')
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('NO_DISK_SYS')  )
.head 8 -  !
.head 6 -  Set i  = i + 1
.head 5 -  ! Identification disquette BV ou TOT ou MasterBV ou Id Lecteur
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i]
.head 7 +  If SalFileOpen ( hFile , gsLecteur[i]||'\\MACHVOTS.TBL', OF_Exist )
.head 8 -  ! Disquette BV
.head 8 -  Set lsTypeDisk[i] = 'BV'
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_BV') || ': ' || lsLabel[i]
.head 8 -  Set lnNoDisk[i] = SalStrToNumber( SalStrRightX( lsLabel[i],1) )
.head 8 +  If SalFileOpen( hFile, gsLecteur[i]||'\\' || SalStrRightX( lsLabel[i] , 1) ||'.DSK', OF_Read | OF_Text )
.head 9 -  Call SalFileGetStr( hFile, sBuffer, 200 )
.head 9 +  If SalStrLeftX( sBuffer, 1)  = SalStrRightX( lsLabel[i] , 1)
.head 10 -  Set sBuffer = PalTraductMsg ('BV_C') || ' ' || SalStrMidX( sBuffer,1, 2) || ' - ' || dateStr_transforme( SalStrRightX( sBuffer,8) , '/' )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  sBuffer
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  ! Vérification de l'espace disque disponible
.head 8 +  If nFreeSpaceD[i]  < nFreeSpaceMin
.head 9 -  Set bContinue[i] = FALSE
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('FREE_MIN')||'
' || PalTraductMsg ('ERR')
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('FREE_MIN')  )
.head 9 -  !
.head 8 +  Else
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('FREE')||' : ' || SalNumberToStrX( nFreeSpaceD[i]  / 1000 , 0) || ' Ko'
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  !
.head 8 -  ! Couleur de la disquette
.head 8 -  Call PalDtmCouleurDisk( lsTypeDisk[i],  lnNoDisk[i] , whDisk[i] )
.head 8 -  !
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Vérification de la présence de tous les fichiers importants
.head 8 -  Set nFileFixe = 0
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'BV_CFG' and type_el = '1'
	Into :lsArrayFileFixe[nFileFixe] ")
.head 8 +  Else If wsScrutinEl = '2'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'BV_CFG' and type_el = '2'
	Into :lsArrayFileFixe[nFileFixe] ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 9 -  Set lsArrayFileFixe[nFileFixe] = VisStrSubstitute(  lsArrayFileFixe[nFileFixe] , gsPathBV_Cfg , '')
.head 9 -  Set nFileFixe = nFileFixe + 1
.head 8 -  ! Set nFileFixe = VisDosEnumFiles( gsPathBV_Cfg ||'*.*', FA_Standard, lsArrayFileFixe )
.head 8 -  Set nFile= 0
.head 8 +  While nFile < nFileFixe
.head 9 -  Set lsArrayFile[nFile] =  lsArrayFileFixe[nFile]
.head 9 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'MACHVOTS.TBL'
.head 8 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'MACHVOTL.TBL'
.head 8 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'MACHVOTC.TBL'
.head 8 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'MACHVOTS.IND'
.head 8 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'URNE.TBL'
.head 8 -  Set nFile= nFile +1
.head 8 -  Set lsArrayFile[nFile] =  'URNE.IND'
.head 8 -  Set nFile= nFile +1
.head 8 +  If bContinue[i]
.head 9 -  Set j = 0
.head 9 +  While j < nFile and bContinue[i]
.head 10 +  If Not SalFileOpen ( hFile , gsLecteur[i]||'\\'|| lsArrayFile[j] , OF_Exist )
.head 11 -  Set bContinue[i] = FALSE
.head 11 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 11 +  If llsTmp != ''
.head 12 -  Set llsTmp = llsTmp || '
'
.head 11 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR1') || ' --> ' || lsArrayFile[j]||'
' || PalTraductMsg ('ERR')
.head 11 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 11 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('ERR1') ||' --> ' || lsArrayFile[j]  )
.head 11 -  !
.head 11 -  Break
.head 10 -  Set j = j + 1
.head 8 -  Call DispatchMessage(  )
.head 8 +  If bContinue[i]
.head 9 +  If Not SalFileOpen ( hFile , gsLecteur[i]||'\\MachVotS.Ind' , OF_Read | OF_Text )
.head 10 -  Set bContinue[i] = FALSE
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR2') || ' --> MachVotS.Ind 
' || PalTraductMsg ('ERR')
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('ERR2')  || ' --> MachVotS.Ind'  )
.head 10 -  !
.head 9 +  Else
.head 10 -  Call SalFileGetStr( hFile, sBuffer, 250 )
.head 10 -  Set lsArron = SalStrLeftX( sBuffer,3)
.head 10 -  Set lsCanton = SalStrMidX( sBuffer, 3,3)
.head 10 -  Set lsInsCom = SalStrRightX( sBuffer, 5)
.head 10 -  Set lsBureau = SalNumberToStrX( SalStrToNumber(SalStrMidX( sBuffer, 6,3)), 0)
.head 10 -  Set lsDateEl = SalStrMidX( sBuffer, 9,6)
.head 10 -  Set lsDateEl = date_transforme( '20' || SalStrRightX(lsDateEl, 2) || SalStrMidX( lsDateEl,2,2) || SalStrLeftX( lsDateEl,2), '/')
.head 10 -  Call SalFileClose( hFile )
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DATEEL') || ' :' || lsDateEl
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  !
.head 10 -  ! Call SqlPrepareAndExecute( ghSqlMain, "select bv_description, bv_adresse, bv_localite, bv_code_postal, bv_president , @trim(nom_f||' ' || nom_n) , bv_codebak
	 from bur_vote A, base_commune B 
	where Type = 'GE' and a.com_ins=B.com_ins and no_arrond = :lsArron and no_canton = :lsCanton and bv_no = :lsBureau 
	Into :lsDesc, :lsAdr, :lsLoc, :lsCP, :lsPres, :lsCommune, :lsPW " )
.head 10 -  Call SqlPrepareAndExecute( ghSqlMain, "select bv_description, bv_adresse, bv_localite, bv_code_postal, bv_president , @trim(nom_f||' ' || nom_n) , bv_codebak, bv_identif
	 from bur_vote A, base_commune B 
	where Type = 'GE' and a.com_ins=B.com_ins and A.com_ins = :lsInsCom and bv_no = :lsBureau 
	Into :lsDesc, :lsAdr, :lsLoc, :lsCP, :lsPres, :lsCommune, :lsPW, :lsDiskIdentif " )
.head 10 +  If SqlFetchNext( ghSqlMain, Btmp) 
.head 11 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 11 +  If llsTmp != ''
.head 12 -  Set llsTmp = llsTmp || '
'
.head 11 -  Set llsTmp = llsTmp || '
' || PalTraductMsg ('BUREAU') || ' ' || lsBureau ||'

' || lsDesc ||'
' || lsAdr ||'
' || lsCP || ' ' || lsLoc ||'
' || PalTraductMsg ('PRESIDENT') ||': ' || lsPres ||'
' || PalTraductMsg ('COM') ||': ' || lsCommune ||'
'
.head 11 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 11 -  Set lsType[i] = '9'
.head 11 -  Set lsPassWord[i] = lsPW
.head 10 +  Else
.head 11 -  Set bContinue[i] = FALSE
.head 11 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 11 +  If llsTmp != ''
.head 12 -  Set llsTmp = llsTmp || '
'
.head 11 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR3') || ' --> ' || lsArron ||' ' || lsCanton || ' ' || lsBureau || '
' || PalTraductMsg ('ERR')
.head 11 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 11 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp )
.head 11 -  !
.head 10 -  !
.head 10 +  If bContinue[i]
.head 11 -  Set sBureau[i] = lsBureau
.head 11 -  Set sIns[i] = lsInsCom
.head 8 -  Call DispatchMessage(  )
.head 7 +  Else If SalFileOpen ( hFile , gsLecteur[i]||'\\ELECT.DBF', OF_Exist )
.head 8 -  ! Disquette TOT
.head 8 -  Set lsTypeDisk[i] = 'PCT'
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_TOT') ||': ' || lsLabel[i]
.head 8 -  Set lnNoDisk[i] = SalStrToNumber( SalStrRightX( lsLabel[i],1) )
.head 8 -  !
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 +  If SalFileOpen ( hFile , gsLecteur[i]||'\\SCSIDRVR.SYS', OF_Exist )
.head 9 -  Set llsTmp = llsTmp ||  'Type : DIGIVOTE'
.head 9 -  Set lsTypeVote = 'D'
.head 8 +  Else
.head 9 -  Set llsTmp = llsTmp ||  'Type : JITES'
.head 9 -  Set lsTypeVote = 'J'
.head 8 -  !
.head 8 -  ! Couleur de la disquette
.head 8 -  Call PalDtmCouleurDisk(lsTypeDisk[i] , lnNoDisk[i] , whDisk[i] )
.head 8 -  !
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 +  If SalFileOpen ( hFile , gsLecteur[i]||'\\COMM.PC', OF_Exist )
.head 9 +  If gsLangueSoft= 'N'
.head 10 -  Set llsTmp = llsTmp ||  'Tot Pc Type: GEMEENTE'
.head 9 +  Else
.head 10 -  Set llsTmp = llsTmp ||  'Type Pc Tot: COMMUNE'
.head 9 -  Set lsTypePcTot = 'COM'
.head 8 +  Else If SalFileOpen ( hFile , gsLecteur[i]||'\\PROV.PC', OF_Exist )
.head 9 +  If gsLangueSoft= 'N'
.head 10 -  Set llsTmp = llsTmp ||  'Tot Pc Type: KANTON'
.head 9 +  Else
.head 10 -  Set llsTmp = llsTmp ||  'Type Pc Tot: CANTON'
.head 9 -  Set lsTypePcTot = 'CAN'
.head 8 +  Else If SalFileOpen ( hFile , gsLecteur[i]||'\\CANTON.PC', OF_Exist )
.head 9 +  If gsLangueSoft= 'N'
.head 10 -  Set llsTmp = llsTmp ||  'Tot Pc Type: KANTON'
.head 9 +  Else
.head 10 -  Set llsTmp = llsTmp ||  'Type Pc Tot: CANTON'
.head 9 -  Set lsTypePcTot = 'CAN'
.head 8 +  Else
.head 9 -  ! Pas de fichier .PC correspondant
.head 9 -  Set bContinue[i] = FALSE
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR2') || ' : ' || gsLecteur[i]||'\\COMM.PC -  ' || gsLecteur[i]||'\\PROV.PC 
' || PalTraductMsg ('ERR')
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 9 -  !
.head 8 -  !
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call DispatchMessage(  )
.head 8 +  If SalFileOpen ( hFile , gsLecteur[i]||'\\PCT' || SalStrRightX(lsLabel[i],1) ||'.DSK', OF_Exist )
.head 9 +  If SalFileOpen ( hFile , gsLecteur[i]||'\\PCT' || SalStrRightX(lsLabel[i],1) || '.DSK', OF_Read | OF_Text )
.head 10 -  Call SalFileGetStr( hFile, lsDateEl, 10)
.head 10 -  Call SalFileGetStr( hFile, lsNoPcTot, 10)
.head 10 -  Call SalFileGetStr( hFile, lsComIns, 10)
.head 10 -  Call SalFileGetStr( hFile, sBuffer, 200 )
.head 10 -  Set sBuffer = PalTraductMsg ('BV_C') || ' ' || SalStrLeftX( sBuffer, 2) || ' - ' || dateStr_transforme( SalStrRightX( sBuffer,8) , '/' )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  sBuffer
.head 10 -  !
.head 10 +  If SalStrTrimX(lsComIns) = '' or SalStrTrimX(lsNoPcTot) = '' or SalStrTrimX(lsDateEl) = ''
.head 11 -  ! Disquette inconnue ou incomplete
.head 11 -  Set bContinue[i] = FALSE
.head 11 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 11 +  If llsTmp != ''
.head 12 -  Set llsTmp = llsTmp || '
'
.head 11 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_INC') || '
' || PalTraductMsg ('ERR')
.head 11 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 11 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp )
.head 11 -  !
.head 10 +  Else
.head 11 -  ! Vérification de la présence de tous les fichiers importants
.head 11 -  Set lsRepEl = SalStrRightX( lsDateEl, 6)
.head 11 +  If wsScrutinEl = '1'
.head 12 +  If lsTypeVote = 'D'
.head 13 -  ! Set nFileFixe = VisDosEnumFiles( gsPathPcTot_Cfg ||'*.*', FA_Standard, lsArrayFileFixe )
.head 13 -  Set nFileFixe = 0
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'PCTOT_CFG'   and type_el = '1'
	Into :lsArrayFileFixe[nFileFixe] ")
.head 13 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 14 -  Set lsArrayFileFixe[nFileFixe] = VisStrSubstitute(  lsArrayFileFixe[nFileFixe] , gsPathPcTot_Cfg , '')
.head 14 -  Set nFileFixe = nFileFixe + 1
.head 12 +  Else If lsTypeVote = 'J'
.head 13 -  ! Set nFileFixe = VisDosEnumFiles( gsPathPcTot_Cfg_Jites ||'*.*', FA_Standard, lsArrayFileFixe )
.head 13 -  Set nFileFixe = 0
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'PCTOT_CFG_JITES'   and type_el = '1'
	Into :lsArrayFileFixe[nFileFixe] ")
.head 13 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 14 -  Set lsArrayFileFixe[nFileFixe] = VisStrSubstitute(  lsArrayFileFixe[nFileFixe] , gsPathPcTot_Cfg_Jites , '')
.head 14 -  Set nFileFixe = nFileFixe + 1
.head 11 +  Else If wsScrutinEl = '2'
.head 12 -  Set nFileFixe = 0
.head 12 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'PCTOT_CFG_JITES'  and type_el = '2'
	Into :lsArrayFileFixe[nFileFixe] ")
.head 12 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 13 -  Set lsArrayFileFixe[nFileFixe] = VisStrSubstitute(  lsArrayFileFixe[nFileFixe] , gsPathPcTot_Cfg_Jites , '')
.head 13 -  Set nFileFixe = nFileFixe + 1
.head 11 -  Set nFile= 0
.head 11 +  While nFile < nFileFixe
.head 12 -  Set lsArrayFile[nFile] =  lsArrayFileFixe[nFile]
.head 12 -  Set nFile= nFile +1
.head 11 +  ! If lsTypeVote = 'D'
.head 12 -  Set nFileFixe = VisDosEnumFiles( gsPathPcTot_CfgStru ||'*.*', FA_Standard, lsArrayFileFixe2 )
.head 11 +  ! Else If lsTypeVote = 'J'
.head 12 -  Set nFileFixe = VisDosEnumFiles( gsPathPcTot_CfgStru_Jites ||'*.*', FA_Standard, lsArrayFileFixe2 )
.head 11 -  ! Set nFile2= 0
.head 11 +  ! While nFile2 < nFileFixe
.head 12 +  If lsTypeVote = 'D'
.head 13 -  Set lsArrayFile[nFile] =  VisStrSubstitute( gsPathPcTot_CfgStru, gsPathPcTot_Cfg ,'') || lsArrayFileFixe2[nFile2]
.head 12 +  Else If lsTypeVote = 'J'
.head 13 -  Set lsArrayFile[nFile] =  VisStrSubstitute( gsPathPcTot_CfgStru_Jites , gsPathPcTot_Cfg_Jites ,'') || lsArrayFileFixe2[nFile2]
.head 12 -  Set nFile= nFile +1
.head 12 -  Set nFile2= nFile2 +1
.head 11 -  Set lsArrayFile[nFile] =  'EL' || lsRepEl || '\\SC' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile + 1
.head 11 -  Set lsArrayFile[nFile] =  'EL' || lsRepEl || '\\PA' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile +1
.head 11 -  Set lsArrayFile[nFile] =   'EL' || lsRepEl || '\\RV' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile +1
.head 11 -  Set lsArrayFile[nFile] =   'EL' || lsRepEl || '\\BV' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile +1
.head 11 -  Set lsArrayFile[nFile] =  'EL' || lsRepEl || '\\LI' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile +1
.head 11 -  Set lsArrayFile[nFile] =   'EL' || lsRepEl || '\\CD' || lsRepEl ||'.DBF'
.head 11 -  Set nFile= nFile +1
.head 11 -  Call DispatchMessage(  )
.head 11 +  If bContinue[i]
.head 12 -  Set j = 0
.head 12 +  While j < nFile and bContinue[i]
.head 13 +  If Not SalFileOpen ( hFile , gsLecteur[i]||'\\'|| lsArrayFile[j] , OF_Exist )
.head 14 -  Set bContinue[i] = FALSE
.head 14 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 14 +  If llsTmp != ''
.head 15 -  Set llsTmp = llsTmp || '
'
.head 14 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR1') || ' --> ' || lsArrayFile[j]||'
' || PalTraductMsg ('ERR')
.head 14 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 14 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 14 -  !
.head 14 -  Break
.head 13 -  Set j = j + 1
.head 11 -  Call DispatchMessage(  )
.head 11 +  If bContinue[i]
.head 12 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 12 +  If llsTmp != ''
.head 13 -  Set llsTmp = llsTmp || '
'
.head 12 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DATEEL') || ' :' || date_transforme(lsDateEl,'/')
.head 12 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 12 -  !
.head 12 +  If wsScrutinEl = '1'
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "select pct_adresse, pct_localite, pct_code_postal, pct_president, @trim(Nom_n || ' ' || Nom_f ), pct_codebak,Pct_identif
	 from Pc_Tot A, base_commune B 
	where Type = 'GE' and a.com_ins=B.com_ins and pct_no = :lsNoPcTot and A.Com_ins = :lsComIns and pct_type = :lsTypePcTot
	Into  :lsAdr, :lsLoc, :lsCP, :lsPres, :lsCommune, :lsPW, :lsDiskIdentif" )
.head 12 +  Else If wsScrutinEl = '2'
.head 13 -  Call SqlPrepareAndExecute( ghSqlMain, "select pct_adresse, pct_localite, pct_code_postal, pct_president, @trim(Nom_n || ' ' || Nom_f ), pct_codebak,Pct_identif
	 from Pc_Tot A, base_commune B 
	where Type = 'CA' and a.can_ins=B.can_ins and pct_no = :lsNoPcTot and A.Com_ins = :lsComIns
	Into  :lsAdr, :lsLoc, :lsCP, :lsPres, :lsCommune, :lsPW, :lsDiskIdentif " )
.head 12 +  If SqlFetchNext( ghSqlMain, Btmp) 
.head 13 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 13 +  If llsTmp != ''
.head 14 -  Set llsTmp = llsTmp || '
'
.head 13 -  Set llsTmp = llsTmp || '
' || PalTraductMsg ('PCTOT') || ' ' || lsNoPcTot ||'

' || lsAdr ||'
' || lsCP || ' ' || lsLoc ||'
' || PalTraductMsg ('PRESIDENT') ||': ' || lsPres ||'
' || PalTraductMsg ('COM') ||': ' || lsCommune ||'
'
.head 13 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 13 -  Set lsType[i] = '1'
.head 13 -  Set lsPassWord[i] = lsPW
.head 12 +  Else
.head 13 -  Set bContinue[i] = FALSE
.head 13 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 13 +  If llsTmp != ''
.head 14 -  Set llsTmp = llsTmp || '
'
.head 13 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR3') || ' --> ' || lsArron ||' ' || lsCanton || ' ' || lsBureau || '
' || PalTraductMsg ('ERR')
.head 13 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 13 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 13 -  ! Trace
.head 13 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 13 -  !
.head 9 +  Else
.head 10 -  ! Impossible d'ouvrir PCTx.DSK
.head 10 -  Set bContinue[i] = FALSE
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR2') || ' : ' || gsLecteur[i]||'\\PCT' || SalStrRightX(lsLabel[i],1) || '.DSK 
' || PalTraductMsg ('ERR')
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 10 -  !
.head 8 +  Else
.head 9 -  ! Disquette inconnue ou incomplete
.head 9 -  Set bContinue[i] = FALSE
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_INC') || '
' || PalTraductMsg ('ERR')
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 9 -  !
.head 8 -  !
.head 8 +  If bContinue[i]
.head 9 -  Set sNoPcTot[i] = lsNoPcTot
.head 9 -  Set sTypePcTot[i] = lsTypePcTot
.head 9 -  Set sIns[i] = lsComIns
.head 7 +  Else If lsLabel[i] = 'MASTER_BV'
.head 8 -  ! Disquette Master
.head 8 -  Set lsTypeDisk[i] = 'BVM'
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_MASTER') ||'
' || lsLabel[i]
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Vérification de l'espace disque disponible
.head 8 +  If nFreeSpaceD[i]  < nFreeSpaceMin
.head 9 -  Set bContinue[i] = FALSE
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('FREE_MIN')||'
' || PalTraductMsg ('ERR')
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('FREE_MIN')  )
.head 9 -  !
.head 8 +  Else
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('FREE')||' : ' || SalNumberToStrX( nFreeSpaceD[i]  / 1000 , 0) || ' Ko'
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  !
.head 8 -  Call DispatchMessage(  )
.head 8 -  ! Vérification de la présence de tous les fichiers importants
.head 8 -  Set nFile = 0
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'BV_CFG' and type_el = '1'
	Into :lsArrayFile[nFile] ")
.head 8 +  Else If wsScrutinEl = '2'
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = 'BV_CFG' and type_el = '2'
	Into :lsArrayFile[nFile] ")
.head 8 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 9 -  Set lsArrayFile[nFile] = VisStrSubstitute(  lsArrayFile[nFile] , gsPathBV_Cfg , '')
.head 9 -  Set nFile = nFile + 1
.head 8 -  ! Set nFile = VisDosEnumFiles( gsPathBV_Cfg ||'*.* ' , FA_Standard , lsArrayFile )
.head 8 +  If bContinue[i]
.head 9 -  Set j = 0
.head 9 +  While j < nFile and bContinue[i]
.head 10 +  If Not SalFileOpen ( hFile , gsLecteur[i]||'\\'|| lsArrayFile[j] , OF_Exist )
.head 11 -  Set bContinue[i] = FALSE
.head 11 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 11 +  If llsTmp != ''
.head 12 -  Set llsTmp = llsTmp || '
'
.head 11 -  Set llsTmp = llsTmp ||  PalTraductMsg ('ERR1') || ' --> ' || lsArrayFile[j]||'
' || PalTraductMsg ('ERR')
.head 11 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 11 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' ||PalTraductMsg ('ERR1') ||' --> ' || lsArrayFile[j]  )
.head 11 -  !
.head 11 -  Break
.head 10 -  Set j = j + 1
.head 9 +  If bContinue[i]
.head 10 -  Set lsType[i] = '3'
.head 10 -  Set lsPassWord[i] = 'Master'
.head 8 -  Call DispatchMessage(  )
.head 7 +  Else If SalStrLeftX(lsLabel[i],7) = 'LECTEUR'
.head 8 -  ! Disquette Id lecteur
.head 8 -  Set lsTypeDisk[i] = 'ID'
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set lsLabel[i] = VisStrSubstitute( lsLabel[i] , 'LECTEUR', 'LEZER') 
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_ID') ||'
' || lsLabel[i]
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call DispatchMessage(  )
.head 8 +  If bContinue[i]
.head 9 -  Set lsType[i] = '3'
.head 9 -  Set lsPassWord[i] = 'Master'
.head 7 +  Else
.head 8 -  ! Disquette inconnue ou incomplete
.head 8 -  Set lsTypeDisk[i] = ''
.head 8 -  Set bContinue[i] = FALSE
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('DISK_INC') || '
' || PalTraductMsg ('ERR')
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp )
.head 8 -  !
.head 6 -  Set i  = i + 1
.head 6 -  Call DispatchMessage(  )
.head 5 -  ! Vérification de la signature
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i] 
.head 7 +  If lsType[i] != '' and lsPassWord[i] != ''
.head 8 +  If lsType[i] != '3'
.head 9 -  Set lsFile = gsPathTemp ||'SIG_' || SalNumberToStrX( i, 0) ||'.TXT'
.head 9 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('SIGN')
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalFileOpen(hFile,  gsLecteur[i] ||'\\LOG.ERR', OF_Delete)
.head 9 -  Set sBuffer  = gsPathRijndael || 'RIJNDAEL R '|| lsType[i] ||' ' || lsPassWord[i] ||' ' || gsLecteur[i]  || ' ' || gsLecteur[i]  || ' ' || gsLecteur[i] ||'
Dir ' || gsLecteur[i]  || '\\Be*.* > ' || gsPathTemp ||'SIG_' || SalNumberToStrX( i, 0) ||'.TXT'
.head 9 -  Set lsFile = gsPathTemp ||"COPY" || SalNumberToStrX( i, 0)  || ".BAT"
.head 9 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 9 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Call SalFileWrite( hFile, sBuffer , SalStrLength( sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 9 -  Call ShellExecute( hWndForm, '', lsFile , '' ,''  , SW_HIDE  )
.head 7 +  Else
.head 8 -  Set bContinue[i] = FALSE
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  PalTraductMsg ('SIGN_ERR') || '
' || PalTraductMsg ('ERR')
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 8 -  !
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i  = i + 1
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i] 
.head 7 +  If lsType[i] != '3'
.head 8 -  Set j = 1
.head 8 +  While Not SalFileOpen( hFile, gsPathTemp ||'SIG_' || SalNumberToStrX( i, 0)  ||'.TXT', OF_Exist ) and j <= 30
.head 9 -  Call SalPause( 1000 + gnPauseCopie )
.head 9 -  Set j = j + 1
.head 9 +  If Not SalFileOpen(  hFile, gsLecteur[i]  ||'\\COMMAND.COM', OF_Exist )
.head 10 -  Set bContinue[i] = FALSE
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('NO_DISK') || '
' || PalTraductMsg ('ERR') ||' - No COMMAND.COM'
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 10 -  Break
.head 8 +  If j >= 30 or SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 9 -  Set bContinue[i] = FALSE
.head 9 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 9 +  If llsTmp != ''
.head 10 -  Set llsTmp = llsTmp || '
'
.head 9 -  Set llsTmp = llsTmp ||  PalTraductMsg ('SIGN_ERR') || '
' || PalTraductMsg ('ERR') ||' - Niv 1'
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 9 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 8 +  If bContinue[i] = TRUE
.head 9 +  If SalFileOpen( hFile, gsLecteur[i]  ||'\\LOG.ERR', OF_Exist )
.head 10 -  Set bContinue[i] = FALSE
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('SIGN_ERR') || '
' || PalTraductMsg ('ERR')||' - Niv 2'
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i] || 'ERR. : ' || llsTmp  )
.head 9 +  Else
.head 10 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 10 +  If llsTmp != ''
.head 11 -  Set llsTmp = llsTmp || '
'
.head 10 -  Set llsTmp = llsTmp ||  PalTraductMsg ('OK')
.head 10 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 10 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Green )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i]  || llsTmp  )
.head 8 -  Set lsFile = gsPathTemp ||'SIG_' || SalNumberToStrX( i, 0) ||'.TXT'
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 8 -  Set lsFile = gsPathTemp ||'COPY' || SalNumberToStrX( i, 0) ||'.BAT'
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 +  Else
.head 8 -  Call SalGetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp, 500 )
.head 8 +  If llsTmp != ''
.head 9 -  Set llsTmp = llsTmp || '
'
.head 8 -  Set llsTmp = llsTmp ||  '
' || PalTraductMsg ('OK')
.head 8 -  Call SalSetWindowText( SalNumberToWindowHandle( wnMlDisk[i] ), llsTmp )
.head 8 -  Call SalColorSet( SalNumberToWindowHandle( wnMlDisk[i] ), COLOR_IndexWindow, COLOR_Green )
.head 8 -  ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IDENTIF", lsTrace[i]  || llsTmp  )
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i  = i + 1
.head 5 -  !
.head 5 -  ! Update Controle Ok et réalisé
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur 
.head 6 +  If bContinue[i] 
.head 7 +  If lsTypeDisk[i] = 'BV'
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select Bv_identif
	 from Bur_vote 
	where bv_no = :sBureau[i] and Com_ins = :sIns[i]
	Into  :lsDiskIdentif " )
.head 8 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 9 +  If lsDiskIdentif = ''
.head 10 -  Set j = 1
.head 10 +  While j <= gnNbDiskBV
.head 11 +  If lsDiskIdentif != ''
.head 12 -  Set lsDiskIdentif = lsDiskIdentif  || '|'
.head 11 -  Set lsDiskIdentif = lsDiskIdentif  || '0'
.head 11 -  Set j = j + 1
.head 9 -  Set lsDiskIdentif = SalStrReplaceX( lsDiskIdentif, ( lnNoDisk[i]-1) * 2 , 1, '1' )
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Bur_vote
	Set bv_identif = :lsDiskIdentif
	where bv_no = :sBureau[i] and Com_ins = :sIns[i] " )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 7 +  If lsTypeDisk[i] = 'PCT'
.head 8 +  If wsScrutinEl = '1'
.head 9 -  Set lsTmp = ' and pct_type = :sTypePcTot[i] '
.head 8 +  Else
.head 9 -  Set lsTmp = ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "select Pct_identif
	 from Pc_Tot 
	where pct_no = :sNoPcTot[i] and Com_ins = :sIns[i] "|| lsTmp ||"
	Into  :lsDiskIdentif " )
.head 8 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 9 +  If lsDiskIdentif = ''
.head 10 -  Set j = 1
.head 10 +  While j <= gnNbDiskPCT
.head 11 +  If lsDiskIdentif != ''
.head 12 -  Set lsDiskIdentif = lsDiskIdentif  || '|'
.head 11 -  Set lsDiskIdentif = lsDiskIdentif  || '0'
.head 11 -  Set j = j + 1
.head 9 -  Set lsDiskIdentif = SalStrReplaceX( lsDiskIdentif, ( lnNoDisk[i]-1) * 2 , 1, '1' )
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Pc_Tot 
	Set pct_identif = :lsDiskIdentif
	where pct_no = :sNoPcTot[i] and Com_ins = :lsComIns  "|| lsTmp  )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i  = i + 1
.head 5 -  !
.head 5 -  Call SalHideWindow( dfLibelleInfo )
.head 5 -  Call SalEnableWindow( hWndForm)
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Call VisWaitCursor(FALSE)
.head 3 +  Function: PalCreationEtiquetteMaster
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  String: lsNoBV
.head 5 -  String: lsNomBV
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Set sBuffer = "{Election}|{Date_El}|{Desc}|{Version}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "MASTER DISKETTE  SYSTEEM DOS 6.20|" || VERSION
.head 6 +  Else
.head 7 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "DISQUETTE MASTER  SYSTEME DOS 6.20|" || VERSION
.head 6 -  Set sBuffer = sBuffer ||"
"
.head 6 -  Set nEtiq = nEtiq + 1
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Set lsFile1 =  gsPathRpt || 'ETIQ_MASTER.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQ_MASTER.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTER.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTER.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTER.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTER.Doc'
.head 6 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalCreationEtiquetteMasterBV
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  String: lsNoBV
.head 5 -  String: lsNomBV
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Set sBuffer = "{Election}|{Date_El}|{Desc}|{Version}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "MASTER DISKETTE  STEMBUREAUS|" || VERSION
.head 6 +  Else
.head 7 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "DISQUETTE MASTER  BUREAUX DE VOTE|" || VERSION
.head 6 -  Set sBuffer = sBuffer ||"
"
.head 6 -  Set nEtiq = nEtiq + 1
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Set lsFile1 =  gsPathRpt || 'ETIQ_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQ_MASTERBV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTERBV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTERBV.Doc'
.head 6 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalGenereIdentifDisk
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Boolean: bImprime
.head 5 -  Number: nFile
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsFile
.head 5 -  File Handle: hFile
.head 5 -  Number: i
.head 5 -  Number: j
.head 5 -  Number: nTot
.head 5 -  Number: nFree
.head 5 -  String: lsLabel
.head 4 +  Actions
.head 5 -  Set bImprime  = TRUE
.head 5 +  If gsLecteur[1] = ''
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT04') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 6 -  Return (FALSE)
.head 5 -  Set i = 1
.head 5 -  Set bContinue = TRUE
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 +  While i <= gnNbLecteur and bContinue
.head 6 -  ! Question : mettre les disquettes dans les lecteurs
.head 6 +  If SalMessageBox( PalTraductMsg( "DISK" ) || " " || SalNumberToStrX(i,0 ) ||"
" || PalTraductMsg( "BV44" )||" 1 (" || gsLecteur[1] ||")" ,PalTraductMsg( "MSG" ), MB_OkCancel ) != IDCANCEL
.head 7 -  Call DispatchMessage(  )
.head 7 -  ! Numérote disquette
.head 7 -  Call VisDosSetVolumeLabel( gsLecteur[1], '1' ) 
.head 7 -  ! Vérification de la présence d'une disquette dans le lecteur
.head 7 +  If bContinue
.head 8 -  Call VisDosGetDriveSize( gsLecteur[1], nTot, nFree )
.head 8 -  Call SalPause(500)
.head 8 +  While TRUE
.head 9 -  Set lsFile = gsLecteur[1] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 9 +  If NOT SalFileOpen( hFile , lsFile,  OF_Create )
.head 10 +  If SalMessageBox(PalTraductMsg( "BV44" )||" 1 --> " || gsLecteur[1] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 11 -  Set bContinue = FALSE
.head 11 -  Call SalMessageBox( PalTraductMsg( 'ERR') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 11 -  Break
.head 9 +  Else
.head 10 -  Break
.head 8 -  Call SalFileClose( hFile )
.head 8 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 7 -  ! Vérification si cette disquette est vide
.head 7 +  If bContinue
.head 8 -  Set nFile = VisDosEnumFiles( gsLecteur[1]||'\\*.*', FA_Standard , lsArrayFile )
.head 8 +  If nFile > 3
.head 9 -  Set bContinue = FALSE
.head 9 -  Call SalMessageBox( PalTraductMsg( 'BV45') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 8 +  Else
.head 9 -  Set j = 0
.head 9 +  While j < nFile and bContinue
.head 10 +  If SalStrUpperX(lsArrayFile[j]) != 'COMMAND.COM' and
  SalStrUpperX(lsArrayFile[j]) != 'MSDOS.SYS' and
  SalStrUpperX(lsArrayFile[j]) != 'IO.SYS' 
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 10 -  Set j = j + 1
.head 9 +  If not bContinue
.head 10 -  Set bContinue = FALSE
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV45') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 7 -  ! Labellisation de la disquette
.head 7 +  If bContinue
.head 8 +  If VisDosSetVolumeLabel( gsLecteur[1], "LECTEUR "|| SalNumberToStrX( i, 0 ) ) != VTERR_Ok
.head 9 -  ! Impossible de labelliser la disquette
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ERR') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 9 -  Set bContinue = FALSE
.head 7 -  ! Creation du fichier DSK
.head 7 +  If bContinue
.head 8 -  Set lsFile = gsLecteur[1] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 8 +  If NOT SalFileOpen( hFile , lsFile, OF_Create )
.head 9 -  ! Impossible de créer le fichier de controle x.DSK (x étant le n° de la disquette)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ERR') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 9 -  Set bContinue = FALSE
.head 9 -  !
.head 8 +  Else
.head 9 -  Call SalFileClose( hFile )
.head 6 +  Else
.head 7 -  Set bContinue = FALSE
.head 6 +  If bContinue
.head 7 +  If gsFormatEtiq = 'ETIQ' and bImprime
.head 8 +  If SalMessageBox(  PalTraductMsg( "DISK" ) || " " || SalNumberToStrX(i,0 ) ||"
" || PalTraductMsg( 'BV43' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 9 -  Set bImprime = TRUE
.head 9 -  Call PalCreationEtiquetteIdentifLecteur( i )
.head 8 +  Else
.head 9 -  Set bImprime = FALSE
.head 9 -  Call SalPause(2000)
.head 7 +  Else
.head 8 -  Call SalPause(4000)
.head 6 -  Set i = i + 1
.head 5 -  Call VisWaitCursor(FALSE)
.head 5 +  If bContinue
.head 6 +  If gsFormatEtiq = 'A4' or (SalStrLeftX( gsFormatEtiq,4) = 'ETIQ' and NOT bImprime)
.head 7 +  If SalMessageBox(  PalTraductMsg( 'BV16' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 8 -  Call PalCreationEtiquetteIdentifLecteur( NUMBER_Null )
.head 5 -  !
.head 3 +  Function: PalCreationEtiquetteIdentifLecteur
.head 4 -  Description: Creation des étiquettes pour identif lecteurs
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nLecteur
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  Number: nEtiqMax
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Set sBuffer = "{Election}|{Date_El}|{Desc}|{Version}|{Disk}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 +  If nLecteur = NUMBER_Null
.head 7 -  Set nEtiq = 1
.head 7 -  Set nEtiqMax = gnNbLecteur
.head 6 +  Else
.head 7 -  Set nEtiq = nLecteur
.head 7 -  Set nEtiqMax = nLecteur
.head 6 +  While nEtiq <= nEtiqMax
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "LEZERS IDENTIFICATIE|" || VERSION ||"|Diskette " || SalNumberToStrX(nEtiq, 0)
.head 7 +  Else
.head 8 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "IDENTIFICATION DES LECTEURS|" || VERSION ||"|Disquette " || SalNumberToStrX(nEtiq, 0)
.head 7 -  Set sBuffer = sBuffer || "
"
.head 7 -  Set nEtiq = nEtiq + 1
.head 7 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Call ShellExecute( hWndForm, 'Open', gsPathRpt || 'ETIQ_IDENT.Doc', ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 6 +  Else If gsFormatEtiq = 'ETIQ' or gsFormatEtiq = 'ETIQ2'
.head 7 +  If nLecteur != NUMBER_Null
.head 8 -  Call ShellExecute( hWndForm, 'Print', gsPathRpt || 'DYMO_IDENT_INDIV.Doc', ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 8 -  Call SalBringWindowToTop( hWndForm )
.head 7 +  Else
.head 8 -  Call ShellExecute( hWndForm, 'Open', gsPathRpt || 'DYMO_IDENT.Doc', ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Set lsFile1 =  gsPathRpt || 'ETIQ_IDENT_.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQ_IDENT_.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ' or gsFormatEtiq = 'ETIQ2'
.head 7 +  If nLecteur != NUMBER_Null
.head 8 -  Set lsFile1 =  gsPathRpt ||  'DYMO_IDENT_INDIV.Doc'
.head 8 -  Set lsFile2 =  gsPathTemp ||  'DYMO_IDENT_INDIV.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt ||  'DYMO_IDENT.Doc'
.head 8 -  Set lsFile2 =  gsPathTemp ||  'DYMO_IDENT.Doc'
.head 6 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 6 +  Else If gsFormatEtiq = 'ETIQ' or gsFormatEtiq = 'ETIQ2'
.head 7 +  If nLecteur != NUMBER_Null
.head 8 -  Call ShellExecute( hWndForm, 'Print', lsFile2, ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 8 -  Call SalBringWindowToTop( hWndForm )
.head 7 +  Else
.head 8 -  Call ShellExecute( hWndForm, 'Open', lsFile2, ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' )  , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalGenereBackupDisk
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Boolean: bImprime
.head 5 -  Number: nFile
.head 5 -  String: lsArrayFile[*]
.head 5 -  String: lsFile
.head 5 -  File Handle: hFile
.head 5 -  Number: i
.head 5 -  Number: nTot
.head 5 -  Number: nFree
.head 5 -  String: lsLabel
.head 4 +  Actions
.head 5 -  Set bImprime  = TRUE
.head 5 +  If gsLecteur[1] = ''
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT04') , PalTraductMsg( 'MSG') , MB_Ok)
.head 6 -  Set bContinue = FALSE
.head 6 -  Return (FALSE)
.head 5 -  Set i = 1
.head 5 -  Set bContinue = TRUE
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  ! Question : mettre une disquette dans le lecteur 1
.head 5 +  If SalMessageBox( PalTraductMsg( "BV44" )||" 1 (" || gsLecteur[1] ||")" ,PalTraductMsg( "MSG" ), MB_OkCancel ) != IDCANCEL
.head 6 -  Call DispatchMessage(  )
.head 6 -  ! Vérification de la présence d'une disquette dans le lecteur
.head 6 +  If bContinue
.head 7 -  Call VisDosGetDriveSize( gsLecteur[1], nTot, nFree )
.head 7 -  Call SalPause(500)
.head 7 +  While TRUE
.head 8 -  Set lsFile = gsLecteur[1] ||"\\"|| SalNumberToStrX( i, 0) ||".DSK"
.head 8 +  If NOT SalFileOpen( hFile , lsFile,  OF_Create )
.head 9 +  If SalMessageBox(PalTraductMsg( "BV44" )||" 1 --> " || gsLecteur[1] ,PalTraductMsg( "MSG" ), MB_OkCancel ) = IDCANCEL
.head 10 -  Set bContinue = FALSE
.head 10 -  ! Call SalMessageBox( PalTraductMsg( 'ERR') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 10 -  Break
.head 8 +  Else
.head 9 -  Break
.head 7 -  Call SalFileClose( hFile )
.head 7 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 6 -  ! Vérification si cette disquette est vide
.head 6 +  If bContinue
.head 7 -  Set nFile = VisDosEnumFiles( gsLecteur[1]||'\\*.*', FA_Standard , lsArrayFile )
.head 7 +  If nFile > 0
.head 8 -  Set bContinue = FALSE
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV45') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 7 +  Else
.head 8 -  Set nFile = VisDosEnumDirs( gsLecteur[i]||'\\*.*', lsArrayFile )
.head 8 +  If nFile > 0
.head 9 -  Set bContinue = FALSE
.head 9 -  Call SalMessageBox( PalTraductMsg( 'BV45') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 6 -  ! Labellisation de la disquette
.head 6 +  If bContinue
.head 7 +  If VisDosSetVolumeLabel( gsLecteur[1], "BACKUP" ) != VTERR_Ok
.head 8 -  ! Impossible de labelliser la disquette
.head 8 -  Call SalMessageBox( PalTraductMsg( 'ERR') || ' ' || gsLecteur[1] , PalTraductMsg('MSG') , MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 6 -  ! Copie de Backup.Ex_
.head 6 +  If bContinue
.head 7 +  If VisFileCopy( gsPathRef||"BACKUP.BAT" , gsLecteur[1]||"\\BACKUP.BAT" ) <= 0
.head 8 -  ! Erreur de copie
.head 8 -  Call SalMessageBox( PalTraductMsg( 'ERR') || " : " || gsPathRef||"BACKUP.BAT" ||"  --> "||  gsLecteur[1]||"\\BACKUP.BAT" , PalTraductMsg('MSG') , MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 5 +  Else
.head 6 -  Set bContinue = FALSE
.head 5 -  Call VisWaitCursor(FALSE)
.head 5 +  If bContinue
.head 6 +  If gsFormatEtiq = 'A4' or SalStrLeftX( gsFormatEtiq,4) = 'ETIQ' 
.head 7 +  If SalMessageBox(  PalTraductMsg( 'BV16' ) , PalTraductMsg( '?') , MB_YesNo | MB_IconQuestion ) = IDYES
.head 8 -  Call PalCreationEtiquetteMasterBACKUP( )
.head 5 -  !
.head 3 +  Function: PalCreationEtiquetteMasterBACKUP
.head 4 -  Description: Creation des étiquettes pour les BV
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  String: lsNoBV
.head 5 -  String: lsNomBV
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsFile1
.head 5 -  String: lsFile2
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 6 -  Set sBuffer = "{Election}|{Date_El}|{Desc}|{Version}
"
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "MASTER DISKETTE VOOR BACKUP VAN DE TOTALISATIE PC|" || VERSION
.head 6 +  Else
.head 7 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|" || "DISQUETTE MASTER  POUR LE BACKUP D'UN PC DE TOTALISATION|" || VERSION
.head 6 -  Set sBuffer = sBuffer ||"
"
.head 6 -  Set nEtiq = nEtiq + 1
.head 6 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 6 -  Call SalFileClose( hFile )
.head 6 -  ! Copie du fichier en local
.head 6 +  If gsFormatEtiq = 'A4'
.head 7 -  Set lsFile1 =  gsPathRpt || 'ETIQ_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'ETIQ_MASTERBV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTERBV.Doc'
.head 6 +  Else If gsFormatEtiq = 'ETIQ2'
.head 7 -  Set lsFile1 =  gsPathRpt || 'DYMO_MASTERBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'DYMO_MASTERBV.Doc'
.head 6 -  Call VisFileCopy( lsFile1 , lsFile2 )
.head 6 -  ! Publipostage
.head 6 -  Call ShellExecute( hWndForm, 'Open',  lsFile2 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalDtmCouleurDisk
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sType
.head 5 -  Number: nNoDisk
.head 5 -  Window Handle: hWnd
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If sType = 'BV'
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'ROUGE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'ROOD' 
.head 7 -  Call SalPicSet( hWnd, resDRouge, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'BLANCHE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'WIT' 
.head 7 -  Call SalPicSet( hWnd, resDBlanc, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'VERTE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'GROEN' 
.head 7 -  Call SalPicSet( hWnd, resDVert, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'NOIRE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'ZWARTE' 
.head 7 -  Call SalPicSet( hWnd, resDNoir, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'BLEUE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'BLAUW' 
.head 7 -  Call SalPicSet( hWnd, resDBleu, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'JAUNE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'GEEL' 
.head 7 -  Call SalPicSet( hWnd, resDJaune, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'GRISE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'GRIJS' 
.head 7 -  Call SalPicSet( hWnd, resDGris, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'ORANGE' or SalStrUpperX(gsBV_Couleur[ nNoDisk ]) = 'ORANJE' 
.head 7 -  Call SalPicSet( hWnd, resDOrange, PIC_FormatBitmap )
.head 5 +  If sType = 'PCT'
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'ROUGE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'ROOD' 
.head 7 -  Call SalPicSet( hWnd, resDRouge, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'BLANCHE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'WIT' 
.head 7 -  Call SalPicSet( hWnd, resDBlanc, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'VERTE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'GROEN' 
.head 7 -  Call SalPicSet( hWnd, resDVert, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'NOIRE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'ZWARTE' 
.head 7 -  Call SalPicSet( hWnd, resDNoir, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'BLEUE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'BLAUW' 
.head 7 -  Call SalPicSet( hWnd, resDBleu, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'JAUNE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'GEEL' 
.head 7 -  Call SalPicSet( hWnd, resDJaune, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'GRISE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'GRIJS' 
.head 7 -  Call SalPicSet( hWnd, resDGris, PIC_FormatBitmap )
.head 6 +  If SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'ORANGE' or SalStrUpperX(gsPCT_Couleur[ nNoDisk ]) = 'ORANJE' 
.head 7 -  Call SalPicSet( hWnd, resDOrange, PIC_FormatBitmap )
.head 5 -  Call SalPicSetFit( hWnd, PIC_FitBestFit, 0, 0 )
.head 3 -  ! Autres
.head 3 +  Function: PalLongueur
.head 4 -  Description: Fct pour ecrire un fichier Txt formaté à longueur donnée
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psIn
.head 5 -  Number: nLong
.head 5 -  String: sSepara
.head 5 -  String: sCaractFin
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnLongIn
.head 5 -  String: lsOut
.head 4 +  Actions
.head 5 -  Set lnLongIn = SalStrLength( psIn )
.head 5 -  Set lsOut = psIn || SalStrRepeatX(sSepara , nLong - lnLongIn) || sCaractFin
.head 5 -  Return (lsOut )
.head 3 +  Function: PalEditFile
.head 4 -  Description: Edition d'un fichier donné avec Notepad
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sPathFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 -  Call SalLoadAppAndWait( "NOTEPAD " || sPathFile , Window_Maximized , nRet)
.head 3 +  Function: PalChoixImprimante
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Call VisWaitCursor( TRUE )
.head 5 -  Call SalDisableWindow( hWndForm)
.head 5 -  Call SalShowWindow( dfLibelleInfo )
.head 5 -  Call SalBringWindowToTop( dfLibelleInfo )
.head 5 -  Set dfLibelleInfo = PalTraductMsg('WAIT')
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set dfPrinterDefaut = '    ?????'
.head 5 -  Call SalPrtSetup( gsPrinterChoisi, gsDriverChoisi, gsPortChoisi, TRUE )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Call SalPrtSetDefault( gsPrinterChoisi, gsDriverChoisi, gsPortChoisi )
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set dfPrinterDefaut = gsPrinterChoisi
.head 5 -  Call SalHideWindow( dfLibelleInfo )
.head 5 -  Call SalEnableWindow( hWndForm)
.head 5 -  Call VisWaitCursor( FALSE )
.head 3 +  Function: PalSelectLigne
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hTbl
.head 5 -  Window Handle: hCol
.head 5 -  String: sIns
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  String: sInsTbl
.head 4 +  Actions
.head 5 -  Set nRow = -1
.head 5 -  Call SalTblSetRowFlags( hTbl, SalTblQueryContext( hTbl ), ROW_Selected, FALSE )
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( hTbl, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( hTbl, nRow)
.head 6 -  Call SalTblSetFocusRow( hTbl, nRow)
.head 6 -  Call SalGetWindowText( hCol, sInsTbl, 50 )
.head 6 +  If sInsTbl = sIns
.head 7 -  Call SalTblSetRowFlags( hTbl, nRow, ROW_Selected, TRUE )
.head 7 -  Call SalSendMsg( hTbl, SAM_Click, 0,0)
.head 7 -  Break
.head 3 +  Function: PalChargeRef_Cfg
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sType
.head 5 -  String: sTypeEl
.head 5 -  String: sPath
.head 5 -  Receive String: lsArrayFile[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nFile
.head 4 +  Actions
.head 5 -  Set nFile = 0
.head 5 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select '" || gsPathApplic || "' || Fichier from Controle_Structure where Type = :sType and Type_el = :sTypeEl
	Into :lsArrayFile[nFile] ")
.head 5 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 6 -  Set lsArrayFile[nFile] = VisStrSubstitute(  lsArrayFile[nFile] , sPath , '')
.head 6 -  Set nFile = nFile + 1
.head 5 -  Return (nFile)
.head 3 +  Function: PalPopulateCmbCommune
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWndCmb
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set gsTmp  = "Select @IF(@Length(nom_N),Nom_N , nom_F) ||' - '||  com_ins   from base_commune A
	where A.type = 'GE' and vote_el = :gnTypeVote  "
.head 5 +  Else
.head 6 -  Set gsTmp  = "Select @IF(@Length(nom_F),Nom_F , nom_N) ||' - '||  com_ins from base_commune A
	where A.type = 'GE' and vote_el = :gnTypeVote  "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set gsTmp = gsTmp || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set gsTmp = gsTmp || " and Region in " || gsRestrRegion || " "
.head 5 +  If gsMateriel  != ''
.head 6 -  Set gsTmp = gsTmp || " and  " || gsMateriel || " "
.head 5 -  Set gsTmp = gsTmp || " Order by 1 "
.head 5 -  Call SalListPopulate( hWndCmb , ghSqlMain, gsTmp )
.head 3 -  ! Disquette Démo
.head 3 +  Function: PalCreateDemo
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Boolean: bOk
.head 5 -  String: lsParam
.head 5 -  Long String: llsTmp
.head 5 -  Number: nRet
.head 5 -  String: lsPathClef
.head 5 -  String: sBuffer
.head 5 -  String: lsCanton
.head 5 -  String: lsArron
.head 5 -  String: lsBureau
.head 5 -  String: lsDateEl
.head 5 -  String: lsPW
.head 4 +  Actions
.head 5 -  Set lsPathClef = gsLecteur[1]
.head 5 -  !
.head 5 +  While TRUE
.head 6 +  If NOT SalFileOpen( hFile, lsPathClef || '\\BLANC.EXE', OF_Exist ) or  NOT SalFileOpen( hFile,  lsPathClef || '\\URNE.EXE', OF_Exist )
.head 7 +  If SalMessageBox(PalTraductMsg( 'DEMO1' ) ||' 1 ('|| gsLecteur[1]||')' , PalTraductMsg('MSG') , MB_OkCancel ) = IDCANCEL
.head 8 -  Set bOk = FALSE
.head 8 -  Break
.head 6 +  Else
.head 7 -  Set bOk = TRUE
.head 7 -  Break
.head 5 +  If bOk
.head 6 +  If SalFileOpen( hFile, lsPathClef ||"\\TABLE.URN", OF_Exist )
.head 7 +  If gsLangueSoft = 'F'
.head 8 -  Call SalMessageBox("Cette disquette URNE est clôturée !!" ,"Message", MB_Ok )
.head 7 +  Else
.head 8 -  Call SalMessageBox("Deze diskette is GESLUITEN !!" ,"PAS OP", MB_Ok )
.head 7 -  Return (FALSE)
.head 6 +  If NOT SalFileOpen( hFile, lsPathClef ||"\\FLOPPY.BE", OF_Exist )
.head 7 +  If gsLangueSoft = 'F'
.head 8 -  Call SalMessageBox("Aucun FLOPPY.BE sur la disquette "|| lsPathClef ,"Message", MB_Ok )
.head 7 +  Else
.head 8 -  Call SalMessageBox("Geen FLOPPY.BE op de diskette "|| lsPathClef ,"Message", MB_Ok )
.head 7 -  Return (FALSE)
.head 6 -  !
.head 6 -  Set bOk = FALSE
.head 6 +  If Not SalFileOpen ( hFile , lsPathClef ||'\\MachVotS.Ind' , OF_Read | OF_Text )
.head 7 -  Call SalMessageBox( PalTraductMsg ('ERR2') || ' --> MachVotS.Ind 
' || PalTraductMsg ('ERR') , PalTraductMsg( 'MSG') , MB_Ok )
.head 7 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Call SalFileGetStr( hFile, sBuffer, 250 )
.head 7 -  Set lsArron = SalStrLeftX( sBuffer,3)
.head 7 -  Set lsCanton = SalStrMidX( sBuffer, 3,3)
.head 7 -  Set lsBureau = SalNumberToStrX( SalStrToNumber(SalStrMidX( sBuffer, 6,3)), 0)
.head 7 -  Set lsDateEl = SalStrMidX( sBuffer, 9,6)
.head 7 +  If lsDateEl = DATE_EL
.head 8 -  Call SalMessageBox( PalTraductMsg ('ERR2') || ' --> ' || PalTraductMsg( 'DATEEL' ) || date_transforme( '20' || SalStrRightX(lsDateEl, 2) || SalStrMidX( lsDateEl,2,2) || SalStrLeftX( lsDateEl,2), '/') , PalTraductMsg( 'MSG') , MB_Ok )
.head 8 -  Return (FALSE)
.head 7 -  Set lsDateEl = date_transforme( '20' || SalStrRightX(lsDateEl, 2) || SalStrMidX( lsDateEl,2,2) || SalStrLeftX( lsDateEl,2), '/')
.head 7 -  Call SalFileClose( hFile )
.head 7 -  !
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "select  bv_codebak
	 from bur_vote A, base_commune B 
	where Type = 'GE' and a.com_ins=B.com_ins and no_arrond = :lsArron and no_canton = :lsCanton and bv_no = :lsBureau 
	Into :lsPW " )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp) 
.head 8 -  Set bOk = TRUE
.head 7 +  Else
.head 8 -  Call SalMessageBox(   PalTraductMsg ('ERR3') || ' --> ' || lsArron ||' ' || lsCanton || ' ' || lsBureau || '
' || PalTraductMsg ('ERR'), PalTraductMsg( 'MSG') , MB_Ok )
.head 8 -  Return (FALSE)
.head 8 -  !
.head 6 -  !
.head 6 +  If bOk
.head 7 +  If VisFileCopy( lsPathClef ||"\\Floppy.be", gsPathCle ||"Floppy.be")  > 0
.head 8 +  If bOk
.head 9 -  Call VisWaitCursor(TRUE)
.head 9 -  ! Création IVMAC.BE
.head 9 +  If PalCreateIVMAC(lsPathClef , '2')
.head 10 +  If VisFileCopy( gsPathRef ||"MAV_D.BAT", lsPathClef ||"\\MAV.BAT")  > 0
.head 11 -  ! Rijndael W 2 PW A: A: PathClef
.head 11 -  Call SalFileOpen( hFile, lsPathClef ||'\\LOG.ERR', OF_Delete )
.head 11 -  Set lsParam = gsPathRijndael || "RIJNDAEL W 2 "|| lsPW || " "||lsPathClef||" "||lsPathClef||" " || SalStrLeftX( gsPathCle, SalStrLength( gsPathCle)-1 )
.head 11 -  Call SalLoadAppAndWait( lsParam , Window_NotVisible, nRet )
.head 11 +  If SalFileOpen( hFile, lsPathClef ||"\\LOG.ERR", OF_Exist )
.head 12 -  Call SalMessageBox(PalTraductMsg( 'BV_ERR' ) , PalTraductMsg( 'MSG' ), MB_Ok)
.head 12 -  Call VisWaitCursor(FALSE)
.head 12 -  Return (FALSE)
.head 11 +  Else
.head 12 -  Call SalMessageBox(PalTraductMsg( 'DEMO2' ) , PalTraductMsg( 'MSG' ), MB_Ok)
.head 12 -  Call VisWaitCursor(FALSE)
.head 12 -  Return (TRUE)
.head 10 +  Else
.head 11 -  Call SalMessageBox(PalTraductMsg( 'BV_ERR' ) , PalTraductMsg( 'MSG' ), MB_Ok)
.head 11 -  Call VisWaitCursor(FALSE)
.head 11 -  Return (FALSE)
.head 9 +  Else
.head 10 -  Call SalMessageBox(PalTraductMsg( 'BV_ERR' ) , PalTraductMsg( 'MSG' ), MB_Ok)
.head 10 -  Call VisWaitCursor(FALSE)
.head 10 -  Return (FALSE)
.head 7 +  Else
.head 8 -  Call SalMessageBox(PalTraductMsg( 'BV_ERR' ) , PalTraductMsg( 'MSG' ), MB_Ok)
.head 8 -  Return (FALSE)
.head 5 -  !
.head 3 +  Function: PalCreateIVMAC
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sLecteur
.head 5 -  String: sType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  String: sBuffer
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, sLecteur || '\\BE.'|| sType, OF_Read | OF_Text )
.head 6 +  If SalFileGetStr( hFile, sBuffer, 200)
.head 7 -  Call SalFileClose(hFile)
.head 7 -  Set sBuffer = SalStrLeftX( sBuffer, 32 )
.head 7 +  If SalFileOpen( hFile, gsPathCle || 'IVMAC.BE', OF_Exist )
.head 8 +  If NOT SalFileOpen( hFile, gsPathCle || 'IVMAC.BE', OF_Delete )
.head 9 -  Call SalFileClose(hFile)
.head 9 -  Call SalMessageBox(PalTraductMsg( 'XML15' ) ||' IVMAC.BE' , PalTraductMsg( 'MSG' ), MB_Ok)
.head 9 -  Return (FALSE)
.head 7 +  If SalFileOpen( hFile, gsPathCle || 'IVMAC.BE', OF_Create | OF_ReadWrite | OF_Text )
.head 8 +  If SalFilePutStr( hFile, sBuffer )
.head 9 -  Call SalFileClose(hFile)
.head 9 -  Return (TRUE )
.head 8 +  Else
.head 9 -  Call SalFileClose(hFile)
.head 9 -  Call SalMessageBox(PalTraductMsg( 'ERR2' ) ||' IVMAC.BE' , PalTraductMsg( 'MSG' ), MB_Ok)
.head 9 -  Return (FALSE)
.head 7 +  Else
.head 8 -  Call SalFileClose(hFile)
.head 8 -  Call SalMessageBox(PalTraductMsg( 'ERR2' ) ||' IVMAC.BE' , PalTraductMsg( 'MSG' ), MB_Ok)
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Call SalFileClose(hFile)
.head 7 -  Call SalMessageBox(PalTraductMsg( 'ERR2' ) ||' BE.'|| sType , PalTraductMsg( 'MSG' ), MB_Ok)
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  Call SalMessageBox(PalTraductMsg( 'ERR2' ) ||' BE.'|| sType , PalTraductMsg( 'MSG' ), MB_Ok)
.head 6 -  Return (FALSE)
.head 3 -  ! Dtm mouvement de la souris pour génération des clés
.head 3 +  Function: PalDtmMove
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nType
.head 4 +  Static Variables
.head 5 -  Number: snX
.head 5 -  Number: snY
.head 5 -  Number: snPassage
.head 5 -  Number: snInterv
.head 5 -  String: ssMili
.head 4 +  Local variables
.head 5 -  Long String: sCleOut
.head 5 -  Number: nX
.head 5 -  Number: nY
.head 5 -  String: sMili
.head 5 -  Number: nCar
.head 4 +  Actions
.head 5 -  Set sCleOut = wlsMoveMouse
.head 5 -  Call GetCursorPos(nX,nY)
.head 5 -  Call SalDateToStr( SalDateCurrent() , sMili )
.head 5 -  Set sMili=  SalStrLeftX( SalStrRightX( sMili, 6 ), 2 )
.head 5 +  If SalNumberAbs( snX - nX  ) + SalNumberAbs( snY - nY ) > 2
.head 6 -  Set sCleOut = sCleOut || SalNumberToStrX( SalNumberMod( SalStrToNumber( sMili), 2 ),0)
.head 5 +  If SalNumberAbs( snX - nX  ) + SalNumberAbs( snY - nY ) >= 15 or nType = 1
.head 6 +  If SalStrLength( wsPWRandom) >= 8
.head 7 -  Set wsPWRandom =  VisStrSubstitute( SalStrLeftX( wsPWRandom, SalStrToNumber( ssMili ))  || SalStrRightX(sMili,1) || SalStrMidX(wsPWRandom, SalStrToNumber( ssMili )+1, SalStrLength(wsPWRandom) )  , ' ' , '') 
.head 7 -  Set nCar = SalNumberRound( SalStrLength( wsPWRandom ) / 2) - 4
.head 7 -  Set wsPWRandom = SalStrMidX( wsPWRandom , nCar, 8)
.head 6 +  Else
.head 7 -  Set wsPWRandom = SalStrRightX( VisStrSubstitute( wsPWRandom || SalStrRightX(sMili,1) , ' ' , '') , 8 )
.head 5 +  If SalStrLength( sCleOut) >= 550 and SalStrLength( wsPWRandom ) >= 8 and wbControleMouse
.head 6 -  Call SalSendMsg( dlgMouseMove , SAM_Close, 0,0)
.head 5 +  Else
.head 6 +  If wbControleMouse
.head 7 -  Call dlgMouseMove.ccResteMvt.SetProgress ( (wnLongMouseMove-(550 - SalStrLength( sCleOut))) / wnLongMouseMove * 100 )
.head 5 -  Set wlsMoveMouse = SalStrRightX( sCleOut , 550 )
.head 5 -  Set ssMili = SalStrRightX( sMili , 1)
.head 3 +  Function: PalDtmUn
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Long String: sIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: j
.head 4 +  Actions
.head 5 +  While i < SalStrLength( sIn )
.head 6 -  Set j = j + SalStrToNumber( SalStrMidX( sIn, i, 1 ) )
.head 6 -  Set i = i + 1
.head 5 -  Return j
.head 3 +  Function: PalTimer
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Number: nMin
.head 5 -  Number: nSec
.head 4 +  Actions
.head 5 -  Call SalTimerKill( hWndForm, 1 )
.head 5 +  If bContinue and wnPourcent >= 0
.head 6 -  Set nSec =  SalNumberMod(  wnPourcent , 60 )
.head 6 -  Set nMin = (wnPourcent - nSec) / 60
.head 6 +  If nMin > 0
.head 7 -  Set dfInfoClock = SalNumberToStrX( nMin , 0 ) ||"'"|| SalStrRightX( '00' || SalNumberToStrX( nSec , 0 ) , 2 )||'"'
.head 6 +  Else
.head 7 -  Set dfInfoClock = SalStrRightX( '00' || SalNumberToStrX( nSec , 0 ) , 2 )||'"'
.head 5 -  Call SalTimerSet( hWndForm, 1, 1000 )
.head 3 +  Function: PalVerifPW
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sPW
.head 5 -  String: sTable
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If sTable = 'BV'
.head 6 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select * from Bur_vote where @left(BV_CodeBak ,8) = :sPW ")
.head 5 +  Else If sTable = 'PCT'
.head 6 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select * from  Pc_Tot where @left(Pct_CodeBak ,8) = :sPW ")
.head 5 +  Else
.head 6 -  Return FALSE
.head 5 +  If NOT SqlFetchNext( ghSqlTertiaire, Btmp )
.head 6 -  Return (TRUE)
.head 5 +  Else
.head 6 -  Return FALSE
.head 3 +  Function: PalDtmCtrl
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sType
.head 5 -  Number: nIns
.head 5 -  String: sInsType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  String: sCtrl
.head 5 -  Number: nDisk
.head 4 +  Actions
.head 5 -  Set sCtrl = ''
.head 5 -  Set i = 1
.head 5 +  If sType = 'PCT'
.head 6 -  Set nDisk = gnNbDiskPCT
.head 5 +  Else
.head 6 -  Set nDisk = gnNbDiskBV
.head 5 +  While i <= nDisk
.head 6 +  If sCtrl != '' 
.head 7 -  Set sCtrl = sCtrl || '|'
.head 6 -  Set sCtrl = sCtrl || '1'
.head 6 -  Set i = i + 1
.head 5 +  If sType = 'PCT'
.head 6 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from PC_tot
	where can_ins = :nIns and (pct_identif != :sCtrl  or Pct_identif is null ) " )
.head 5 +  Else If sType = 'BV'
.head 6 +  If sInsType = 'COM'
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where com_ins = :nIns and (bv_identif != :sCtrl  or bv_identif is null ) " )
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute(ghSqlQuaternaire, "Select * from bur_vote 
	where can_ins = :nIns and (bv_identif != :sCtrl  or bv_identif is null )" )
.head 5 +  If NOT SqlFetchNext( ghSqlQuaternaire, Btmp)
.head 6 -  Return FALSE
.head 5 +  Else
.head 6 -  Return TRUE
.head 3 +  Function: PalTransElHexa
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sOrdreEl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nEl
.head 5 -  Number: nI
.head 5 -  String: sC[10]
.head 5 -  String: sOutEl
.head 4 +  Actions
.head 5 -  Set sOutEl = ''
.head 5 -  Set nEl = SalStrTokenize( sOrdreEl, '' ,',', sC)
.head 5 -  Set nI = 0
.head 5 +  While nI < nEl
.head 6 +  If sOutEl != ''
.head 7 -  Set sOutEl = sOutEl ||','
.head 6 +  If SalStrToNumber( sC[nI] ) < 10
.head 7 -  Set sOutEl = sOutEl || sC[nI]
.head 6 +  Else If SalStrToNumber( sC[nI] ) >= 10
.head 7 -  Set sOutEl = sOutEl || SalNumberToChar(  SalStrToNumber( sC[nI] )+55 )
.head 6 -  Set nI = nI +1
.head 5 -  Return sOutEl
.head 3 +  Function: PalStrToHexastr
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: sEl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nEl
.head 5 -  Number: nI
.head 5 -  String: sOutEl
.head 4 +  Actions
.head 5 +  If SalNumberToStrX( SalStrToNumber( sEl ) , 0) = sEl
.head 6 -  Set sOutEl = sEl
.head 5 +  Else
.head 6 -  Set nEl = SalStrLop( sEl ) - 55
.head 6 -  Set sOutEl = SalNumberToStrX( nEl , 0)
.head 5 -  Return sOutEl
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Number: nTot
.head 3 -  Number: nFree
.head 3 -  Number: wnTabActif
.head 3 -  Number: wnNoElection[10]
.head 3 -  Boolean: wbOk
.head 3 -  Boolean: wbPWOk
.head 3 -  Boolean: wbClavier
.head 3 -  Boolean: bContinue
.head 3 -  String: wsOrdreEl
.head 3 -  String: wsTmp
.head 3 -  String: wsMaterielGere
.head 3 -  String: wsCollege
.head 3 -  String: wsNoListeActive
.head 3 -  Number: wnMlDisk[6]
.head 3 -  Window Handle: whDisk[6]
.head 3 -  Boolean: wbActivate
.head 3 -  Boolean: wbAuMoinsUnLecteur
.head 3 -  String: wsCommuneSelectPCT
.head 3 -  String: wsCommuneSelectBV
.head 3 -  String: wsCommuneSelect
.head 3 -  String: wsCantonSelect
.head 3 -  String: wsInsSelect
.head 3 -  String: wsCommuneChoix
.head 3 -  String: wsCommuneEnCours
.head 3 -  String: wsScrutinEl
.head 3 -  Boolean: wbDemarrage
.head 3 -  Number: wnWidthTbl
.head 3 -  Number: wnHeightTbl 
.head 3 -  String: wsLabelCommune
.head 3 -  String: wsLabelCommune2
.head 3 -  String: wsTrace
.head 3 -  Boolean: wbCapteMouseMove
.head 3 -  Boolean: wbControleMouse
.head 3 -  Long String: wlsMoveMouse
.head 3 -  String: wsPWRandom
.head 3 -  Number: wnLongMouseMove
.head 3 -  Number: wnBVActif
.head 3 -  Number: wnPourcent
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set gnTypeVote = 1
.head 4 -  Set gbCreateDisk = FALSE
.head 4 -  Call SalBringWindowToTop( dlgDebut )
.head 4 -  Call SalHideWindow( hWndForm)
.head 4 -  Call DispatchMessage(  )
.head 4 -  Call PalChangeColor()
.head 4 -  Set wbDemarrage = TRUE
.head 4 -  Call LockWindowUpdate( hWndForm )
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set wsMaterielGere = ""
.head 4 +  If SalStrScan( gsMateriel, "'J'" ) != -1
.head 5 +  If wsMaterielGere != ''
.head 6 -  Set wsMaterielGere = wsMaterielGere ||" , "
.head 5 -  Set wsMaterielGere = wsMaterielGere || 'JITES'
.head 4 +  If SalStrScan( gsMateriel, "'D'" ) != -1
.head 5 +  If wsMaterielGere != ''
.head 6 -  Set wsMaterielGere = wsMaterielGere ||" , "
.head 5 -  Set wsMaterielGere = wsMaterielGere || 'DIGIVOTE'
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  ! Call SalSetWindowText(hWndForm, "Gebruiker : " || gsNomUser  || "  " || gsNumNatUser ||"   -    DB: " || SqlDatabase ||"   -   " || VERSION ||'      -    ' || PalDtmRegion() || '   -   ' || wsMaterielGere)
.head 5 -  Call SalSetWindowText(hWndForm, "Gebruiker : " || gsNomUser  || "  " || gsNumNatUser ||"   -    DB: " || SqlDatabase ||"   -   " || VERSION ||'  -  '|| wsMaterielGere)
.head 5 -  Set wsLabelCommune = '@IF(@Length(nom_n),Nom_n , nom_f)'
.head 5 -  Set wsLabelCommune2 = '@IF(@Length(Com_nom_n),Com_Nom_n , Com_nom_f)'
.head 4 +  Else
.head 5 -  Call SalSetWindowText(hWndForm, "Utilisateur : " || gsNomUser || "  " || gsNumNatUser ||"    -    DB: " || SqlDatabase ||"   -   " || VERSION ||'   -   '|| wsMaterielGere )
.head 5 -  ! Call SalSetWindowText(hWndForm, "Utilisateur : " || gsNomUser || "  " || gsNumNatUser ||"    -    DB: " || SqlDatabase ||"   -   " || VERSION ||'      -     ' || PalDtmRegion()  || '   -   ' || wsMaterielGere )
.head 5 -  Set wsLabelCommune = '@IF(@Length(nom_f),Nom_f , nom_n)'
.head 5 -  Set wsLabelCommune2 = '@IF(@Length(Com_nom_f),Com_Nom_f , Com_nom_n)'
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalBringWindowToTop( dlgDebut )
.head 4 -  Set wbDemarrage = TRUE
.head 4 -  Call DispatchMessage(  )
.head 4 -  Call PalChargeParam()
.head 4 -  Call PalChangeColor()
.head 4 -  Call SalSendMsg( cmbElection, SAM_Click, 0,0)
.head 4 -  Call SalSendMsg( hWndForm, PAM_Language, wParam, lParam)
.head 4 +  If NOT PalDtmFloppy( gnNbLecteur, gsLettreLecteur, gnNbLecteurDtm )
.head 5 -  Set wbActivate = FALSE
.head 4 +  Else
.head 5 -  Set wbActivate = TRUE
.head 4 -  !
.head 4 +  If gnNbLecteurDtm >= 1
.head 5 -  Set wbAuMoinsUnLecteur = TRUE
.head 4 +  Else
.head 5 -  Set wbAuMoinsUnLecteur = FALSE
.head 4 -  !
.head 4 -  Call LockWindowUpdate( hWndNULL )
.head 4 -  Call VisWaitCursor(FALSE)
.head 4 -  Call SalBringWindowToTop( dlgDebut )
.head 4 -  Call DispatchMessage(  )
.head 4 -  Call SalShowWindow( hWndForm)
.head 4 +  If NOT gbCreatBV
.head 5 -  Call SWTabsEnable( picTabs, 1, FALSE )
.head 4 +  If NOT gbCreatPCT
.head 5 -  Call SWTabsEnable( picTabs, 2, FALSE )
.head 4 +  If gbAdmin
.head 5 -  Call picTabs.BringToTop(0,TRUE)
.head 5 -  Call TabUserRequest(picTabs, 0)
.head 5 +  If gsRestrRegion = "('BXL')"
.head 6 -  Call SalListSetSelect( cmbElection, 1 )
.head 6 -  Call SalDisableWindow( cmbElection )
.head 6 -  Call SalSendMsg( cmbElection, SAM_Click, 0,0)
.head 4 +  Else
.head 5 -  Call SWTabsEnable( picTabs, 0, FALSE )
.head 5 +  If SWTabsIsEnabled( picTabs, 1 )
.head 6 -  Call picTabs.BringToTop(1,TRUE)
.head 6 -  Call TabUserRequest(picTabs, 1)
.head 6 -  Call SalPostMsg( tblCommuneBV, SAM_Click, 0, 0 )
.head 5 +  Else If SWTabsIsEnabled( picTabs, 2 )
.head 6 -  Call picTabs.BringToTop(2,TRUE)
.head 6 -  Call TabUserRequest(picTabs, 2)
.head 6 -  Call SalPostMsg( tblCommunePCT, SAM_Click, 0, 0 )
.head 5 +  Else
.head 6 -  Call picTabs.BringToTop(3,TRUE)
.head 6 -  Call TabUserRequest(picTabs, 3)
.head 4 -  Call SalDestroyWindow( dlgDebut )
.head 4 -  !
.head 4 +  If gsUserEID = '1'
.head 5 +  If gsLangueSoft = 'F'
.head 6 -  Set wsTmp = 'Bonjour '
.head 5 +  Else
.head 6 -  Set wsTmp = 'Dag '
.head 5 +  If gsNumNatUser != '' 
.head 6 +  If SalNumberMod( SalStrToNumber( SalStrMidX( gsNumNatUser, 8, 1) ), 2 )= 0
.head 7 -  ! Femme
.head 7 +  If gsLangueSoft = 'F'
.head 8 -  Set wsTmp = wsTmp || 'madame ' 
.head 7 +  Else
.head 8 -  Set wsTmp = wsTmp || 'mevrouw ' 
.head 6 +  Else
.head 7 -  ! Homme
.head 7 +  If gsLangueSoft = 'F'
.head 8 -  Set wsTmp = wsTmp || 'monsieur ' 
.head 7 +  Else
.head 8 -  Set wsTmp = wsTmp || 'meneer ' 
.head 5 -  Set wsTmp = wsTmp ||  gsNomUser 
.head 5 +  If gsUserLog != 'SYSADM'
.head 6 -  Set wsTmp = wsTmp ||"

" || PalTraductMsg( 'EID5' )
.head 5 -  Call SalMessageBox( wsTmp , '', MB_Ok | MB_IconInformation )
.head 4 -  Call SalSetFocus( picTabs )
.head 3 +  On PAM_Language
.head 4 -  Call TranslateMenu()
.head 3 +  On SAM_Close
.head 4 +  If SalMessageBox( PalTraductMsg( 'QUIT') , PalTraductMsg( '?'), MB_YesNo | MB_IconQuestion ) = IDYES
.head 5 +  If gbWinConnect
.head 6 -  Call SalSendMsg( dlgQuiConnect, SAM_Close, 0,0)
.head 5 +  If gbWinStat
.head 6 -  Call SalSendMsg( frmStat, SAM_Close, 0,0)
.head 5 -  ! Trace
.head 5 -  Set wsTrace = 'OUT' 
.head 5 +  If gsUserEID = '1'
.head 6 -  Set wsTrace = wsTrace || ' - EID : ' || gsNumNatUser
.head 5 -  Call PalTraceAction( gsUserLog, "LOGIN", wsTrace  )
.head 5 -  Call SalSendClassMessageNamed( clsBaseFrmTabs, SAM_Close, wParam, lParam )
.head 5 -  ! Call SalQuit()
.head 4 +  Else
.head 5 -  Return (FALSE)
.head 3 +  On WM_MOUSEMOVE
.head 4 +  If wbCapteMouseMove
.head 5 -  Call PalDtmMove( 0 )
.head 3 +  On SAM_Timer
.head 4 -  Set wnPourcent = wnPourcent - 1
.head 4 -  Call PalTimer()
.head 1 -  ! About
.head 1 +  Dialog Box: dlgAbout
.head 2 -  Class:
.head 2 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 2 -  Class DLL Name: QUIKPDLG.DLL
.head 2 -  Title: About ...
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 3.013"
.head 4 -  Top: 1.823"
.head 4 -  Width:  9.75"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 4.333"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfVersieNr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.283"
.head 6 -  Top: 0.238"
.head 6 -  Width:  9.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.583"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 18
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Maize
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set MyValue = 'Verkiezing aanmaken  -  ' || VERSION || ' (DB: ' || wsVerDB || ')'
.head 6 +  Else
.head 7 -  Set MyValue = 'Préparation Election  -  ' || VERSION || ' (DB: ' || wsVerDB || ')'
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: dfMadeBy
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.083"
.head 6 -  Top: 2.524"
.head 6 -  Width:  8.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.381"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Maize
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set MyValue = 'Gerealiseerd door Arnaud Pirlot'
.head 6 +  Else
.head 7 -  Set MyValue = 'développé par Arnaud Pirlot'
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: dfMadeBy2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 3.012"
.head 6 -  Width:  7.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.381"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Maize
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = 'Stésud S.A.'
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbOK
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: OK
.head 4 -  Window Location and Size
.head 5 -  Left: 4.183"
.head 5 -  Top: 3.571"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.44"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm , SAM_Close, 0, 0 )
.head 3 -  Frame
.head 4 -  Resource Id: 49586
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.071"
.head 5 -  Width:  9.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 4.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 4
.head 4 -  Border Color: Dark Blue
.head 4 -  Background Color: Maize
.head 3 +  Picture: pic1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 0.821"
.head 5 -  Width:  7.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.667"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: Internal
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Maize
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicClear (pic1 )
.head 6 -  Call SalPicSetFile( pic1, gsPathApplic||"EL2007Logo.jpg" )
.head 6 -  ! Call SalPicSet( pic1, resLogo, PIC_FormatBitmap )
.head 6 -  Call SalPicSetFit( pic1, PIC_FitBestFit, 0, 0 )
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: wsPhoto
.head 3 -  String: wsVerDB
.head 3 -  Number: wnCas
.head 3 -  File Handle: whFile
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Omtrent ...")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "A propos de ...")
.head 4 -  Call SqlPrepareAndExecute( ghSqlMain, "Select par_Ver_DB from param into :wsVerDB" )
.head 4 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 1 -  ! Message pour bouger la souris
.head 1 +  Dialog Box: dlgMouseMove
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modeless
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  11.517"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 0.857"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfMove
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.071"
.head 6 -  Width:  11.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.417"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Maize
.head 5 -  Background Color: Dark Blue
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft = 'F'
.head 7 -  Set MyValue = 'Veuillez déplacer la souris quelques instants S.V.P. ...'
.head 6 +  Else
.head 7 -  Set MyValue = 'Gelieve de muis gedurende enkele ogenblikken te verplaatsen A.U.B. ...'
.head 3 +  Custom Control: ccResteMvt
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.488"
.head 6 -  Width:  11.2"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? No
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Class Default
.head 5 -  Background Color: Class Default
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call dlgMouseMove.ccResteMvt.SetProgress (0)
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set frmGenere.wbControleMouse = TRUE
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Call SetWindowLongA( dlgMouseMove, GWL_STYLE,  50 )
.head 4 -  Set frmGenere.wnLongMouseMove = 550 - SalStrLength( frmGenere.wlsMoveMouse )
.head 3 -  On SAM_CreateComplete
.head 3 +  On SAM_Close
.head 4 -  Set frmGenere.wbControleMouse = FALSE
.head 3 +  On WM_MOUSEMOVE
.head 4 -  Call SalSendMsg( frmGenere, WM_MOUSEMOVE, wParam, lParam )
.head 1 -  ! Demande d'un mot de passe master
.head 1 +  Dialog Box: dlgPW
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Mot de passe
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  2.95"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 0.845"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfPW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 20
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 0.071"
.head 6 -  Width:  2.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 0.405"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: Enter
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If gsUserEID = '1'
.head 7 +  If sPhoto = '' or sNN = ''
.head 8 -  Call SalMessageBox( PalTraductMsg( 'EID2' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 8 -  Return FALSE
.head 7 +  Else If sNN != gsNumNatUser
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from utilisateur where NN = :sNN and ADMIN_SYS = 1")
.head 8 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'EID4' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 9 -  Return FALSE
.head 6 -  Set wbOk = TRUE
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Picture: picUserPW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 0.321"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.905"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call loStesudEID.SalCreateObjectEID()
.head 3 +  Data Field: dfPlus
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 0.595"
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 18
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 +  Data Field: dfPlus2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 0.595"
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 18
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 2 +  Functions
.head 3 +  Function: PalLectureCarte
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If loStesudEID.SalEidInit(  )
.head 6 +  If sPhoto = '' or sPhotoPrec != sPhoto
.head 7 +  If loStesudEID.SalEidReadId()
.head 8 -  Call loStesudEID.SalEidId_NN( sNN )
.head 8 +  If sNNPrec != sNN
.head 9 -  Set sNNPrec = sNN
.head 9 -  Set sPhoto = ''
.head 9 +  If loStesudEID.SalEidReadPhoto( sPhoto )
.head 10 +  If sPhoto != ''
.head 11 +  If sPhotoPrec != sPhoto
.head 12 -  Call VisWaitCursor( TRUE )
.head 12 -  ! Call SalPicSetString( picUserPW, PIC_FormatObject, sPhoto )
.head 12 -  Call SalPicSetImage( picUserPW, sPhoto, PIC_ImageTypeJPEG )
.head 12 -  Call SalSetFocus( dfPW )
.head 12 -  Call VisWaitCursor( FALSE )
.head 12 -  Set sPhotoPrec = sPhoto
.head 11 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 10 +  Else
.head 11 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 9 +  Else
.head 10 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 8 +  Else
.head 9 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 7 +  Else
.head 8 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 6 +  Else
.head 7 -  Call SalTimerSet( dlgPW, 7, 4000 )
.head 5 +  Else
.head 6 -  Set sPhoto = ''
.head 6 -  Set sPhotoPrec = ''
.head 6 -  Set sNN = ''
.head 6 -  Set sNNPrec = ''
.head 6 -  Call SalTimerSet( dlgPW, 7, 1000 )
.head 2 +  Window Parameters
.head 3 -  String: psType
.head 3 -  Receive Boolean: wbOk
.head 3 -  Receive String: sNN
.head 2 +  Window Variables
.head 3 -  FunctionalVar: loStesudEID
.head 4 -  Class: StesudEID
.head 3 -  Long String: sPhoto
.head 3 -  Long String: sPhotoPrec
.head 3 -  Number: wnPassage
.head 3 -  String: sNNPrec
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set wbOk = FALSE
.head 4 +  If psType = 'MASTER'
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Master Wachtwoord")
.head 5 +  Else
.head 6 -  Call SalSetWindowText( hWndItem, "Mot de passe master")
.head 5 -  Set wnPassage = 1
.head 5 +  If gsUserEID = '1'
.head 6 -  Call SalShowWindow( picUserPW )
.head 6 -  Call SalShowWindow( dfPlus )
.head 6 -  Call SalShowWindow( dfPlus2 )
.head 6 -  Set dfPlus = '>>'
.head 6 -  Set dfPlus2 = '<<'
.head 6 -  Call SalSetWindowSize( dlgPW, 2.95, 2.155 )
.head 6 -  Call SalSetWindowLoc( pbOk, 0.783, 1.405 )
.head 5 +  Else
.head 6 -  Call SalHideWindow( picUserPW )
.head 6 -  Call SalHideWindow( dfPlus )
.head 6 -  Call SalHideWindow( dfPlus2 )
.head 4 +  Else
.head 5 -  Call SalHideWindow( picUserPW )
.head 5 -  Call SalHideWindow( dfPlus )
.head 5 -  Call SalHideWindow( dfPlus2 )
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Wachtwoord")
.head 3 +  On SAM_CreateComplete
.head 4 +  If psType = 'MASTER' and gsUserEID = '1'
.head 5 -  Call PalLectureCarte()
.head 3 +  On SAM_Close
.head 4 +  If wbOk
.head 5 -  Set wbOk = FALSE
.head 5 +  If psType = 'LISTE' and dfPW = gsPwDevalListe
.head 6 -  Set wbOk = TRUE
.head 5 +  If psType = 'BV' and dfPW = gsPwDevalBV
.head 6 -  Set wbOk = TRUE
.head 5 +  If psType = 'MASTER' and dfPW = gsPwMaster
.head 6 -  Set wbOk = TRUE
.head 3 +  On SAM_Timer
.head 4 -  Call SalTimerKill( dlgPW, 7 )
.head 4 -  Set wnPassage = wnPassage + 1
.head 4 +  If sPhoto = ''
.head 5 +  If SalNumberMod( wnPassage , 3 ) != 0
.head 6 -  Call SalPicSetFile( picUserPW, gsPathApplic||"EID.jpg" )
.head 5 +  Else
.head 6 -  Call SalPicSetFile( picUserPW, gsPathApplic||"EID2.jpg" )
.head 5 +  If SalNumberMod( wnPassage , 2 ) != 0
.head 6 -  Call SalShowWindow( dfPlus )
.head 6 -  Call SalShowWindow( dfPlus2 )
.head 5 +  Else
.head 6 -  Call SalHideWindow( dfPlus )
.head 6 -  Call SalHideWindow( dfPlus2 )
.head 4 +  Else
.head 5 -  Call SalHideWindow( dfPlus )
.head 5 -  Call SalHideWindow( dfPlus2 )
.head 4 -  Call PalLectureCarte()
.head 1 -  ! Choix de la langue
.head 1 +  Dialog Box: dlgChoixLangue
.head 2 -  Class:
.head 2 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 2 -  Class DLL Name: QUIKPDLG.DLL
.head 2 -  Title: Langue
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 4.725"
.head 4 -  Top: 2.49"
.head 4 -  Width:  3.517"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.703"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pbSuite
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Suite >>
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 1.155"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbFR
.head 7 -  Set sChoixOut = 'F'
.head 6 +  Else If rbNL
.head 7 -  Set sChoixOut = 'N'
.head 6 +  Else If rbDe
.head 7 -  Set sChoixOut = 'D'
.head 6 -  Set bOk = TRUE
.head 6 -  Call SalSendMsg(hWndForm, SAM_Close,0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Vervolg >>' )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.155"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set bOk = FALSE
.head 6 -  Call SalSendMsg(hWndForm, SAM_Close,0,0)
.head 3 +  Radio Button: rbFR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Français
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 0.071"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Frans' )
.head 3 +  Radio Button: rbNL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Néérlandais
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 0.405"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Nederlands' )
.head 3 +  Radio Button: rbDe
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Allemand
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 0.738"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Deutch' )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: sChoix
.head 3 -  Receive Boolean: bOk
.head 3 -  Receive String: sChoixOut
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set bOk = FALSE
.head 4 +  If gsLangueSoft ='N'
.head 5 -  Call SalSetWindowText( hWndForm, 'Taal' )
.head 3 +  On SAM_CreateComplete
.head 4 +  If SalStrScan(sChoix, 'F') != - 1
.head 5 -  Call SalEnableWindow( rbFR )
.head 4 +  If SalStrScan(sChoix, 'N') != - 1
.head 5 -  Call SalEnableWindow( rbNL )
.head 4 +  If SalStrScan(sChoix, 'D') != - 1
.head 5 -  Call SalEnableWindow( rbDe )
.head 1 -  ! Choix du groupe
.head 1 +  Dialog Box: dlgChoixGroupe
.head 2 -  Class:
.head 2 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 2 -  Class DLL Name: QUIKPDLG.DLL
.head 2 -  Title: Groupe Linguistique
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 4.725"
.head 4 -  Top: 2.49"
.head 4 -  Width:  3.517"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.703"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Pushbutton: pbSuite
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Suite >>
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 1.155"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If rbFR
.head 7 -  Set sChoixOut = 'F'
.head 6 +  Else If rbNL
.head 7 -  Set sChoixOut = 'N'
.head 6 -  Set bOk = TRUE
.head 6 -  Call SalSendMsg(hWndForm, SAM_Close,0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Vervolg >>' )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.155"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set bOk = FALSE
.head 6 -  Call SalSendMsg(hWndForm, SAM_Close,0,0)
.head 3 +  Radio Button: rbFR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Français
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 0.071"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Frans' )
.head 3 +  Radio Button: rbNL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: Néérlandais
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 0.405"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Nederlands' )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Receive Boolean: bOk
.head 3 -  Receive String: sChoixOut
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set bOk = FALSE
.head 4 +  If gsLangueSoft ='N'
.head 5 -  Call SalSetWindowText( hWndForm, 'Taalgroep' )
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalEnableWindow( rbFR )
.head 4 -  Call SalEnableWindow( rbNL )
.head 1 -  !
.head 1 -  ! ===========================================================================
.head 1 -  ! Listes
.head 1 -  ! =====
.head 1 -  ! Ajout d'une liste et des candidats
.head 1 +  Dialog Box: dlgAddListe
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 9.088"
.head 4 -  Top: 3.26"
.head 4 -  Width:  8.45"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 5.262"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: N° Liste :
.head 4 -  Resource Id: 62706
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.179"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.226"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfNo
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.083"
.head 6 -  Top: 0.155"
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 99
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 +  If dfNo = NUMBER_Null or dfNo <= 0
.head 7 -  Call SalMessageBox(PalTraductMsg('ERR_NO_BV') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 7 -  Return (VALIDATE_Cancel)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Lijst Nr. :")
.head 3 -  Background Text: Nom :
.head 4 -  Resource Id: 62707
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.883"
.head 5 -  Top: 0.179"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDesc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 25
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.583"
.head 6 -  Top: 0.155"
.head 6 -  Width:  3.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Naam :")
.head 6 +  If frmGenere.wsScrutinEl = '2'
.head 7 -  Call SalSetMaxDataLength( hWndItem, 18 )
.head 3 -  Background Text: Nb. Max candidats :
.head 4 -  Resource Id: 33404
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.783"
.head 5 -  Top: 0.179"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfMax
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.483"
.head 6 -  Top: 0.155"
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set MyValue = nSiege
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Maximum aantal :")
.head 3 +  Radio Button: rbEff
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Effectifs
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.821"
.head 5 -  Width:  2.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Purple
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If nNoEl = 10
.head 7 +  If cmbGrL = 'FF'
.head 8 -  Set dfMax = nSiege
.head 7 +  Else
.head 8 -  Set dfMax = 17
.head 6 +  Else
.head 7 -  Set dfMax = nSiege
.head 6 +  If wParam != 5
.head 7 -  Set wnNbCdtSup = dfTotCdt
.head 6 -  Set dfTotCdt = wnNbCdt
.head 6 -  Set whTbl = tblCdt
.head 6 -  Call SalShowWindow( tblCdt )
.head 6 -  Call SalHideWindow( tblCdtSup )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Effectieven :")
.head 3 +  Radio Button: rbSupp
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Suppléants
.head 4 -  Window Location and Size
.head 5 -  Left: 2.683"
.head 5 -  Top: 0.821"
.head 5 -  Width:  1.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Purple
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set whTbl = tblCdtSup
.head 6 -  Set wnNbCdt = dfTotCdt
.head 6 -  Set dfTotCdt = wnNbCdtSup
.head 6 +  If nNoEl = 4 or nNoEl = 7
.head 7 +  If nSiege < 4
.head 8 -  Set dfMax = 4
.head 7 +  Else If nSiege > 16
.head 8 -  Set dfMax = 16
.head 7 +  Else
.head 8 -  Set dfMax = nSiege
.head 6 +  Else If nNoEl = 10
.head 7 -  Set dfMax = 16
.head 6 +  Else
.head 7 -  Set dfMax = SalNumberRound( nSiege / 2 + 0.49999) + 1
.head 7 +  If dfMax < 6 and (nNoEl = 1 or nNoEl = 2 or nNoEl = 3)
.head 8 -  Set dfMax = 6
.head 6 -  Call SalHideWindow( tblCdt )
.head 6 -  Call SalShowWindow( tblCdtSup )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Opvolgers :")
.head 3 +  Child Table: tblCdt
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.071"
.head 6 -  Width:  7.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Default
.head 5 -  Discardable? No
.head 4 +  Contents
.head 5 +  Column: TriSelect
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 2
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.TriSelect, 'Nr' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 1
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.817"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.colNom, 'Lijn 1' )
.head 8 +  If frmGenere.wsScrutinEl = '2'
.head 9 -  Call SalSetMaxDataLength ( tblCdt.colNom, 22 )
.head 5 +  Column: colNom2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 2
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.95"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdt.colNom2, 'Lijn 2' )
.head 8 +  If frmGenere.wsScrutinEl = '2'
.head 9 -  Call SalSetMaxDataLength ( tblCdt.colNom2, 22 )
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 3 +  Child Table: tblCdtSup
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.071"
.head 6 -  Width:  7.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Default
.head 5 -  Discardable? No
.head 4 +  Contents
.head 5 +  Column: TriSelect
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: 2
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.533"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSup.TriSelect, 'Nr' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 1
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.817"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSup.colNom, 'Lijn 1' )
.head 8 +  If frmGenere.wsScrutinEl = '2'
.head 9 -  Call SalSetMaxDataLength ( tblCdtSup.colNom, 22 )
.head 5 +  Column: colNom2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Ligne 2
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.95"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCdtSup.colNom2, 'Lijn 2' )
.head 8 +  If frmGenere.wsScrutinEl = '2'
.head 9 -  Call SalSetMaxDataLength ( tblCdtSup.colNom2, 22 )
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 3 +  Pushbutton: pbAddCdt
.data CLASSPROPSSIZE
0000: 1900
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 2.238"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPlus, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If dfTotCdt < dfMax
.head 7 -  Set nRow = SalTblInsertRow( whTbl, TBL_MaxRow )
.head 7 -  Call SalTblSetContext( whTbl, nRow )
.head 7 -  Call SalTblSetFocusRow( whTbl, nRow )
.head 7 -  Set dfTotCdt = dfTotCdt + 1
.head 7 +  If rbEff 
.head 8 -  Set tblCdt.TriSelect = dfTotCdt
.head 8 -  Set wnNbCdt = dfTotCdt
.head 7 +  Else
.head 8 -  Set tblCdtSup.TriSelect = dfTotCdt
.head 8 -  Set wnNbCdtSup = dfTotCdt
.head 7 -  Call SalTblSetRowFlags( whTbl, nRow, ROW_New, FALSE )
.head 7 -  Call SalTblSetFocusCell( whTbl, nRow, tblCdt.colNom, 0, -1 )
.head 7 -  !
.head 7 +  If SalTblAnyRows( tblCdt, 0,0) and SalTblAnyRows( tblCdtSup , 0,0)
.head 8 -  Call SalEnableWindow( pbOk )
.head 7 +  Else
.head 8 -  Call SalDisableWindow( pbOk )
.head 6 +  Else
.head 7 -  Call SalMessageBeep( -1 | MB_IconExclamation)
.head 6 -  Call PalVerifCdt(  )
.head 3 +  Pushbutton: pbDelCdt
.data CLASSPROPSSIZE
0000: 1900
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 2.655"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resDelete, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( whTbl, ROW_Selected, 0)
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalMessageBox( PalTraductMsg('LISTE12') , PalTraductMsg('QUESTION'), MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Call SalTblDeleteRow( whTbl, SalTblQueryContext(whTbl), TBL_NoAdjust )
.head 8 -  Call PalRenumCdt()
.head 8 +  If rbEff 
.head 9 -  Set wnNbCdt = dfTotCdt
.head 8 +  Else
.head 9 -  Set wnNbCdtSup = dfTotCdt
.head 6 +  If SalTblAnyRows( tblCdt, 0,0) and SalTblAnyRows( tblCdtSup , 0,0)
.head 7 -  Call SalEnableWindow( pbOk )
.head 6 +  Else
.head 7 -  Call SalDisableWindow( pbOk )
.head 6 -  Call PalVerifCdt(  )
.head 3 +  Pushbutton: pbUp
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 1.821"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalMoveRowUp(whTbl,whTbl.TriSelect)
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet(hWndItem, resMoveUp ,  PIC_FormatBitmap )
.head 3 +  Pushbutton: pbDown
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: clsBasePbOnForm
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 3.071"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Class Default
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Class Default
.head 4 -  Visible? Class Default
.head 4 -  Keyboard Accelerator: Class Default
.head 4 -  Font Name: Class Default
.head 4 -  Font Size: Class Default
.head 4 -  Font Enhancement: Class Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Class Default
.head 4 -  Image Style: Class Default
.head 4 -  Text Color: Class Default
.head 4 -  Background Color: Class Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalMoveRowDown(whTbl,whTbl.TriSelect)
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet(hWndItem, resMoveDown ,  PIC_FormatBitmap )
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 2.483"
.head 5 -  Top: 4.655"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call PalSaveListe()
.head 6 -  Call VisWaitCursor(FALSE)
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 5.283"
.head 5 -  Top: 4.655"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close , 0,0)
.head 3 +  Data Field: dfTotCdt
.data INHERITPROPS
0000: 0100
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D6530000000 00
.enddata
.data CLASSPROPSSIZE
0000: 1900
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: Number
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.483"
.head 6 -  Top: 4.643"
.head 6 -  Width:  0.667"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Purple
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 -  Frame
.head 4 -  Resource Id: 43138
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.738"
.head 5 -  Width:  8.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 3.88"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: Gr. Linguistique:
.head 4 -  Resource Id: 50490
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.383"
.head 5 -  Top: 0.512"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbGrL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32.2005\langue\qo_lang32.exe,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 0.464"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.357"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 +  List Initialization
.head 5 -  Text: FF
.head 5 -  Text: NN
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If cmbGrL = 'FF'
.head 7 +  If rbEff
.head 8 -  Set dfMax = 72
.head 7 +  Else
.head 8 -  Set dfMax = 16
.head 6 +  Else
.head 7 +  If rbEff
.head 8 -  Set dfMax = 17
.head 7 +  Else
.head 8 -  Set dfMax = 16
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Taalgroep :")
.head 2 +  Functions
.head 3 +  Function: PalSaveListe
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsChamp
.head 5 -  String: lsNoListe
.head 5 -  String: sNoCdt
.head 5 -  String: lsWhere
.head 5 -  String: lsDisIns
.head 5 -  String: lsProIns	
.head 5 -  String: lsCanIns
.head 5 -  Number: nNbCdtEnreg
.head 5 -  Number: nRow
.head 5 -  Boolean: bContinue
.head 4 +  Actions
.head 5 +  If dfNo <= 0 or dfNo = NUMBER_Null
.head 6 -  ! Erreur dans le  n° de la liste
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE22' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  If dfDesc = '' 
.head 6 -  ! Erreur dans le nom de la liste
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE23' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  Else If NOT SalTblAnyRows( tblCdt, 0,0) 
.head 6 -  ! Erreur : aucun candidat encodé pour cette liste
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE24' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  Else If NOT SalTblAnyRows( tblCdtSup, 0,0) and ( nNoEl = 2 or nNoEl = 3 ) 
.head 6 -  ! Erreur : aucun suppléant encodé pour cette liste
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE25' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 +  Else
.head 6 -  Set bContinue = TRUE
.head 5 +  If not bContinue
.head 6 -  Return (FALSE)
.head 5 -  !
.head 5 +  If nNoEl = 2 or nNoEl = 3  
.head 6 +  If ( SalNumberRound((wnNbCdt/2)+0.49999) + 1 > 6 and (SalNumberRound((wnNbCdt/2)+0.49999) + 1 < wnNbCdtSup or  wnNbCdtSup < 6) )
   OR
   (  wnNbCdt < 12 and wnNbCdtSup != 6 )
.head 7 +  If SalMessageBox( PalTraductMsg( 'LISTE15' ) || "
" || PalTraductMsg( 'XML18' ), PalTraductMsg( 'ATTENTION' ), MB_OkCancel | MB_DefButton2 ) = IDCANCEL
.head 8 -  Return (FALSE)
.head 5 -  !
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call SalDisableWindow(hWndForm)
.head 5 -  Set lsNoListe = SalStrRightX('000' || SalNumberToStrX( dfNo, 0) , 3)
.head 5 +  If nNoEl = 5
.head 6 -  Set lsChamp = 'DIS_INS'
.head 5 +  Else If nNoEl = 2  or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 6 -  Set lsChamp = 'CIRC_INS'
.head 5 +  Else If nNoEl = 3 or nNoEl = 1
.head 6 -  Set lsChamp = 'COLL_INS'
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from LISTES where " || lsChamp || "!= :sIns and LIS_NO = :lsNoListe and El_NO = :nNoEl  " )
.head 6 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  ! Ce numéro de liste existe deja dans l'autre collège
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LISTE21' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Call SalEnableWindow(hWndForm)
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  Set lsChamp = 'COM_INS'
.head 5 +  If sType = 'M'
.head 6 -  Set lsWhere = " and LIS_NO != :sNoListe "
.head 5 +  Else
.head 6 -  Set lsWhere = ""
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from LISTES where " || lsChamp || "= :sIns and LIS_NO = :lsNoListe and El_NO = :nNoEl  " || lsWhere )
.head 5 +  If NOT SqlFetchNext( ghSqlMain, Btmp) and bContinue
.head 6 +  If sType = 'A'
.head 7 +  If nNoEl = 5
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins  from Commune where " || lsChamp || "= :sIns into :lsProIns" )
.head 7 +  Else If nNoEl = 2 or nNoEl = 3 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11 or nNoEl = 1
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins  from Base_Commune where " || lsChamp || "= :sIns into :lsProIns" )
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Pro_ins,Dis_ins,Can_ins  from Commune where " || lsChamp || "= :sIns into :lsProIns,:lsDisIns,:lsCanIns" )
.head 7 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set bContinue = FALSE
.head 6 -  ! Sauve Cdts
.head 6 +  If bContinue
.head 7 +  If sType = 'M'
.head 8 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Delete from  Candidats where  " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl " )
.head 9 -  Set bContinue = FALSE
.head 7 -  Set nRow = -1
.head 7 -  Set wnNbCdt = 0
.head 7 +  While SalTblFindNextRow( tblCdt, nRow, 0, 0 )
.head 8 -  Call SalTblSetContext( tblCdt, nRow )
.head 8 -  Call SalTblSetFocusRow( tblCdt, nRow )
.head 8 +  If tblCdt.colNom != '' or tblCdt.colNom2 != ''
.head 9 -  Set sNoCdt = SalStrRightX('000' || SalNumberToStrX( tblCdt.TriSelect,0) , 3)
.head 9 +  If nNoEl = 5
.head 10 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Pro_ins,Dis_ins,Lis_no,El_NO,Cdt_no, Cdt_ligne1, Cdt_Ligne2) 
	values (  :lsProIns,:sIns,:lsNoListe, :nNoEl, :sNoCdt, :tblCdt.colNom, :tblCdt.colNom2) " )
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 9 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 10 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Circ_ins, Lis_no,El_NO,Cdt_no, Cdt_ligne1, Cdt_Ligne2, Cdt_Type) 
	values (  :sIns,:lsNoListe, :nNoEl, :sNoCdt, :tblCdt.colNom, :tblCdt.colNom2, 'E') " )
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 9 +  Else If nNoEl = 3 or nNoEl = 1
.head 10 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Coll_ins, Lis_no,El_NO,Cdt_no, Cdt_ligne1, Cdt_Ligne2, Cdt_Type) 
	values (  :sIns,:lsNoListe, :nNoEl, :sNoCdt, :tblCdt.colNom, :tblCdt.colNom2, 'E') " )
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 9 +  Else
.head 10 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Pro_ins,Dis_ins,Can_ins,Com_ins,El_NO,Lis_no,Cdt_no, Cdt_ligne1, Cdt_Ligne2) 
	values (  :lsProIns,:lsDisIns,:lsCanIns,:sIns, :nNoEl,:lsNoListe, :sNoCdt, :tblCdt.colNom, :tblCdt.colNom2) " )
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 9 -  Set wnNbCdt = wnNbCdt + 1
.head 8 +  Else
.head 9 -  Set bContinue = FALSE
.head 9 -  Break
.head 7 +  If bContinue
.head 8 -  Set nRow = -1
.head 8 -  Set wnNbCdtSup = 0
.head 8 +  While SalTblFindNextRow( tblCdtSup, nRow, 0, 0 )
.head 9 -  Call SalTblSetContext( tblCdtSup, nRow )
.head 9 -  Call SalTblSetFocusRow( tblCdtSup, nRow )
.head 9 +  If tblCdtSup.colNom != '' or tblCdtSup.colNom2 != ''
.head 10 -  Set sNoCdt = SalStrRightX('000' || SalNumberToStrX( tblCdtSup.TriSelect,0) , 3)
.head 10 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 11 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Circ_ins, Lis_no,El_NO,Cdt_no, Cdt_ligne1, Cdt_Ligne2, Cdt_Type) 
	values (  :sIns,:lsNoListe, :nNoEl, :sNoCdt, :tblCdtSup.colNom, :tblCdtSup.colNom2, 'S') " )
.head 12 -  Set bContinue = FALSE
.head 12 -  Break
.head 10 +  Else If nNoEl = 3 or nNoEl = 1
.head 11 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Candidats( Coll_ins, Lis_no,El_NO,Cdt_no, Cdt_ligne1, Cdt_Ligne2, Cdt_Type) 
	values (  :sIns,:lsNoListe, :nNoEl, :sNoCdt, :tblCdtSup.colNom, :tblCdtSup.colNom2, 'S') " )
.head 12 -  Set bContinue = FALSE
.head 12 -  Break
.head 10 -  Set wnNbCdtSup = wnNbCdtSup + 1
.head 9 +  Else
.head 10 -  Set bContinue = FALSE
.head 10 -  Break
.head 7 +  If bContinue
.head 8 -  Call SalTblSetContext( tblCdt, 0 )
.head 8 -  Call SalTblSetFocusRow( tblCdt, 0 )
.head 7 -  !
.head 6 +  If bContinue
.head 7 +  If sType = 'A'
.head 8 +  If nNoEl = 5
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Listes (Pro_ins,Dis_ins,Lis_no,Lis_nom,El_NO,Lis_nb_Eff)
	Values( :lsProIns,:sIns,:lsNoListe,:dfDesc,:nNoEl, :wnNbCdt) " )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 11
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Listes (Circ_ins,Lis_no,Lis_nom,El_NO,Lis_nb_Eff, lis_nb_supp)
	Values( :sIns,:lsNoListe,:dfDesc,:nNoEl, :wnNbCdt, :wnNbCdtSup) " )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else If nNoEl = 10
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Listes (Circ_ins,Lis_no,Lis_nom,El_NO,Lis_nb_Eff, lis_nb_supp, LIS_GrL)
	Values( :sIns,:lsNoListe,:dfDesc,:nNoEl, :wnNbCdt, :wnNbCdtSup, :cmbGrL ) " )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else If nNoEl = 3 or nNoEl = 1
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Listes (Coll_ins,Lis_no,Lis_nom,El_NO,Lis_nb_Eff, lis_nb_supp)
	Values( :sIns,:lsNoListe,:dfDesc,:nNoEl, :wnNbCdt, :wnNbCdtSup) " )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Insert into Listes (Pro_ins,Dis_ins,Can_ins,Com_ins,Lis_no,Lis_nom,El_NO,Lis_nb_Eff)
	Values( :lsProIns,:lsDisIns,:lsCanIns,:sIns,:lsNoListe,:dfDesc,:nNoEl,:wnNbCdt) " )
.head 10 -  Set bContinue = FALSE
.head 7 +  Else If sType = 'M'
.head 8 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Update LISTES Set Lis_no = :lsNoListe, LIs_Nom = :dfDesc, Lis_Nb_Eff = :wnNbCdt, Lis_Nb_Supp = :wnNbCdtSup
		where " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl " )
.head 9 -  Set bContinue = FALSE
.head 6 -  !
.head 6 +  If bContinue
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  Set sNoListeActive = lsNoListe
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Call SalEnableWindow(hWndForm)
.head 7 -  ! Trace
.head 7 +  If sType = 'M'
.head 8 -  Set sTrace = "INS: " || sIns ||'   -   LI N°' || sNoListe || ' - EL ' || SalNumberToStrX(nNoEl,0) || '  -->   '
.head 8 +  If sNoListe != lsNoListe
.head 9 -  Set sTrace = sTrace || 'New LI N°' || lsNoListe || '  --> '
.head 8 -  Call PalTraceAction( gsUserLog, "MODIF LI", sTrace || 'OK')
.head 7 +  Else
.head 8 -  Set sTrace = 'INS: ' || sIns ||'   - EL ' || SalNumberToStrX(nNoEl,0) || '  -->  LI N°' || sNoListe || ' - ' || dfDesc || '  --> '
.head 8 -  Call PalTraceAction( gsUserLog, "CREAT LI", sTrace || 'OK')
.head 7 -  !
.head 7 -  Set bListeOk = TRUE
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 7 -  Return (TRUE)
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LISTE26' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Call SalEnableWindow(hWndForm)
.head 7 -  Return (FALSE)
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LISTE11' ), PalTraductMsg( 'ATTENTION' ), MB_Ok )
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  Call SalEnableWindow(hWndForm)
.head 6 -  Return (FALSE)
.head 3 +  Function: PalMoveRowUp
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWndTble
.head 5 -  Window Handle: hWndCol
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRowDelete
.head 5 -  String: lsNoLiOld
.head 5 -  String: lsNoLiNew
.head 5 -  Number: nCurrentRow
.head 4 +  Actions
.head 5 +  If SalTblAnyRows(hWndTble,ROW_Selected,0)
.head 6 -  Call SalGetWindowText(hWndCol,lsNoLiOld,254)
.head 6 -  Set nCurrentRow= SalTblQueryContext( hWndTble )
.head 6 -  Call SalTblSetContext( hWndTble,nCurrentRow-1 )
.head 6 -  Call SalGetWindowText(hWndCol,lsNoLiNew,254)
.head 6 -  Call SalSetWindowText(hWndCol,lsNoLiOld)
.head 6 -  Call SalTblSetContext( hWndTble,nCurrentRow )
.head 6 -  Call SalSetWindowText(hWndCol,lsNoLiNew)
.head 6 -  Call SalTblSortRows( hWndTble, SalTblQueryColumnPos ( hWndCol ), 1 )
.head 6 -  Call SalTblSetFocusRow(hWndTble,nCurrentRow-1 )
.head 6 -  Call SalTblSetContext(hWndTble,nCurrentRow-1 )
.head 3 +  Function: PalMoveRowDown
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWndTble
.head 5 -  Window Handle: hWndCol
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRowDelete
.head 5 -  String: lsNoLiOld
.head 5 -  String: lsNoLiNew
.head 5 -  Number: nCurrentRow
.head 4 +  Actions
.head 5 +  If SalTblAnyRows(hWndTble,ROW_Selected,0)
.head 6 -  Call SalGetWindowText(hWndCol,lsNoLiOld,254)
.head 6 -  Set nCurrentRow= SalTblQueryContext( hWndTble )
.head 6 -  Call SalTblSetContext( hWndTble,nCurrentRow+1 )
.head 6 -  Call SalGetWindowText(hWndCol,lsNoLiNew,254)
.head 6 -  Call SalSetWindowText(hWndCol,lsNoLiOld)
.head 6 -  Call SalTblSetContext( hWndTble,nCurrentRow )
.head 6 -  Call SalSetWindowText(hWndCol,lsNoLiNew)
.head 6 -  Call SalTblSortRows( hWndTble, SalTblQueryColumnPos ( hWndCol ), 1 )
.head 6 -  Call SalTblSetFocusRow(hWndTble,nCurrentRow+1 )
.head 6 -  Call SalTblSetContext(hWndTble,nCurrentRow+1 )
.head 3 +  Function: PalPopulateCdt
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: bEff
.head 5 -  Window Handle: hTbl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsChamp
.head 5 -  String: lsNoListe
.head 5 -  String: lsCdtType
.head 5 -  Number: lnCdt
.head 4 +  Actions
.head 5 +  If nNoEl = 5 or nNoEl = 6 or nNoEl = 8 or nNoEl = 9
.head 6 +  If nNoEl = 5
.head 7 -  Set lsChamp = 'DIS_INS'
.head 6 +  Else
.head 7 -  Set lsChamp = 'COM_INS'
.head 6 -  Call SalTblPopulate(hTbl,  ghSqlMain, "Select Cdt_no, Cdt_Ligne1, Cdt_Ligne2 from candidats
	where " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl 
	order by 1
	into :tblCdt.TriSelect ,:tblCdt.colNom,:tblCdt.colNom2 ", TBL_FillAll )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from candidats where  " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl 
	into :dfTotCdt ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 5 +  Else If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 6 +  If bEff 
.head 7 -  Set lsCdtType = 'E'
.head 6 +  Else
.head 7 -  Set lsCdtType = 'S'
.head 6 -  Set lsChamp = 'CIRC_INS'
.head 6 -  Call SalTblPopulate(hTbl,  ghSqlMain, "Select Cdt_no, Cdt_Ligne1, Cdt_Ligne2 from candidats
	where " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl and cdt_type = :lsCdtType
	order by 1
	into :hTbl.TriSelect ,:hTbl.colNom,:hTbl.colNom2 ", TBL_FillAll )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from candidats where  " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl and cdt_type = :lsCdtType
	into :lnCdt ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If bEff 
.head 7 -  Set wnNbCdt = lnCdt
.head 6 +  Else
.head 7 -  Set wnNbCdtSup = lnCdt
.head 6 -  Call PalVerifCdt(  )
.head 5 +  Else If nNoEl = 3 or nNoEl = 1
.head 6 +  If bEff 
.head 7 -  Set lsCdtType = 'E'
.head 6 +  Else
.head 7 -  Set lsCdtType = 'S'
.head 6 -  Set lsChamp = 'COLL_INS'
.head 6 -  Call SalTblPopulate(hTbl,  ghSqlMain, "Select Cdt_no, Cdt_Ligne1, Cdt_Ligne2 from candidats C, Listes L
	where L." || lsChamp || "= :sIns and L.COLL_INS = C.COLL_INS and C.LIS_NO =L.LIS_NO and C.El_NO =L.EL_NO and C.LIS_NO = :sNoListe and C.El_NO = :nNoEl and cdt_type = :lsCdtType
	order by 1
	into :hTbl.TriSelect ,:hTbl.colNom,:hTbl.colNom2 ", TBL_FillAll )
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select count(*) from candidats where  " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl and cdt_type = :lsCdtType
	into :lnCdt ")
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If bEff 
.head 7 -  Set wnNbCdt = lnCdt
.head 6 +  Else
.head 7 -  Set wnNbCdtSup = lnCdt
.head 5 -  Call SqlCommit(ghSqlMain )
.head 3 +  Function: PalRenumCdt
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Number: nCdt
.head 4 +  Actions
.head 5 -  Set nRow = -1
.head 5 -  Set nCdt = 0
.head 5 +  While SalTblFindNextRow( whTbl, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( whTbl, nRow )
.head 6 -  Call SalTblSetFocusRow( whTbl, nRow )
.head 6 -  Set nCdt = nCdt + 1
.head 6 -  Set whTbl.TriSelect = nCdt
.head 5 -  Call SalTblSetContext( whTbl, 0 )
.head 5 -  Call SalTblSetFocusRow( whTbl, 0 )
.head 5 -  Set dfTotCdt = nCdt
.head 3 +  Function: PalVerifCdt
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsChamp
.head 5 -  String: lsNoListe
.head 5 -  String: lsCdtType
.head 5 -  Number: lnCdt
.head 4 +  Actions
.head 5 +  If nNoEl = 10
.head 6 +  If SalTblAnyRows( tblCdt, 0,0 ) or SalTblAnyRows( tblCdtSup, 0, 0)
.head 7 -  Call SalDisableWindow( cmbGrL )
.head 6 +  Else
.head 7 -  Call SalEnableWindow( cmbGrL )
.head 2 +  Window Parameters
.head 3 -  String: sType
.head 3 -  String: sIns
.head 3 -  Number: nSiege
.head 3 -  Number: nNoEl
.head 3 -  String: sNoListe
.head 3 -  String: sNomListe
.head 3 -  String: sNbCdt
.head 3 -  Receive String: sNoListeActive
.head 2 +  Window Variables
.head 3 -  Window Handle: whTbl
.head 3 -  Number: wnNbCdt
.head 3 -  Number: wnNbCdtSup
.head 3 -  Number: nRow
.head 3 -  Boolean: wbOk
.head 3 -  String: sTrace
.head 3 -  Boolean: bListeOk
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 3 +  On SAM_CreateComplete
.head 4 -  Set sNoListeActive = ''
.head 4 -  Set dfTotCdt = 0
.head 4 -  Set bListeOk = FALSE
.head 4 +  If sType = 'M'
.head 5 -  Set dfNo = SalStrToNumber( sNoListe )
.head 5 -  Set dfDesc = sNomListe
.head 5 -  Set wnNbCdt = SalStrToNumber( sNbCdt )
.head 5 -  Call PalPopulateCdt( 1 , tblCdt )
.head 5 +  If nNoEl = 5 or nNoEl = 6 or nNoEl = 8 or nNoEl = 9
.head 6 -  Set rbEff = TRUE
.head 6 -  Call SalHideWindow( rbEff )
.head 6 -  Call SalHideWindow( rbSupp )
.head 5 +  Else
.head 6 -  Call PalPopulateCdt( 0 , tblCdtSup )
.head 5 -  ! Trace
.head 5 -  Set sTrace = "INS: " || sIns ||'   -   LI N°' || sNoListe || ' - EL ' || SalNumberToStrX(nNoEl,0) || '  -->   '
.head 5 -  Call PalTraceAction( gsUserLog, "MODIF LI", sTrace || 'PREPA')
.head 5 -  !
.head 4 +  Else
.head 5 -  ! Trace
.head 5 -  Set sTrace = "INS: " || sIns ||'   - EL ' || SalNumberToStrX(nNoEl,0) || '  -->   '
.head 5 -  Call PalTraceAction( gsUserLog, "CREAT LI", sTrace || 'PREPA')
.head 5 -  !
.head 4 -  Call SalSendMsg( rbEff, SAM_Click, 5,0)
.head 4 +  If SalTblAnyRows( tblCdt, 0,0) and SalTblAnyRows( tblCdtSup , 0,0)
.head 5 -  Call SalEnableWindow( pbOk )
.head 4 +  Else
.head 5 -  Call SalDisableWindow( pbOk )
.head 4 -  Call SalSetFocus( dfNo )
.head 4 +  If nNoEl = 10
.head 5 -  Call SalShowWindowAndLabel( cmbGrL )
.head 5 +  If sType = 'M'
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select LIS_Grl from LISTES where CIRC_INS= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl 
	into :cmbGrL " )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call SalDisableWindow( cmbGrL )
.head 5 +  Else
.head 6 -  Call SalListSetSelect( cmbGrL, 0 )
.head 5 -  Call SalSendMsg( cmbGrL, SAM_Click, 0,0 )
.head 4 +  Else
.head 5 -  Call SalHideWindowAndLabel( cmbGrL )
.head 3 +  On SAM_Close
.head 4 -  !
.head 4 +  If NOT bListeOk
.head 5 +  If sType = 'M'
.head 6 -  Call PalTraceAction( gsUserLog, "MODIF LI", sTrace || 'Cancel')
.head 5 +  Else
.head 6 -  Call PalTraceAction( gsUserLog, "CREAT LI", sTrace || 'Cancel')
.head 4 -  !
.head 1 -  ! Import Logo liste
.head 1 +  Dialog Box: dlgImportLogo
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.733"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.714"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Fichier:
.head 4 -  Resource Id: 48067
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.095"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfFileName
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.383"
.head 6 -  Top: 0.25"
.head 6 -  Width:  5.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'File:' )
.head 3 +  Pushbutton: pbLoad
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ?
.head 4 -  Window Location and Size
.head 5 -  Left: 6.2"
.head 5 -  Top: 0.238"
.head 5 -  Width:  0.283"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Light Gray
.head 4 -  Background Color: Black
.head 4 -  Button Appearance: Flat Look
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalDlgOpenFile( hWndForm, 'BMP File', strFilters, 2, nIndex, strFileName, strPathFileName )
.head 7 -  Set dfFileName = strPathFileName
.head 7 -  Call SalPicSetFile( picLogo, dfFileName )
.head 5 +  On SAM_Create
.head 6 -  Set strFilters[0] = 'BMP Files'
.head 6 -  Set strFilters[1] = '*.BMP'
.head 6 -  Set nIndex = 1
.head 3 -  Background Text: Prévisualisation:
.head 4 -  Resource Id: 48068
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.762"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Picture: picLogo
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.083"
.head 5 -  Top: 0.571"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Scale
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Outlook:' )
.head 3 +  Pushbutton: pbAccept
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 1.238"
.head 5 -  Width:  1.883"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If dfFileName != ''
.head 7 +  If PalSaveLogo()
.head 8 -  Set bAddOk = TRUE
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LISTE19' ), PalTraductMsg('ERR') , MB_Ok )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: FERMER
.head 4 -  Window Location and Size
.head 5 -  Left: 3.683"
.head 5 -  Top: 1.238"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'SLUITEN' )
.head 2 +  Functions
.head 3 +  Function: PalSaveLogo
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sFile
.head 5 -  String: lsChamp
.head 4 +  Actions
.head 5 +  If PalVerifLogo( dfFileName )
.head 6 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 7 -  Set sFile = SalNumberToStrX( nNoEl, 0) || SalStrRightX( '00' || sNoListe, 2) || sColl || "_" || sIns ||".BMP"
.head 6 +  Else
.head 7 -  Set sFile = SalNumberToStrX( nNoEl, 0) || SalStrRightX( '00' || sNoListe, 2) || sColl || ".BMP"
.head 6 +  If VisFileCopy( dfFileName, gsPathLogo || sFile )
.head 7 +  If nNoEl = 2 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 8 -  Set lsChamp = 'CIRC_INS'
.head 7 +  Else If nNoEl = 3 or nNoEl = 1
.head 8 -  Set lsChamp = 'COLL_INS'
.head 7 +  If SqlPrepareAndExecute( ghSqlMain, "Update LISTES Set Lis_logo = :sFile
		where " || lsChamp || "= :sIns and LIS_NO = :sNoListe and El_NO = :nNoEl " )
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  !
.head 8 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'ADD OK
' || dfFileName ||'   ->  ' || gsPathLogo || sFile)
.head 8 -  !
.head 8 -  Return ( TRUE )
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain,"ROLLBACK")
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV32' ), PalTraductMsg( 'ERR' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ), PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 3 +  Function: PalVerifLogo
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sLogo
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Number: nTailleFile
.head 5 -  Number: nTaille
.head 5 -  Number: nCouleur
.head 5 -  Number: nLargeur
.head 5 -  Number: nHauteur
.head 5 -  Boolean: bOk
.head 5 -  String: sBuffer
.head 4 +  Actions
.head 5 -  Set nTailleFile = VisFileGetSize( sLogo)
.head 5 -  Call SalFileOpen( hFile, sLogo , OF_Read |  OF_Binary | OF_Text )
.head 5 -  Call SalFileRead( hFile, sBuffer, 100 )
.head 5 -  Call SalFileClose( hFile )
.head 5 -  Set nTaille = CStructGetByte( sBuffer, 2 )
.head 5 -  Set nCouleur = CStructGetByte( sBuffer, 28 )
.head 5 -  Set nLargeur = CStructGetByte( sBuffer, 18 )
.head 5 -  Set nHauteur = CStructGetByte( sBuffer, 22 )
.head 5 +  If nTailleFile <= 376
.head 6 +  If (nTailleFile = 376 and nTaille = 120) or (nTailleFile = 374 and nTaille = 118)
.head 7 +  If nCouleur = 1
.head 8 +  If nLargeur = 78 and nHauteur = 26
.head 9 -  Set bOk = TRUE
.head 8 +  Else
.head 9 -  Set bOk = FALSE
.head 7 +  Else
.head 8 -  Set bOk = FALSE
.head 6 +  Else
.head 7 -  Set bOk = FALSE
.head 5 +  Else
.head 6 -  Set bOk = FALSE
.head 5 -  !
.head 5 +  If not bOk
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LOGO3' ), PalTraductMsg( 'ERR' ), MB_Ok )
.head 5 -  !
.head 5 -  Return (bOk)
.head 2 +  Window Parameters
.head 3 -  Number: nNoEl
.head 3 -  String: sColl
.head 3 -  String: sNoListe
.head 3 -  String: sIns
.head 2 +  Window Variables
.head 3 -  Number: nIndex
.head 3 -  String: strFilters[*]
.head 3 -  String: strFileName
.head 3 -  String: strPathFileName
.head 3 -  String: sTrace
.head 3 -  Boolean: bAddOk
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Logo invoeren voor een lijst")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Import du logo pour une liste")
.head 4 -  Set bAddOk = FALSE
.head 4 -  ! Trace
.head 4 -  Set sTrace = "INS: " || sIns ||'   -   LI N°' || sNoListe || ' - EL ' || SalNumberToStrX(nNoEl,0) || '  -->   '
.head 4 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'ADD')
.head 4 -  !
.head 3 +  On SAM_Close
.head 4 -  !
.head 4 +  If NOT bAddOk
.head 5 -  Call PalTraceAction( gsUserLog, "BMP", sTrace || 'Cancel')
.head 4 -  !
.head 1 -  ! Import Format F
.head 1 +  Dialog Box: dlgLoadFormatF
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  7.083"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.56"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Fichier:
.head 4 -  Resource Id: 19665
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.095"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfFileName
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.383"
.head 6 -  Top: 0.25"
.head 6 -  Width:  5.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'File:' )
.head 3 +  Pushbutton: pbLoad
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ?
.head 4 -  Window Location and Size
.head 5 -  Left: 6.2"
.head 5 -  Top: 0.238"
.head 5 -  Width:  0.283"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Light Gray
.head 4 -  Background Color: Black
.head 4 -  Button Appearance: Flat Look
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalDlgOpenFile( hWndForm, 'Format F File', strFilters, 2, nIndex, strFileName, strPathFileName )
.head 7 -  Set dfFileName = strPathFileName
.head 7 -  Set dfRepName = ''
.head 5 +  On SAM_Create
.head 6 -  Set strFilters[0] = 'Format F Files'
.head 6 -  Set strFilters[1] = '*.*'
.head 6 -  Set nIndex = 1
.head 3 -  Background Text: Tous les fichiers du répertoire :
.head 4 -  Resource Id: 19666
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.095"
.head 5 -  Width:  3.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfRepName
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.383"
.head 6 -  Top: 0.238"
.head 6 -  Width:  5.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Alle bestanden van de map:' )
.head 3 +  Pushbutton: pbLoadRep
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ?
.head 4 -  Window Location and Size
.head 5 -  Left: 6.183"
.head 5 -  Top: 0.238"
.head 5 -  Width:  0.283"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Light Gray
.head 4 -  Background Color: Black
.head 4 -  Button Appearance: Flat Look
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalDlgOpenFile( hWndForm, 'Format F File', strFilters, 2, nIndex, strFileName, strPathFileName )
.head 7 -  Set dfRepName = VisStrSubstitute( strPathFileName, strFileName, '' ) || strFilters[1]
.head 7 -  Set dfFileName = ''
.head 5 +  On SAM_Create
.head 6 -  Set strFilters[0] = 'Format F Files'
.head 6 -  Set strFilters[1] = '*.*'
.head 6 -  Set nIndex = 1
.head 3 +  Check Box: cbValid
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Validation des listes automatiquement
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.571"
.head 5 -  Width:  5.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Automatische validatie van de lijsten' )
.head 3 +  Check Box: cbArret
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Arrêt sur chaque erreur identifiée
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.821"
.head 5 -  Width:  4.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Stoppen bij elke geïdentificeerde fout' )
.head 3 +  Pushbutton: pbAccept
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 1.3"
.head 5 -  Top: 1.083"
.head 5 -  Width:  1.883"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If (dfFileName != '' and Not nAutomatique) or  (dfRepName != '' and nAutomatique)
.head 7 -  Call SalWaitCursor( TRUE )
.head 7 -  Call SalHideWindow( hWndForm )
.head 7 +  If NOT nAutomatique
.head 8 -  Call SalShowWindow( frmGenere.dfLibelleInfo)
.head 8 -  Call SalBringWindowToTop( frmGenere.dfLibelleInfo )
.head 8 -  Set frmGenere.dfLibelleInfo = PalTraductMsg( 'TRAITE' ) ||' : ' ||  dfFileName
.head 8 -  Call DispatchMessage(  )
.head 8 -  Call PalInitStruct( dfFileName )
.head 8 -  ! Trace
.head 8 -  Set sTrace = dfFileName || ' - '
.head 8 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' PREPA')
.head 8 -  !
.head 8 -  !
.head 8 +  If PalLoadF( dfFileName, psIns, pnNbCdtMax, pnNoEl  )
.head 9 +  If PalChargeListe( dfFileName, pnNoEl, psIns, pnNbCdtMax )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'Load OK')
.head 10 -  !
.head 10 +  If cbValid
.head 11 +  If frmGenere.PalValidateListe( psIns, pnNoEl, 1, pnNbCdtMax , TRUE, sBuffer )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || sBuffer)
.head 12 -  !
.head 11 +  Else
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. ' || sBuffer)
.head 12 -  !
.head 9 +  Else
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. chargement liste')
.head 10 -  !
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( PalTraductMsg('ERR') , PalTraductMsg('MSG'), MB_Ok )
.head 8 +  Else
.head 9 -  ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. load Format F (structure) ')
.head 9 -  !
.head 8 -  Call SalFileClose( hFile)
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close,0,0 )
.head 8 -  !
.head 8 -  Call DispatchMessage(  )
.head 8 -  Call SalHideWindow( frmGenere.dfLibelleInfo)
.head 8 -  Call SalShowWindow( hWndForm )
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close,0,0 )
.head 7 +  Else
.head 8 -  Call SalLoadAuto( )
.head 8 -  Call SalShowWindow( hWndForm )
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close,0,0 )
.head 7 -  Call SalWaitCursor( FALSE )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: FERMER
.head 4 -  Window Location and Size
.head 5 -  Left: 4.083"
.head 5 -  Top: 1.071"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'SLUITEN' )
.head 2 +  Functions
.head 3 +  Function: PalInitStruct
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  Number: j
.head 4 +  Actions
.head 5 -  !
.head 5 -  Set wsG[0] = ''
.head 5 -  Set wsS[0] = ''
.head 5 -  Set wsS[1] = ''
.head 5 -  Set i = 0
.head 5 +  While i <= 100
.head 6 -  Set wsL[i, 0] = ''
.head 6 -  Set wsL[i, 1] = ''
.head 6 +  While j <= 100
.head 7 -  Set wsC[i,j, 0] = ''
.head 7 -  Set wsC[i,j, 1] = ''
.head 7 -  Set j = j + 1
.head 6 -  Set i = i + 1
.head 5 -  Return (TRUE)
.head 3 +  Function: PalLoadF
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sFile
.head 5 -  String: sIns
.head 5 -  Number: nSiege
.head 5 -  Number: nNoEl
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Boolean: bContinue
.head 5 -  Number: nIndice
.head 5 -  Long String: sBuffer
.head 5 -  Long String: sErrCaract
.head 5 -  String: sDonnee[*]
.head 5 -  String: sBuffer2
.head 5 -  String: sTmp
.head 5 -  String: lsTypeF
.head 5 -  Long String: sErreur
.head 5 -  Long String: sErreurAffich
.head 5 -  Number: nSiegeSuppl
.head 5 -  Number: i
.head 5 -  Number: lnI
.head 5 -  Number: nNo
.head 5 -  Number: nLigne
.head 5 -  Number: nLongNom
.head 5 -  Number: nLongNomListe
.head 5 -  Boolean: bOk
.head 5 -  Boolean: lbPW_Suppl
.head 5 -  String: sSexeE[100, 100]
.head 5 -  String: sSexeS[100, 100]
.head 5 -  Number: nHommeE[*]
.head 5 -  Number: nFemmeE[*]
.head 5 -  Number: nHommeS[*]
.head 5 -  Number: nFemmeS[*]
.head 5 -  Boolean: bSenatBHV
.head 4 +  Actions
.head 5 -  Call DispatchMessage(  )
.head 5 -  Set sErreur = ''
.head 5 +  If frmGenere.wsScrutinEl = '2'
.head 6 -  Set nLongNom = 22
.head 6 -  Set nLongNomListe = 18
.head 5 +  Else
.head 6 -  Set nLongNom = 25
.head 6 -  Set nLongNomListe = 25
.head 5 -  Set bContinue = TRUE
.head 5 -  Set nIndice = 0
.head 5 -  Set nLigne = 0
.head 5 +  If nNoEl = 2 or nNoEl = 3 or nNoEl = 1
.head 6 +  If nSiege < 12
.head 7 -  Set nSiegeSuppl = 6
.head 6 +  Else
.head 7 -  Set nSiegeSuppl = SalNumberRound(  ( nSiege /2)+0.49999 ) + 1
.head 5 +  Else
.head 6 +  If nSiege < 4
.head 7 -  Set nSiegeSuppl = 4
.head 6 +  Else If nSiege > 16
.head 7 -  Set nSiegeSuppl = 16
.head 6 +  Else
.head 7 -  Set nSiegeSuppl = nSiege
.head 5 -  ! !
.head 5 -  Set bSenatBHV = FALSE
.head 5 +  If nNoEl = 10
.head 6 -  Set bSenatBHV = TRUE
.head 5 -  ! !
.head 5 -  !
.head 5 +  If SalFileOpen( hFile, sFile, OF_Read | OF_Text )
.head 6 -  Call DispatchMessage(  )
.head 6 +  While SalFileGetStr( hFile, sBuffer, 5000 ) and bContinue
.head 7 -  Call DispatchMessage(  )
.head 7 -  Set lnI = 0
.head 7 +  While lnI < 100
.head 8 -  Set sDonnee[lnI] = ""
.head 8 -  Set lnI =lnI + 1
.head 7 +  If NOT PalStrTokenize( sBuffer, sDonnee) 
.head 8 -  ! Erreur de structure 
.head 8 -  Set sErreur = PalTraductMsg('BV21') ||'
' || sFile ||'
' || sBuffer
.head 8 +  If nAutomatique
.head 9 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 8 +  If cbArret
.head 9 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 8 -  Set bContinue = FALSE
.head 7 +  If bContinue
.head 8 +  If sDonnee[0] = 'G' 
.head 9 +  If wsG[0] = ''
.head 10 -  Set wsG[0] = sDonnee[1]
.head 10 +  If wsG[0] = 'PR' and nNoEl = 5
.head 11 -  Set lsTypeF = 'D'
.head 10 +  Else If wsG[0] = 'CG' and nNoEl = 6
.head 11 -  Set lsTypeF = 'M'
.head 10 +  Else If wsG[0] = 'CK' and nNoEl = 2
.head 11 -  Set lsTypeF = 'C'
.head 10 +  Else If wsG[0] = 'SE' and nNoEl = 3
.head 11 -  Set lsTypeF = 'L'
.head 10 +  Else If wsG[0] = 'EU' and nNoEl = 1
.head 11 -  Set lsTypeF = 'L'
.head 10 +  Else If wsG[0] = 'WL' and nNoEl = 4
.head 11 -  Set lsTypeF = 'C'
.head 10 +  Else If wsG[0] = 'VL' and nNoEl = 7
.head 11 -  Set lsTypeF = 'C'
.head 10 +  Else If wsG[0] = 'BR' and nNoEl = 10
.head 11 -  Set lsTypeF = 'R'
.head 10 +  Else If wsG[0] = 'BV' and nNoEl = 11
.head 11 -  Set lsTypeF = 'R'
.head 10 +  Else
.head 11 -  ! Le type d'élection est erroné
.head 11 -  Set sErreur = PalTraductMsg('FoF01') ||'
' || sFile ||'
' || sBuffer
.head 11 +  If nAutomatique
.head 12 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 11 +  If cbArret
.head 12 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 11 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  ! Cette ligne est en double dans le fichier
.head 10 -  Set sErreur = PalTraductMsg('FoF03') ||'
' || sFile ||'
' || sBuffer
.head 10 +  If nAutomatique
.head 11 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 10 -  Set bContinue = FALSE
.head 9 -  !
.head 9 +  If bContinue
.head 10 +  If sDonnee[2]  != date_transforme( gsDateEl, '/' )
.head 11 -  ! La date d'élection ne correpond pas à celle du logiciel
.head 11 -  Set sErreur = PalTraductMsg('FoF02') ||'
' || sFile ||'
' || sBuffer
.head 11 +  If nAutomatique
.head 12 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 11 +  If cbArret
.head 12 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 11 -  Set bContinue = FALSE
.head 8 +  Else If sDonnee[0] = 'S'
.head 9 +  If wsS[0] = ''  or ( bSenatBHV )
.head 10 +  If lsTypeF = sDonnee[1]
.head 11 +  If sIns = sDonnee[2]
.head 12 +  If nSiege = SalStrToNumber(sDonnee[3] ) or (bSenatBHV and nSiege >= SalStrToNumber(sDonnee[3] ))
.head 13 -  Set wsS[0] = sDonnee[2]
.head 13 -  Set wsS[1] = sDonnee[3]
.head 13 +  If nNoEl =2 or  nNoEl = 3  or nNoEl = 1 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 14 +  If nSiegeSuppl = SalStrToNumber(sDonnee[4] ) or (bSenatBHV and nSiegeSuppl >= SalStrToNumber(sDonnee[4] ))
.head 15 -  Set wsS[2] = sDonnee[4]
.head 14 +  Else
.head 15 -  ! Le nombre de sièges à pourvoir n'est pas identique entre le fichier et le logiciel
.head 15 -  Set sErreur =  PalTraductMsg('SUPPL') || ' : ' || PalTraductMsg('FoF06') ||'
' || sFile ||'
' || sBuffer
.head 15 +  If nAutomatique
.head 16 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 15 +  If cbArret
.head 16 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 15 -  Set bContinue = FALSE
.head 13 +  Else
.head 14 -  Set wsS[2] = ''
.head 12 +  Else
.head 13 -  ! Le nombre de sièges à pourvoir n'est pas identique entre le fichier et le logiciel
.head 13 -  Set sErreur = PalTraductMsg('FoF06') ||'
' || sFile ||'
' || sBuffer
.head 13 +  If nAutomatique
.head 14 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 13 +  If cbArret
.head 14 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 13 -  Set bContinue = FALSE
.head 11 +  Else
.head 12 -  ! Le code INS de l'entité ne correspond pas au choix
.head 12 -  Set sErreur = PalTraductMsg('FoF05') ||'
' || sFile ||'
' || sBuffer
.head 12 +  If nAutomatique
.head 13 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 12 +  If cbArret
.head 13 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 12 -  Set bContinue = FALSE
.head 10 +  Else
.head 11 -  ! Ce type d'élection ne correpond pas à l'enregistrement général
.head 11 -  Set sErreur = PalTraductMsg('FoF04') ||'
' || sFile ||'
' || sBuffer
.head 11 +  If nAutomatique
.head 12 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 11 +  If cbArret
.head 12 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 11 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  ! Cette ligne est en double dans le fichier
.head 10 -  Set sErreur = PalTraductMsg('FoF03') ||'
' || sFile ||'
' || sBuffer
.head 10 +  If nAutomatique
.head 11 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else If sDonnee[0] = 'L'
.head 9 +  If lsTypeF = sDonnee[1]
.head 10 +  If sIns = sDonnee[2]
.head 11 +  ! If SalStrLength( sDonnee[3]) > 1
.head 12 +  If sErreur != ''
.head 13 -  Set sErreur = sErreur || '
'
.head 12 -  ! Le nom du groupe est > à 1 car.
.head 12 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF16') ||' ' || sDonnee[3] ||'
' || sFile ||'
' || sBuffer
.head 11 -  !
.head 11 +  If wsL[ SalStrToNumber( sDonnee[4] ) , 0 ] = ''
.head 12 +  If SalStrLength( sDonnee[5]) <= nLongNomListe and SalStrTrimX( sDonnee[5]) != ''
.head 13 +  If NOT PalCaractere437( PalConverWin437( sDonnee[5] ) , sErrCaract )
.head 14 +  If sErreur != ''
.head 15 -  Set sErreur = sErreur || '
'
.head 14 -  ! Caractères ne repondent pas au code page 437
.head 14 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
' || sBuffer||'
'
.head 13 -  !
.head 13 -  Set nHommeE[SalStrToNumber( sDonnee[4] ) ] = 0
.head 13 -  Set nFemmeE[SalStrToNumber( sDonnee[4] ) ] = 0
.head 13 -  Set nHommeS[SalStrToNumber( sDonnee[4] ) ] = 0
.head 13 -  Set nFemmeS[SalStrToNumber( sDonnee[4] ) ] = 0
.head 13 -  !
.head 13 -  Set wsL[ SalStrToNumber( sDonnee[4] ) , 0 ] = sDonnee[5]
.head 13 +  If SalStrToNumber( sDonnee[6] ) > 0 and SalStrToNumber( sDonnee[6] ) <= nSiege
.head 14 -  Set wsL[ SalStrToNumber( sDonnee[4] ) , 1 ] = sDonnee[6]
.head 14 +  If nNoEl =2 or  nNoEl = 3  or nNoEl = 1 or nNoEl = 4 or nNoEl = 7 or nNoEl = 10 or nNoEl = 11
.head 15 +  If SalStrToNumber( sDonnee[7] ) > 0 and SalStrToNumber( sDonnee[7] ) <= SalStrToNumber(wsS[2]) 
.head 16 +  ! If ( SalStrToNumber( sDonnee[6] ) < 12 and SalStrToNumber( sDonnee[7] ) = 6 )
OR
   ( SalStrToNumber( sDonnee[6] ) >= 12 and SalStrToNumber( sDonnee[7] ) <= (SalNumberRound(  (SalStrToNumber( sDonnee[6] ) /2)+0.49999 ) + 1) and SalStrToNumber( sDonnee[7] ) >=6)
.head 17 -  Set lbPW_Suppl = TRUE
.head 16 +  If SalStrToNumber( sDonnee[7] ) > 0 and SalStrToNumber( sDonnee[7] ) <= SalStrToNumber(wsS[2])
.head 17 -  Set lbPW_Suppl = TRUE
.head 16 +  Else
.head 17 +  If SalMessageBox( sDonnee[4]  || '  -  ' || wsL[ SalStrToNumber( sDonnee[4] ) , 0 ] ||'
' || PalTraductMsg( 'LISTE18' ) ||'
' || PalTraductMsg( 'XML18' ) , PalTraductMsg( 'ERR' ) , MB_OkCancel ) = IDOK
.head 18 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbPW_Suppl, gsTmp)
.head 18 +  If lbPW_Suppl
.head 19 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ' || sDonnee[4]  || '  -  ' || wsL[ SalStrToNumber( sDonnee[4] ) , 0 ] ||' : ' || PalTraductMsg( 'LISTE18' ) )
.head 17 +  Else
.head 18 -  Set lbPW_Suppl = FALSE
.head 16 +  If lbPW_Suppl
.head 17 -  Set wsL[ SalStrToNumber( sDonnee[4] ) , 2 ] = sDonnee[7]
.head 16 +  Else
.head 17 -  ! Le nombre de suppléant est erroné
.head 17 -  Set sErreur = PalTraductMsg('LISTE15') ||'
' || sFile ||'
' || sBuffer
.head 17 +  If nAutomatique
.head 18 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 17 +  If cbArret
.head 18 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 17 -  Set bContinue = FALSE
.head 15 +  Else
.head 16 -  ! Le nombre de suppléant est erroné
.head 16 -  Set sErreur = PalTraductMsg('LISTE15') ||'
' || sFile ||'
' || sBuffer
.head 16 +  If nAutomatique
.head 17 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 16 +  If cbArret
.head 17 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 16 -  Set bContinue = FALSE
.head 15 -  !
.head 15 +  If nNoEl = 10
.head 16 -  Set wsL[ SalStrToNumber( sDonnee[4] ) , 9 ] = sDonnee[9]
.head 15 -  !
.head 15 +  If bContinue
.head 16 +  If nNoEl = 3 or nNoEl = 1 or nNoEl = 10
.head 17 -  Set nNo = SalStrToNumber(  sDonnee[4]  )
.head 17 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from Listes where coll_ins != :sIns and el_No = :nNoEl and @value(lis_no)  = :nNo ")
.head 17 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 18 -  ! Le numéro de la liste existe deja pour l'autre collège
.head 18 -  Set sErreur = PalTraductMsg('LISTE21') ||'
' || sFile ||'
' || sBuffer
.head 18 +  If nAutomatique
.head 19 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 18 +  If cbArret
.head 19 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 18 -  Set bContinue = FALSE
.head 13 +  Else
.head 14 -  ! Le nombre de cdt de la liste est > au nombre de sièges ou est nul
.head 14 -  Set sErreur = PalTraductMsg('FoF07') ||'
' || sFile ||'
' || sBuffer
.head 14 +  If nAutomatique
.head 15 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 14 +  If cbArret
.head 15 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 14 -  Set bContinue = FALSE
.head 12 +  Else
.head 13 -  ! Le nombre de caractère du sigle de la liste est >à (25 ou 18) ou vide
.head 13 -  Set sTmp = PalTraductMsg('FoF14')
.head 13 +  If nLongNomListe != 25
.head 14 -  Set sTmp = VisStrSubstitute( sTmp , '25', SalNumberToStrX( nLongNomListe,0) )
.head 13 -  Set sErreur = sTmp ||'
' || sFile ||'
' || sBuffer
.head 13 +  If nAutomatique
.head 14 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 13 +  If cbArret
.head 14 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 13 -  Set bContinue = FALSE
.head 11 +  Else
.head 12 -  ! Cette ligne est en double dans le fichier
.head 12 -  Set sErreur = PalTraductMsg('FoF03') ||'
' || sFile ||'
' || sBuffer
.head 12 +  If nAutomatique
.head 13 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 12 +  If cbArret
.head 13 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 12 -  Set bContinue = FALSE
.head 10 +  Else
.head 11 -  ! L'entité ne correspond pas au choix
.head 11 -  Set sErreur = PalTraductMsg('FoF05') ||'
' || sFile ||'
' || sBuffer
.head 11 +  If nAutomatique
.head 12 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 11 +  If cbArret
.head 12 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 11 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  ! Ce type d'élection ne correpond pas à l'enregistrement général
.head 10 -  Set sErreur = PalTraductMsg('FoF04') ||'
' || sFile ||'
' || sBuffer
.head 10 +  If nAutomatique
.head 11 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 10 -  Set bContinue = FALSE
.head 8 +  Else If sDonnee[0] = 'C'
.head 9 +  If lsTypeF = sDonnee[1]
.head 10 +  If sIns= sDonnee[2] 
.head 11 +  If wsL[ SalStrToNumber( sDonnee[4] ) , 0 ] != ''
.head 12 +  ! If SalStrLength( sDonnee[3]) > 1
.head 13 +  If sErreur != ''
.head 14 -  Set sErreur = sErreur || '
'
.head 13 -  ! Le nom du groupe est > à 1 car.
.head 13 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF16') ||' ' || sDonnee[3] ||'
' || sFile ||'
' || sBuffer
.head 12 -  !
.head 12 +  If sDonnee[5] = 'E'
.head 13 -  ! ! ! Parité Hommes / Femmes
.head 13 +  If sDonnee[10] = 'M'
.head 14 -  Set nHommeE[SalStrToNumber( sDonnee[4] ) ]  = nHommeE[SalStrToNumber( sDonnee[4] ) ]  + 1
.head 13 +  Else If sDonnee[10] = 'F'
.head 14 -  Set nFemmeE[SalStrToNumber( sDonnee[4] ) ]  = nFemmeE[SalStrToNumber( sDonnee[4] ) ]  + 1
.head 13 +  Else
.head 14 +  If sErreur != ''
.head 15 -  Set sErreur = sErreur || '
'
.head 14 -  ! Le nom du groupe est > à 1 car.
.head 14 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF17') ||' ' || sDonnee[3] ||'
' || sBuffer||'
'
.head 13 -  Set sSexeE[SalStrToNumber( sDonnee[4] ) , SalStrToNumber( sDonnee[6] )]  = sDonnee[10]
.head 13 -  !
.head 13 +  If SalStrToNumber( sDonnee[6] ) > 0 and SalStrToNumber( sDonnee[6] ) <= nSiege and SalStrToNumber( sDonnee[6] ) <= SalStrToNumber( wsL[ SalStrToNumber( sDonnee[4] ) , 1 ] )
.head 14 +  If sDonnee[28]  != '' or sDonnee[29] != ''
.head 15 +  If SalStrLength(sDonnee[28])  <=nLongNom and SalStrLength( sDonnee[29]) <= nLongNom
.head 16 +  If sDonnee[6] = '1'
.head 17 -  Set bContinue = TRUE
.head 16 +  Else If wsC[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] )-1 , 0 ] != '' or wsC[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] )-1 ,1 ] != ''
.head 17 -  Set bContinue = TRUE
.head 16 +  Else
.head 17 -  ! Erreur dans la succession des numéros de candidats
.head 17 -  Set sErreur = PalTraductMsg('FoF13') ||'
' || sFile ||'
' || sBuffer
.head 17 +  If nAutomatique
.head 18 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 17 +  If cbArret
.head 18 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 17 -  Set bContinue = FALSE
.head 16 +  If bContinue
.head 17 -  Set wsC[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] ) , 0 ] = sDonnee[28] 
.head 17 +  If NOT PalCaractere437( sDonnee[28] , sErrCaract )
.head 18 +  If sErreur != ''
.head 19 -  Set sErreur = sErreur || '
'
.head 18 -  ! Caractères ne repondent pas au code page 437
.head 18 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
' || sBuffer||'
'
.head 17 -  Set wsC[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] ) ,1 ] = sDonnee[29] 
.head 17 +  If NOT PalCaractere437( sDonnee[29] , sErrCaract )
.head 18 +  If sErreur != ''
.head 19 -  Set sErreur = sErreur || '
'
.head 18 -  ! Caractères ne repondent pas au code page 437
.head 18 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
' || sBuffer||'
'
.head 15 +  Else
.head 16 +  If frmGenere.wsScrutinEl = '2'
.head 17 -  ! Une des zones du nom du candidat est > à 22 caractères
.head 17 -  Set sErreur = VisStrSubstitute( PalTraductMsg('FoF12') , '25', '22' )
.head 17 -  Set sErreur = sErreur ||'
' || sFile ||'
' || sBuffer
.head 16 +  Else
.head 17 -  ! Une des zones du nom du candidat est > à 25 caractères
.head 17 -  Set sErreur = PalTraductMsg('FoF12') ||'
' || sFile ||'
' || sBuffer
.head 16 +  If nAutomatique
.head 17 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 16 +  If cbArret
.head 17 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 16 -  Set bContinue = FALSE
.head 14 +  Else
.head 15 -  ! Les zones pour le nom du candidat dans le cas du vote électronique sont vides
.head 15 -  Set sErreur = PalTraductMsg('FoF11') ||'
' || sFile ||'
' || sBuffer
.head 15 +  If nAutomatique
.head 16 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 15 +  If cbArret
.head 16 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 15 -  Set bContinue = FALSE
.head 13 +  Else
.head 14 -  ! Le nombre de cdt de la liste est > au nombre de cdts indiqué dans la ligne de type L ou est nul
.head 14 -  Set sErreur = PalTraductMsg('FoF10') ||'
' || sFile ||'
' || sBuffer
.head 14 +  If nAutomatique
.head 15 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 14 +  If cbArret
.head 15 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 14 -  Set bContinue = FALSE
.head 12 +  Else If sDonnee[5] = 'S'
.head 13 -  ! ! ! Parité Hommes / Femmes
.head 13 +  If sDonnee[10] = 'M'
.head 14 -  Set nHommeS[SalStrToNumber( sDonnee[4] ) ]  = nHommeS[SalStrToNumber( sDonnee[4] ) ]  + 1
.head 13 +  Else If sDonnee[10] = 'F'
.head 14 -  Set nFemmeS[SalStrToNumber( sDonnee[4] ) ]  = nFemmeS[SalStrToNumber( sDonnee[4] ) ]  + 1
.head 13 +  Else
.head 14 +  If sErreur != ''
.head 15 -  Set sErreur = sErreur || '
'
.head 14 -  ! Le nom du groupe est > à 1 car.
.head 14 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF17') ||' ' || sDonnee[3] ||'
' || sBuffer||'
'
.head 13 -  Set sSexeS[SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] ) ]  = sDonnee[10]
.head 13 -  ! !
.head 13 +  If SalStrToNumber( sDonnee[6] ) > 0 and SalStrToNumber( sDonnee[6] ) <= nSiegeSuppl and SalStrToNumber( sDonnee[6] ) <= SalStrToNumber( wsL[ SalStrToNumber( sDonnee[4] ) , 2 ] )
.head 14 +  If sDonnee[28]  != '' or sDonnee[29] != ''
.head 15 +  If SalStrLength(sDonnee[28])  <=nLongNom and SalStrLength( sDonnee[29]) <= nLongNom
.head 16 +  If sDonnee[6] = '1'
.head 17 -  Set bContinue = TRUE
.head 16 +  Else If wsSuppl[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] )-1 , 0 ] != '' or wsSuppl[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] )-1 ,1 ] != ''
.head 17 -  Set bContinue = TRUE
.head 16 +  Else
.head 17 -  ! Erreur dans la succession des numéros de candidats
.head 17 -  Set sErreur =  PalTraductMsg('SUPPL') || ' : ' ||PalTraductMsg('FoF13') ||'
' || sFile ||'
' || sBuffer
.head 17 +  If nAutomatique
.head 18 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 17 +  If cbArret
.head 18 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 17 -  Set bContinue = FALSE
.head 16 +  If bContinue
.head 17 -  Set wsSuppl[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] ) , 0 ] = sDonnee[28] 
.head 17 +  If NOT PalCaractere437( sDonnee[28] , sErrCaract )
.head 18 +  If sErreur != ''
.head 19 -  Set sErreur = sErreur || '
'
.head 18 -  ! Caractères ne repondent pas au code page 437
.head 18 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
' || sBuffer||'
'
.head 17 -  Set wsSuppl[ SalStrToNumber( sDonnee[4] ), SalStrToNumber( sDonnee[6] ) ,1 ] = sDonnee[29] 
.head 17 +  If NOT PalCaractere437( sDonnee[29] , sErrCaract )
.head 18 +  If sErreur != ''
.head 19 -  Set sErreur = sErreur || '
'
.head 18 -  ! Caractères ne repondent pas au code page 437
.head 18 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF20') ||': ' || sErrCaract ||'
' || sBuffer||'
'
.head 15 +  Else
.head 16 -  ! Une des zones du nom du candidat est > à 25 caractères
.head 16 -  Set sErreur =  PalTraductMsg('SUPPL') || ' : ' ||PalTraductMsg('FoF12') ||'
' || sFile ||'
' || sBuffer
.head 16 +  If nAutomatique
.head 17 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 16 +  If cbArret
.head 17 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 16 -  Set bContinue = FALSE
.head 14 +  Else
.head 15 -  ! Les zones pour le nom du candidat dans le cas du vote électronique sont vides
.head 15 -  Set sErreur =  PalTraductMsg('SUPPL') || ' : ' ||PalTraductMsg('FoF11') ||'
' || sFile ||'
' || sBuffer
.head 15 +  If nAutomatique
.head 16 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 15 +  If cbArret
.head 16 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 15 -  Set bContinue = FALSE
.head 13 +  Else
.head 14 -  ! Le nombre de cdt de la liste est > au nombre de cdts indiqué dans la ligne de type L ou est nul
.head 14 -  Set sErreur = PalTraductMsg('SUPPL') || ' : ' || PalTraductMsg('FoF10') ||'
' || sFile ||'
' || sBuffer
.head 14 +  If nAutomatique
.head 15 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 14 +  If cbArret
.head 15 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 14 -  Set bContinue = FALSE
.head 12 +  Else
.head 13 -  ! Le type de candidat est erroné
.head 13 -  Set sErreur = PalTraductMsg('FoF09') ||'
' || sFile ||'
' || sBuffer
.head 13 +  If nAutomatique
.head 14 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 13 +  If cbArret
.head 14 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 13 -  Set bContinue = FALSE
.head 11 +  Else
.head 12 -  ! Pas de ligne de type "L" pour ce candidat
.head 12 -  Set sErreur = PalTraductMsg('FoF08') ||'
' || sFile ||'
' || sBuffer
.head 12 +  If nAutomatique
.head 13 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 12 +  If cbArret
.head 13 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 12 -  Set bContinue = FALSE
.head 10 +  Else
.head 11 -  ! L'entité ne correspond pas au choix
.head 11 -  Set sErreur = PalTraductMsg('FoF05') ||'
' || sFile ||'
' || sBuffer
.head 11 +  If nAutomatique
.head 12 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 11 +  If cbArret
.head 12 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 11 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  ! Ce type d'élection ne correpond pas à l'enregistrement général
.head 10 -  Set sErreur = PalTraductMsg('FoF04') ||'
' || sFile ||'
' || sBuffer
.head 10 +  If nAutomatique
.head 11 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 10 -  Set bContinue = FALSE
.head 8 -  Else If sDonnee[0] = 'H'
.head 8 -  Else If sDonnee[0] = 'T'
.head 8 +  Else
.head 9 -  ! Ce type de ligne n'existe pas !!
.head 9 -  Set sErreur = PalTraductMsg('FoF15') ||'
' || sFile ||'
' || sBuffer
.head 9 +  If nAutomatique
.head 10 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 9 +  If cbArret
.head 10 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 9 -  Set bContinue = FALSE
.head 6 -  Call SalFileClose( hFile )
.head 5 +  Else
.head 6 -  Set sErreur = PalTraductMsg('XML10') ||'
' || sFile
.head 6 +  If nAutomatique
.head 7 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 6 +  If cbArret
.head 7 -  Call SalMessageBox( sErreur  , PalTraductMsg('MSG'), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 -  !
.head 5 +  If bContinue
.head 6 -  Set lnI = 1
.head 6 +  While lnI <= 100
.head 7 +  If wsL[ lnI , 0 ] != ''
.head 8 +  If sSexeE[lnI, 1] = sSexeE[lnI, 2]
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Erreur de parité dans cette liste sur les 2 premiers candidats effectifs
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF18') || SalNumberToStrX( lnI , 0) || '  - ' || wsL[lnI,0] ||' - ' || PalTraductMsg( 'FoF21' ) ||'
' || PalTraductMsg( 'FoF23' ) ||'
'
.head 8 +  If sSexeS[lnI, 1] = sSexeS[lnI, 2]
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Erreur de parité dans cette liste sur les 2 premiers candidats suppléants
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF18') || SalNumberToStrX( lnI , 0) || '  - ' || wsL[lnI,0] ||' - ' || PalTraductMsg( 'FoF22' ) ||'
' || PalTraductMsg( 'FoF23' ) ||'
'
.head 8 +  If SalNumberAbs( nHommeE[lnI] - nFemmeE[lnI] ) > 1
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Erreur de parité dans cette liste
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF18') || SalNumberToStrX( lnI , 0) || '  - ' || wsL[lnI,0] ||' - ' || PalTraductMsg( 'FoF21' ) ||'
'
.head 8 +  If SalNumberAbs( nHommeS[lnI] - nFemmeS[lnI] ) > 1
.head 9 +  If sErreur != ''
.head 10 -  Set sErreur = sErreur || '
'
.head 9 -  ! Erreur de parité dans cette liste
.head 9 -  Set sErreur = sErreur ||  PalTraductMsg( 'FoF18') || SalNumberToStrX( lnI , 0) || '  - ' || wsL[lnI,0] ||' - ' || PalTraductMsg( 'FoF22' ) ||'
'
.head 7 -  Set lnI = lnI + 1
.head 6 +  If sErreur != ''
.head 7 +  If PalCompteNbLigne( sErreur ) > 50
.head 8 -  Set sErreurAffich = PalTraductMsg( 'FoF24')
.head 7 +  Else
.head 8 -  Set sErreurAffich = sErreur
.head 7 +  If SalMessageBox( sErreurAffich ||'

' || PalTraductMsg( 'FoF19'), PalTraductMsg( 'ATTENTION'), MB_OkCancel | MB_IconExclamation ) = IDOK
.head 8 +  If SalFileOpen( hFile, gsPathTemp || 'ERR.TXT', OF_Create|OF_Text|OF_ReadWrite )
.head 9 -  Call SalFilePutStr( hFile, sFile )
.head 9 -  Call SalFilePutStr( hFile, '--------------------
' )
.head 9 -  Call SalFilePutStr( hFile, sErreur )
.head 9 -  Call SalFileClose( hFile )
.head 9 -  Call PalEditFile( gsPathTemp || 'ERR.TXT' )
.head 9 -  Call VisFileDelete( gsPathTemp || 'ERR.TXT' )
.head 5 -  !
.head 5 -  Return ( bContinue )
.head 3 +  Function: PalChargeListe
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sFileName
.head 5 -  Number: pnNoEl
.head 5 -  String: psIns
.head 5 -  Number: pnNbCdtMax
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsDisIns
.head 5 -  String: lsProIns
.head 5 -  String: lsComIns
.head 5 -  String: lsCanIns
.head 5 -  String: lsCircIns
.head 5 -  String: lsRegion
.head 5 -  String: lsCollIns
.head 5 -  String: lsInsert
.head 5 -  String: lsDelete
.head 5 -  String: lsConversion
.head 5 -  Number: lnI
.head 5 -  Number: lnJ
.head 5 -  String: lsNoListe
.head 5 -  String: lsNoCdt
.head 5 -  Number: lnNbCdtsListe
.head 5 -  Number: lnNbSupplListe
.head 5 -  String: lsNomFichier
.head 5 -  String: lsCdtLigne1
.head 5 -  String: lsCdtLigne2
.head 5 -  Boolean: bContinue
.head 5 -  Long String: llsMsg
.head 5 -  String: sErreur
.head 5 -  !
.head 4 +  Actions
.head 5 -  Set bContinue = TRUE
.head 5 -  !
.head 5 +  If pnNoEl = 5
.head 6 -  Set lsNomFichier = 'DD' || psIns || '.PR'
.head 5 +  Else If pnNoEl = 6
.head 6 -  Set lsNomFichier = 'DM' || psIns || '.CG'
.head 5 +  Else If pnNoEl = 2
.head 6 -  Set lsNomFichier = 'DC' || psIns || '.CK'
.head 5 +  Else If pnNoEl = 1
.head 6 -  Set lsNomFichier = 'DL' || psIns || '.EU'
.head 5 +  Else If pnNoEl = 4
.head 6 -  Set lsNomFichier = 'DC' || psIns || '.WL'
.head 5 +  Else If pnNoEl = 7
.head 6 -  Set lsNomFichier = 'DC' || psIns || '.VL'
.head 5 +  Else If pnNoEl = 10
.head 6 -  Set lsNomFichier = 'DR' || psIns || '.BR'
.head 5 +  Else If pnNoEl = 11
.head 6 -  ! Set lsNomFichier = 'DRC' || psIns || '.BV'
.head 6 -  Set lsNomFichier = 'DC' || psIns || '.VL'
.head 5 +  Else If pnNoEl = 3
.head 6 -  Set lsNomFichier = 'DL' || psIns || '.SE'
.head 5 +  Else
.head 6 -  Set bContinue = FALSE
.head 5 -  !
.head 5 -  ! Insertion Listes et Cdts
.head 5 +  If bContinue
.head 6 -  Set lsComIns = ''
.head 6 -  Set lsCanIns = ''
.head 6 -  Set lsDisIns = ''
.head 6 -  Set lsProIns = ''
.head 6 +  If pnNoEl = 5
.head 7 -  Set lsSelect = "Select Pro_ins, Dis_ins from commune where Dis_ins = :psIns
	Into :lsProIns, :lsDisIns "
.head 6 +  Else If pnNoEl = 2
.head 7 -  Set lsSelect = "Select Circ_ins from Base_commune where Circ_ins = :psIns and type ='CI'
	Into :lsCircIns "
.head 6 +  Else If pnNoEl = 3
.head 7 -  Set lsSelect = "Select Coll_ins, Region from Base_commune where Coll_ins = :psIns and type ='SE'
	Into :lsCollIns, :lsRegion "
.head 6 +  Else If pnNoEl = 1
.head 7 -  Set lsSelect = "Select Coll_ins, Region from Base_commune where Coll_ins = :psIns and type ='EU'
	Into :lsCollIns, :lsRegion "
.head 6 +  Else If pnNoEl = 4
.head 7 +  If gsWL_Type = '0'
.head 8 -  Set lsSelect = "Select Arron_ins from Base_commune where Arron_ins = :psIns and type ='WR'
	Into :lsCircIns "
.head 7 +  Else
.head 8 -  Set lsSelect = "Select Circ_ins from Base_commune where Circ_ins = :psIns and type ='WL'
	Into :lsCircIns "
.head 6 +  Else If pnNoEl = 7
.head 7 -  Set lsSelect = "Select Circ_ins from Base_commune where Circ_ins = :psIns and type ='VL'
	Into :lsCircIns "
.head 6 +  Else If pnNoEl = 10
.head 7 -  Set lsSelect = "Select Circ_ins from Base_commune where Circ_ins = :psIns and type ='BR'
	Into :lsCircIns "
.head 6 +  Else If pnNoEl = 11
.head 7 -  Set lsSelect = "Select Circ_ins from Base_commune where Circ_ins = :psIns and type ='BV'
	Into :lsCircIns "
.head 6 +  Else
.head 7 -  Set lsSelect = "Select Pro_ins, Dis_ins,Can_ins,Com_Ins from commune where com_ins = :psIns
	Into :lsProIns, :lsDisIns,:lsCanIns,:lsComIns "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  ! Effacement des listes existantes
.head 7 -  Set lsDelete = ''
.head 7 +  If pnNoEl = 5
.head 8 +  If lsDisIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Dis_Ins=:lsDisIns '
.head 7 +  Else If pnNoEl = 2
.head 8 +  If lsCircIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Circ_Ins=:lsCircIns '
.head 7 +  Else If pnNoEl = 3
.head 8 +  If lsCollIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Coll_Ins=:lsCollIns '
.head 7 +  Else If pnNoEl = 1
.head 8 +  If lsCollIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Coll_Ins=:lsCollIns '
.head 7 +  Else If pnNoEl = 4
.head 8 +  If lsCircIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Circ_Ins=:lsCircIns '
.head 7 +  Else If pnNoEl = 7
.head 8 +  If lsCircIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Circ_Ins=:lsCircIns '
.head 7 +  Else If pnNoEl = 10
.head 8 +  If lsCircIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Circ_Ins=:lsCircIns '
.head 7 +  Else If pnNoEl = 11
.head 8 +  If lsCircIns != ''
.head 9 -  Set lsDelete = lsDelete || ' AND Circ_Ins=:lsCircIns '
.head 7 +  Else
.head 8 +  If lsComIns != ''
.head 9 -  Set lsDelete = lsDelete || 'and Com_ins=:lsComIns '
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"Delete from candidats where El_no =:pnNoEl " || lsDelete )
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"Delete from Listes where El_no =:pnNoEl " || lsDelete )
.head 7 -  Call SqlCommit( ghSqlSecondaire)
.head 7 -  ! Insertion des données
.head 7 -  Set lnI = 1
.head 7 -  Set bContinue = TRUE
.head 7 +  While lnI <= 100 and bContinue
.head 8 +  If wsL[ lnI , 0 ] != ''
.head 9 -  Set lsNoListe = SalStrRightX('000' || SalNumberToStrX( lnI, 0) , 3)
.head 9 -  Set lnNbCdtsListe = SalStrToNumber(wsL[ lnI , 1 ] )
.head 9 +  If pnNoEl =2 or  pnNoEl = 3  or pnNoEl = 1 or pnNoEl = 4 or pnNoEl = 7 or pnNoEl = 10 or pnNoEl = 11
.head 10 -  Set lnNbSupplListe = SalStrToNumber(wsL[ lnI , 2 ] )
.head 9 -  !
.head 9 -  !
.head 9 +  If pnNoEl = 2  or pnNoEl = 4 or pnNoEl = 7  or pnNoEl = 11
.head 10 -  Set lsInsert = "Insert into Listes (CIRC_INS, EL_NO, LIS_NO, LIS_NOM, LIS_NB_EFF,LIS_NB_SUPP)
	Values ( :lsCircIns,:pnNoEl,:lsNoListe,:wsL[lnI,0] ,:lnNbCdtsListe,:lnNbSupplListe ) "
.head 9 +  Else If pnNoEl = 10
.head 10 -  Set lsInsert = "Insert into Listes (CIRC_INS, EL_NO, LIS_NO, LIS_NOM, LIS_NB_EFF,LIS_NB_SUPP, LIS_GRL)
	Values ( :lsCircIns,:pnNoEl,:lsNoListe,:wsL[lnI,0] ,:lnNbCdtsListe,:lnNbSupplListe, :wsL[lnI,9] ) "
.head 9 +  Else If pnNoEl = 3 or pnNoEl = 1
.head 10 -  Set lsInsert = "Insert into Listes (COLL_INS, EL_NO, LIS_NO, LIS_NOM, LIS_NB_EFF,LIS_NB_SUPP)
	Values ( :lsCollIns,:pnNoEl,:lsNoListe,:wsL[lnI,0] ,:lnNbCdtsListe,:lnNbSupplListe ) "
.head 9 +  Else
.head 10 -  Set lsInsert = "Insert into Listes (PRO_INS, DIS_INS, CAN_INS, COM_INS, EL_NO, LIS_NO, LIS_NOM, LIS_NB_EFF)
	Values ( :lsProIns,:lsDisIns,:lsCanIns,:lsComIns,:pnNoEl,:lsNoListe,:wsL[lnI,0] ,:lnNbCdtsListe ) "
.head 9 +  If NOT SqlPrepareAndExecute( ghSqlSecondaire, lsInsert )
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 10 -  Set bContinue = FALSE
.head 10 -  Break
.head 9 -  Set lnJ = 1
.head 9 +  While lnJ <= lnNbCdtsListe and bContinue
.head 10 +  If wsC[ lnI, lnJ , 0 ] != '' or wsC[ lnI, lnJ ,1 ] != ''
.head 11 -  Set lsNoCdt = SalStrRightX('000' || SalNumberToStrX( lnJ, 0 ) , 3)
.head 11 -  !
.head 11 -  Set lsCdtLigne1 = SalStrLeftX( wsC[ lnI, lnJ , 0 ] , 25)
.head 11 -  Set lsConversion = SalStrRepeatX(' ', 25)
.head 11 -  Call OemToCharA( lsCdtLigne1 , lsConversion )
.head 11 -  Set lsCdtLigne1 = lsConversion
.head 11 -  !
.head 11 -  !
.head 11 -  Set lsCdtLigne2 = SalStrLeftX( wsC[ lnI, lnJ , 1 ], 25)
.head 11 -  Set lsConversion = SalStrRepeatX(' ', 25)
.head 11 -  Call OemToCharA( lsCdtLigne2 , lsConversion )
.head 11 -  Set lsCdtLigne2 = lsConversion
.head 11 -  !
.head 11 +  If pnNoEl = 2 or pnNoEl = 4 or pnNoEl = 7 or pnNoEl = 10 or pnNoEl = 11
.head 12 -  Set lsInsert = "Insert into Candidats (CIRC_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2, CDT_Type)
	Values ( :lsCircIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ,'E') "
.head 11 +  Else If pnNoEl = 3 or pnNoEl = 1
.head 12 -  Set lsInsert = "Insert into Candidats (COLL_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2, CDT_Type)
	Values ( :lsCollIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ,'E') "
.head 11 +  Else
.head 12 -  Set lsInsert = "Insert into Candidats (PRO_INS, DIS_INS, CAN_INS, COM_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2)
	Values ( :lsProIns,:lsDisIns,:lsCanIns,:lsComIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ) "
.head 11 +  If NOT SqlPrepareAndExecute( ghSqlSecondaire, lsInsert )
.head 12 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 12 -  Set bContinue = FALSE
.head 12 -  Break
.head 10 +  Else
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 11 -  Set bContinue = FALSE
.head 11 -  Break
.head 10 -  Set lnJ = lnJ + 1
.head 9 -  !
.head 9 +  If (pnNoEl =2 or  pnNoEl = 3  or pnNoEl = 1 or pnNoEl = 4 or pnNoEl = 7 or pnNoEl = 10 or pnNoEl = 11) and bContinue
.head 10 -  Set lnJ = 1
.head 10 +  While lnJ <= lnNbSupplListe and bContinue
.head 11 +  If wsSuppl[ lnI, lnJ , 0 ] != '' or wsSuppl[ lnI, lnJ ,1 ] != ''
.head 12 -  Set lsNoCdt = SalStrRightX('000' || SalNumberToStrX( lnJ, 0 ) , 3)
.head 12 -  !
.head 12 -  Set lsCdtLigne1 = SalStrLeftX( wsSuppl[ lnI, lnJ , 0 ] , 25)
.head 12 -  Set lsConversion = SalStrRepeatX(' ', 25)
.head 12 -  Call OemToCharA( lsCdtLigne1 , lsConversion )
.head 12 -  Set lsCdtLigne1 = lsConversion
.head 12 -  !
.head 12 -  !
.head 12 -  Set lsCdtLigne2 = SalStrLeftX( wsSuppl[ lnI, lnJ , 1 ], 25)
.head 12 -  Set lsConversion = SalStrRepeatX(' ', 25)
.head 12 -  Call OemToCharA( lsCdtLigne2 , lsConversion )
.head 12 -  Set lsCdtLigne2 = lsConversion
.head 12 -  !
.head 12 +  If pnNoEl = 2 or pnNoEl = 4 or pnNoEl = 7 or pnNoEl = 10 or pnNoEl = 11
.head 13 -  Set lsInsert = "Insert into Candidats (CIRC_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2, CDT_Type)
	Values ( :lsCircIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ,'S') "
.head 12 +  Else If pnNoEl = 3 or pnNoEl = 1
.head 13 -  Set lsInsert = "Insert into Candidats (COLL_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2, CDT_Type)
	Values ( :lsCollIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ,'S') "
.head 12 +  Else
.head 13 -  Set lsInsert = "Insert into Candidats (PRO_INS, DIS_INS, CAN_INS, COM_INS, EL_NO, LIS_NO,CDT_NO, CDT_Ligne1, CDT_Ligne2)
	Values ( :lsProIns,:lsDisIns,:lsCanIns,:lsComIns,:pnNoEl,:lsNoListe,:lsNoCdt,:lsCdtLigne1,:lsCdtLigne2 ) "
.head 12 +  If NOT SqlPrepareAndExecute( ghSqlSecondaire, lsInsert )
.head 13 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 13 -  Set bContinue = FALSE
.head 13 -  Break
.head 11 +  Else
.head 12 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 12 -  Set bContinue = FALSE
.head 12 -  Break
.head 11 -  Set lnJ = lnJ + 1
.head 8 -  Set lnI = lnI + 1
.head 6 +  Else
.head 7 -  Set bContinue = FALSE
.head 6 +  If bContinue
.head 7 +  If PalCopyFormatF( sFileName , gsPathFormatF || lsNomFichier )
.head 8 -  Call SqlCommit( ghSqlSecondaire )
.head 8 -  Set sErreur =  PalTraductMsg('Ok')
.head 8 +  If nAutomatique
.head 9 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 7 +  Else
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 8 -  Set bContinue = FALSE
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"ROLLBACK")
.head 7 -  Set bContinue = FALSE
.head 5 -  ! Suppression des BMP de cette entité
.head 5 +  If bContinue and frmGenere.wsScrutinEl = '2'
.head 6 +  If pnNoEl = 2
.head 7 -  Call VisFileDelete( gsPathLogo || SalNumberToStrX( pnNoEl, 0) ||"???_" || psIns ||".BMP" )
.head 6 +  Else
.head 7 +  If lsRegion = 'FLA'
.head 8 -  Set lsRegion = 'N'
.head 7 +  Else
.head 8 -  Set lsRegion = 'F'
.head 7 -  Call VisFileDelete( gsPathLogo || SalNumberToStrX( pnNoEl, 0) ||"??" || lsRegion ||".BMP" )
.head 5 -  Return (bContinue)
.head 3 +  Function: PalCopyFormatF
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: sFile
.head 5 -  String: psNewFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: sCompteurFin[5]
.head 5 -  String: sCteListeT[5]
.head 5 -  String: sCteCdtT
.head 5 -  String: sCteNoListeTraite
.head 5 -  String: sCteCdtTraite
.head 5 -  String: lsFileXml
.head 5 -  String: lsPath
.head 5 -  String: lsCle
.head 5 -  File Handle: hFile
.head 5 -  File Handle: hFile2
.head 5 -  Boolean: bContinue
.head 5 -  Boolean: bReplace
.head 5 -  String: lsDateHeure
.head 5 -  String: sErreur
.head 5 -  String: sFile2
.head 5 -  Long String: sBuffer
.head 5 -  String: sStrReplace
.head 5 -  Number: lnPos
.head 5 -  String: lsNoListeTraite
.head 5 -  String: lsCdtTraite
.head 5 -  Number: lnListe
.head 5 -  Number: lnCdt
.head 5 -  Number: lnI
.head 5 -  Number: lnJ
.head 5 -  Number: lnK
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 -  Set bContinue = TRUE
.head 5 -  Call SalFileOpen( hFile, psNewFile , OF_Delete )
.head 5 +  If Not VisFileCopy( sFile, psNewFile )
.head 6 -  Set sErreur = PalTraductMsg('XML08') ||'
' || sFile || '    -->    ' || psNewFile
.head 6 +  If nAutomatique
.head 7 -  Call SalFilePutStr( whFileAuto,  sErreur )
.head 6 +  If cbArret
.head 7 -  Call SalMessageBox( sErreur , PalTraductMsg('MSG'), MB_Ok )
.head 6 -  Set bContinue = FALSE
.head 5 -  Return (bContinue )
.head 3 +  Function: PalEditFile
.head 4 -  Description: Edition d'un fichier donné avec Notepad
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sPathFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 -  Call SalLoadAppAndWait( "NOTEPAD " || sPathFile , Window_Maximized , nRet)
.head 3 +  Function: SalLoadAuto
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnFileRep
.head 5 -  String: lsArrayFileRep[*]
.head 5 -  String: lsEl
.head 5 -  Number: lnNoEl
.head 5 -  Number: lnErreur
.head 5 -  Number: lnCancel
.head 5 -  Number: lnValid
.head 5 -  String: lsIns
.head 5 -  Number: i
.head 5 -  String: lsChamp
.head 5 -  String: sBuffer
.head 5 -  String: lsSelect
.head 5 -  String: lsTable
.head 5 -  String: lsRep
.head 5 -  String: lsWhere
.head 5 -  String: lsWhere2
.head 5 -  String: lsStatut
.head 5 -  String: lsErreur
.head 5 -  Number: lnNbCdt
.head 5 -  Boolean: bTraite
.head 5 -  Boolean: bOk
.head 5 -  Long String: sTrace
.head 5 -  String: sElectionEnCours
.head 4 +  Actions
.head 5 -  Set lnFileRep = VisDosEnumFiles( dfRepName, FA_Standard, lsArrayFileRep )
.head 5 +  If lnFileRep > 0
.head 6 +  If TRUE
.head 7 -  ! Traces en Automatique et édition du fichier en fin de parcourt
.head 7 +  If NOT SalFileOpen( whFileAuto, gsPathTemp || "FoF_AUTO.TXT", OF_Create | OF_ReadWrite | OF_Text)
.head 8 -  ! Erreur lors de la creation du fichier EML_AUTO.TXT
.head 8 -  Call SalMessageBox( PalTraductMsg( 'XML11') ||'
EML_AUTO.TXT' , PalTraductMsg( 'MSG' ), MB_Ok )
.head 7 -  Call VisWaitCursor( TRUE )
.head 7 -  Call SalDisableWindow( hWndForm )
.head 7 -  ! Trace
.head 7 -  Set sTrace = dfRepName || ' - '
.head 7 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' LOAD Format F AUTO')
.head 7 -  !
.head 7 -  Set i= 0
.head 7 -  Set lnErreur = 0
.head 7 -  Set lnCancel = 0
.head 7 -  Set lnValid = 0
.head 7 +  While i< lnFileRep
.head 8 +  If (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'CG' and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DM' ) 
    or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'PR'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DD' )
 or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'CK'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DC' )
 or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'SE'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DL' )
 or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'WL'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DC' )
 or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'EU'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DL' )
or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'VL'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DC' )
or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'BR'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DR' )
or
   (SalStrUpperX(SalStrRightX( lsArrayFileRep[i],2)) = 'BV'  and SalStrUpperX(SalStrLeftX( lsArrayFileRep[i],2)) = 'DR' )

.head 9 -  Call SalShowWindow( frmGenere.dfLibelleInfo)
.head 9 -  Call SalBringWindowToTop( frmGenere.dfLibelleInfo )
.head 9 -  Set frmGenere.dfLibelleInfo = PalTraductMsg( 'TRAITE' ) ||' : ' ||  lsArrayFileRep[i] 
.head 9 -  Call DispatchMessage(  )
.head 9 -  Set lsEl = SalStrUpperX( SalStrRightX( lsArrayFileRep[i] ,2) )
.head 9 -  Set lsIns = SalStrMidX( lsArrayFileRep[i]  ,2, 5)
.head 9 +  If lsIns = '21004' and lsEl = 'VL'
.head 10 -  Set lsEl = 'BV'
.head 9 -  ! Trace
.head 9 -  Set sTrace = lsArrayFileRep[i]  || ' - '
.head 9 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' PREPA')
.head 9 -  !
.head 9 -  !
.head 9 -  Set bTraite = FALSE
.head 9 -  !
.head 9 -  Call SalFilePutStr( whFileAuto,  PalTraductMsg( 'XML23') || SalNumberToStrX( i+1, 0) ||'	' || PalDtmDateHeure( )  )
.head 9 -  Call SalFilePutStr( whFileAuto,  lsArrayFileRep[i]  )
.head 9 -  Call SalFilePutStr( whFileAuto,  PalTraductMsg( 'INS') || ' ' || lsIns || '	' || PalTraductMsg( 'ELECT') || ' ' || lsEl )
.head 9 -  !
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "Select El_No from Election where Abrev_FoF = :lsEl into :lnNoEl ")
.head 9 +  If NOT SqlFetchNext(ghSqlMain, Btmp)
.head 10 -  Set sBuffer = PalTraductMsg( 'XML19')
.head 10 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 10 +  If cbArret
.head 11 -  Call SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer , PalTraductMsg( 'MSG' ), MB_Ok )
.head 10 -  ! Trace
.head 10 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML19'))
.head 10 -  Set lnErreur = lnErreur +1
.head 10 -  !
.head 9 +  Else
.head 10 -  Set sElectionEnCours = ">," || frmGenere.wsOrdreEl ||",<"
.head 10 +  If SalStrScan( sElectionEnCours , ","|| SalNumberToStrX( lnNoEl,0) ||",") != -1
.head 11 +  If lnNoEl = 5
.head 12 -  Set lsChamp ='V5'
.head 12 -  Set lsTable = 'Commune'
.head 12 -  Set lsWhere = ' DIS_INS = :lsIns '
.head 12 -  Set lsWhere2 = lsWhere
.head 11 +  Else If lnNoEl= 6
.head 12 -  Set lsTable = 'Commune'
.head 12 -  Set lsChamp ='V6'
.head 12 -  Set lsWhere = ' COM_INS = :lsIns '
.head 12 -  Set lsWhere2 = lsWhere
.head 11 +  Else If lnNoEl= 2
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp ='V2'
.head 12 -  Set lsWhere = ' CIRC_INS = :lsIns '
.head 12 -  Set lsWhere2 = lsWhere
.head 11 +  Else If lnNoEl= 3
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp ='V3'
.head 12 -  Set lsWhere = ' COLL_INS = :lsIns '
.head 12 -  Set lsWhere2 = lsWhere
.head 11 +  Else If lnNoEl = 4
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp = 'V2'
.head 12 +  If gsWL_Type = '0'
.head 13 -  Set lsWhere = " ARRON_INS = :lsIns and Type = 'WR' "
.head 12 +  Else
.head 13 -  Set lsWhere = " CIRC_INS = :lsIns and Type = 'WL' "
.head 12 -  Set lsWhere2 = " CIRC_INS = :lsIns "
.head 11 +  Else If lnNoEl = 7
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp = 'V2'
.head 12 -  Set lsWhere = " CIRC_INS = :lsIns and Type = 'VL' "
.head 12 -  Set lsWhere2 = " CIRC_INS = :lsIns "
.head 11 +  Else If lnNoEl = 10
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp = 'V2'
.head 12 -  Set lsWhere = " CIRC_INS = :lsIns and Type = 'BR' "
.head 12 -  Set lsWhere2 = " CIRC_INS = :lsIns "
.head 11 +  Else If lnNoEl = 11
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp = 'V2'
.head 12 -  Set lsWhere = " CIRC_INS = :lsIns and Type = 'BV' "
.head 12 -  Set lsWhere2 = " CIRC_INS = :lsIns "
.head 11 +  Else If lnNoEl = 1
.head 12 -  Set lsTable = 'Base_Commune'
.head 12 -  Set lsChamp = 'V3'
.head 12 -  Set lsWhere = " COLL_INS = :lsIns and Type = 'EU' "
.head 12 -  Set lsWhere2 = " CIRC_INS = :lsIns "
.head 11 -  Call SqlPrepareAndExecute( ghSqlMain, "Select " || lsChamp ||" from "|| lsTable ||" where " || lsWhere ||"
	into :lsStatut ")
.head 11 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 12 +  If lsStatut= '1'
.head 13 -  ! Deja des listes validées
.head 13 -  Set sBuffer = PalTraductMsg( 'XML20')
.head 13 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 13 +  If cbArret
.head 14 -  Call SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer , PalTraductMsg( 'MSG' ), MB_Ok )
.head 13 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML20'))
.head 13 -  Set lnValid = lnValid + 1
.head 12 +  Else
.head 13 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "select * from listes where el_no=:lnNoEl and " || lsWhere2 )
.head 13 +  If SqlFetchNext( ghSqlTertiaire, Btmp )
.head 14 -  ! Deja des listes non validées
.head 14 -  Set sBuffer = PalTraductMsg( 'LISTE07')
.head 14 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 14 +  If SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer ||'
' || PalTraductMsg( 'LISTE01') , PalTraductMsg( '?' ), MB_OkCancel | MB_IconQuestion ) = IDOK
.head 15 -  Set bOk = TRUE
.head 14 +  Else
.head 15 -  Set sBuffer =  'CANCEL'
.head 15 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 15 -  Set bOk = FALSE
.head 15 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'LISTE07') ||' --> Cancel')
.head 15 -  Set lnCancel = lnCancel + 1
.head 13 +  Else
.head 14 -  Set bOk = TRUE
.head 13 -  !
.head 13 +  If bOk
.head 14 +  If lnNoEl = 5
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune A where type = 'DI' and dis_ins = :lsIns "
.head 14 +  Else If lnNoEl = 6
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'GE'  and com_ins = :lsIns "
.head 14 +  Else If lnNoEl = 2
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'CI'  and circ_ins = :lsIns "
.head 14 +  Else If lnNoEl = 3
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'SE'  and coll_ins = :lsIns "
.head 14 +  Else If lnNoEl = 1
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'EU'  and coll_ins = :lsIns "
.head 14 +  Else If lnNoEl = 4
.head 15 +  If gsWL_Type = '0'
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'WR'  and Arron_ins = :lsIns "
.head 15 +  Else
.head 16 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'WL'  and Circ_ins = :lsIns "
.head 14 +  Else If lnNoEl = 7
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'VL'  and Circ_ins = :lsIns "
.head 14 +  Else If lnNoEl = 10
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BR'  and Circ_ins = :lsIns "
.head 14 +  Else If lnNoEl = 11
.head 15 -  Set lsSelect = "Select NB_CDT from base_commune where type = 'BV'  and Circ_ins = :lsIns "
.head 14 -  Call SqlPrepareAndExecute( ghSqlTertiaire, lsSelect || " into :lnNbCdt" )
.head 14 +  If SqlFetchNext( ghSqlTertiaire, Btmp )
.head 15 +  If lnNbCdt != NUMBER_Null and lnNbCdt > 0
.head 16 -  Set bTraite = TRUE
.head 15 +  Else
.head 16 -  ! Le nb de siège à pourvoir est erroné pour cette zone
.head 16 -  Set sBuffer = PalTraductMsg( 'XML21')
.head 16 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 16 +  If cbArret
.head 17 -  Call SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer, PalTraductMsg( 'MSG' ), MB_Ok )
.head 16 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML21'))
.head 16 -  ! Trace
.head 16 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML21'))
.head 16 -  Set lnErreur = lnErreur +1
.head 14 +  Else
.head 15 -  ! Aucune zone trouvée
.head 15 -  Set sBuffer = PalTraductMsg( 'XML03')
.head 15 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 15 +  If cbArret
.head 16 -  Call SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer , PalTraductMsg( 'MSG' ), MB_Ok )
.head 15 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML03'))
.head 15 -  ! Trace
.head 15 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML03'))
.head 15 -  Set lnErreur = lnErreur +1
.head 13 -  !
.head 11 +  Else
.head 12 -  ! Aucune zone ne correspond à ce code Ins
.head 12 -  Set sBuffer = PalTraductMsg( 'XML03')
.head 12 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 12 +  If cbArret
.head 13 -  Call SalMessageBox( lsArrayFileRep[i] ||'
' || sBuffer , PalTraductMsg( 'MSG' ), MB_Ok )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || ' ERR. ' || PalTraductMsg( 'XML03'))
.head 12 -  Set lnErreur = lnErreur +1
.head 12 -  !
.head 10 +  Else
.head 11 -  Set bTraite = FALSE
.head 11 -  Call SalFilePutStr( whFileAuto,  "Fichier non traité !" )
.head 11 -  Call DispatchMessage(  )
.head 9 -  !
.head 9 -  Call DispatchMessage(  )
.head 9 +  If bTraite
.head 10 -  Call SalFilePutStr( whFileAuto,  PalTraductMsg( 'TRAITE') )
.head 10 -  Set lsRep = SalStrLeftX( dfRepName , SalStrLength( dfRepName) - 3 )
.head 10 -  Call PalInitStruct(  lsRep || lsArrayFileRep[i] )
.head 10 +  If PalLoadF(  lsRep || lsArrayFileRep[i], lsIns, lnNbCdt, lnNoEl  )
.head 11 +  If NOT PalChargeListe(  lsRep || lsArrayFileRep[i], lnNoEl, lsIns, lnNbCdt )
.head 12 -  Call DispatchMessage(  )
.head 12 -  Call SalFilePutStr( whFileAuto,  PalTraductMsg( 'ERR') )
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. chargement liste')
.head 12 -  !
.head 12 -  Set lnErreur = lnErreur +1
.head 11 +  Else
.head 12 -  ! Trace
.head 12 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'Load OK')
.head 12 -  !
.head 12 +  If cbValid
.head 13 +  If frmGenere.PalValidateListe( lsIns, lnNoEl, 1, lnNbCdt , cbArret, lsErreur )
.head 14 -  ! Validation OK
.head 14 -  Set sBuffer = PalTraductMsg( 'LISTE08')
.head 14 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || lsErreur)
.head 14 -  !
.head 13 +  Else
.head 14 -  Call SalFilePutStr( whFileAuto,  lsErreur ||'
' || PalTraductMsg( 'ERR') )
.head 14 -  ! Trace
.head 14 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. '|| lsErreur)
.head 14 -  !
.head 14 -  Set lnErreur = lnErreur +1
.head 10 +  Else
.head 11 -  ! Trace
.head 11 -  Call PalTraceAction( gsUserLog, "LOAD FORMAT F", sTrace || 'ERR. load Format F (structure) ')
.head 11 -  Set lnErreur = lnErreur +1
.head 11 -  !
.head 9 -  !
.head 9 -  Call SalFilePutStr( whFileAuto,  SalStrRepeatX('-' , 50 ) )
.head 9 -  Call DispatchMessage(  )
.head 9 -  Call SalHideWindow( frmGenere.dfLibelleInfo)
.head 8 +  Else
.head 9 -  Call SalFilePutStr( whFileAuto,  PalTraductMsg( 'XML23') || SalNumberToStrX( i+1, 0) ||'	' || PalDtmDateHeure( )  )
.head 9 -  Call SalFilePutStr( whFileAuto,  lsArrayFileRep[i]  )
.head 9 -  Call SalFilePutStr( whFileAuto,   PalTraductMsg( 'XML19')   )
.head 9 -  Call SalFilePutStr( whFileAuto,  SalStrRepeatX('-' , 50 ) )
.head 9 -  Set lnErreur = lnErreur + 1
.head 8 -  Set i = i + 1
.head 7 -  !
.head 7 -  Set sBuffer = '
' || SalStrRepeatX('=', 60 ) ||'
'
.head 7 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 7 -  Set sBuffer =  PalTraductMsg( 'XML26') || ' : '|| SalNumberToStrX( lnFileRep,0) ||'
' || PalTraductMsg( 'XML27') || ' : '|| SalNumberToStrX( lnErreur,0) ||'
' || PalTraductMsg( 'XML20') || ' : '|| SalNumberToStrX( lnValid,0) ||'
' || PalTraductMsg( 'XML28') || ' : '|| SalNumberToStrX( lnCancel,0) 
.head 7 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 7 -  Set sBuffer = '
' || SalStrRepeatX('=', 60 ) ||'
'
.head 7 -  Call SalFilePutStr( whFileAuto,  sBuffer  )
.head 7 -  Call SalEnableWindow( hWndForm )
.head 7 -  Call VisWaitCursor( FALSE )
.head 7 -  Call SalFileClose( whFileAuto )
.head 7 -  Call PalEditFile( gsPathTemp || "FoF_AUTO.TXT" )
.head 7 -  Call SalFileOpen( whFileAuto, gsPathTemp || "FoF_AUTO.TXT", OF_Delete )
.head 7 -  Call SalBringWindowToTop( hWndForm )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'XML16'), PalTraductMsg( 'MSG' ), MB_Ok )
.head 3 +  Function: PalStrTokenize
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 +  Parameters
.head 5 -  String: psLine
.head 5 -  Receive String: psLineTokens[*]
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnCount
.head 5 -  Number: lnNumberOfChar
.head 5 -  Number: lnCountToken
.head 5 -  String: lsLeftChar
.head 4 +  Actions
.head 5 -  Set lnNumberOfChar = SalStrLength( psLine )
.head 5 +  While lnCount <  lnNumberOfChar
.head 6 -  Set lsLeftChar = SalStrLeftX( psLine, 1 )
.head 6 +  If lsLeftChar = '"'
.head 7 -  Set psLine = SalStrRightX( psLine, SalStrLength( psLine ) - 1 )
.head 7 -  Set lsLeftChar = SalStrLeftX( psLine, 1 )
.head 7 -  !
.head 7 +  While lsLeftChar != '"' and  lnCount <  lnNumberOfChar
.head 8 -  Set psLineTokens[ lnCountToken ] = psLineTokens[ lnCountToken ] || lsLeftChar
.head 8 -  Set psLine = SalStrRightX( psLine, SalStrLength( psLine ) - 1 )
.head 8 -  Set lsLeftChar = SalStrLeftX( psLine, 1 )
.head 8 -  Set lnCount = lnCount + 1
.head 7 -  !
.head 7 +  If SalStrLength( psLine ) > 0
.head 8 -  Set psLine = SalStrRightX( psLine, SalStrLength( psLine ) - 1 )
.head 8 -  Set lsLeftChar = SalStrLeftX( psLine, 1 )
.head 8 +  If SalStrLength( psLine ) > 0
.head 9 -  !
.head 9 +  If lsLeftChar =','
.head 10 -  Set psLine = SalStrRightX( psLine, SalStrLength( psLine ) - 1 )
.head 10 -  Set lsLeftChar = SalStrLeftX( psLine, 1 )
.head 9 +  Else
.head 10 -  ! Erreur
.head 10 -  Return ( FALSE)
.head 8 -  Set lnCountToken = lnCountToken + 1
.head 7 +  Else
.head 8 -  ! Erreur
.head 8 -  Return ( FALSE)
.head 6 +  Else
.head 7 +  If lnCount= 0
.head 8 -  ! Erreur
.head 8 -  Return ( FALSE)
.head 7 -  Set psLine = SalStrRightX( psLine, SalStrLength( psLine ) - 1 )
.head 6 -  Set lnCount = lnCount + 1
.head 5 -  Return (TRUE)
.head 2 +  Window Parameters
.head 3 -  Number: pnNoEl
.head 3 -  String: psIns
.head 3 -  Number: pnNbCdtMax
.head 3 -  Number: nAutomatique
.head 2 +  Window Variables
.head 3 -  Number: nIndex
.head 3 -  String: strFilters[*]
.head 3 -  String: strFileName
.head 3 -  String: strPathFileName
.head 3 -  File Handle: hFile
.head 3 -  File Handle: whFileAuto
.head 3 -  String: sBuffer
.head 3 -  String: sTitre
.head 3 -  String: wsArray[*]
.head 3 -  String: wsG[5]
.head 3 -  String: wsS[5]
.head 3 -  String: wsL[200, 20]
.head 3 -  String: wsC[200,200,5]
.head 3 -  String: wsSuppl[200,200,5]
.head 3 -  Number: wnIndiceEML
.head 3 -  Long String: sTrace
.head 3 -  String: wsStructEML[*]
.head 3 -  String: wsStructFinEML[*]
.head 3 -  String: wsAbrevEML[*]
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If nAutomatique
.head 5 -  Set sTitre = '   -  AUTO'
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Formaat F invoeren"  || sTitre)
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Import Format F" || sTitre)
.head 3 +  On SAM_CreateComplete
.head 4 -  Set cbValid = FALSE
.head 4 -  Call SalHideWindow( cbValid )
.head 4 +  If nAutomatique
.head 5 -  Call SalHideWindowAndLabel( dfFileName)
.head 5 -  Call SalHideWindow( pbLoad)
.head 5 -  Set cbArret = FALSE
.head 4 +  Else
.head 5 -  Call SalHideWindowAndLabel( dfRepName)
.head 5 -  Call SalHideWindow( pbLoadRep)
.head 5 -  Call SalHideWindow( cbArret)
.head 5 -  Set cbArret = TRUE
.head 1 -  ! ===========================================================================
.head 1 -  ! Bureaux de votes
.head 1 -  ! ==============
.head 1 -  ! .   - Ajout / Modification d'un bureau de vote
.head 1 +  Dialog Box: dlgAddBV
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 4.175"
.head 4 -  Top: 2.125"
.head 4 -  Width:  6.9"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.381"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: N° bureau
.head 4 -  Resource Id: 33405
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.179"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.226"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfNo
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 3
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.155"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 999
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 -  Call SalHideWindow( pbChargeBVPrec )
.head 6 +  If dfNo != NUMBER_Null
.head 7 -  ! << 9.05
.head 7 +  If dfNo <= 0 or dfNo > 999
.head 8 -  Call SalMessageBox(PalTraductMsg('ERR_NO_BV') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 8 -  Return (VALIDATE_Cancel)
.head 7 +  Else If dfNo > 1
.head 8 -  Call SalShowWindow( pbChargeBVPrec )
.head 7 +  ! If dfNo <= 0 or dfNo > 99
.head 8 -  Call SalMessageBox(PalTraductMsg('ERR_NO_BV') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 8 -  Return (VALIDATE_Cancel)
.head 7 -  ! >> 9.05
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Bureau Nr.")
.head 3 -  Background Text: Description:
.head 4 -  Resource Id: 33406
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.512"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDesc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.488"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Beschrijving")
.head 3 -  Background Text: Adresse
.head 4 -  Resource Id: 33407
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.845"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfAdresse
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.821"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Adres")
.head 3 -  Background Text: Code postal
.head 4 -  Resource Id: 33408
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.179"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfCP
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 4
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 1.155"
.head 6 -  Width:  0.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 9999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Postcode")
.head 3 -  Background Text: Localité:
.head 4 -  Resource Id: 33409
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.283"
.head 5 -  Top: 1.179"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfLoc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 25
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.383"
.head 6 -  Top: 1.155"
.head 6 -  Width:  2.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Plaatsnaam")
.head 3 -  Background Text: Président:
.head 4 -  Resource Id: 33410
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.512"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPres
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 1.488"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Voorzitter:")
.head 3 -  Background Text: Pc TOT Provincial:
.head 4 -  Resource Id: 33411
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.15"
.head 5 -  Top: 1.869"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbPcTotProv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.95"
.head 5 -  Top: 1.845"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.357"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 +  If frmGenere.wsScrutinEl= '1'
.head 8 -  Call SalSetWindowLabelText( hWndItem, "Provincie Tot. PC:")
.head 7 +  Else If frmGenere.wsScrutinEl= '2'
.head 8 -  Call SalSetWindowLabelText( hWndItem, "Kanton Tot. PC:")
.head 6 +  Else
.head 7 +  If frmGenere.wsScrutinEl= '2'
.head 8 -  Call SalSetWindowLabelText( hWndItem, "Pc TOT Canton:")
.head 3 -  Background Text: Pc TOT Communal:
.head 4 -  Resource Id: 33412
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.583"
.head 5 -  Top: 1.845"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbPcTot
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.383"
.head 5 -  Top: 1.821"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.357"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Gemeente Tot. PC")
.head 3 -  Background Text: Conseil de district:
.head 4 -  Resource Id: 33413
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 2.179"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbCdi
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 2.155"
.head 5 -  Width:  4.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.048"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Raad van distrikt")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 1.183"
.head 5 -  Top: 2.738"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalSaveBV(  )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 3.583"
.head 5 -  Top: 2.738"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close , 0,0)
.head 3 +  Pushbutton: pbChargeBVPrec
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: <<
.head 4 -  Window Location and Size
.head 5 -  Left: 6.283"
.head 5 -  Top: 0.488"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalChargeDonneeBVPrec( dfNo - 1 )
.head 2 +  Functions
.head 3 +  Function: PalSearchBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsCdi
.head 4 +  Actions
.head 5 -  Set lsSelect = "Select bv_no, BV_DESCRIPTION, Bv_President, bv_Adresse, bv_localite, bv_code_postal, Bv_com_pcTot , cdi_ins, bv_can_pctot
	from bur_vote 
	where can_ins = :pnInsCan and com_ins = :pnInsCom and BV_No = :pnNo 
	Into :dfNo, :dfDesc :dfPres, :dfAdresse, :dfLoc, :dfCP, :cmbPcTot, :lsCdi, :cmbPcTotProv"
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 5 +  If lsCdi != ''
.head 6 -  Call SalShowWindowAndLabel( cmbCdi)
.head 6 -  Call PalPopulateCdi( lsCdi )
.head 3 +  Function: PalChargeBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnPcTot
.head 5 -  Number: lnPcTotProv
.head 5 -  String: lsSelect
.head 5 -  String: lsInsCan
.head 5 -  Number: lnI
.head 4 +  Actions
.head 5 +  If frmGenere.wsScrutinEl = '1'
.head 6 -  Set lsSelect = "Select COM_NB_PCTOT, can_ins from commune 
	where com_ins = :pnInsCom
	Into :lnPcTot , :lsInsCan "
.head 5 +  Else If frmGenere.wsScrutinEl = '2'
.head 6 -  Set lsSelect = "Select NB_PC_TOT, can_ins from base_commune 
	where can_ins = :pnInsCan and type = 'CA'
	Into :lnPcTot , :lsInsCan "
.head 5 +  Else
.head 6 -  Call SalMessageBox('Erreur DB -- Scrutin dans Param = ' || frmGenere.wsScrutinEl, 'ERREUR', MB_IconExclamation | MB_Ok)
.head 6 -  Return (FALSE)
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If lnPcTot > 0
.head 7 -  Set lnI = 1
.head 7 +  While lnI <= lnPcTot
.head 8 -  Call SalListAdd( cmbPcTot, SalNumberToStrX( lnI , 0)  )
.head 8 -  Set lnI = lnI + 1
.head 7 -  Call SalListSetSelect( cmbPcTot, 0 )
.head 7 +  If lnPcTot = 1
.head 8 -  Call SalHideWindowAndLabel( cmbPcTot )
.head 7 +  If lnPcTot = NUMBER_Null or lnPcTot = 0
.head 8 -  Call SalMessageBox( PalTraductMsg('NO_PCTOT') , PalTraductMsg('ATTENTION'), MB_Ok)
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Call SalHideWindowAndLabel( cmbPcTot )
.head 6 -  !
.head 6 +  If (SalStrLeftX( SalNumberToStrX(pnInsCom,0), 2) != '21' and frmGenere.wsScrutinEl = '1') or
	frmGenere.wsScrutinEl = '2'
.head 7 +  If frmGenere.wsScrutinEl = '1'
.head 8 -  Set lsSelect = "Select CAN_NB_PC_TOT, can_ins from commune 
	where com_ins = :lsInsCan
	Into :lnPcTotProv"
.head 7 +  Else If frmGenere.wsScrutinEl = '2' 
.head 8 -  Set lsSelect = "Select CAN_NB_PC_TOT, can_ins from Base_commune 
	where can_ins = :lsInsCan and type = 'CA'
	Into :lnPcTotProv"
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 8 -  Set lnI = 1
.head 8 +  While lnI <= lnPcTotProv
.head 9 -  Call SalListAdd( cmbPcTotProv, SalNumberToStrX( lnI , 0)  )
.head 9 -  Set lnI = lnI + 1
.head 8 -  Call SalListSetSelect( cmbPcTotProv, 0 )
.head 8 +  If lnPcTotProv = 1
.head 9 -  Call SalHideWindowAndLabel( cmbPcTotProv )
.head 8 +  If lnPcTotProv = NUMBER_Null or lnPcTotProv = 0
.head 9 -  Call SalMessageBox( PalTraductMsg('NO_PCTOT')  || ' 2', PalTraductMsg('ATTENTION'), MB_Ok)
.head 9 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 7 +  Else
.head 8 -  Call SalMessageBox( PalTraductMsg('NO_PCTOT') || ' (2)', PalTraductMsg('ATTENTION'), MB_Ok)
.head 8 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 8 -  Return (FALSE)
.head 6 +  Else
.head 7 -  Call SalHideWindowAndLabel( cmbPcTotProv )
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg('NO_PCTOT') ||' (1)' , PalTraductMsg('ATTENTION'), MB_Ok)
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Function: PalSaveBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNo
.head 5 -  Boolean: bOk
.head 5 -  String: lsSelect
.head 5 -  String: lsCdi
.head 5 -  String: lsCdiExistant
.head 5 -  String: lsPcTot
.head 4 +  Actions
.head 5 +  If dfNo = NUMBER_Null or dfNo <= 0 or dfNo > 999
.head 6 -  Call SalSetFocus( dfNo )
.head 6 -  Return (FALSE )
.head 5 +  If dfDesc = ''
.head 6 -  Call SalSetFocus( dfDesc )
.head 6 -  Return (FALSE )
.head 5 +  If pnNo != - 1 
.head 6 +  If pnNo != dfNo
.head 7 -  Set lsNo = ' and BV_NO != ' || SalNumberToStrX( pnNo, 0) || ' and BV_NO = '  || SalNumberToStrX( dfNo, 0) || ' '
.head 6 +  Else
.head 7 -  Set lsNo = ''
.head 5 +  Else
.head 6 -  Set lsNo = ' and BV_NO = ' || SalNumberToStrX( dfNo, 0) || ' '
.head 5 -  Set bOk = FALSE
.head 5 +  If lsNo != ''
.head 6 +  If SalStrLeftX( SalNumberToStrX(pnInsCom,0),2) = '21' and frmGenere.wsScrutinEl = '1'
.head 7 -  Set lsSelect = "Select * from bur_vote 
	where com_ins = :pnInsCom " || lsNo 
.head 6 +  Else
.head 7 -  Set lsSelect = "Select * from bur_vote 
	where can_ins = :pnInsCan " || lsNo 
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set bOk = TRUE
.head 5 +  Else
.head 6 -  Set bOk = TRUE
.head 5 +  If bOk
.head 6 +  If pnEl_District = 1
.head 7 -  Set lsCdi = SalStrLeftX( cmbCdi, 5 )
.head 6 +  Else
.head 7 -  Set lsCdi = ''
.head 6 +  If pnNo != -1
.head 7 -  Set lsSelect = "Update Bur_Vote set bv_no = :dfNo ,
	BV_DESCRIPTION = :dfDesc, 
	Bv_President = :dfPres, 
	bv_Adresse = :dfAdresse, 
	bv_localite =:dfLoc, 
	bv_code_postal =:dfCP, 
	Bv_com_pcTot =:cmbPcTot,
	BV_Can_PcTot =:cmbPcTotProv,
	Cdi_ins = :lsCdi
  where can_ins = :pnInsCan and com_ins = :pnInsCom and BV_No = :pnNo "		
.head 6 +  Else
.head 7 -  Set lsSelect = "Insert into Bur_Vote ( PRO_INS, DIS_INS, CAN_INS ,COM_INS,bv_no, BV_DESCRIPTION, Bv_President, bv_Adresse, bv_localite, bv_code_postal, Bv_com_pcTot, Bv_can_pcTot, Cdi_Ins)
	values (:pnInsPro,:pnInsDis,:pnInsCan,:pnInsCom, :dfNo, :dfDesc, :dfPres, :dfAdresse, :dfLoc, :dfCP, :cmbPcTot, :cmbPcTotProv , :lsCdi) "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 +  If pnNo != -1
.head 7 +  If dfNo != pnNo
.head 8 -  Set sTrace = sTrace || ' --> New no BV: ' || SalNumberToStrX( dfNo , 0) || '   - '
.head 7 -  Call PalTraceAction( gsUserLog, "MODIF BV", sTrace || 'OK')
.head 6 +  Else
.head 7 -  Set sTrace = sTrace || ' --> BV no: ' || SalNumberToStrX( dfNo , 0)
.head 7 -  Call PalTraceAction( gsUserLog, "CREAT BV", sTrace || '   -  OK')
.head 6 -  Set bBV_Ok = TRUE
.head 6 -  Set pnBVActif = dfNo
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close , 0,0)
.head 5 +  Else
.head 6 -  Call SalMessageBox(PalTraductMsg('NO_BV_EXISTE') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 3 +  Function: PalPopulateCdi
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: psCdi
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsCdiLabel
.head 5 -  Number: lnI
.head 4 +  Actions
.head 5 -  Call SalListPopulate( cmbCdi, ghSqlSecondaire, "Select cdi_ins || ' - ' || @trim( CDI_NOM_N || ' ' || CDI_NOM_F ) from c_district where com_ins = :pnInsCom 
	order by cdi_ins")
.head 5 -  Call SalListSetSelect( cmbCdi, 0 )
.head 5 +  If psCdi != ''
.head 6 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select cdi_ins || ' - ' || @trim( CDI_NOM_N || ' ' || CDI_NOM_F ) from c_district where cdi_ins = :psCdi 
	INTO :lsCdiLabel ")
.head 6 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 7 -  Set lnI = 0
.head 7 +  While SalListQueryTextX( cmbCdi, lnI ) != lsCdiLabel
.head 8 -  Set lnI = lnI + 1
.head 8 -  Call SalListSetSelect( cmbCdi, lnI )
.head 3 +  Function: PalChargeDonneeBVPrec
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nBV
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsSelect
.head 4 +  Actions
.head 5 +  If SalMessageBox( PalTraductMsg( 'BV50'), PalTraductMsg( '?' ) , MB_OkCancel | MB_IconQuestion ) = IDOK
.head 6 -  Set lsSelect = "Select BV_DESCRIPTION, bv_Adresse, bv_localite, bv_code_postal
	from bur_vote 
	where can_ins = :pnInsCan and com_ins = :pnInsCom and BV_No = :nBV 
	Into :dfDesc ,:dfAdresse, :dfLoc, :dfCP"
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 2 +  Window Parameters
.head 3 -  Number: pnInsCom
.head 3 -  Number: pnInsCan
.head 3 -  Number: pnInsDis
.head 3 -  Number: pnInsPro
.head 3 -  Number: pnNo
.head 3 -  Number: pnEl_District
.head 3 -  Receive Number: pnBVActif
.head 2 +  Window Variables
.head 3 -  String: sTrace
.head 3 -  Boolean: bBV_Ok
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set pnBVActif = NUMBER_Null
.head 4 -  Call SalHideWindowAndLabel( cmbCdi)
.head 4 -  Call SalHideWindow( pbChargeBVPrec )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Stembureaus")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Bureaux de vote")
.head 4 -  Call PalChargeBV()
.head 4 -  Set bBV_Ok = FALSE
.head 4 +  If pnNo != - 1
.head 5 -  Set pnBVActif = pnNo
.head 5 -  ! Trace
.head 5 -  Set sTrace = "INS: " || SalNumberToStrX( pnInsCom, 0)  || ' - BV no ' || SalNumberToStrX( pnNo, 0) || ' -->   '
.head 5 -  Call PalTraceAction( gsUserLog, "MODIF BV", sTrace || 'PREPA')
.head 5 -  !
.head 5 -  Call PalSearchBV( )
.head 5 +  If dfNo > 1
.head 6 -  Call SalShowWindow( pbChargeBVPrec )
.head 4 +  Else If pnEl_District = 1
.head 5 -  Call SalShowWindowAndLabel( cmbCdi)
.head 5 -  Call PalPopulateCdi( '' )
.head 4 +  If pnNo = -1
.head 5 -  ! Trace
.head 5 -  Set sTrace = "INS: " || SalNumberToStrX( pnInsCom, 0)  || '  -->   '
.head 5 -  Call PalTraceAction( gsUserLog, "CREAT BV", sTrace || 'PREPA')
.head 5 -  !
.head 3 +  On SAM_Close
.head 4 -  !
.head 4 +  If NOT bBV_Ok
.head 5 +  If pnNo != -1
.head 6 -  Call PalTraceAction( gsUserLog, "MODIF BV", sTrace ||'   -  Cancel')
.head 5 +  Else
.head 6 -  Call PalTraceAction( gsUserLog, "CREAT BV", sTrace || '   -  Cancel')
.head 4 -  !
.head 1 -  ! .   - Importation des bureaux de vote (CSV)
.head 1 +  Dialog Box: dlgImportBV_Tbl
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 2.313"
.head 4 -  Top: 1.021"
.head 4 -  Width:  16.167"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 5.381"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Fichier:
.head 4 -  Resource Id: 65001
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.095"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfFileName
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.083"
.head 6 -  Width:  10.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Bestand:' )
.head 3 +  Pushbutton: pbLoad
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Parcourir ...
.head 4 -  Window Location and Size
.head 5 -  Left: 11.5"
.head 5 -  Top: 0.071"
.head 5 -  Width:  1.383"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Light Gray
.head 4 -  Background Color: Black
.head 4 -  Button Appearance: Flat Look
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalDlgOpenFile( hWndForm, 'CSV File', strFilters, 2, nIndex, strFileName, strPathFileName )
.head 7 -  Set dfFileName = strPathFileName
.head 7 +  If dfFileName != ''
.head 8 -  Call SalWaitCursor( TRUE )
.head 8 -  Call SalTblReset( tblBV )
.head 8 -  Call PalChargeCSV(  )
.head 8 -  Call SalWaitCursor( FALSE )
.head 5 +  On SAM_Create
.head 6 -  Set strFilters[0] = 'CSV Files'
.head 6 -  Set strFilters[1] = '*.CSV'
.head 6 -  Set nIndex = 1
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Doorlezen ...' )
.head 3 +  Child Table: tblBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.405"
.head 6 -  Width:  15.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 4.333"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.633"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Nr.' )
.head 5 +  Column: colDesc
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Descript.
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 30
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.7"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Beschrijving' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.717"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Kanton' )
.head 5 +  Column: colCommune
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Commune
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.75"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Drop Down List
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Gemeente' )
.head 8 +  If gsLangueSoft = 'F'
.head 9 -  Call SalListPopulate( tblBV.colCommune, ghSqlSecondaire, "Select com_ins ||'-'||@IF(@Length(nom_F),Nom_F , nom_N) from Base_commune where can_ins = :psIns and type = 'GE' order by com_ins" )
.head 8 +  Else
.head 9 -  Call SalListPopulate( tblBV.colCommune, ghSqlSecondaire, "Select com_ins ||'-'||@IF(@Length(nom_n),Nom_n , nom_f) from Base_commune where can_ins = :psIns and type = 'GE' order by com_ins" )
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select com_ins  from Base_commune where can_ins = :psIns and type = 'GE' order by com_ins into :tsTmp " )
.head 8 -  Set lnI = 0
.head 8 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 9 -  Set taIns[lnI] = tsTmp
.head 9 -  Set lnI = lnI + 1
.head 8 -  Set lnNbCom = lnI - 1
.head 7 +  On SAM_AnyEdit
.head 8 -  Set tbOk = FALSE
.head 8 -  Set lnI = 0
.head 8 +  While lnI <= lnNbCom
.head 9 +  If SalStrLeftX(tblBV.colCommune,5) = taIns[lnI]
.head 10 -  Set tbOk = TRUE
.head 10 -  Break
.head 9 -  Set lnI = lnI + 1
.head 8 +  If NOT tbOk
.head 9 -  Set tblBV.colCommune = ''
.head 5 +  Column: colPcTot
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Pc.Tot.
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 1
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.7"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: 9
.head 6 -  Cell Options
.head 7 -  Cell Type? Drop Down List
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Tot. PC' )
.head 8 -  Set lnI = 1
.head 8 +  While lnI <= wnPcTot
.head 9 -  Call SalListAdd( tblBV.colPcTot, SalNumberToStrX( lnI , 0)  )
.head 9 -  Set lnI = lnI + 1
.head 8 -  Call SalListSetSelect( tblBV.colPcTot, 0 )
.head 8 +  If wnPcTot = 1
.head 9 -  Call SalHideWindow( tblBV.colPcTot )
.head 7 +  On SAM_Validate
.head 8 +  If SalStrToNumber(tblBV.colPcTot) <= 0 or tblBV.colPcTot = '' or SalStrToNumber(tblBV.colPcTot) > wnPcTot
.head 9 -  Call SalMessageBox( PalTraductMsg( 'BV26' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 9 -  Return (VALIDATE_Cancel )
.head 7 +  On SAM_AnyEdit
.head 8 +  If SalStrToNumber(tblBV.colPcTot) <= 0 or tblBV.colPcTot = '' or SalStrToNumber(tblBV.colPcTot) > wnPcTot
.head 9 -  Set tblBV.colPcTot = ''
.head 5 +  Column: colAdresse
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Adresse
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 30
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.25"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Adres' )
.head 5 +  Column: colCP
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: CP
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 4
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  0.65"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: 9999
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'P.C.' )
.head 5 +  Column: colLoc
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Localité
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 25
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Lokaliteit' )
.head 5 +  Column: colPresident
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: President
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 30
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.967"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle(hWndItem, 'Voorzitter' )
.head 4 -  Functions
.head 4 +  Window Variables
.head 5 -  Number: lnI
.head 5 -  Number: lnNbCom
.head 5 -  Boolean: tbOk
.head 5 -  String: tsTmp
.head 5 -  String: taIns[*]
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(tblBV,TBL_Flag_SingleSelection,TRUE)
.head 3 +  Pushbutton: pbAccept
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 5.0"
.head 5 -  Top: 4.833"
.head 5 -  Width:  1.883"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblBV, 0,0)
.head 7 -  Call SalTblSetContext( tblBV, SalTblQueryContext( tblBV ) )
.head 7 -  Call SalTblSetFocusRow(  tblBV, SalTblQueryContext( tblBV ) )
.head 7 -  Call SalTblSetRowFlags(  tblBV, SalTblQueryContext( tblBV ), ROW_Selected, TRUE )
.head 7 -  Call PalSaveBV()
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: FERMER
.head 4 -  Window Location and Size
.head 5 -  Left: 9.883"
.head 5 -  Top: 4.821"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'SLUITEN' )
.head 2 +  Functions
.head 3 +  Function: PalEditFile
.head 4 -  Description: Edition d'un fichier donné avec Notepad
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sPathFile
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 -  Call SalLoadAppAndWait( "NOTEPAD " || sPathFile , Window_Maximized , nRet)
.head 3 +  Function: PalChargeCSV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  Number: nChamp
.head 5 -  Number: i
.head 5 -  Number: nRow
.head 5 -  Number: nBV_Prec
.head 5 -  Boolean: bOk
.head 5 -  String: sAChamp[*]
.head 5 -  String: lsCommune
.head 4 +  Actions
.head 5 +  If SalFileOpen( hFile, dfFileName, OF_Read | OF_Text )
.head 6 -  Set nBV_Prec = 0
.head 6 +  While SalFileGetStr( hFile, sBuffer, 1000 )
.head 7 -  Set nChamp = SalStrTokenize( sBuffer, '', ';', sAChamp )
.head 7 +  If nChamp >= 12
.head 8 -  Set nRow = SalTblInsertRow( tblBV, TBL_MaxRow )
.head 8 +  If nRow != TBL_Error
.head 9 -  Call SalTblSetContext( tblBV, nRow )
.head 9 -  Call SalTblSetFocusRow(  tblBV, nRow )
.head 9 -  Set tblBV.colCanton = sAChamp[2]
.head 9 -  Set tblBV.colPcTot = SalNumberToStrX( SalStrToNumber(sAChamp[3]), 0)
.head 9 +  If SalStrToNumber(sAChamp[3]) > wnPcTot 
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV26' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 10 -  Call SalTblReset( tblBV)
.head 10 -  Break
.head 9 -  Set tblBV.colNoBV = SalNumberToStrX( SalStrToNumber( SalStrRightX('000' || sAChamp[7], 3) ) , 0)
.head 9 +  If nBV_Prec + 1 != SalStrToNumber( tblBV.colNoBV )
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV46' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 10 -  Call SalTblReset( tblBV)
.head 10 -  Break
.head 9 +  Else
.head 10 -  Set nBV_Prec  = SalStrToNumber( tblBV.colNoBV )
.head 9 -  Call SalTblSetCellTextColor( tblBV.colNoBV, COLOR_Red, TRUE )
.head 9 -  Set tblBV.colPresident = sAChamp[8]
.head 9 -  Call SalTblSetCellTextColor( tblBV.colPresident, COLOR_DarkGreen, TRUE )
.head 9 -  Set tblBV.colAdresse = sAChamp[9]
.head 9 -  Call SalTblSetCellTextColor( tblBV.colAdresse, COLOR_DarkGreen, TRUE )
.head 9 -  Set tblBV.colCP = sAChamp[10]
.head 9 -  Call SalTblSetCellTextColor( tblBV.colCP, COLOR_DarkGreen, TRUE )
.head 9 -  Set tblBV.colLoc = sAChamp[11]
.head 9 -  Call SalTblSetCellTextColor( tblBV.colLoc, COLOR_DarkGreen, TRUE )
.head 9 +  If sAChamp[5] != ''
.head 10 -  Set tblBV.colDesc = sAChamp[5]
.head 9 +  Else
.head 10 -  Set tblBV.colDesc = "Bur. " || tblBV.colNoBV
.head 9 -  Call SalTblSetCellTextColor( tblBV.colDesc, COLOR_Blue, TRUE )
.head 9 +  If sAChamp[6] != ''
.head 10 -  Set lsCommune = PalTransUpper(  sAChamp[6] )
.head 9 +  Else
.head 10 -  Set lsCommune = PalTransUpper(  tblBV.colLoc )
.head 9 -  Call SalTblSetRowFlags( tblBV, nRow, ROW_New, FALSE )
.head 9 -  Set i = 0
.head 9 -  Set bOk = FALSE
.head 9 +  While TRUE
.head 10 +  If SalListSetSelect( tblBV.colCommune, i )
.head 11 +  If SalStrMidX( tblBV.colCommune, 6, SalStrLength( tblBV.colCommune) ) = lsCommune
.head 12 -  Set bOk = TRUE
.head 12 -  Break
.head 10 +  Else
.head 11 -  Break
.head 10 -  Set i = i + 1
.head 9 +  If not bOk
.head 10 -  Set tblBV.colCommune = ''
.head 8 +  Else
.head 9 -  Call SalMessageBox(PalTraductMsg( 'ERR' ) , PalTraductMsg(  'ERR' ), MB_Ok)
.head 9 -  Call SalTblReset( tblBV)
.head 9 -  Break
.head 7 +  Else
.head 8 -  Call SalMessageBox(PalTraductMsg( 'BV21' ) ||'
' || sBuffer , PalTraductMsg(  'ERR' ), MB_Ok)
.head 8 -  Call SalTblReset( tblBV)
.head 8 -  Break
.head 6 -  Call SalFileClose( hFile )
.head 6 +  If SalTblAnyRows( tblBV, 0,0)
.head 7 -  Call SalTblSetContext( tblBV, 0 )
.head 7 -  Call SalTblSetFocusRow(  tblBV, 0 )
.head 5 +  Else
.head 6 -  Call SalMessageBox(PalTraductMsg( 'ERR2' ), PalTraductMsg(  'ERR' ), MB_Ok)
.head 3 +  Function: PalTransUpper
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  String:
.head 4 +  Parameters
.head 5 -  String: psStr
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'à', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'â', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ä', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'á', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'À', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Â', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ä', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Á', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Å', 'A' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ç', 'C' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ç', 'C' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'é', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'è', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ê', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ë', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'É', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'È', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ê', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ë', 'E' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'î', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ï', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ï', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'í', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ì', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Î', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ï', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ì', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ì', 'I' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ñ', 'N' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ñ', 'N' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ô', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ö', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ò', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ó', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'õ', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ö', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ô', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ò', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ó', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Õ', 'O' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ù', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'û', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ü', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ú', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ü', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Û', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ú', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ù', 'U' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ý', 'Y' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'ÿ', 'Y' )
.head 5 -  Set psStr = VisStrSubstitute( psStr, 'Ý', 'Y' )
.head 5 -  Set psStr = SalStrUpperX(psStr)
.head 5 -  Return psStr
.head 3 +  Function: PalSaveBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Boolean: bContinue
.head 5 -  String: sInsPro
.head 5 -  String: sInsDis
.head 5 -  String: sInsCom
.head 5 -  String: sInsCan
.head 5 -  Long String: lsSelect
.head 4 +  Actions
.head 5 -  Set sInsCan = psIns
.head 5 -  ! ! Trace
.head 5 -  Set sTrace = 'INS: ' || sInsCan || '   -   ' 
.head 5 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'PREPA
' || dfFileName )
.head 5 -  ! !
.head 5 -  Set bContinue = FALSE
.head 5 -  ! Recherche Ins Prov et Dis
.head 5 -  Set lsSelect = "Select PRO_INS, DIS_INS from base_Commune where can_ins = " || sInsCan ||" and type = 'CA'
	INTO :sInsPro,:sInsDis "
.head 5 -  Call SqlPrepareAndExecute( ghSqlSecondaire ,lsSelect )
.head 5 +  If Not SqlFetchNext( ghSqlSecondaire, Btmp )
.head 6 -  ! ! Trace
.head 6 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV08' ))
.head 6 -  ! !
.head 6 -  Call SalMessageBox( PalTraductMsg( 'BV08' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 6 -  Return FALSE
.head 5 -  ! Verif si deja BV
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select * from Bur_vote where can_ins = :sInsCan ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If SalMessageBox(PalTraductMsg('BV33'),PalTraductMsg('?'),MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 7 -  Set bContinue = TRUE
.head 7 +  If NOT SqlPrepareAndExecute( ghSqlMain, "Delete from Bur_vote where can_ins = :sInsCan ")
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 8 -  ! ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV32' ))
.head 8 -  ! !
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV32' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 6 +  Else
.head 7 -  Set bContinue = FALSE
.head 7 -  ! ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'Cancel' )
.head 7 -  ! !
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  Else
.head 6 -  Set bContinue = TRUE
.head 5 -  ! Verification des zones indispensables
.head 5 +  If bContinue
.head 6 -  Set nRow = -1
.head 6 +  While SalTblFindNextRow( tblBV, nRow, 0, 0 ) and bContinue
.head 7 -  Call SalTblSetContext( tblBV, nRow )
.head 7 -  Call SalTblSetFocusRow(  tblBV, nRow )
.head 7 +  If tblBV.colDesc = ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 8 -  ! ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV48' ))
.head 8 -  ! !
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV48' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 8 -  Break
.head 7 +  If tblBV.colCommune = ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 8 -  ! ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV49' ))
.head 8 -  ! !
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV49' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 8 -  Break
.head 7 +  If tblBV.colPcTot = ''
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 8 -  ! ! Trace
.head 8 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV05' ))
.head 8 -  ! !
.head 8 -  Call SalMessageBox( PalTraductMsg( 'BV05' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 8 -  Set bContinue = FALSE
.head 8 -  Break
.head 7 -  !
.head 7 +  If bContinue
.head 8 -  Set sInsCom = SalStrLeftX( tblBV.colCommune, 5)
.head 8 -  Set lsSelect = "Insert into Bur_Vote ( PRO_INS, DIS_INS, CAN_INS ,COM_INS,bv_no, BV_DESCRIPTION, Bv_President, bv_Adresse, bv_localite, bv_code_postal, Bv_can_pcTot)
	values (:sInsPro,:sInsDis,:sInsCan,:sInsCom, :tblBV.colNoBV, :tblBV.colDesc, :tblBV.colPresident, :tblBV.colAdresse , :tblBV.colLoc, :tblBV.colCP, :tblBV.colPcTot ) "
.head 8 +  If NOT SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 9 -  Set bContinue = FALSE
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 9 -  ! ! Trace
.head 9 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'ERR. :' || PalTraductMsg( 'BV32' ))
.head 9 -  ! !
.head 9 -  Call SalMessageBox( PalTraductMsg( 'BV32' ) , PalTraductMsg( 'ERR' ), MB_Ok)
.head 9 -  Break
.head 6 +  If NOT bContinue
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 6 +  Else
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  ! ! Trace
.head 7 -  Call PalTraceAction( gsUserLog, "IMPORT BV", sTrace || 'OK')
.head 7 -  ! !
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK")
.head 2 +  Window Parameters
.head 3 -  String: psIns
.head 3 -  Number: pnNbPcTot
.head 2 +  Window Variables
.head 3 -  Number: nIndex
.head 3 -  String: strFilters[*]
.head 3 -  String: strFileName
.head 3 -  String: strPathFileName
.head 3 -  File Handle: hFile
.head 3 -  File Handle: whFileAuto
.head 3 -  String: sBuffer
.head 3 -  String: sTitre
.head 3 -  Number: wnLigne1BV[*]
.head 3 -  Number: wnLigneBV[*]
.head 3 -  String: wsAbrevEML[*]
.head 3 -  Number: wnIndiceBV
.head 3 -  Number: wnIndiceLigne1BV
.head 3 -  Long String: sTrace
.head 3 -  Number: wnPcTot
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Stembureaus invoeren - "  || psIns)
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Import bureaux de vote - " || psIns)
.head 4 -  !
.head 4 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  "Select CAN_NB_PC_TOT from base_commune 
			where can_ins = :psIns and type = 'CA'
			Into :wnPcTot  " )

.head 4 -  Call SqlFetchNext( ghSqlSecondaire , Btmp)
.head 1 -  ! ===========================================================================
.head 1 -  ! PC TOT
.head 1 -  ! ======
.head 1 -  ! .   - Modification des données du bureau principal (Communal ou Canton)
.head 1 +  Dialog Box: dlgModifPCT
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 4.175"
.head 4 -  Top: 2.125"
.head 4 -  Width:  6.667"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.869"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Type
.head 4 -  Resource Id: 19664
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.095"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDesc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.071"
.head 6 -  Width:  2.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If frmGenere.wsScrutinEl = '1'
.head 7 +  If sType = 'COM'
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set MyValue = "GEMEENTE"
.head 8 +  Else
.head 9 -  Set MyValue = "COMMUNE"
.head 7 +  Else
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set MyValue = "PROVINCIE"
.head 8 +  Else
.head 9 -  Set MyValue = "PROVINCE"
.head 6 +  Else If frmGenere.wsScrutinEl = '2'
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set MyValue = "KANTON"
.head 7 +  Else
.head 8 -  Set MyValue = "CANTON"
.head 6 -  Call SalDisableWindow( hWndItem)
.head 3 -  Background Text: Adresse
.head 4 -  Resource Id: 60016
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.429"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfAdresse
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.405"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Adres")
.head 3 -  Background Text: Code postal
.head 4 -  Resource Id: 60017
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.762"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfCP
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 4
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.738"
.head 6 -  Width:  0.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 9999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Postcode")
.head 3 -  Background Text: Localité:
.head 4 -  Resource Id: 60018
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.283"
.head 5 -  Top: 0.762"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfLoc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 25
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.383"
.head 6 -  Top: 0.738"
.head 6 -  Width:  2.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Plaatsnaam")
.head 3 -  Background Text: Président:
.head 4 -  Resource Id: 60019
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.095"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPres
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 1.071"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Voorzitter:")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 1.283"
.head 5 -  Top: 1.405"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalSavePcTot(  )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 3.483"
.head 5 -  Top: 1.405"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close , 0,0)
.head 2 +  Functions
.head 3 +  Function: PalSearchPCT
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 4 +  Actions
.head 5 +  If frmGenere.wsScrutinEl = '1'
.head 6 -  Set lsSelect = "Select pct_President, pct_Adresse, pct_localite, pct_code_postal from pc_tot
	where can_ins = :pnInsCan and com_ins = :pnInsCom and pct_No = :pnNo and pct_type = :sType
	Into  :dfPres, :dfAdresse, :dfLoc, :dfCP "
.head 5 +  Else
.head 6 -  Set lsSelect = "Select pct_President, pct_Adresse, pct_localite, pct_code_postal from pc_tot
	where can_ins = :pnInsCan and pct_No = :pnNo
	Into  :dfPres, :dfAdresse, :dfLoc, :dfCP "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 3 +  Function: PalSavePcTot
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNo
.head 5 -  Boolean: bOk
.head 5 -  String: lsSelect
.head 4 +  Actions
.head 5 +  If frmGenere.wsScrutinEl = '1'
.head 6 -  Set lsSelect = "Update Pc_tot set 
	pct_President = :dfPres, 
	pct_Adresse = :dfAdresse, 
	pct_localite =:dfLoc, 
	pct_code_postal =:dfCP
  where can_ins = :pnInsCan and com_ins = :pnInsCom and pct_Type = :sType "		
.head 5 +  Else
.head 6 -  Set lsSelect = "Update Pc_tot set 
	pct_President = :dfPres, 
	pct_Adresse = :dfAdresse, 
	pct_localite =:dfLoc, 
	pct_code_postal =:dfCP
  where can_ins = :pnInsCan"	
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  Call SalSendMsg( hWndForm, SAM_Close , 0,0)
.head 2 +  Window Parameters
.head 3 -  Number: pnInsCom
.head 3 -  Number: pnInsCan
.head 3 -  Number: pnInsDis
.head 3 -  Number: pnInsPro
.head 3 -  Number: pnNo
.head 3 -  String: sType
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gnTypeVote = 1
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Totalisatie PC")
.head 5 +  Else
.head 6 -  Call SalSetWindowText( hWndItem, "PC de totalisation")
.head 4 +  Else
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Telbureaus")
.head 5 +  Else
.head 6 -  Call SalSetWindowText( hWndItem, "Bureaux de dépouillement")
.head 4 -  Call PalSearchPCT( )
.head 1 -  ! .   - Edition des récépissés pour la réception des disquettes au niveau du bureau principal et des BV
.head 1 +  Dialog Box: dlgRecepisse
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 15.438"
.head 4 -  Top: 3.76"
.head 4 -  Width:  6.35"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.155"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: 3D Face Color
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Radio Button: rbPcTot
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: pour le Président du bureau principal
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 0.238"
.head 5 -  Width:  5.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Voor de voorzitter van het hoofdbureau" )
.head 3 +  Radio Button: rbBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: pour les présidents de bureaux de vote
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 0.988"
.head 5 -  Width:  5.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Voor de voorzitters van stembureaus" )
.head 3 -  Background Text: du n°:
.head 4 -  Resource Id: 3605
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 1.345"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Gray
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfBV1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 3
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 1.321"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Set rbBV = TRUE
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfBV1, 'Nr.' )
.head 3 -  Background Text: au n°:
.head 4 -  Resource Id: 3606
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.183"
.head 5 -  Top: 1.345"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Gray
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfBV2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 3
.head 5 -  Data Type: Number
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.883"
.head 6 -  Top: 1.321"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: #0
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_SetFocus
.head 6 -  Set rbBV = TRUE
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfBV2, 'tot' )
.head 3 +  Radio Button: rbCan
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Canton
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 0.571"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Gray
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Kanton" )
.head 6 +  If frmGenere.tblCantonPCT.colIns != frmGenere.tblCommunePCT.colIns
.head 7 -  Call SalDisableWindow( hWndItem) 
.head 5 +  On SAM_Click
.head 6 -  Set rbPcTot = TRUE
.head 6 -  Call PalBV()
.head 3 +  Radio Button: rbCom
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Commune
.head 4 -  Window Location and Size
.head 5 -  Left: 3.583"
.head 5 -  Top: 0.571"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Dark Gray
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Gemeente" )
.head 6 +  If frmGenere.wsScrutinEl = '2'
.head 7 -  Call SalDisableWindow( hWndItem) 
.head 5 +  On SAM_Click
.head 6 -  Set rbPcTot = TRUE
.head 6 -  Call PalBV()
.head 3 +  Pushbutton: pbModif
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Modifier
.head 4 -  Window Location and Size
.head 5 -  Left: 2.383"
.head 5 -  Top: 1.738"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalGenereRecepisse( TRUE)
.head 5 +  On SAM_Create
.head 6 +  If gsUserLog != 'SYSADM'
.head 7 -  Call SalHideWindow( hWndItem ) 
.head 3 +  Pushbutton: pbEditer
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Imprimer
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 1.738"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalGenereRecepisse( FALSE)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Afdrukken" )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 4.283"
.head 5 -  Top: 1.738"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten" )
.head 3 +  Pushbutton: F11
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: F11
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', wbPWOk, gsTmp)
.head 6 +  If wbPWOk
.head 7 -  Call SalShowWindow( pbModif )
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  Return (FALSE)
.head 2 +  Functions
.head 3 +  Function: PalGenereRecepisse
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Boolean: bModif
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Boolean: bContinue
.head 5 -  Number: nEtiq
.head 5 -  Number: nRet
.head 5 -  String: lsNo
.head 5 -  String: lsNoPCT
.head 5 -  String: lsNomPCT
.head 5 -  String: lsWhere
.head 5 -  String: lsPres
.head 5 -  String: lsAdr
.head 5 -  String: lsCP
.head 5 -  String: lsLoc
.head 5 -  String: lsNoPcTot
.head 5 -  String: lsNoPcTot_Lettre
.head 5 -  String: lsTypePcTot
.head 5 -  String: lsPW
.head 5 -  String: lsRegion
.head 5 -  String: lsRegLing
.head 5 -  String: lsFile1
.head 5 -  String: lsFileWord
.head 5 -  String: lsFile2
.head 5 -  String: sComF
.head 5 -  String: sComN
.head 5 -  String: lsTypePc
.head 5 -  String: lsStatut
.head 5 -  String: lsNoEcrit
.head 5 -  String: lsCodeInt
.head 5 -  String: lsNbBV
.head 5 -  String: lsNbBV_Lettre
.head 5 -  Number: nPassage
.head 5 -  File Handle: hFile
.head 5 -  Boolean: bOk
.head 5 -  Long String: sBuffer
.head 5 -  String: lsWhereTypePc
.head 5 -  String: lsDescPcTotType
.head 5 -  String: lsDesc
.head 5 -  Window Handle: hTblPcTot
.head 4 +  Actions
.head 5 -  Set lsRegion = 'WAL'
.head 5 -  Call SqlPrepareAndExecute( ghSqlSecondaire,"Select Region, nom_f, nom_N from base_commune 
	where com_ins = :nIns
	Into :lsRegion , :sComF, :sComN ")
.head 5 -  Call SqlFetchNext( ghSqlSecondaire , Btmp)
.head 5 +  If lsRegion = 'BXL' 
.head 6 -  ! Question du choix de la langue
.head 6 -  Set lsRegLing = 'FN'
.head 6 -  Call SalModalDialog( dlgChoixLangue, hWndForm , lsRegLing, bOk, lsRegLing)
.head 6 +  If bOk
.head 7 +  If lsRegLing =  'F'
.head 8 -  Set lsRegion = 'WAL'
.head 7 +  Else If lsRegLing =  'N'
.head 8 -  Set lsRegion = 'FLA'
.head 6 +  Else
.head 7 -  Return (FALSE)
.head 5 -  !
.head 5 -  ! Récépissé PC TOT
.head 5 -  Call SalDisableWindow( hWndForm )
.head 5 -  Call VisWaitCursor( TRUE )
.head 5 +  If rbPcTot
.head 6 -  Set lsWhere = ""
.head 6 +  If rbCom
.head 7 -  Set lsWhere = " com_ins = :nIns AND Pct_type = 'COM' "
.head 6 +  Else
.head 7 -  Set lsWhere = " can_ins = :nIns AND (Pct_type != 'COM' or pct_type is null ) "
.head 6 +  If SqlPrepareAndExecute( ghSqlMain,"Select  pct_President, pct_Adresse, pct_Code_Postal, pct_Localite, pct_type, pct_codebak, count(*)
	from pc_tot
	where  "|| lsWhere ||"
	Group by 1,2,3,4,5,6
	Into :lsPres,:lsAdr,:lsCP,:lsLoc , :lsTypePc, :lsPW, :lsNoPCT ")
.head 7 -  ! Copie du fichier en local
.head 7 +  If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP_DE.Doc'
.head 8 -  Set lsFileWord = 'RECEP_DE.Doc'
.head 7 +  Else If lsRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP_NL.Doc'
.head 8 -  Set lsFileWord = 'RECEP_NL.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECEP.Doc'
.head 8 -  Set lsFileWord = 'RECEP.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'RECEP.Doc'
.head 7 +  If VisFileCopy( lsFile1 , lsFile2 ) != 1
.head 8 -  Set bContinue = FALSE
.head 8 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ) || '
' || lsFile1 , PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 +  Else
.head 8 -  Set bContinue = TRUE
.head 7 -  !
.head 7 +  While SqlFetchNext( ghSqlMain , Btmp) and bContinue
.head 8 -  !
.head 8 +  If rbCom
.head 9 -  Set lsWhere = " com_ins = :nIns "
.head 8 +  Else
.head 9 -  Set lsWhere = " can_ins = :nIns "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Select count(*) from bur_vote where " || lsWhere || " into :lsNbBV " )
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 +  If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 9 -  Set lsNbBV_Lettre = CHIFLETDE(  SalStrToNumber( lsNbBV ) )
.head 8 +  Else If lsRegion= 'FLA'
.head 9 -  Set lsNbBV_Lettre = CHIFLETNL( SalStrToNumber( lsNbBV ) )
.head 8 +  Else
.head 9 -  Set lsNbBV_Lettre = CHIFLET( SalStrToNumber( lsNbBV ) )
.head 8 -  !
.head 8 -  !
.head 8 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{President}|{Type_Tot}|{NbPcTot}|{NbDisquette}|{NbPcTot_Lettre}|{NbBV}|{NbBV_Lettre}|{PW}
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  !
.head 9 +  If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set lsNoPcTot_Lettre = CHIFLETDE(  SalStrToNumber( lsNoPCT ) )
.head 9 +  Else If lsRegion= 'FLA'
.head 10 -  Set lsNoPcTot_Lettre = CHIFLETNL( SalStrToNumber( lsNoPCT ) )
.head 9 +  Else
.head 10 -  Set lsNoPcTot_Lettre = CHIFLET( SalStrToNumber( lsNoPCT ) )
.head 9 -  !
.head 9 +  If lsTypePc = 'COM'
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set lsDescPcTotType = 'Gemeentehoofdbureau'
.head 10 +  Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 11 -  Set lsDescPcTotType = 'Gemeinde Tot. Commune'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set lsDescPcTotType = 'Bureau principal de commune'
.head 10 +  Else If lsRegion = 'BXL'
.head 11 -  Set lsDescPcTotType = 'Bureau principal de commune / Gemeentehoofdbureau'
.head 9 +  Else
.head 10 +  If lsRegion = 'FLA'
.head 11 -  Set lsDescPcTotType = 'Kantonhoofdbureau'
.head 10 +  Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 11 -  Set lsDescPcTotType = 'Tot. Canton / Kanton Tot.'
.head 10 +  Else If lsRegion = 'WAL'
.head 11 -  Set lsDescPcTotType = 'Bureau principal de canton'
.head 9 -  !
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX( nIns, 0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else If SalStrLeftX(SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set sBuffer = gsTitreN||"|"||date_transforme( gsDateEl, '/') || "|"  ||lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres|| "|"|| lsDescPcTotType
.head 9 +  Else
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer  || lsPres|| "|"|| lsDescPcTotType
.head 9 -  Set sBuffer = sBuffer || "|"|| lsNoPCT ||"|"|| SalNumberToStrX(gnNbDiskPCT,0) ||"|"|| lsNoPcTot_Lettre ||"|"|| lsNbBV ||"|"|| lsNbBV_Lettre ||"|"|| lsPW ||"
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 9 -  Set bContinue = FALSE
.head 8 -  ! Publipostage
.head 8 +  If bContinue
.head 9 +  If bModif
.head 10 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 10 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  Call ShellExecute( hWndForm, 'Print',  lsFile2 , ''
, gsPathTemp , SW_HIDE )
.head 10 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  ! Récépissé BV
.head 5 +  If rbBV
.head 6 -  Set lsWhere = ""
.head 6 +  If dfBV1 != NUMBER_Null
.head 7 -  Set lsWhere = " AND @int(Bv_no) >= "|| SalNumberToStrX( dfBV1, 0) 
.head 6 +  If dfBV2 != NUMBER_Null
.head 7 -  Set lsWhere =lsWhere || " AND @int(Bv_no) <= "|| SalNumberToStrX( dfBV2, 0) 
.head 6 +  If SqlPrepareAndExecute( ghSqlMain,"Select  @int(bv_no), bv_description,bv_President, bv_Adresse, bv_Code_Postal, bv_Localite, bv_statut, bv_codebak, bv_NoEcrit
	from bur_vote
	where can_ins = :nIns  "|| lsWhere ||"
	order by 1
	Into :lsNo,:lsDesc, :lsPres,:lsAdr,:lsCP,:lsLoc, :lsStatut, :lsPW, :lsNoEcrit ")
.head 7 -  ! Copie du fichier en local
.head 7 +  If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV_DE.Doc'
.head 8 -  Set lsFileWord = 'RECBV_DE.Doc'
.head 7 +  Else If lsRegion ='FLA'
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV_NL.Doc'
.head 8 -  Set lsFileWord = 'RECBV_NL.Doc'
.head 7 +  Else
.head 8 -  Set lsFile1 =  gsPathRpt || 'RECBV.Doc'
.head 8 -  Set lsFileWord = 'RECBV.Doc'
.head 7 -  Set lsFile2 =  gsPathTemp || 'RECBV.Doc'
.head 7 +  If VisFileCopy( lsFile1 , lsFile2 ) != 1
.head 8 -  Set bContinue = FALSE
.head 8 -  Call SalMessageBox( PalTraductMsg( 'LISTE20' ) || '
' || lsFile1 , PalTraductMsg( 'ERR' ), MB_Ok )
.head 7 +  Else
.head 8 -  Set bContinue = TRUE
.head 7 -  !
.head 7 +  While SqlFetchNext( ghSqlMain , Btmp) and bContinue
.head 8 -  !
.head 8 +  If SalFileOpen( hFile, gsPathTemp ||"ETIQ2.TXT", OF_Create | OF_ReadWrite | OF_Text )
.head 9 -  Set sBuffer = "{Election}|{Date_El}|{Bur_No}|{Bur_Desc}|{Bur_Adr}|{Bur_CP}|{Bur_Loc}|{Commune}|{Ins_Comm}|{President}|{NbDisquette}|{PW}|{CodeInt}
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  !
.head 9 -  Set lsCodeInt = SalStrRightX('00' || lsNoEcrit , 2) || VisStrSubstitute( VisStrSubstitute(VisStrSubstitute( SalStrRightX( lsStatut, 20) , ' ' , ''), '/', '') , '.', '')
.head 9 -  !
.head 9 +  If lsRegion = 'FLA'
.head 10 -  Set sBuffer = gsTitreN ||"|"|| date_transforme( gsDateEl, '/')  ||"|"  || lsNo  ||"|"  || lsDesc  ||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres 
.head 9 +  Else If SalStrLeftX( SalNumberToStrX( nIns, 0), 2) = '63'
.head 10 -  Set sBuffer = gsTitreN||"|"||date_transforme( gsDateEl, '/') ||"|"  || lsNo  ||"|"  || lsDesc|| "|"  ||lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComN ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer || lsPres
.head 9 +  Else
.head 10 -  Set sBuffer = gsTitreF ||"|"|| date_transforme( gsDateEl, '/') ||"|"  || lsNo  ||"|"  || lsDesc||"|"  || lsAdr ||"|" || lsCP ||"|" || lsLoc ||"|" || sComF ||"|" || SalNumberToStrX(nIns,0)  ||"|" 	
.head 10 -  Set sBuffer = sBuffer  || lsPres 
.head 9 -  Set sBuffer = sBuffer || "|"|| SalNumberToStrX(gnNbDiskBV,0) || "|"|| lsPW || "|"|| lsCodeInt || "
"
.head 9 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 9 -  Call SalFileClose( hFile )
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'ETIQ01' ) || '
' || PalTraductMsg( 'ETIQ02' ) , PalTraductMsg( 'MSG' ), MB_Ok )
.head 9 -  Set bContinue = FALSE
.head 8 -  ! Publipostage
.head 8 +  If bContinue
.head 9 +  If bModif
.head 10 -  Call ShellExecute( hWndForm, 'Open',  lsFile1 , ''
, gsPathTemp , SW_SHOWMAXIMIZED  )
.head 10 -  Set bContinue = FALSE
.head 9 +  Else
.head 10 -  Call ShellExecute( hWndForm, 'Print',  lsFile2 , ''
, gsPathTemp , SW_HIDE  )
.head 10 -  Call SalPause(1500)
.head 10 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call VisWaitCursor( FALSE )
.head 5 -  Call SalEnableWindow( hWndForm )
.head 3 +  Function: PalBV
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 +  If rbCom
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain,"Select  min(@int(bv_no)), max(@int(bv_no))
	from bur_vote
	where com_ins = :nIns 
	into :dfBV1, :dfBV2 ")
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain,"Select  min(@int(bv_no)), max(@int(bv_no))
	from bur_vote
	where can_ins = :nIns 
	into :dfBV1, :dfBV2 ")
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 2 +  Window Parameters
.head 3 -  Number: nIns
.head 2 +  Window Variables
.head 3 -  Boolean: wbPWOk
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndForm, "Ontvangstbewijs - "  || frmGenere.tblCommunePCT.colCanton ||" (" || SalNumberToStrX(nIns,0) ||")" )
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndForm, "Récépissés - "|| frmGenere.tblCommunePCT.colCanton ||" (" || SalNumberToStrX(nIns,0) ||")" )
.head 3 +  On SAM_CreateComplete
.head 4 -  Call PalBV( )
.head 1 -  !
.head 1 -  ! Utilisateurs
.head 1 +  Dialog Box: dlgGestionUtilisateur
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Utilisateurs
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  9.133"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 4.429"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Child Table: tblUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 0.071"
.head 6 -  Width:  5.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.333"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colLogin
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Login
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.25"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblUser.colNom, 'Gebruiker' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Utilisateurs
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.8"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblUser.colNom, 'Gebruiker' )
.head 5 +  Column: colEID
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: EID
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  0.6"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Check Box
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value: 1
.head 8 -  Uncheck Value: 0
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsUserEID = '1'
.head 9 -  Call SalShowWindow( tblUser.colEID)
.head 8 +  Else
.head 9 -  Call SalHideWindow( tblUser.colEID)
.head 7 +  On SAM_AnyEdit
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire,  'Update Utilisateur set Eid = :tblUser.colEID
		Where NoUser = :tblUser.colNo ')
.head 8 -  Call SqlCommit( ghSqlSecondaire )
.head 5 +  Column: colRestr
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colAdmin
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colAdminSys
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPCT
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateUser
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: nNoUser
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  Number: lnRow
.head 6 +  Actions
.head 7 -  Call SalTblPopulate( tblUser, ghSqlMain, "Select noUser, Login, Nom, Eid, restr_com , Admin , Admin_Sys, BV, PCT from utilisateur order by 3,2
	into :tblUser.colNo, :tblUser.colLogin, :tblUser.colNom , :tblUser.colEID, :tblUser.colRestr, :tblUser.colAdmin, :tblUser.colAdminSys, :tblUser.colBV, :tblUser.colPCT ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblUser, 0,0)
.head 8 +  If nNoUser = NUMBER_Null
.head 9 -  Call SalTblSetRowFlags( tblUser, 0, ROW_Selected, TRUE)
.head 9 -  Call SalTblSetContext( tblUser, 0)
.head 9 -  Call SalTblSetFocusRow( tblUser, 0)
.head 8 +  Else
.head 9 -  Set lnRow = -1
.head 9 +  While SalTblFindNextRow( tblUser, lnRow, 0,0) 
.head 10 -  Call SalTblSetContext( tblUser, lnRow)
.head 10 -  Call SalTblSetFocusRow( tblUser, lnRow)
.head 10 +  If tblUser.colNo = nNoUser
.head 11 -  Call SalTblSetRowFlags( tblUser, lnRow , ROW_Selected, TRUE)
.head 11 -  Break
.head 8 -  Call SalSendMsg( tblUser, SAM_Click, 0,0)
.head 4 +  Window Variables
.head 5 -  Long String: lsPhoto
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 6 -  Call PalPopulateUser( NUMBER_Null )
.head 5 +  On SAM_Click
.head 6 -  Call SalTblReset( tblCanton )
.head 6 +  If tblUser.colRestr != ''
.head 7 -  Call tblCanton.PalPopulateCanton( tblUser.colRestr)
.head 6 -  Call SalPicClear( picUser )
.head 6 +  If gsUserEID = '1'
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Photo from utilisateur where login = :tblUser.colLogin
	into :lsPhoto ")
.head 7 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 +  If lsPhoto != ''
.head 9 -  ! Call SalPicSetString( picUser, PIC_FormatObject, lsPhoto )
.head 9 -  Call SalPicSetImage( picUser, lsPhoto, PIC_ImageTypeJPEG )
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblUser.colAdmin = 1 or tblUser.colBV = 1 or tblUser.colPCT = 1
.head 7 -  Call VisTblSetRowColor( tblUser, SalTblQueryContext( tblUser) , COLOR_Periwinkle )
.head 6 +  If tblUser.colAdmin = 1 and tblUser.colBV = 1 and tblUser.colPCT = 1
.head 7 -  Call VisTblSetRowColor( tblUser, SalTblQueryContext( tblUser) , COLOR_Blue )
.head 6 +  If tblUser.colAdminSys = 1
.head 7 -  Call VisTblSetRowColor( tblUser, SalTblQueryContext( tblUser) , COLOR_Red )
.head 6 +  If tblUser.colAdminSys = 1 and tblUser.colAdmin = 0 and tblUser.colBV = 0 and tblUser.colPCT = 0
.head 7 -  Call VisTblSetRowColor( tblUser, SalTblQueryContext( tblUser) , COLOR_DarkGreen )
.head 3 -  Background Text: Restrictions sur les cantons :
.head 4 -  Resource Id: 23525
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.683"
.head 5 -  Top: 0.095"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 3 +  Child Table: tblCanton
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 5.683"
.head 6 -  Top: 0.405"
.head 6 -  Width:  3.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: Default
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.783"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCanton.colIns, 'NIS' )
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  1.8"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCanton.colCanton, 'Kanton' )
.head 4 +  Functions
.head 5 +  Function: PalPopulateCanton
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: psCanton
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalTblPopulate( tblCanton, ghSqlSecondaire, "Select @IF(@Length(nom_N),Nom_N , nom_F) , can_INS from base_commune where type = 'CA' and can_INS in (" || psCanton || ")
	order by 1
	into :tblCanton.colCanton,:tblCanton.colIns ", TBL_FillAll)
.head 7 +  Else
.head 8 -  Call SalTblPopulate( tblCanton, ghSqlSecondaire, "Select @IF(@Length(nom_f),Nom_f , nom_n) , can_INS from base_commune where type = 'CA' and can_INS in (" || psCanton || ")
	order by 1
	into :tblCanton.colCanton,:tblCanton.colIns ", TBL_FillAll)
.head 7 +  If SalTblAnyRows( tblCanton, 0,0)
.head 8 -  Call SalTblSetRowFlags( tblCanton, 0, ROW_Selected, TRUE )
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_FetchRowDone
.head 6 -  Set colCanton = SalStrTrimX( colCanton )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Beperkingen op de kantons")
.head 3 +  Pushbutton: pbAdd
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.583"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPlus, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 -  Call SalModalDialog( dlgAddUser, hWndForm, -1)
.head 6 -  Call tblUser.PalPopulateUser( NUMBER_Null  )
.head 3 +  Pushbutton: pbModif
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.283"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resModif, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblUser, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgAddUser, hWndForm, tblUser.colNo)
.head 7 -  Call tblUser.PalPopulateUser( tblUser.colNo )
.head 3 +  Pushbutton: pbDel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.983"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resDelete, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblUser, ROW_Selected, 0)
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalMessageBox( PalTraductMsg('USER01') , PalTraductMsg('?'), MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Delete from Utilisateur where NoUser = :tblUser.colNo ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  Call tblUser.PalPopulateUser( NUMBER_Null )
.head 3 +  Pushbutton: pbAdd2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.083"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPlus, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblUser, ROW_Selected, 0)
.head 7 -  Call SalModalDialog( dlgAddCanton, hWndForm, tblUser.colNo)
.head 7 -  Call tblUser.PalPopulateUser( tblUser.colNo )
.head 3 +  Pushbutton: pbDel2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.783"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resDelete, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblUser, ROW_Selected, 0) and SalTblAnyRows( tblCanton, ROW_Selected, 0)
.head 7 -  Set wbOk = FALSE
.head 7 +  If SalMessageBox( PalTraductMsg('USER02') , PalTraductMsg('?'), MB_YesNo | MB_DefButton2 | MB_IconQuestion ) = IDYES
.head 8 -  Set wbOk = TRUE
.head 7 +  If wbOk
.head 8 -  Set nRow = -1
.head 8 -  Set wsRestr =  tblUser.colRestr
.head 8 +  While SalTblFindNextRow( tblCanton, nRow, ROW_Selected, 0 )
.head 9 -  Call SalTblSetContext( tblCanton, nRow )
.head 9 -  Call SalTblSetFocusRow( tblCanton, nRow )
.head 9 -  Set wsRestr = VisStrSubstitute( wsRestr, tblCanton.colIns, '' )
.head 9 +  If SalStrLeftX( wsRestr, 1) = ','
.head 10 -  Set wsRestr = SalStrMidX( wsRestr, 1, SalStrLength( wsRestr ) )
.head 9 +  If SalStrRightX( wsRestr, 1) = ','
.head 10 -  Set wsRestr = SalStrLeftX( wsRestr, SalStrLength( wsRestr )-1 )
.head 8 -  Set wsRestr = VisStrSubstitute( wsRestr, ',,', ',' )
.head 8 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Utilisateur set restr_com = :wsRestr where NoUser = :tblUser.colNo ")
.head 8 -  Call SqlCommit( ghSqlMain )
.head 8 -  Call tblUser.PalPopulateUser( tblUser.colNo )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 6.783"
.head 5 -  Top: 3.988"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText(pbClose, 'Sluiten' )
.head 3 +  Pushbutton: pbVisuUser
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65310000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Visualiser
.head 4 -  Window Location and Size
.head 5 -  Left: 2.983"
.head 5 -  Top: 3.988"
.head 5 -  Width:  1.733"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Visualisatie' )
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblUser, 0, 0)
.head 7 -  Call PalVisuUser(  )
.head 3 +  Picture: picUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 3.405"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.917"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 -  Message Actions
.head 2 +  Functions
.head 3 +  Function: PalVisuUser
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsFile
.head 5 -  File Handle: hFile
.head 5 -  Long String: sBuffer
.head 5 -  String: lsLogin
.head 5 -  String: lsNom
.head 5 -  String: lsRestr
.head 5 -  String: lsLangue
.head 5 -  String: lsTmp
.head 5 -  String: lsCommune
.head 5 -  String: lsIns
.head 5 -  String: lsBV
.head 5 -  String: lsPCT
.head 5 -  Boolean: bAdmin
.head 5 -  Boolean: bAdminSys
.head 5 -  Boolean: bEl
.head 5 -  Boolean: bMan
.head 4 +  Actions
.head 5 -  Set lsFile = gsPathTemp || 'USER.TXT'
.head 5 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 5 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 5 -  !
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set sBuffer = SalStrUpperX( "Beheer van de gebruikers
")
.head 5 +  Else
.head 6 -  Set sBuffer = SalStrUpperX( "Gestion des utilisateurs
")
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  !
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set sBuffer = SalStrRepeatX("=",88) ||"
Login      Naam			      Taal    Admin.: Sys.  Param.  Stembur.  Tot. PC
"|| SalStrRepeatX("=",88)
.head 5 +  Else
.head 6 -  Set sBuffer = SalStrRepeatX("=",88) ||"
Login      Nom			    Langue    Admin.: Sys.  Param.  Bur. Vote  PC Tot.
"|| SalStrRepeatX("=",88)
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Login, Nom, restr_com , Admin,Admin_sys, langue, Bv, PCT from utilisateur
	Order by 1,2
	into :lsLogin, :lsNom, :lsRestr, :bAdmin, :bAdminSys, :lsLangue, :lsBV, :lsPCT " )
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Set sBuffer = SalStrLeftX( lsLogin || SalStrRepeatX( ' ' , 8) , 8) ||
	SalStrLeftX( lsNom || SalStrRepeatX( ' ' , 31) , 31)
.head 6 -  Set sBuffer = sBuffer || lsLangue || SalStrRepeatX( ' ' , 11) 
.head 6 +  If bAdminSys = 1
.head 7 -  Set lsTmp = SalStrLeftX( SalStrRepeatX( ' ' , 4) || '1' || SalStrRepeatX( ' ' , 4) , 8)
.head 6 +  Else
.head 7 -  Set lsTmp = SalStrLeftX( SalStrRepeatX( ' ' , 4) || '0' || SalStrRepeatX( ' ' , 4) , 8)
.head 6 -  Set sBuffer = sBuffer || lsTmp
.head 6 +  If bAdmin = 1
.head 7 -  Set lsTmp = SalStrLeftX( SalStrRepeatX( ' ' , 4) || '1' || SalStrRepeatX( ' ' , 4) , 8)
.head 6 +  Else
.head 7 -  Set lsTmp = SalStrLeftX( SalStrRepeatX( ' ' , 4) || '0' || SalStrRepeatX( ' ' , 4) , 8)
.head 6 -  Set sBuffer = sBuffer || lsTmp || SalStrRepeatX( ' ' , 5) || lsBV || SalStrRepeatX( ' ' , 8) || lsPCT
.head 6 -  Call SalFilePutStr( hFile, sBuffer )
.head 6 -  !
.head 6 +  If lsRestr != ""
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set sBuffer = SalStrRepeatX( ' ' , 12) || "Beperkingen op de kantons :"
.head 7 +  Else
.head 8 -  Set sBuffer = SalStrRepeatX( ' ' , 12) || "Restrictions sur les cantons :"
.head 7 -  Call SalFilePutStr( hFile, sBuffer )
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select @IF(@Length(nom_n),Nom_n , nom_f) , can_INS from base_commune where type = 'CA' and can_INS in (" || lsRestr || ")
	Order by 1
	into :lsCommune, :lsIns " )
.head 7 +  While SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 -  Set sBuffer =  SalStrRepeatX( ' ' , 15) || lsCommune || ' - ' || lsIns
.head 8 -  Call SalFilePutStr( hFile, sBuffer )
.head 6 -  !
.head 6 -  Set sBuffer = SalStrRepeatX( '-' ,88)
.head 6 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  !
.head 5 -  Call SalFileClose( hFile )
.head 5 -  Call frmGenere.PalEditFile( lsFile )
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Boolean: wbOk
.head 3 -  String: wsRestr
.head 3 -  Number: nRow
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Beheer van de gebruikers")
.head 1 -  ! .   - Ajout / Modification d'un utilisateur
.head 1 +  Dialog Box: dlgAddUser
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Utilisateurs
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 11.338"
.head 4 -  Top: 1.167"
.head 4 -  Width:  5.717"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.548"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Nom:
.head 4 -  Resource Id: 29139
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.095"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfNom
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.183"
.head 6 -  Top: 0.071"
.head 6 -  Width:  4.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Naam")
.head 3 -  Background Text: Login:
.head 4 -  Resource Id: 29140
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.345"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfLogin
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.183"
.head 6 -  Top: 0.321"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 -  Background Text: Password:
.head 4 -  Resource Id: 29141
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.595"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: Langue:
.head 4 -  Resource Id: 29142
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 1.345"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.183"
.head 6 -  Top: 0.571"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Taal:")
.head 3 -  Background Text: NN:
.head 4 -  Resource Id: 16706
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.845"
.head 5 -  Width:  0.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfNN
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 11
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.183"
.head 6 -  Top: 0.821"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Marigold
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 99999999999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( dfNN )
.head 6 +  If gsUserEID = '0'
.head 7 -  Call SalHideWindowAndLabel( dfNN )
.head 3 +  Radio Button: rbFR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Français
.head 4 -  Window Location and Size
.head 5 -  Left: 1.383"
.head 5 -  Top: 1.321"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Frans")
.head 3 +  Radio Button: rbNL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Néerlandais
.head 4 -  Window Location and Size
.head 5 -  Left: 2.983"
.head 5 -  Top: 1.321"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Nederlands")
.head 3 +  Check Box: cbAdmin
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Administrateur paramètres / Listes
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 1.821"
.head 5 -  Width:  4.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Beheerder van parameters en lijsten")
.head 3 +  Check Box: cbBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Création de disquettes bureaux de vote
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 2.071"
.head 5 -  Width:  4.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Creatie van diskettes voor stembureaus")
.head 6 +  If nNo = - 1
.head 7 -  Set MyValue = TRUE
.head 3 +  Check Box: cbPCT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Création de disquettes PC de totalisation
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 2.321"
.head 5 -  Width:  4.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Creatie van diskettes voor totalisatie PC")
.head 6 +  If nNo = - 1
.head 7 -  Set MyValue = TRUE
.head 3 +  Check Box: cbAdminSuper
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Administrateur système
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 2.571"
.head 5 -  Width:  4.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Systeembeheerder")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 3.071"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If dfPW = ''
.head 7 -  Set dfPW = SalStrLowerX( dfLogin )
.head 6 +  If dfNom !='' and dfLogin !='' and dfPW != ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain , "Select * from Utilisateur
	Where Login= :dfLogin and NoUser != :nNo")
.head 7 +  If NOT SqlFetchNext( ghSqlMain, Btmp)
.head 8 +  If gsUserEID = '1' and dfNN != ''
.head 9 -  Call SqlPrepareAndExecute(ghSqlMain, "Select * from utilisateur where NN = :dfNN and noUser != :nNo ")
.head 9 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 10 -  Call SalMessageBox( PalTraductMsg( 'EID1' ), PalTraductMsg( 'ATTENTION' ), MB_Ok | MB_IconExclamation )
.head 10 -  Return FALSE
.head 8 +  If rbNL = TRUE
.head 9 -  Set wsLangue = 'N'
.head 8 +  Else
.head 9 -  Set wsLangue = 'F'
.head 8 -  Set wsSql= ''
.head 8 +  If nNo = -1
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain,"Select Max(noUser) from utilisateur into :nNo ")
.head 9 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 10 -  Set nNo = nNo + 1
.head 10 -  Set wsSql = 'Insert into Utilisateur ( NoUser, Nom, Login, Password, Langue, Admin,Admin_sys, NN, Photo, Eid, Bv, Pct)
	values ( :nNo , :dfNom, :dfLogin , :dfPW, :wsLangue, :cbAdmin,:cbAdminSuper, :dfNN, :sPhoto, :gsUserEID, :cbBV, :cbPCT) '
.head 8 +  Else
.head 9 -  Set wsSql = 'Update Utilisateur set Nom=:dfNom,Login=:dfLogin,Langue=:wsLangue, Admin=:cbAdmin, Admin_Sys=:cbAdminSuper, NN = :dfNN, Eid = :gsUserEID,
			bv=:cbBV, Pct = :cbPCT
		Where NoUser = :nNo'
.head 8 +  If SqlPrepareAndExecute( ghSqlMain, wsSql )
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Call SalSendMsg( hWndForm, SAM_Close, 1, 0)
.head 8 +  Else
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "ROLLBACK" )
.head 9 -  Call SalMessageBox(PalTraductMsg('ERR_MAJ') , PalTraductMsg('MSG'), MB_Ok | MB_IconHand)
.head 7 +  Else
.head 8 -  Call SalMessageBox(PalTraductMsg('USER03') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 8 -  Return ( FALSE)
.head 6 +  Else
.head 7 -  Call SalMessageBox(PalTraductMsg('USER04') , PalTraductMsg('ATTENTION'), MB_Ok | MB_IconHand)
.head 7 -  Return ( FALSE)
.head 6 -  ! Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 2.983"
.head 5 -  Top: 3.071"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText(pbCancel, 'Cancel' )
.head 3 -  Frame
.head 4 -  Resource Id: 29143
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 1.738"
.head 5 -  Width:  5.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: Default
.head 3 -  Frame
.head 4 -  Resource Id: 29144
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 1.238"
.head 5 -  Width:  5.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.417"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: Default
.head 3 -  Frame
.head 4 -  Resource Id: 16707
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.02"
.head 5 -  Width:  5.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.131"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: Default
.head 3 +  Picture: picUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.783"
.head 5 -  Top: 0.321"
.head 5 -  Width:  1.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.823"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 -  Message Actions
.head 3 +  Pushbutton: pbReadEid
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.783"
.head 5 -  Top: 1.238"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.5"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If loStesudEID.SalEidInit(  )
.head 7 +  If sPhoto = '' or sPhotoPrec != sPhoto
.head 8 +  If loStesudEID.SalEidReadId()
.head 9 -  Call loStesudEID.SalEidId_NN( dfNN )
.head 8 +  If dfNN != sNNPrec
.head 9 -  Set sNNPrec = dfNN
.head 9 -  Set sPhoto = ''
.head 9 +  If loStesudEID.SalEidReadPhoto( sPhoto )
.head 10 +  If sPhoto != ''
.head 11 +  If sPhotoPrec != sPhoto
.head 12 -  Call VisWaitCursor( TRUE )
.head 12 -  Call loStesudEID.SalEidId_Nom1Prenom( dfNom )
.head 12 -  Set dfNom = PalTransUnicodeToStr( dfNom )
.head 12 -  ! Call SalPicSetString( picUser, PIC_FormatObject, sPhoto )
.head 12 -  Call SalPicSetImage( picUser, sPhoto, PIC_ImageTypeJPEG )
.head 12 -  Call VisWaitCursor( FALSE )
.head 12 -  Set sPhotoPrec = sPhoto
.head 11 -  Call SalTimerSet( dlgAddUser, 8, 1000 )
.head 10 +  Else
.head 11 -  Set dfNN = ''
.head 11 -  Set sPhotoPrec = ''
.head 11 +  If SalNumberMod( wnPassage , 4 ) != 0
.head 12 -  Call SalPicSetFile( picUser, gsPathApplic||"EID.jpg" )
.head 11 +  Else
.head 12 -  Call SalPicSetFile( picUser, gsPathApplic||"EID2.jpg" )
.head 11 -  Call SalTimerSet( dlgAddUser, 8, 1000 )
.head 8 +  Else
.head 9 -  Call SalTimerSet( dlgAddUser, 8, 1000 )
.head 7 +  Else
.head 8 -  Call SalTimerSet( dlgAddUser, 8, 4000 )
.head 6 +  Else
.head 7 -  Set sPhoto = ''
.head 7 -  Call SalTimerSet( dlgAddUser, 8, 1000 )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Number: nNo
.head 2 +  Window Variables
.head 3 -  String: wsLangue
.head 3 -  String: wsSql
.head 3 -  FunctionalVar: loStesudEID
.head 4 -  Class: StesudEID
.head 3 -  Long String: sPhoto
.head 3 -  Long String: sPhotoPrec
.head 3 -  String: sNNPrec
.head 3 -  Number: wnPassage
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set wnPassage = 1
.head 4 +  If gsUserEID = '1'
.head 5 -  Call SalShowWindow( picUser )
.head 4 +  Else
.head 5 -  Call SalHideWindow( picUser )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Gebruikers")
.head 4 +  If nNo != - 1
.head 5 -  Call SalDisableWindow( dfLogin )
.head 5 -  Call SalDisableWindow( dfPW )
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain , "Select Nom, Login, Password, Langue , Admin,admin_sys, NN, Photo, Bv, Pct from Utilisateur
	Where NoUser = :nNo
	Into :dfNom, :dfLogin, :dfPW, :wsLangue, :cbAdmin,:cbAdminSuper, :dfNN, :sPhoto, :cbBV , :cbPCT ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If wsLangue = 'N'
.head 7 -  Set rbNL = TRUE
.head 6 +  Else
.head 7 -  Set rbFR = TRUE
.head 6 +  If sPhoto != ''
.head 7 -  ! Call SalPicSetString( picUser, PIC_FormatObject, sPhoto )
.head 7 -  Call SalPicSetImage( picUser, sPhoto, PIC_ImageTypeJPEG )
.head 6 -  Set dfPW = SalStrLeftX( dfPW || SalStrRepeatX( ' ', 10 ) , 10)
.head 3 +  On SAM_CreateComplete
.head 4 +  If gsUserEID = '1' and sPhoto = ''
.head 5 -  Call loStesudEID.SalCreateObjectEID()
.head 5 -  Call SalSendMsg( pbReadEid, SAM_Click, 0, 0 )
.head 3 +  On SAM_Timer
.head 4 -  Call SalTimerKill( dlgAddUser, 8 )
.head 4 -  Set wnPassage = wnPassage + 1
.head 4 +  If sPhoto = ''
.head 5 -  Set dfNN = ''
.head 5 +  If SalNumberMod( wnPassage , 3 ) != 0
.head 6 -  Call SalPicSetFile( picUser, gsPathApplic||"EID.jpg" )
.head 5 +  Else
.head 6 -  Call SalPicSetFile( picUser, gsPathApplic||"EID2.jpg" )
.head 4 -  Call SalSendMsg( pbReadEid, SAM_Click , 0, 0)
.head 1 -  ! .   - Ajout d'une restriction sur un canton
.head 1 +  Dialog Box: dlgAddCanton
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Cantons
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  4.617"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.286"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfNomCanton
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.071"
.head 6 -  Width:  4.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call tblCantonS.PalPopulateTbl(  )
.head 3 +  Child Table: tblCantonS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.321"
.head 6 -  Width:  4.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 250
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colINS
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.933"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonS.colINS, 'NIS' )
.head 5 +  Column: colNom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  2.717"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCantonS.colNom, 'Kanton' )
.head 4 +  Functions
.head 5 +  Function: PalPopulateTbl
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsWhere
.head 7 -  String: lsInto
.head 6 +  Actions
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set lsSelect = "Select CAN_INS,  @IF(@Length(nom_N),Nom_N , nom_F) from BASE_COMMUNE A
 		Where Type = 'CA' and exists (select B.can_ins from base_commune B where A.can_ins = B.can_ins and B.Type = 'GE' and B.Vote_el = '1' and " || gsMateriel || " ) "
.head 7 +  Else
.head 8 -  Set lsSelect = "Select CAN_INS,  @IF(@Length(nom_F),Nom_F , nom_N) from BASE_COMMUNE A
 		Where Type = 'CA' and exists (select B.can_ins from base_commune B where A.can_ins = B.can_ins and B.Type = 'GE' and B.Vote_el = '1' and " || gsMateriel || " ) "
.head 7 -  Set lsWhere = ''
.head 7 +  If wsRestr != ''
.head 8 -  Set lsWhere = lsWhere || ' and Can_INS not in (' || wsRestr ||') '
.head 7 +  If gsRestrRegion != ''
.head 8 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 +  If dfNomCanton != ''
.head 8 -  Set lsWhere = lsWhere || " and (NOM_F like '%"|| dfNomCanton ||"%' OR NOM_N like '%"|| dfNomCanton ||"%' ) " 
.head 7 -  Call SalTblPopulate( tblCantonS , ghSqlMain, lsSelect || lsWhere || " order by 2 into :tblCantonS.colINS, :tblCantonS.colNom ", TBL_FillAll )
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_CreateComplete
.head 6 -  Call PalPopulateTbl()
.head 5 +  On SAM_DoubleClick
.head 6 -  Call SalSendMsg( pbOk, SAM_Click, 0,0)
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 2.905"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCantonS, ROW_Selected, 0)
.head 7 +  If wsRestr != ''
.head 8 -  Set wsRestr = wsRestr ||','
.head 7 -  Set wsRestr = wsRestr || tblCantonS.colINS
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Update Utilisateur set Restr_Com =:wsRestr where NoUser = :nNoUser " )
.head 7 -  Call SqlCommit( ghSqlMain )
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 2.683"
.head 5 -  Top: 2.905"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText(pbCancel, 'Cancel' )
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Number: nNoUser
.head 2 +  Window Variables
.head 3 -  String: wsRestr
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Kantons")
.head 4 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Restr_Com from Utilisateur where NoUser = :nNoUser 
	Into :wsRestr " )
.head 4 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 1 -  ! .   - Modification du PW user
.head 1 +  Dialog Box: dlgPassword
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  4.167"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 1.702"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Login:
.head 4 -  Resource Id: 29731
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.095"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfLogin
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.683"
.head 6 -  Top: 0.071"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 -  Set MyValue = gsUserLog
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalHideWindow( dfLogin )
.head 3 +  Combo Box: cmbLogin
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.7"
.head 5 -  Top: 0.083"
.head 5 -  Width:  2.283"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.357"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalShowWindow( cmbLogin )
.head 7 -  Call SalListPopulate( cmbLogin, ghSqlMain, "Select Login from utilisateur ")
.head 7 -  Call SalListSetSelect( cmbLogin, 0 )
.head 6 +  Else
.head 7 -  Call SalHideWindow( cmbLogin )
.head 3 -  Background Text: Password:
.head 4 -  Resource Id: 29732
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.429"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPW
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.683"
.head 6 -  Top: 0.405"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Wachtwoord:")
.head 3 -  Background Text: Confirmation:
.head 4 -  Resource Id: 29733
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.679"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPW2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.683"
.head 6 -  Top: 0.655"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Invisible
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Bevestiging:")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 1.238"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If dfPW = ''
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PW_VIDE'), PalTraductMsg('MSG') , MB_Ok  | MB_IconExclamation) 
.head 7 -  Return (FALSE)
.head 6 +  If dfPW != dfPW2
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PW_DIFF'), PalTraductMsg('MSG') , MB_Ok  | MB_IconExclamation) 
.head 7 -  Return (FALSE)
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Set lsUser = cmbLogin
.head 6 +  Else
.head 7 -  Set lsUser = gsUserLog
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, 'Update Utilisateur set password = :dfPW where Login = :lsUser ' )
.head 6 -  Call SqlCommit( ghSqlMain )
.head 6 -  Call SalMessageBox( PalTraductMsg( 'PW_OK'), PalTraductMsg('MSG') , MB_Ok ) 
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 2.383"
.head 5 -  Top: 1.238"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 2 -  Functions
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: lsUser
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Wachtwoord")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Mot de passe")
.head 1 -  !
.head 1 -  ! ===========================================================================
.head 1 -  ! Traducteurs
.head 1 -  ! ==========
.head 1 -  ! Gestion des messages
.head 1 +  Dialog Box: dlgGestionMsg
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 2.513"
.head 4 -  Top: 2.406"
.head 4 -  Width:  13.617"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 4.417"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Child Table: tblMsg
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 0.571"
.head 6 -  Width:  13.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.167"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoMsg
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colMsgFR
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: FR
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 250
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  5.667"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Validate
.head 8 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 5 +  Column: colMsgNL
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: NL
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 250
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  5.483"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Validate
.head 8 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 4 +  Functions
.head 5 +  Function: PalPopulateTbl
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalTblPopulate( tblMsg, ghSqlMain, "Select No_Msg, Msg_F, Msg_N from Message
	Order by 1
	Into :tblMsg.colNoMsg,:tblMsg.colMsgFR,:tblMsg.colMsgNL ", TBL_FillAll)
.head 5 +  Function: PalSaveMsg
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  String: sNoMsg
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update message 
	Set Msg_F = :tblMsg.colMsgFR,
	   Msg_N = :tblMsg.colMsgNL
	Where No_msg = :sNoMsg ")
.head 7 -  Call SqlCommit( ghSqlSecondaire)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call tblMsg.PalPopulateTbl(  )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 6.483"
.head 5 -  Top: 3.905"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 3 +  Data Field: dfSearchFR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.783"
.head 6 -  Top: 0.071"
.head 6 -  Width:  5.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Set wnSearch = -1
.head 3 +  Data Field: dfSearchNL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.783"
.head 6 -  Top: 0.071"
.head 6 -  Width:  5.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Set wnSearch = -1
.head 3 +  Pushbutton: Search
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.233"
.head 5 -  Top: 0.048"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F3
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resSearch, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If dfSearchFR != '' or dfSearchNL != ''
.head 7 -  Call PalSearchMsg(  )
.head 3 -  Background Text: F3
.head 4 -  Resource Id: 15535
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.283"
.head 5 -  Top: 0.345"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Center
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Pushbutton: pbTableur
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: sur Tableur ...
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.321"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call SalFileOpen( hFile, gsPathTemp ||"TABLE.SLK", OF_Delete )
.head 6 -  Call ExportTableurMsg( tblMsg, gsPathTemp ||"TABLE.SLK", wsTitre)
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  Call ShellExecute( tblMsg, 'Open', gsPathTemp ||"TABLE.SLK", ''
,''  , SW_SHOWMAXIMIZED  )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Op een rekenblad ...' )
.head 2 +  Functions
.head 3 +  Function: PalSearchMsg
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Boolean: bFind
.head 4 +  Actions
.head 5 +  If wnSearch = -1
.head 6 -  Set nRow = -1
.head 5 +  Else
.head 6 -  Set nRow = SalTblQueryContext( tblMsg )
.head 5 +  If nRow = 0
.head 6 -  Set nRow = -1
.head 5 -  Set bFind = FALSE
.head 5 +  While SalTblFindNextRow( tblMsg, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblMsg, nRow )
.head 6 -  Call SalTblSetFocusRow( tblMsg, nRow )
.head 6 +  If dfSearchFR != ''
.head 7 +  If SalStrScan( SalStrUpperX(tblMsg.colMsgFR), SalStrUpperX(dfSearchFR) ) != -1
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 6 +  If dfSearchNL != ''
.head 7 +  If SalStrScan( SalStrUpperX(tblMsg.colMsgNL), SalStrUpperX(dfSearchNL) ) != -1
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 5 +  If NOT bFind
.head 6 -  Call SalMessageBox(PalTraductMsg('AUCUN'), PalTraductMsg('MSG'), MB_Ok)
.head 6 -  Set wnSearch = -1
.head 5 +  Else
.head 6 -  Set wnSearch = nRow
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  File Handle: hFile
.head 3 -  String: wsTitre
.head 3 -  Number: wnSearch
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set wnSearch = -1
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Set wsTitre ="Beheer van de boodschappen"
.head 4 +  Else
.head 5 -  Set wsTitre = "Gestion des messages"
.head 4 -  Call SalSetWindowText( hWndItem, wsTitre)
.head 1 -  ! Gestion des Codes erreurs
.head 1 +  Dialog Box: dlgGestionErrMsg
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 1.5"
.head 4 -  Top: 1.292"
.head 4 -  Width:  16.017"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 6.25"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Child Table: tblMsg
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: -0.017"
.head 6 -  Top: 0.571"
.head 6 -  Width:  15.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.0"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colNoMsg
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: No
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Center
.head 6 -  Width:  1.0"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colMsgFR
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: FR
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 250
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  7.083"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Validate
.head 8 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 7 +  On SAM_SetFocus
.head 8 -  Set mlActionF = tblMsg.colActionFR
.head 8 -  Set mlActionN = tblMsg.colActionNL
.head 7 +  On SAM_Click
.head 8 -  Call SalSendMsg( tblMsg.colMsgFR, SAM_SetFocus, 0,0)
.head 5 +  Column: colMsgNL
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: NL
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 250
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  6.9"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Validate
.head 8 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 7 +  On SAM_SetFocus
.head 8 -  Set mlActionF = tblMsg.colActionFR
.head 8 -  Set mlActionN = tblMsg.colActionNL
.head 7 +  On SAM_Click
.head 8 -  Call SalSendMsg( tblMsg.colMsgFR, SAM_SetFocus, 0,0)
.head 5 +  Column: colActionFR
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: FR Action
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 60000
.head 6 -  Data Type: Long String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colActionNL
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: NL Action
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 60000
.head 6 -  Data Type: Long String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateTbl
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 -  Local variables
.head 6 +  Actions
.head 7 -  Call SalTblPopulate( tblMsg, ghSqlMain, "Select Err_No, Err_F, Err_N,Err_remede_F,Err_remede_N from Erreur_Msg
	order by 1
	Into :tblMsg.colNoMsg,:tblMsg.colMsgFR,:tblMsg.colMsgNL,:tblMsg.colActionFR,:tblMsg.colActionNL ", TBL_FillAll)
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call tblMsg.PalPopulateTbl(  )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 7.183"
.head 5 -  Top: 5.738"
.head 5 -  Width:  2.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 3 +  Multiline Field: mlActionF
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 300
.head 5 -  String Type: Long String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 3.905"
.head 6 -  Width:  7.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 3 +  Multiline Field: mlActionN
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 300
.head 5 -  String Type: Long String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 8.683"
.head 6 -  Top: 3.905"
.head 6 -  Width:  6.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Validate
.head 6 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 3 -  Background Text: Action:
.head 4 -  Resource Id: 4177
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.483"
.head 5 -  Top: 3.679"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 -  Background Text: Actie:
.head 4 -  Resource Id: 4178
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.683"
.head 5 -  Top: 3.679"
.head 5 -  Width:  1.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  ! Pushbutton: pbAction
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.end
.head 4 +  Message Actions 
.head 5 +  On SAM_Click
.head 6 -  Call PalScanAction()
.head 3 +  Data Field: dfSearchFR
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.483"
.head 6 -  Top: 0.095"
.head 6 -  Width:  6.767"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Set wnSearch = -1
.head 3 +  Data Field: dfSearchNL
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 8.85"
.head 6 -  Top: 0.095"
.head 6 -  Width:  6.533"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Set wnSearch = -1
.head 3 +  Pushbutton: Search
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.3"
.head 5 -  Top: 0.071"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: F3
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resSearch, PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 +  If dfSearchFR != '' or dfSearchNL != ''
.head 7 -  Call PalSearchMsg()
.head 3 -  Background Text: F3
.head 4 -  Resource Id: 15536
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 8.35"
.head 5 -  Top: 0.403"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Center
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Pushbutton: pbTableur
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 4 -  Class DLL Name: QUIKPDLG.DLL
.head 4 -  Title: sur Tableur ...
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 5.738"
.head 5 -  Width:  1.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.321"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: Gray
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call SalFileOpen( hFile, gsPathTemp ||"TABLE.SLK", OF_Delete )
.head 6 -  Call ExportTableurMsg( tblMsg, gsPathTemp ||"TABLE.SLK", wsTitre)
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  Call ShellExecute( tblMsg, 'Open', gsPathTemp ||"TABLE.SLK", ''
,''  , SW_SHOWMAXIMIZED  )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Op een rekenblad ...' )
.head 2 +  Functions
.head 3 +  Function: PalSaveMsg
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sNoMsg
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set tblMsg.colActionFR = mlActionF
.head 5 -  Set tblMsg.colActionNL = mlActionN
.head 5 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update Erreur_msg
	Set Err_F = :tblMsg.colMsgFR,
	   Err_N = :tblMsg.colMsgNL,
	   Err_Remede_F = :mlActionF,
	   Err_Remede_N = :mlActionN
	Where Err_No = :sNoMsg ")
.head 5 -  Call SqlCommit( ghSqlSecondaire)
.head 3 +  ! Function: PalScanAction
.head 4 -  Description: 
.head 4 -  Returns 
.head 4 -  Parameters 
.head 4 -  Static Variables 
.head 4 +  Local variables 
.head 5 -  Number: i
.head 4 +  Actions 
.head 5 -  Set i = - 1
.head 5 +  While SalTblFindNextRow( tblMsg, i, 0, 0 )
.head 6 -  Call SalTblSetContext( tblMsg, i )
.head 6 -  Call SalSendMsg( tblMsg.colMsgFR, SAM_SetFocus, 0,0)
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "dit repertorium","deze map")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "is in schrift","is tegen het schrijven")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "Verifiëren","Nazien")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "beveilijd","beveiligd")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "de EML path","het EML pad")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "gegevensbasis","database")
.head 6 -  Set mlActionN = VisStrSubstitute( mlActionN, "in de vrij ruimte ervan","dat er nog genoeg plaats is")
.head 6 +  If SalStrRightX( mlActionN , 1) = 'é' or  SalStrRightX( mlActionN , 1) = 'ë' or  SalStrRightX( mlActionN , 1) = '
.head 7 -  Set mlActionN = SalStrLeftX(mlActionN, SalStrLength( mlActionN) - 1)
.head 6 +  If SalStrRightX( mlActionF , 1) = 'é' or  SalStrRightX( mlActionF , 1) = 'ë' or  SalStrRightX( mlActionF , 1) = '
.head 7 -  Set mlActionF = SalStrLeftX(mlActionF, SalStrLength( mlActionF) - 1)
.head 6 -  Call PalSaveMsg(tblMsg.colNoMsg)
.head 3 +  Function: PalSearchMsg
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 5 -  Boolean: bFind
.head 4 +  Actions
.head 5 +  If wnSearch = -1
.head 6 -  Set nRow = -1
.head 5 +  Else
.head 6 -  Set nRow = SalTblQueryContext( tblMsg )
.head 5 +  If nRow = 0
.head 6 -  Set nRow = -1
.head 5 -  Set bFind = FALSE
.head 5 +  While SalTblFindNextRow( tblMsg, nRow, 0, 0 )
.head 6 -  Call SalTblSetContext( tblMsg, nRow )
.head 6 -  Call SalTblSetFocusRow( tblMsg, nRow )
.head 6 +  If dfSearchFR != ''
.head 7 +  If SalStrScan( SalStrUpperX(tblMsg.colMsgFR), SalStrUpperX(dfSearchFR) ) != -1
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 6 +  If dfSearchNL != ''
.head 7 +  If SalStrScan( SalStrUpperX(tblMsg.colMsgNL), SalStrUpperX(dfSearchNL) ) != -1
.head 8 -  Set bFind = TRUE
.head 8 -  Break
.head 5 +  If NOT bFind
.head 6 -  Call SalMessageBox(PalTraductMsg('AUCUN'), PalTraductMsg('MSG'), MB_Ok)
.head 6 -  Set wnSearch = -1
.head 5 +  Else
.head 6 -  Set wnSearch = nRow
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  File Handle: hFile
.head 3 -  String: wsTitre
.head 3 -  Number: wnSearch
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Set wsTitre = "Beheer van de foutcodes"
.head 4 +  Else
.head 5 -  Set wsTitre = "Gestion des codes erreurs"
.head 4 -  Call SalSetWindowText( hWndItem, wsTitre )
.head 1 -  ! Traducteur codes erreurs
.head 1 +  Dialog Box: dlgTraductErrCode
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.667"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.5"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Code
.head 4 -  Resource Id: 42010
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.179"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfCode
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.283"
.head 6 -  Top: 0.155"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call PalDtmErreur()
.head 3 -  Background Text: Description:
.head 4 -  Resource Id: 42011
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 0.595"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlDesc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 250
.head 5 -  String Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.483"
.head 6 -  Top: 0.821"
.head 6 -  Width:  5.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.917"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Beschrijving:")
.head 3 -  Background Text: Action:
.head 4 -  Resource Id: 42012
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.283"
.head 5 -  Top: 1.845"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Multiline Field: mlAction
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 30000
.head 5 -  String Type: Long String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Border? Yes
.head 5 -  Word Wrap? Yes
.head 5 -  Vertical Scroll? Yes
.head 5 -  Window Location and Size
.head 6 -  Left: 0.483"
.head 6 -  Top: 2.071"
.head 6 -  Width:  5.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.917"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Actie:")
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 2.583"
.head 5 -  Top: 3.071"
.head 5 -  Width:  1.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 2 +  Functions
.head 3 +  Function: PalDtmErreur
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set mlDesc =''
.head 5 -  Set mlAction = ''
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Err_N, Err_Remede_N from Erreur_Msg where Err_No = :dfCode
	into :mlDesc, :mlAction" )
.head 5 +  Else
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Err_F, Err_Remede_F from Erreur_Msg where Err_No = :dfCode
	into :mlDesc, :mlAction" )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 5 -  !
.head 2 -  Window Parameters
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Vertaler van de foutcodes")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Traduction des codes erreurs")
.head 1 -  !
.head 1 -  ! ===========================================================================
.head 1 -  ! Gestion des Nb de Cdts et de Pc Tot dans les communes
.head 1 +  Dialog Box: dlgGestionCommune
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: 10.65"
.head 4 -  Top: 2.125"
.head 4 -  Width:  10.933"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 5.393"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Radio Button: rbSiege
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Gestion des sièges
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.071"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Beheer van de kandidaten' )
.head 5 +  On SAM_Click
.head 6 -  Call SalTblReset( tblCommune )
.head 6 -  Call SalEnableWindow( cmbElection )
.head 6 -  Call SalShowWindow( tblCommune.colNbCdt)
.head 6 -  Call SalHideWindow( tblCommune.colBV)
.head 6 -  Call SalHideWindow( tblCommune.colVoteEl)
.head 6 -  ! Call SalHideWindow( tblCommune.colActive)
.head 6 -  ! Call SalDisableWindow( tblCommune.colActive )
.head 6 -  Call SalDisableWindow( tblCommune.colBV )
.head 6 -  Call SalHideWindow( cbNonElectronique )
.head 6 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0 )
.head 3 +  Radio Button: rbBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Gestion des Bureaux de vote
.head 4 -  Window Location and Size
.head 5 -  Left: 3.783"
.head 5 -  Top: 0.071"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Beheer van de Stembureaus' )
.head 5 +  On SAM_Click
.head 6 -  Call SalTblReset( tblCommune )
.head 6 -  Call SalDisableWindow( cmbElection )
.head 6 -  Call SalHideWindow( tblCommune.colPcTot)
.head 6 -  Call SalHideWindow( tblCommune.colTypeVote)
.head 6 -  Call SalShowWindow( tblCommune.colBV)
.head 6 -  Call SalShowWindow( cbNonElectronique )
.head 6 -  ! Call SalShowWindow( tblCommune.colActive)
.head 6 -  ! Call SalEnableWindow( tblCommune.colActive )
.head 6 -  Call SalEnableWindow( tblCommune.colBV )
.head 6 -  Call SalShowWindow( tblCommune.colVoteEl)
.head 6 -  Call SalEnableWindow( tblCommune.colVoteEl )
.head 6 -  !
.head 6 +  If wnNoElection[SalListQuerySelection(cmbElection)] = 1 or wnNoElection[SalListQuerySelection(cmbElection)] = 2 or wnNoElection[SalListQuerySelection(cmbElection)] = 3 or
    wnNoElection[SalListQuerySelection(cmbElection)] = 4 or wnNoElection[SalListQuerySelection(cmbElection)] = 7 or
    wnNoElection[SalListQuerySelection(cmbElection)] = 10 or wnNoElection[SalListQuerySelection(cmbElection)] = 11
.head 7 -  Call SalHideWindow( tblCommune.colPcTot)
.head 7 -  Call SalHideWindow( tblCommune.colPcTotCan )
.head 7 -  Call SalHideWindow( tblCommune.colNbCdt)
.head 7 +  If gsLangueSoft ='N'
.head 8 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Gemeente' )
.head 7 +  Else
.head 8 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Commune' )
.head 7 -  Call SalTblGetColumnTitle( tblCommune.colComm, lsTmp, 50 )
.head 7 -  Call SalSetWindowLabelText( dfLibS, lsTmp )
.head 7 -  Call tblCommune.PalPopulateCanton( wnNoElection[SalListQuerySelection(cmbElection)] )
.head 6 +  Else If wnNoElection[SalListQuerySelection(cmbElection)] = 5 or wnNoElection[SalListQuerySelection(cmbElection)] = 6 
	or wnNoElection[SalListQuerySelection(cmbElection)] = 8 or wnNoElection[SalListQuerySelection(cmbElection)] = 9
.head 7 -  Call SalShowWindow( tblCommune.colPcTotCan)
.head 7 -  Set wnLigne = 0
.head 7 +  While TRUE
.head 8 +  If wnNoElection[wnLigne ] = 6
.head 9 -  Call SalListSetSelect( cmbElection, wnLigne )
.head 9 -  Break
.head 8 -  Set wnLigne = wnLigne +1
.head 7 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0 )
.head 6 -  !
.head 3 +  Radio Button: rbPcTot
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Gestion des PC de totalisation
.head 4 -  Window Location and Size
.head 5 -  Left: 7.283"
.head 5 -  Top: 0.071"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Blue
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Beheer van de totalisatie PC' )
.head 5 +  On SAM_Click
.head 6 -  Call SalTblReset( tblCommune )
.head 6 -  Call SalDisableWindow( cmbElection )
.head 6 -  Call SalHideWindow( tblCommune.colBV)
.head 6 -  ! Call SalHideWindow( tblCommune.colActive)
.head 6 -  Call SalDisableWindow( tblCommune.colBV )
.head 6 -  ! Call SalDisableWindow( tblCommune.colActive )
.head 6 -  Call SalShowWindow( tblCommune.colPcTot)
.head 6 -  Call SalHideWindow( cbNonElectronique )
.head 6 -  Call SalHideWindow( tblCommune.colVoteEl)
.head 6 +  If gnTypeVote = 1
.head 7 -  Call SalShowWindow( tblCommune.colTypeVote)
.head 6 -  !
.head 6 +  If wnNoElection[SalListQuerySelection(cmbElection)] = 1 or wnNoElection[SalListQuerySelection(cmbElection)] = 2 or wnNoElection[SalListQuerySelection(cmbElection)] = 3 or
    wnNoElection[SalListQuerySelection(cmbElection)] = 4 or wnNoElection[SalListQuerySelection(cmbElection)] = 7 or
    wnNoElection[SalListQuerySelection(cmbElection)] = 10 or wnNoElection[SalListQuerySelection(cmbElection)] = 11
.head 7 -  Call SalHideWindow( tblCommune.colPcTot)
.head 7 -  Call SalShowWindow( tblCommune.colPcTotCan )
.head 7 -  Call SalHideWindow( tblCommune.colNbCdt)
.head 7 +  If gsLangueSoft ='N'
.head 8 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Kanton' )
.head 7 +  Else
.head 8 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Canton' )
.head 7 -  Call SalTblGetColumnTitle( tblCommune.colComm, lsTmp, 50 )
.head 7 -  Call SalSetWindowLabelText( dfLibS, lsTmp )
.head 7 -  Call tblCommune.PalPopulateCanton( wnNoElection[SalListQuerySelection(cmbElection)] )
.head 6 +  Else If wnNoElection[SalListQuerySelection(cmbElection)] = 5 or wnNoElection[SalListQuerySelection(cmbElection)] = 6 
	or wnNoElection[SalListQuerySelection(cmbElection)] = 8 or wnNoElection[SalListQuerySelection(cmbElection)] = 9
.head 7 -  Call SalShowWindow( tblCommune.colPcTotCan)
.head 7 -  Set wnLigne = 0
.head 7 +  While TRUE
.head 8 +  If wnNoElection[wnLigne ] = 6
.head 9 -  Call SalListSetSelect( cmbElection, wnLigne )
.head 9 -  Break
.head 8 -  Set wnLigne = wnLigne +1
.head 7 -  Call SalSendMsg( cmbElection, SAM_Click, 0, 0 )
.head 6 -  !
.head 3 -  Background Text: Election:
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Resource Id: 61102
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.369"
.head 5 -  Width:  1.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbElection
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.45"
.head 5 -  Top: 0.345"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.821"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? No
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Verkiezing:' )
.head 6 -  Call PalChargeCmb()
.head 5 +  On SAM_Click
.head 6 -  Call SalDisableWindow( tblCommune.colTypeVote )
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire ,"Select Siege_max from Election where el_no = :wnNoElection[SalListQuerySelection(cmbElection)]
	into :wnSiegeMax ")
.head 6 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 6 -  Set wnSiegeMaxIni = wnSiegeMax
.head 6 +  If wnNoElection[SalListQuerySelection(cmbElection)] = 5 or wnNoElection[SalListQuerySelection(cmbElection)] = 6 
	or wnNoElection[SalListQuerySelection(cmbElection)] = 8 or wnNoElection[SalListQuerySelection(cmbElection)] = 9
.head 7 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 6
.head 8 -  Call SalShowWindow( tblCommune.colPcTot)
.head 8 -  Call SalShowWindow( tblCommune.colPcTotCan)
.head 8 +  If gnTypeVote = 1
.head 9 -  Call SalShowWindow( tblCommune.colTypeVote)
.head 7 +  Else
.head 8 -  Call SalHideWindow( tblCommune.colPcTot)
.head 8 -  Call SalHideWindow( tblCommune.colPcTotCan)
.head 8 -  Call SalHideWindow( tblCommune.colTypeVote)
.head 7 -  ! !
.head 7 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5
.head 8 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'District' )
.head 7 +  Else
.head 8 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] != 8
.head 9 +  If gsLangueSoft ='N'
.head 10 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Gemeente' )
.head 9 +  Else
.head 10 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Commune' )
.head 8 +  Else
.head 9 +  If gsLangueSoft ='N'
.head 10 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Districtsraad' )
.head 9 +  Else
.head 10 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Conseil de district' )
.head 7 -  Call SalTblGetColumnTitle( tblCommune.colComm, lsTmp, 50 )
.head 7 -  Call SalSetWindowLabelText( dfLibS, lsTmp )
.head 6 +  Else
.head 7 -  Call SalHideWindow( tblCommune.colPcTot)
.head 7 -  Call SalHideWindow( tblCommune.colPcTotCan)
.head 7 -  Call SalHideWindow( tblCommune.colTypeVote)
.head 7 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 2 or  wnNoElection[ SalListQuerySelection( cmbElection ) ] = 7 or 
	 (wnNoElection[ SalListQuerySelection( cmbElection ) ] = 4 and gsWL_Type = '1')
.head 8 +  If gsLangueSoft ='N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Kiesdistrict' )
.head 8 +  Else
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Circonscription' )
.head 7 +  Else If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 1 or wnNoElection[ SalListQuerySelection( cmbElection ) ] = 3
.head 8 +  If gsLangueSoft ='N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Kiescollege' )
.head 8 +  Else
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Collège' )
.head 7 +  If (wnNoElection[ SalListQuerySelection( cmbElection ) ] = 4 and gsWL_Type = '0')
.head 8 +  If gsLangueSoft ='N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Arrondissement' )
.head 8 +  Else
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Arrondissement' )
.head 6 -  !
.head 6 -  Call SalTblGetColumnTitle( tblCommune.colComm, lsTmp, 50 )
.head 6 -  Call SalSetWindowLabelText( dfLibS, lsTmp )
.head 6 -  !
.head 6 -  Call tblCommune.PalPopulateCanton( wnNoElection[ SalListQuerySelection( cmbElection ) ] )
.head 3 -  Background Text: INS:
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Resource Id: 61103
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.383"
.head 5 -  Top: 0.714"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfInsS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.383"
.head 6 -  Top: 0.905"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Light Gray
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call tblCommune.PalPopulateCanton( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'NIS:' )
.head 3 -  Background Text: Commune:
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Resource Id: 61104
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.383"
.head 5 -  Top: 0.714"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfLibS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.383"
.head 6 -  Top: 0.905"
.head 6 -  Width:  4.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Light Gray
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call tblCommune.PalPopulateCanton( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Gemeente' )
.head 3 +  Child Table: tblCommune
.data CLASSPROPSSIZE
0000: 1700
.enddata
.data CLASSPROPS
0000: 5461624368696C64 4E616D6573000600 4E616D65300000
.enddata
.data INHERITPROPS
0000: 0100
.enddata
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 1.238"
.head 6 -  Width:  10.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 3.667"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 400
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.85"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colIns, 'NIS' )
.head 5 +  Column: colComm
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Commune
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  4.417"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colComm, 'Gemeente' )
.head 5 +  Column: colType
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNbCdt
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Candidats
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  1.0"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid = 1
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM1') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  Else
.head 9 +  If gnTypeVote = 0
.head 10 +  If wnNoElection[ SalListQuerySelection( cmbElection ) ] = 5
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "select * from base_commune where dis_ins = :tblCommune.colIns and VOTE_EL = 1 and type = 'GE' " )
.head 11 +  If NOT SqlFetchNext( ghSqlSecondaire, Btmp)
.head 12 -  Set wnSiegeMax = 99
.head 11 +  Else
.head 12 -  Set wnSiegeMax = wnSiegeMaxIni
.head 10 +  Else
.head 11 -  Set wnSiegeMax = 99
.head 7 +  On SAM_Validate
.head 8 +  If tblCommune.colNbCdt <= wnSiegeMax and tblCommune.colNbCdt > 0
.head 9 -  !
.head 9 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 9 -  ! Trace
.head 9 -  Set sTrace = "INS: " || tblCommune.colIns ||'   - EL ' || SalNumberToStrX(wnNoElection[ SalListQuerySelection( cmbElection ) ],0) || '  -->   '
.head 9 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC01' ) )
.head 9 -  !
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'XML21') , PalTraductMsg( 'MSG'), MB_Ok)
.head 9 -  Return (VALIDATE_Cancel)
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colNbCdt, 'Kandidaten' )
.head 5 +  Column: colPcTot
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: PC Tot Comm.
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  1.233"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid2 = 1
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM2') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  If Not bOk 
.head 9 -  Set tnRow = SalTblQueryContext( tblCommune )
.head 9 -  Call SalTblSetContext( tblCommune, tnRow )
.head 9 -  Call SalTblSetFocusRow( tblCommune, tnRow )
.head 7 +  On SAM_Validate
.head 8 +  If bOk
.head 9 +  If tblCommune.colPcTot > 0
.head 10 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 10 -  ! Trace
.head 10 -  Set sTrace = "INS: " || tblCommune.colIns || '  -->   '
.head 10 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC02' )||' (CG)')
.head 10 -  !
.head 9 +  Else
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV09') , PalTraductMsg( 'MSG'), MB_Ok)
.head 10 -  Return (VALIDATE_Cancel)
.head 5 +  Column: colPcTotCan
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: PC Tot Canton
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  1.283"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid2 = 1 
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM2') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  Else If ((tblCommune.colIns != tblCommune.colChefCanton or  SalStrLeftX( tblCommune.colIns,2) = '21') 
	and (wnNoElection[SalListQuerySelection(cmbElection)] = 5 or wnNoElection[SalListQuerySelection(cmbElection)] = 6 
	or wnNoElection[SalListQuerySelection(cmbElection)] = 8 or wnNoElection[SalListQuerySelection(cmbElection)] = 9) )

.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM3') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  If Not bOk 
.head 9 -  Set tnRow = SalTblQueryContext( tblCommune )
.head 9 -  Call SalTblSetContext( tblCommune, tnRow )
.head 9 -  Call SalTblSetFocusRow( tblCommune, tnRow )
.head 7 +  On SAM_Validate
.head 8 +  If bOk
.head 9 +  If tblCommune.colPcTotCan > 0
.head 10 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 10 -  ! Trace
.head 10 -  Set sTrace = "INS: " || tblCommune.colIns || '  -->   '
.head 10 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC02' )||' (1K)' )
.head 10 -  !
.head 9 +  Else
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV09') , PalTraductMsg( 'MSG'), MB_Ok)
.head 10 -  Return (VALIDATE_Cancel)
.head 5 +  Column: colValid
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colValid2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colTypeVote
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Type
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Drop Down List
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? No
.head 8 -  Vertical Scroll? No
.head 8 -  Auto Drop Down? Yes
.head 8 -  Allow Text Editing? No
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 +  List Values
.head 7 -  Text: Digivote
.head 7 -  Text: Jites
.head 6 +  Message Actions
.head 7 +  On SAM_Validate
.head 8 +  If SalIsWindowEnabled( tblCommune.colTypeVote ) 
.head 9 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 5 +  Column: colChefCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBV
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nb. BV
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 3
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  1.233"
.head 6 -  Width Editable? Yes
.head 6 -  Format: #0
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colBV, 'Aantal Stem.' )
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid2 = 1
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM2') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  If Not bOk 
.head 9 -  Set tnRow = SalTblQueryContext( tblCommune )
.head 9 -  Call SalTblSetContext( tblCommune, tnRow )
.head 9 -  Call SalTblSetFocusRow( tblCommune, tnRow )
.head 7 +  On SAM_Validate
.head 8 +  If bOk
.head 9 +  If tblCommune.colBV > 0
.head 10 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 10 -  ! Trace
.head 10 -  Set sTrace = "INS: " || tblCommune.colIns || '  -->   '
.head 10 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC03' )||' (CG)')
.head 9 +  Else
.head 10 -  Call SalMessageBox( PalTraductMsg( 'BV23') , PalTraductMsg( 'MSG'), MB_Ok)
.head 10 -  Return (VALIDATE_Cancel)
.head 9 -  !
.head 5 +  Column: colVoteEl
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Vote Electr.
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Check Box
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? No
.head 8 -  Vertical Scroll? No
.head 8 -  Auto Drop Down? Yes
.head 8 -  Allow Text Editing? No
.head 7 -  Cell CheckBox
.head 8 -  Check Value: 1
.head 8 -  Uncheck Value: 0
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colBV, 'Elektr. Stem.' )
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid2 = 1
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM2') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  If Not bOk 
.head 9 -  Set tnRow = SalTblQueryContext( tblCommune )
.head 9 -  Call SalTblSetContext( tblCommune, tnRow )
.head 9 -  Call SalTblSetFocusRow( tblCommune, tnRow )
.head 7 +  On SAM_Validate
.head 8 +  If bOk
.head 9 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 9 -  ! Trace
.head 9 -  Set sTrace = "INS: " || tblCommune.colIns || '  -->   '
.head 9 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC03' )||' (CG)')
.head 5 +  ! Column: colActive
.winattr
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Active
.head 6 -  Visible? No
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Center
.head 6 -  Width:  1.0"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Check Box
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value: 1
.head 8 -  Uncheck Value: 0
.head 8 -  Ignore Case? Yes
.end
.head 6 -  List Values 
.head 6 +  Message Actions 
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalTblSetColumnTitle( tblCommune.colActive, 'Actief' )
.head 7 +  On SAM_Click
.head 8 -  Set bOk  = TRUE
.head 8 +  If tblCommune.colValid2 = 1
.head 9 -  Set bOk  = FALSE
.head 9 -  Call SalSetFocus( pbClose)
.head 9 -  Call SalMessageBox( PalTraductMsg( 'COM2') , PalTraductMsg( 'MSG'), MB_Ok)
.head 8 +  If Not bOk 
.head 9 -  Set tnRow = SalTblQueryContext( tblCommune )
.head 9 -  Call SalTblSetContext( tblCommune, tnRow )
.head 9 -  Call SalTblSetFocusRow( tblCommune, tnRow )
.head 7 +  On SAM_Validate
.head 8 +  If bOk
.head 9 -  Call PalValidateCommune( wnNoElection[ SalListQuerySelection( cmbElection ) ]  )
.head 9 -  Set sTrace = "INS: " || tblCommune.colIns || '  -->   '
.head 9 -  Call PalTraceAction( gsUserLog, "GESTION_CDT", sTrace || PalTraductMsg( 'GC04' )||' (CG)')
.head 9 -  !
.head 4 +  Functions
.head 5 +  Function: PalPopulateCanton
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnElection
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsSelect
.head 7 -  String: lsType
.head 7 -  String: lsLibelle
.head 7 -  String: lsProGere
.head 7 -  String: lsOrdre
.head 7 -  String: lsArray[*]
.head 7 -  Number: lnVirgule
.head 7 -  Number: lnI
.head 6 +  Actions
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set lsLibelle = 'Nom_N'
.head 7 +  Else
.head 8 -  Set lsLibelle = 'Nom_F'
.head 7 +  If rbSiege
.head 8 +  If pnElection = 5
.head 9 -  Set lsType = 'DI'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , dis_INS, Type, NB_CDT, NB_PC_TOT, Null ,'', '',null from base_commune A
	where type = :lsType and @left(dis_ins,2)!= '21'  and  exists( Select B.Can_ins from Base_commune B where A.Dis_Ins = B.Dis_ins and VOTE_EL = :gnTypeVote ) "
.head 8 +  Else If pnElection = 2 or pnElection = 3
.head 9 +  If pnElection = 2
.head 10 -  Set lsType = 'CI'
.head 10 -  Set lsSelect = "Select " || lsLibelle ||" , CIRC_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 9 +  Else If pnElection = 3
.head 10 -  Set lsType = 'SE'
.head 10 -  Set lsSelect = "Select " || lsLibelle ||" , COLL_INS, Type, NB_CDT, null, Null ,'', '',null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 8 +  Else If pnElection = 1
.head 9 -  Set lsType = 'EU'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , COLL_INS, Type, NB_CDT, null, Null ,'', '',null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 8 +  Else If pnElection = 6
.head 9 -  Set lsType = 'GE'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , com_INS, Type, NB_CDT, NB_PC_TOT, can_Nb_pc_Tot,  VOTE_EL_TYPE, can_ins, null from base_commune where type = :lsType and VOTE_EL = :gnTypeVote "
.head 8 +  Else If pnElection = 4
.head 9 +  If gsWL_Type = '0'
.head 10 -  Set lsType = 'WR'
.head 10 -  Set lsSelect = "Select " || lsLibelle ||" , ARRON_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type =  :lsType  and exists( Select B.Can_ins from Base_commune B where B.WL_INS_DEP = A.Arron_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 9 +  Else
.head 10 -  Set lsType = 'WL'
.head 10 -  Set lsSelect = "Select " || lsLibelle ||" , CIRC_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 8 +  Else If pnElection = 7
.head 9 -  Set lsType = 'VL'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , CIRC_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 8 +  Else If pnElection = 10
.head 9 -  Set lsType = 'BR'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , CIRC_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 8 +  Else If pnElection = 11
.head 9 -  Set lsType = 'BV'
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , CIRC_INS, Type, NB_CDT, null, Null ,'', '', null from base_commune A
	where type = :lsType  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " ) "
.head 7 +  Else If rbBV
.head 8 -  Set lsType = 'GE'
.head 8 -  ! Set lsSelect = "Select " || lsLibelle ||" , com_INS, Type, null, null, null, @decode( com_ins , can_ins, 0, com_ins) , can_ins, Nb_BV , Comm_Active_VE
	from base_commune A 
	where type = :lsType and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ") "
.head 8 +  If cbNonElectronique
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , com_INS, Type, null, null, null, @decode( com_ins , can_ins, 0, com_ins) , can_ins, Nb_BV , Vote_el
	from base_commune A 
	where type = :lsType and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ") and Vote_el_Type  is not null "
.head 8 +  Else
.head 9 -  Set lsSelect = "Select " || lsLibelle ||" , com_INS, Type, null, null, null, @decode( com_ins , can_ins, 0, com_ins) , can_ins, Nb_BV , Vote_el
	from base_commune A 
	where type = :lsType and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ") and vote_el = :gnTypeVote "
.head 7 +  Else If rbPcTot
.head 8 -  Set lsType = 'CA'
.head 8 -  Set lsSelect = "Select " || lsLibelle ||" , can_INS, Type, NB_CDT, NB_PC_TOT, can_Nb_pc_Tot,  VOTE_EL_TYPE, can_ins, null
	 from base_commune A where type = :lsType
		and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ") "
.head 7 +  If psCantonGere != ''
.head 8 +  If pnElection = 5
.head 9 -  Set lsSelect = lsSelect || " and Dis_ins in (Select Distinct Dis_ins from Base_commune where can_INS in (" || psCantonGere || ")  )"
.head 8 +  Else
.head 9 -  Set lsSelect = lsSelect || " and can_INS in (" || psCantonGere || ") "
.head 7 +  If gsRestrRegion != ''
.head 8 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 -  !
.head 7 +  If dfInsS != ''
.head 8 +  If pnElection = 2 or pnElection =3
.head 9 -  Set lsSelect = lsSelect || " and can_ins like '" || dfInsS|| "%' "
.head 8 +  If pnElection = 5
.head 9 -  Set lsSelect = lsSelect || " and dis_ins like '" || dfInsS|| "%' "
.head 8 +  Else If pnElection = 6
.head 9 -  Set lsSelect = lsSelect || " and com_ins like '" || dfInsS|| "%' "
.head 7 +  If dfLibS != ''
.head 8 -  Set lsSelect = lsSelect || " and (Nom_N like '" || dfLibS|| "%'  or Nom_F like '" || dfLibS|| "%' )" 
.head 7 -  !
.head 7 +  If rbBV
.head 8 -  Set lsOrdre = '8,7,2'
.head 7 +  Else
.head 8 -  Set lsOrdre = '2'
.head 7 -  !
.head 7 +  If rbBV
.head 8 -  Call SalTblPopulate( tblCommune, ghSqlMain, lsSelect || "
	Order by "|| lsOrdre ||"
	into :tblCommune.colComm,:tblCommune.colIns ,:tblCommune.colType,:tblCommune.colNbCdt,:tblCommune.colPcTot,:tblCommune.colPcTotCan,:tblCommune.colTypeVote,:tblCommune.colChefCanton,:tblCommune.colBV,:tblCommune.colVoteEl ", 
TBL_FillAll)
.head 7 +  Else
.head 8 -  Call SalTblPopulate( tblCommune, ghSqlMain, lsSelect || "
	Order by "|| lsOrdre ||"
	into :tblCommune.colComm,:tblCommune.colIns ,:tblCommune.colType,:tblCommune.colNbCdt,:tblCommune.colPcTot,:tblCommune.colPcTotCan,:tblCommune.colTypeVote,:tblCommune.colChefCanton,:tblCommune.colBV ", TBL_FillAll)
.head 5 +  Function: PalValidateCommune
.head 6 -  Description:
.head 6 -  Returns
.head 6 +  Parameters
.head 7 -  Number: pnElection
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsWhere
.head 7 -  String: lsUpdate
.head 7 -  String: lsType
.head 7 -  String: lsTypeVote
.head 7 -  String: lsInsDis
.head 6 +  Actions
.head 7 +  If rbBV
.head 8 -  Set lsUpdate = "Update BASE_COMMUNE Set Nb_BV = :tblCommune.colBV, Vote_el  = :tblCommune.colVoteEl
	where  Type = 'GE'  and com_ins = :tblCommune.colIns "
.head 8 -  ! Set lsUpdate = "Update BASE_COMMUNE Set Nb_BV = :tblCommune.colBV
	where  Type = 'GE'  and com_ins = :tblCommune.colIns "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire , lsUpdate ||" " || lsWhere )
.head 8 -  Call SqlCommit(ghSqlSecondaire)
.head 7 +  Else If rbPcTot
.head 8 +  ! If pnElection = 5
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "select  distinct Dis_Ins from base_commune where CAN_ins = :tblCommune.colIns into :lsInsDis ")
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set lsWhere = " Dis_ins = :lsInsDis "
.head 9 -  Set lsType = 'DI'
.head 8 +  ! If pnElection = 6
.head 9 -  Set lsWhere = " Com_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'GE'
.head 8 +  ! If pnElection = 2
.head 9 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'CI'
.head 8 +  ! If pnElection = 3
.head 9 -  Set lsWhere = " COLL_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'SE'
.head 8 -  !
.head 8 -  Set lsTypeVote = SalStrLeftX( tblCommune.colTypeVote, 1 )
.head 8 +  If pnElection = 2 or pnElection = 3 or  pnElection = 1 or  pnElection = 4 or  pnElection = 7 or  pnElection = 10 or  pnElection = 11
.head 9 -  Set lsUpdate = "Update BASE_COMMUNE Set  Can_NB_PC_Tot =:tblCommune.colPcTotCan ,VOTE_EL_TYPE = :lsTypeVote
	where  CAN_ins = :tblCommune.colIns and type = 'CA' "
.head 8 +  Else
.head 9 -  Set lsUpdate = "Update BASE_COMMUNE Set NB_PC_Tot =:tblCommune.colPcTot , Can_NB_PC_Tot =:tblCommune.colPcTotCan ,VOTE_EL_TYPE = :lsTypeVote
	where  Com_ins = :tblCommune.colIns and type = 'GE' "
.head 8 -  !
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire , lsUpdate )
.head 8 -  Call SqlCommit(ghSqlSecondaire)
.head 7 +  Else
.head 8 +  If pnElection = 5
.head 9 -  Call SqlPrepareAndExecute( ghSqlMain, "select  distinct Dis_Ins from base_commune where CAN_ins = :tblCommune.colIns into :lsInsDis ")
.head 9 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 9 -  Call SqlCommit( ghSqlMain )
.head 9 -  Set lsWhere = " Dis_ins = :lsInsDis "
.head 9 -  Set lsType = 'DI'
.head 8 +  If pnElection = 6
.head 9 -  Set lsWhere = " Com_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'GE'
.head 8 +  Else If pnElection = 2
.head 9 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'CI'
.head 8 +  Else If pnElection = 3
.head 9 -  Set lsWhere = " COLL_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'SE'
.head 8 +  Else If pnElection = 1
.head 9 -  Set lsWhere = " COLL_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'EU'
.head 8 +  Else If pnElection = 4
.head 9 +  If gsWL_Type = '0'
.head 10 -  Set lsWhere = " ARRON_ins = :tblCommune.colIns "
.head 10 -  Set lsType = 'WR'
.head 9 +  Else
.head 10 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 10 -  Set lsType = 'WL'
.head 8 +  Else If pnElection = 7
.head 9 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'VL'
.head 8 +  Else If pnElection = 10
.head 9 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'BR'
.head 8 +  Else If pnElection = 11
.head 9 -  Set lsWhere = " CIRC_ins = :tblCommune.colIns "
.head 9 -  Set lsType = 'BV'
.head 8 -  !
.head 8 -  Set lsUpdate = "Update BASE_COMMUNE Set Nb_CDT = :tblCommune.colNbCdt
	where  Type = :lsType  and "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire , lsUpdate ||" " || lsWhere )
.head 8 -  Call SqlCommit(ghSqlSecondaire)
.head 8 -  !
.head 8 +  ! If pnElection = 6
.head 9 -  Set lsTypeVote = SalStrLeftX( tblCommune.colTypeVote, 1 )
.head 9 -  Set lsUpdate = "Update BASE_COMMUNE Set NB_PC_Tot =:tblCommune.colPcTot , Can_NB_PC_Tot =:tblCommune.colPcTotCan ,VOTE_EL_TYPE = :lsTypeVote
	where  Com_ins = :tblCommune.colIns and type = 'GE' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , lsUpdate )
.head 9 -  Call SqlCommit(ghSqlSecondaire)
.head 8 +  ! If rbPcTot
.head 9 -  Set lsTypeVote = SalStrLeftX( tblCommune.colTypeVote, 1 )
.head 9 +  If pnElection = 2 or pnElection = 3
.head 10 -  Set lsUpdate = "Update BASE_COMMUNE Set  Can_NB_PC_Tot =:tblCommune.colPcTotCan ,VOTE_EL_TYPE = :lsTypeVote
	where  CAN_ins = :tblCommune.colIns and type = 'CA' "
.head 9 +  Else 
.head 10 -  Set lsUpdate = "Update BASE_COMMUNE Set NB_PC_Tot =:tblCommune.colPcTot , Can_NB_PC_Tot =:tblCommune.colPcTotCan ,VOTE_EL_TYPE = :lsTypeVote
	where  Com_ins = :tblCommune.colIns and type = 'GE' "
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , lsUpdate )
.head 9 -  Call SqlCommit(ghSqlSecondaire)
.head 8 -  !
.head 8 +  If pnElection = 5 or pnElection = 6 or pnElection = 8 or pnElection = 9
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Select * from commune where " || lsWhere  )
.head 9 +  If NOT SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 +  If pnElection = 5
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Insert into  COMMUNE (PRO_INS,DIS_INS,CAN_INS,COM_INS,COM_NOM_F,COM_NOM_N,COM_EL_CPAS,COM_EL_CDISTRICT,REGION )
	Select Pro_ins, Dis_Ins,Can_ins, Com_Ins, Nom_f, Nom_N, El_CPAS,El_CDistrict,Region from Base_commune A
	where Dis_Ins = :tblCommune.colIns and Type = 'GE' and Vote_el = :gnTypeVote and
		Not exists( Select Com_ins from Commune B Where A.Com_ins = B.Com_ins )" )
.head 10 +  Else
.head 11 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Insert into  COMMUNE (PRO_INS,DIS_INS,CAN_INS,COM_INS,COM_NOM_F,COM_NOM_N,COM_EL_CPAS,COM_EL_CDISTRICT,REGION )
	Select Pro_ins, Dis_Ins,Can_ins, Com_Ins, Nom_f, Nom_N, El_CPAS,El_CDistrict,REGION from Base_commune 
	where COM_Ins = :tblCommune.colIns and Type = :lsType and  Vote_el = :gnTypeVote and
		Not exists( Select Com_ins from Commune B Where A.Com_ins = B.Com_ins ) " )
.head 8 -  Call SqlCommit( ghSqlSecondaire )
.head 8 -  !
.head 8 +  If pnElection = 6
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire , "Update COMMUNE Set Com_Nb_CDT = :tblCommune.colNbCdt, Com_NB_PCTot =:tblCommune.colPcTot , Can_NB_PC_Tot =:tblCommune.colPcTotCan 
	where Com_Ins = :tblCommune.colIns " )
.head 7 -  !
.head 7 -  Call SqlCommit(ghSqlSecondaire)
.head 4 +  Window Variables
.head 5 -  String: tsSelect
.head 5 -  String: tsNom1
.head 5 -  String: tsNom2
.head 5 -  Number: lnBV_Valid
.head 5 -  Boolean: bOk
.head 5 -  Number: tnRow
.head 5 -  Long String: sTrace
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCommune.colComm= ''
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, "Select com_Nom_F, Com_Nom_N from commune where com_ins = :tblCommune.colIns into :tsNom1, :tsNom2")
.head 7 -  Call SqlFetchNext( ghSqlTertiaire, Btmp)
.head 7 +  If tsNom1 != ''
.head 8 -  Set tblCommune.colComm = SalStrTrimX( tsNom1)
.head 7 +  Else
.head 8 -  Set tblCommune.colComm = SalStrTrimX(tsNom2)
.head 6 -  Set tblCommune.colComm = SalStrTrimX( tblCommune.colComm)
.head 6 +  If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 5
.head 7 -  Set tsSelect = "Select V5 from Commune where dis_ins = :tblCommune.colIns "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 6
.head 7 +  If tblCommune.colChefCanton = tblCommune.colIns and SalStrLeftX( tblCommune.colIns,2) != '21'
.head 8 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_New, TRUE )
.head 7 -  Set tsSelect = "Select V6 from Commune where com_ins = :tblCommune.colIns "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 8
.head 7 -  Set tsSelect = "Select V8 from C_District where cdi_ins = :tblCommune.colIns "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 2
.head 7 -  Set tsSelect = "Select V2 from Base_commune where circ_ins = :tblCommune.colIns and Type = 'CI' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 3 
.head 7 -  Set tsSelect = "Select V3 from Base_commune where coll_ins = :tblCommune.colIns and Type = 'SE' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 1
.head 7 -  Set tsSelect = "Select V3 from Base_commune where coll_ins = :tblCommune.colIns and Type = 'EU' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 4
.head 7 +  If gsWL_Type = '0'
.head 8 -  Set tsSelect = "Select V2 from Base_commune where circ_ins = :tblCommune.colIns and Type = 'WL' "
.head 7 +  Else
.head 8 -  Set tsSelect = "Select V2 from Base_commune where ARRON_INS = :tblCommune.colIns and Type = 'WR' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 7
.head 7 -  Set tsSelect = "Select V2 from Base_commune where circ_ins = :tblCommune.colIns and Type = 'VL' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 10
.head 7 -  Set tsSelect = "Select V2 from Base_commune where circ_ins = :tblCommune.colIns and Type = 'BR' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 11
.head 7 -  Set tsSelect = "Select V2 from Base_commune where circ_ins = :tblCommune.colIns and Type = 'BV' "
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 9
.head 7 -  Set tsSelect = "Select V9 from Commune where com_ins = :tblCommune.colIns "
.head 6 +  If tsSelect != ''
.head 7 -  Set tsSelect = tsSelect || '
	Into :tblCommune.colValid'
.head 7 -  Call SqlPrepareAndExecute( ghSqlTertiaire, tsSelect)
.head 7 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 8 +  If tblCommune.colValid = 1
.head 9 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, TRUE )
.head 9 -  Call SalTblSetCellTextColor( tblCommune.colNbCdt , COLOR_Red , TRUE )
.head 6 +  If rbPcTot
.head 7 +  If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 6 
.head 8 -  Set tsSelect = "Select bv_valide from Bur_vote where com_ins = :tblCommune.colIns 
	into :tblCommune.colValid2 "
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, tsSelect)
.head 8 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 9 +  If tblCommune.colValid2 = 1
.head 10 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, TRUE )
.head 10 -  Call VisTblSetRowColor( tblCommune, SalTblQueryContext( tblCommune) , COLOR_Blue )
.head 10 -  Call SalTblSetCellTextColor( tblCommune.colPcTot , COLOR_Red, TRUE )
.head 8 -  !
.head 7 +  Else If frmGenere.wsScrutinEl = '2'
.head 8 -  Set tsSelect = "Select bv_valide from Bur_vote where can_ins = :tblCommune.colIns 
	into :tblCommune.colValid2 "
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, tsSelect)
.head 8 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 9 +  If tblCommune.colValid2 = 1
.head 10 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, TRUE )
.head 10 -  Call VisTblSetRowColor( tblCommune, SalTblQueryContext( tblCommune) , COLOR_Blue)
.head 10 -  Call SalTblSetCellTextColor( tblCommune.colPcTotCan , COLOR_Red, TRUE )
.head 7 +  If tblCommune.colTypeVote = 'D'
.head 8 -  Set tblCommune.colTypeVote = 'Digivote'
.head 7 +  Else If tblCommune.colTypeVote = 'J'
.head 8 -  Set tblCommune.colTypeVote = 'Jites'
.head 7 +  Else
.head 8 -  Set tblCommune.colTypeVote = ''
.head 6 +  Else If rbBV
.head 7 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, FALSE )
.head 7 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_New, FALSE )
.head 7 +  If tblCommune.colIns = tblCommune.colChefCanton
.head 8 -  Call SalTblSetCellTextColor( tblCommune.colComm , COLOR_Red , TRUE )
.head 8 -  !
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set tblCommune.colComm = tblCommune.colComm || ' (K)'
.head 8 +  Else
.head 9 -  Set tblCommune.colComm = tblCommune.colComm || ' (C)'
.head 7 +  If wnNoElection [ SalListQuerySelection( cmbElection) ]  = 6 
.head 8 -  Set tsSelect = "Select bv_valide from Bur_vote where com_ins = :tblCommune.colIns 
	into :tblCommune.colValid2 "
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, tsSelect)
.head 8 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 9 +  If tblCommune.colValid2 = 1
.head 10 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, TRUE )
.head 10 -  Call VisTblSetRowColor( tblCommune, SalTblQueryContext( tblCommune) , COLOR_Blue )
.head 10 -  Call SalTblSetCellTextColor( tblCommune.colPcTot , COLOR_Red, TRUE )
.head 8 -  !
.head 7 +  Else If frmGenere.wsScrutinEl = '2'
.head 8 -  ! Set tsSelect = "Select bv_valide from Bur_vote where com_ins = :tblCommune.colIns 
	into :tblCommune.colValid2 "
.head 8 -  Set tsSelect = "Select bv_valide from Bur_vote where can_ins = :tblCommune.colChefCanton and Bv_Valide = 1
	into :tblCommune.colValid2 "
.head 8 -  Call SqlPrepareAndExecute( ghSqlTertiaire, tsSelect)
.head 8 +  If SqlFetchNext( ghSqlTertiaire, Btmp)
.head 9 +  If tblCommune.colValid2 = 1
.head 10 -  Call SalTblSetRowFlags( tblCommune, SalTblQueryContext( tblCommune), ROW_Edited, TRUE )
.head 10 -  Call VisTblSetRowColor( tblCommune, SalTblQueryContext( tblCommune) , COLOR_Blue)
.head 10 -  Call SalTblSetCellTextColor( tblCommune.colPcTotCan , COLOR_Red, TRUE )
.head 6 +  Else
.head 7 +  If tblCommune.colValid = 1 and (tblCommune.colValid2 = 1 or wnNoElection [ SalListQuerySelection( cmbElection) ]  != 6)
.head 8 -  Call VisTblSetRowColor( tblCommune, SalTblQueryContext( tblCommune) , COLOR_Red )
.head 3 +  Pushbutton: pbClose
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 4.183"
.head 5 -  Top: 4.988"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0, 0 )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'SLUITEN' )
.head 3 +  Pushbutton: pbValid
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Validation
.head 4 -  Window Location and Size
.head 5 -  Left: 6.183"
.head 5 -  Top: 4.655"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: F10
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Validatie' )
.head 5 +  On SAM_Click
.head 6 -  Call PalValidateAll()
.head 3 +  Pushbutton: pbEditTypeVote
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.783"
.head 5 -  Top: 4.833"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: F12
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If gnTypeVote = 1
.head 7 +  If rbPcTot
.head 8 -  Call SalModalDialog( dlgPW, hWndForm, 'MASTER', lbOk, gsTmp)
.head 8 +  If NOT lbOk
.head 9 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  Return (FALSE)
.head 8 +  Else
.head 9 -  Call SalEnableWindow( tblCommune.colTypeVote )
.head 3 +  ! Data Field: dfTypeVote
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 5.783"
.head 6 -  Top: 0.012"
.head 6 -  Width:  3.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.333"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.end
.head 4 +  Message Actions 
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set MyValue = frmGenere.cmbTypeVote
.head 3 +  Pushbutton: pbEdit
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.783"
.head 5 -  Top: 0.571"
.head 5 -  Width:  0.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resEdit , PIC_FormatBitmap )
.head 5 +  On SAM_Click
.head 6 -  Call PalEditPyramide(  )
.head 3 +  Check Box: cbNonElectronique
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Avec les communes NON électroniques
.head 4 -  Window Location and Size
.head 5 -  Left: 5.783"
.head 5 -  Top: 0.905"
.head 5 -  Width:  3.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( cbNonElectronique, "Met NEE elektronisch gemeente" )
.head 6 -  Call SalHideWindow( cbNonElectronique )
.head 5 +  On SAM_Click
.head 6 -  Call tblCommune.PalPopulateCanton( wnNoElection[SalListQuerySelection(cmbElection)] )
.head 2 +  Functions
.head 3 +  Function: PalChargeCmb
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: lnI
.head 5 -  String: lsOrdreEl
.head 5 -  Number: lnNoEl
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select par_ordre_el
	from PARAM 
	Into  :lsOrdreEl ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If gsLangueSoft= 'F'
.head 7 -  Call SalListPopulate( cmbElection, ghSqlMain, "Select El_nom_f from Election where el_no in (" || lsOrdreEl ||") order by El_No "  )
.head 6 +  Else
.head 7 -  Call SalListPopulate( cmbElection, ghSqlMain, "Select El_nom_n from Election where el_no in (" || lsOrdreEl ||") order by El_No "  )
.head 6 -  Call SalListSetSelect( cmbElection, 0 )
.head 6 -  Set lnI = 0
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, "Select El_no from Election where el_no in (" || lsOrdreEl || ") order by El_No  
	into :lnNoEl "  )
.head 6 +  While SqlFetchNext(  ghSqlMain , Btmp)
.head 7 -  Set wnNoElection [lnI] = lnNoEl
.head 7 -  Set lnI = lnI +1
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  Call SalSendMsg( cmbElection, SAM_Click , 0,0)
.head 3 +  Function: PalValidateAll
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRow
.head 4 +  Actions
.head 5 -  Set nRow = -1
.head 5 +  While SalTblFindNextRow( tblCommune, nRow, 0,0)
.head 6 -  Call SalTblSetContext( tblCommune, nRow )
.head 6 -  Call SalTblSetFocusRow( tblCommune, nRow )
.head 6 -  Call SalSendMsg( tblCommune.colNbCdt, SAM_Validate, 0,0)
.head 3 +  Function: PalEditPyramide
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Long String: lsSelect
.head 5 -  String: sWhere1
.head 5 -  String: sWhere2
.head 5 -  String: sWherePr
.head 5 -  String: sWhereGe
.head 5 -  String: sWhereOc
.head 5 -  String: sWhereCd
.head 5 -  Number: nNo
.head 5 -  Number: nBvTot
.head 5 -  Number: nPctTot
.head 5 -  Number: nCar
.head 5 -  Number: nNoPrec
.head 5 -  String: sType
.head 5 -  String: sDis
.head 5 -  String: sCirc
.head 5 -  String: sColl
.head 5 -  String: sCom
.head 5 -  String: sCan
.head 5 -  String: sCdi
.head 5 -  String: sDisS
.head 5 -  String: sComS
.head 5 -  String: sNomF
.head 5 -  String: sNomN
.head 5 -  String: sNom
.head 5 -  String: sNbCdt
.head 5 -  String: sNbBV
.head 5 -  String: lsNbSuppl
.head 5 -  String: sNbPctot
.head 5 -  String: sNbPctotCan
.head 5 -  String: sTypeVote
.head 5 -  String: sBuffer
.head 5 -  String: sNbBV_C
.head 5 -  File Handle: hFile
.head 5 -  String: lsFile
.head 5 -  String: lsSautLigne
.head 5 -  Number: lnLongTitre
.head 5 -  Number: lnLongTmp
.head 4 +  Actions
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Set sWhere1 = ""
.head 5 -  Set sWhere2 = ""
.head 5 +  If gsRestrCom != ''
.head 6 -  Set sWhere1 = " and Dis_ins in (Select Distinct Dis_ins from Base_commune where can_INS in (" || gsRestrCom || ")  )"
.head 6 -  Set sWhere2 = " and can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set sWhere1 = sWhere1 || " and Region in " || gsRestrRegion || " "
.head 6 -  Set sWhere2 = sWhere2 || " and Region in " || gsRestrRegion || " "
.head 5 +  If SalTblAnyRows( tblCommune, ROW_Selected, 0 )
.head 6 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 5
.head 7 -  Set sWherePr =  " and dis_ins = " || tblCommune.colIns || " "
.head 7 -  Set sWhereGe =  sWherePr
.head 7 -  Set sWhereCd =  sWherePr
.head 7 -  Set sWhereOc =  sWherePr
.head 6 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ] = 6 
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Dis_ins from base_commune where com_ins = :tblCommune.colIns into :sDisS")
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set sWherePr =  " and dis_ins = " || sDisS
.head 7 -  Set sWhereGe =  " and com_ins = " || tblCommune.colIns || " "
.head 7 -  Set sWhereCd =  sWhereGe
.head 7 -  Set sWhereOc =  sWhereGe
.head 5 -  !
.head 5 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 5 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 6 or
   wnNoElection [ SalListQuerySelection( cmbElection) ] = 8 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 9
.head 6 -  Set lsSelect = "Select 1,type ,dis_ins, Can_ins, com_ins, cdi_ins, nom_f, Nom_n, nb_cdt, nb_pc_Tot, '' , can_Nb_pc_Tot from base_commune A 
	where type='DI' and @left(dis_ins,2) != '21' and exists( Select B.Can_ins from Base_commune B where A.Dis_Ins = B.Dis_ins and VOTE_EL = :gnTypeVote )  " || sWhere1 || sWherePr ||" 
union
Select 2,type ,dis_ins, CAN_ins,com_ins, cdi_ins, nom_f, Nom_n, nb_cdt, nb_pc_Tot, VOTE_el_type, can_Nb_pc_Tot from base_commune A 
	where type='GE' and vote_el = :gnTypeVote "|| sWhere2  || sWhereGe ||"
order by 3,4,5,6,1
"
.head 6 -  Set lsSelect = lsSelect ||"
into :nNo, :sType, :sDis, :sCan, :sCom, :sCdi, :sNomF, :sNomN, :sNbCdt, :sNbPctot, :sTypeVote, :sNbPctotCan "
.head 5 +  Else If wnNoElection [ SalListQuerySelection( cmbElection) ] = 1 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 2 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 3 or
	wnNoElection [ SalListQuerySelection( cmbElection) ] = 4 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 7 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 10 or
	wnNoElection [ SalListQuerySelection( cmbElection) ] = 11
.head 6 -  Set lsSelect = "Select 1,type ,Circ_ins, Coll_ins,can_ins, nom_f, Nom_n, @string(nb_cdt,0), '','' from base_commune A 
	where type='EU' and Coll_ins in ('12025','92094')
"
.head 6 +  ! If wnNoElection [ SalListQuerySelection( cmbElection) ] = 2
.head 7 +  If lsSelect != ''
.head 8 -  Set lsSelect = lsSelect || "
Union
"
.head 7 -  Set lsSelect = lsSelect || "
union
Select 3,type ,Circ_ins, Coll_ins,can_ins, nom_f, Nom_n, @string(nb_cdt,0), '','' from base_commune A 
	where type='SE'    
union
"
.head 6 +  ! If wnNoElection [ SalListQuerySelection( cmbElection) ] = 3
.head 7 +  If lsSelect != ''
.head 8 -  Set lsSelect = lsSelect || "
Union
"
.head 7 -  Set lsSelect = lsSelect || "Select 2,type ,Circ_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type='CI'  and exists( Select B.Can_ins from Base_commune B where A.Pro_Ins = B.Pro_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " )   
"
.head 6 +  If gsWL_Type = '0'
.head 7 +  If lsSelect != ''
.head 8 -  Set lsSelect = lsSelect || "
Union
"
.head 7 -  Set lsSelect = lsSelect || "
Select 4,type ,Arron_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type='WR'  and exists( Select B.Can_ins from Base_commune B where A.Arron_ins = B.WL_INS_DEP and VOTE_EL = :gnTypeVote and " || gsMateriel || " )   
"
.head 6 +  Else
.head 7 +  If lsSelect != ''
.head 8 -  Set lsSelect = lsSelect || "
Union
"
.head 7 -  Set lsSelect = lsSelect || "
Select 4,type ,Arron_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type='WL'  and exists( Select B.Can_ins from Base_commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " )   
"
.head 6 +  If lsSelect != ''
.head 7 -  Set lsSelect = lsSelect || "
Union
"
.head 6 -  Set lsSelect = lsSelect ||"
Select 7,type ,Circ_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type = 'VL' and exists( Select B.Can_ins from base_Commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote  and " || gsMateriel || " ) 
Union
Select 10,type ,Circ_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type = 'BR' and exists( Select B.Can_ins from base_Commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote  and " || gsMateriel || " ) 
Union
Select 11,type ,Circ_ins, Coll_ins, can_ins, nom_f, Nom_n, @string(nb_cdt,0),'','' from base_commune A 
	where type = 'BV' and exists( Select B.Can_ins from base_Commune B where B.Pro_Ins=A.Pro_Ins and VOTE_EL = :gnTypeVote  and " || gsMateriel || " ) 
Union
Select 20,type ,Circ_ins, Coll_ins,can_ins, nom_f, Nom_n, '', @string(CAN_NB_PC_TOT,0),VOTE_EL_TYPE from base_commune A 
	where type='CA'  and exists( Select B.Com_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " )     
order by 1,3,4,5
"
.head 6 -  Set lsSelect = lsSelect ||"
into :nNo, :sType, :sCirc, :sColl, :sCan, :sNomF, :sNomN, :sNbCdt, :sNbPctotCan, :sTypeVote "
.head 5 -  !
.head 5 -  Set lsFile = gsPathTemp || 'PYRAMIDE.TXT'
.head 5 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 5 -  Call SalFileOpen( hFile,  lsFile , OF_Create | OF_ReadWrite | OF_Text )
.head 5 -  !
.head 5 +  ! If gsLangueSoft = 'N'
.head 6 -  Set sBuffer = 'Editie van de gemeenten'
.head 5 +  ! Else
.head 6 -  Set sBuffer = 'Edition des communes'
.head 5 -  Call SalGetWindowText( hWndForm, sBuffer, 200 )
.head 5 -  Set lnLongTitre = SalStrLength( sBuffer )
.head 5 -  Set sBuffer = SalStrRepeatX( '=' , lnLongTitre ) ||'
' || SalStrUpperX( sBuffer) || '
' ||SalStrRepeatX( '=' , lnLongTitre ) ||'

 '
.head 5 -  Call SalFileWrite( hFile, sBuffer, SalStrLength(sBuffer ) )
.head 5 -  Set lnLongTitre = 50
.head 5 +  If gsLangueSoft = 'N'
.head 6 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 2 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 3  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 4 
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 7  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 10  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 11
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 1
.head 7 -  Set sBuffer = ' Verkiezing' || SalStrRepeatX( ' ', lnLongTitre-10) || 'Zetels'
.head 6 +  Else
.head 7 -  Set sBuffer = '    Naam' || SalStrRepeatX( ' ', lnLongTitre-10) || 'Zetels      Tot.Pc       Type'
.head 7 +  If gsRestrRegion = "('BXL')"
.head 8 -  Set sBuffer = sBuffer ||'
' || SalStrRepeatX( ' ', SalStrLength(sBuffer) - 17) || '  Gem.'
.head 7 +  Else
.head 8 -  Set sBuffer = sBuffer ||'
' || SalStrRepeatX( ' ', SalStrLength(sBuffer) - 17) || 'Gem.   Kan.'
.head 5 +  Else
.head 6 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 2 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 3   or wnNoElection [ SalListQuerySelection( cmbElection) ] = 4 
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 7  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 10  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 11
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 1
.head 7 -  Set sBuffer = '  Election ' || SalStrRepeatX( ' ', lnLongTitre-10) || 'Sièges'
.head 6 +  Else
.head 7 -  Set sBuffer = '    Nom ' || SalStrRepeatX( ' ', lnLongTitre-10) || 'Sièges      Pc Tot     Type'
.head 7 +  If gsRestrRegion = "('BXL')"
.head 8 -  Set sBuffer = sBuffer ||'
' || SalStrRepeatX( ' ', SalStrLength(sBuffer) - 16) || '   Com.'
.head 7 +  Else
.head 8 -  Set sBuffer = sBuffer ||'
' || SalStrRepeatX( ' ', SalStrLength(sBuffer) - 16) || 'Com.   Can.'
.head 5 -  Set sBuffer = sBuffer || "
" || SalStrRepeatX( '=' , lnLongTitre + 28) 
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  !
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If gsLangueSoft = 'N' and SalStrTrimX(sNomN) = ''
.head 7 -  Set sNom = sNomF
.head 6 +  Else If gsLangueSoft != 'N' and SalStrTrimX(sNomF) = ''
.head 7 -  Set sNom = sNomN
.head 6 +  Else If gsLangueSoft = 'N' 
.head 7 -  Set sNom = sNomN
.head 6 +  Else
.head 7 -  Set sNom = sNomF
.head 6 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 2 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 3   or wnNoElection [ SalListQuerySelection( cmbElection) ] = 4 
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 7  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 10  or wnNoElection [ SalListQuerySelection( cmbElection) ] = 11
	 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 1
.head 7 +  If wnNoElection [ SalListQuerySelection( cmbElection) ] = 2 or wnNoElection [ SalListQuerySelection( cmbElection) ] = 3
.head 8 -  Set lsNbSuppl = SalStrRightX( '  ' || SalNumberToStrX( SalNumberRound( SalStrToNumber(sNbCdt)/2 + 0.49999) + 1  , 0), 2)
.head 8 +  If SalStrToNumber(lsNbSuppl) < 6 
.head 9 -  Set lsNbSuppl = ' 6'
.head 7 +  Else If nNo= 1
.head 8 -  Set lsNbSuppl = SalStrRightX( '  ' || SalNumberToStrX( SalNumberRound( SalStrToNumber(sNbCdt)/2 + 0.49999) + 1  , 0), 2)
.head 8 +  If SalStrToNumber(lsNbSuppl) < 6 
.head 9 -  Set lsNbSuppl = ' 6'
.head 7 +  Else If nNo = 10
.head 8 -  Set lsNbSuppl = '16'
.head 7 +  Else
.head 8 +  If SalStrToNumber(sNbCdt) < 4
.head 9 -  Set lsNbSuppl = ' 4'
.head 8 +  Else If SalStrToNumber(sNbCdt) > 16
.head 9 -  Set lsNbSuppl = '16'
.head 8 +  Else
.head 9 -  Set lsNbSuppl = SalStrRightX('  ' || sNbCdt, 2)
.head 7 +  ! If nNo = 1
.head 8 +  If gsLangueSoft = 'N'
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'KIESCOLLEGE: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else 
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_N from election where el_no = 1 into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne = '
' || lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
' 
.head 10 -  Set sBuffer = SalStrUpperX( 'KIESCOLLEGE: ' ) 
.head 8 +  Else 
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'COLLEGE ELECT.: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else 
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_F from election where el_no = 1 into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne = '
' || lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
'
.head 10 -  Set sBuffer = SalStrUpperX( 'COLLEGE ELECT.: ' ) 
.head 8 -  Set sBuffer = lsSautLigne || frmGenere.PalLongueur(sBuffer || sColl ||' - ' || sNom , lnLongTitre, ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) ||
	'   (' || lsNbSuppl || ')'
.head 7 +  If nNo = 3 or nNo = 1
.head 8 +  If gsLangueSoft = 'N'
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'KIESCOLLEGE: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_N from election where el_no = :nNo into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne = '
' || lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
' 
.head 10 -  Set sBuffer = SalStrUpperX( 'KIESCOLLEGE: ' ) 
.head 8 +  Else
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'COLLEGE ELECT.: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_F from election where el_no = :nNo into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne = '
' || lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
'
.head 10 -  Set sBuffer = SalStrUpperX( 'COLLEGE ELECT.: ' ) 
.head 8 -  Set sBuffer = lsSautLigne || frmGenere.PalLongueur(sBuffer || sColl ||' - ' || sNom , lnLongTitre, ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) ||
	'   (' || lsNbSuppl || ')'
.head 7 +  If nNo = 2 or nNo = 7 or nNo = 10 or nNo = 11 or nNo = 4
.head 8 +  If gsLangueSoft = 'N'
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer =  SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'KIESDISTRICT: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_N from election where el_no = :nNo into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne ='
' || lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
'
.head 10 -  Set sBuffer =  SalStrUpperX( 'KIESDISTRICT: ' ) 
.head 8 +  Else
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX( 'CIRCONSCR.: ' )) ) 
.head 10 -  Set lsSautLigne = '' 
.head 9 +  Else
.head 10 -  Set lsSautLigne = '' 
.head 10 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select el_nom_F from election where el_no = :nNo into :lsSautLigne ")
.head 10 -  Call SqlFetchNext( ghSqlSecondaire, Btmp)
.head 10 -  Set lsSautLigne = '
' ||lsSautLigne || '
' || SalStrRepeatX('-',SalStrLength( lsSautLigne ) ) ||'
' 
.head 10 -  Set sBuffer = SalStrUpperX( 'CIRCONSCR.: ' ) 
.head 8 +  If nNo = 10
.head 9 -  Set lnLongTmp = SalStrLength(frmGenere.PalLongueur(sBuffer  || sCirc ||' - ' || sNom , lnLongTitre, ' ', '' )  )
.head 8 -  Set sBuffer = lsSautLigne || frmGenere.PalLongueur(sBuffer  || sCirc ||' - ' || sNom , lnLongTitre, ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) ||
	'   ('|| lsNbSuppl ||')'
.head 8 +  If nNo = 10
.head 9 -  Set sBuffer =sBuffer || '   FF
'
.head 9 -  Set sBuffer = sBuffer || SalStrRepeatX( ' ' , lnLongTmp ) || SalStrRightX( '   ' || '17', 3) ||
	'   (16)   NN'
.head 7 +  If nNo = 20
.head 8 +  If sTypeVote = 'D'
.head 9 -  Set sTypeVote = 'Digivote'
.head 8 +  Else
.head 9 -  Set sTypeVote = 'Jites'
.head 8 +  If nNoPrec != 1 and nNoPrec != nNo
.head 9 -  Set sBuffer = '' 
.head 9 -  Call SalFilePutStr( hFile, sBuffer )
.head 8 +  If nNoPrec = nNo
.head 9 -  Set sBuffer = SalStrRepeatX(' ' , SalStrLength(SalStrUpperX(PalTraductMsg('CAN')  )) ) || '  ' || sCan ||' - ' || sNom 
.head 9 -  Set lsSautLigne = '' 
.head 8 +  Else
.head 9 -  Set sBuffer = SalStrUpperX(PalTraductMsg('CAN')) || ': ' || sCan ||' - ' || sNom ||'   '
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set lsSautLigne = '
' || SalStrRepeatX( '=' , lnLongTitre + 28) ||'
' || PalTraductMsg('PC_TOT') || SalStrRepeatX( ' ', lnLongTitre- SalStrLength( PalTraductMsg('PC_TOT')) ) || '           Tot.Pc     Type '||'
' || SalStrRepeatX('-', SalStrLength( PalTraductMsg('PC_TOT') ||SalStrRepeatX( ' ', lnLongTitre- SalStrLength( PalTraductMsg('PC_TOT')) ) ||  '           Tot.Pc     Type ' )) ||'
'
.head 9 +  Else
.head 10 -  Set lsSautLigne = '
' || SalStrRepeatX( '=' , lnLongTitre + 28) ||'
' || PalTraductMsg('PC_TOT') || SalStrRepeatX( ' ', lnLongTitre- SalStrLength( PalTraductMsg('PC_TOT')) ) || '           Pc Tot     Type '||'
' || SalStrRepeatX('-', SalStrLength( PalTraductMsg('PC_TOT') ||SalStrRepeatX( ' ', lnLongTitre- SalStrLength( PalTraductMsg('PC_TOT')) ) ||  '           Pc Tot     Type ' )) ||'
'
.head 8 +  If sNbPctotCan = ''
.head 9 -  Set sNbPctotCan = '0'
.head 8 -  Set sBuffer = lsSautLigne || frmGenere.PalLongueur(sBuffer, lnLongTitre , ' ', '' ) || SalStrRepeatX( ' ' , 11)  || SalStrRightX( '   ' || sNbPctotCan, 3) ||  SalStrRepeatX( ' ', 8) || sTypeVote
.head 8 -  !
.head 6 +  Else
.head 7 +  If nNo = 1
.head 8 -  Set sBuffer = '
' || frmGenere.PalLongueur(  'DISTRICT : ' || sDis ||' - ' || sNom , lnLongTitre, ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3)
.head 7 +  If nNo = 2
.head 8 +  If sTypeVote = 'D'
.head 9 -  Set sTypeVote = 'Digivote'
.head 8 +  Else
.head 9 -  Set sTypeVote = 'Jites'
.head 8 +  If nNoPrec != 1 and nNoPrec != nNo
.head 9 -  Set sBuffer = '' 
.head 9 -  Call SalFilePutStr( hFile, sBuffer )
.head 8 +  If nNoPrec = nNo
.head 9 -  Set sBuffer = '   ' || SalStrRepeatX(' ' , SalStrLength(SalStrUpperX(PalTraductMsg('COM'))) ) || '  ' || sCom ||' - ' || sNom 
.head 8 +  Else
.head 9 +  If SalStrLeftX( sCom, 2) = '21'
.head 10 +  If gsLangueSoft = 'N' 
.head 11 -  Set sBuffer = SalStrUpperX( 'Brussel Hoofdstad' )
.head 10 +  Else
.head 11 -  Set sBuffer = 'REGION BRUXELLES CAPITALE'
.head 10 -  Call SalFilePutStr( hFile, sBuffer )
.head 9 -  Set sBuffer = '   ' || SalStrUpperX(PalTraductMsg('COM')) || ': ' || sCom ||' - ' || sNom 
.head 8 +  If sCan = sCom and SalStrLeftX( sCom, 2) != '21'
.head 9 +  If sNbPctotCan = ''
.head 10 -  Set sNbPctotCan = '0'
.head 9 +  If gsLangueSoft = 'N' 
.head 10 -  Set sBuffer = sBuffer || ' (K)'
.head 9 +  Else
.head 10 -  Set sBuffer = sBuffer || ' (C)'
.head 8 -  !
.head 8 -  Set nCar = 0
.head 8 +  If gsRestrRegion = "('BXL')"
.head 9 -  Set nCar = 4
.head 8 +  If sNbPctot = ''
.head 9 -  Set sNbPctot = '0'
.head 8 -  !
.head 8 -  Set sBuffer = frmGenere.PalLongueur(sBuffer, lnLongTitre , ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) ||  SalStrRepeatX( ' ', 5+nCar) || SalStrRightX( '   ' || sNbPctot, 3) || '     ' || SalStrRightX( '   ' || sNbPctotCan, 3) ||  SalStrRepeatX( ' ', 4-nCar) || sTypeVote
.head 7 +  If nNo = 3
.head 8 +  If nNoPrec != nNo
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set sBuffer = '      ' || SalStrUpperX('Districtsraad') || ':'
.head 9 +  Else
.head 10 -  Set sBuffer = '      ' || SalStrUpperX('Conseil de District') || ':'
.head 9 -  Call SalFilePutStr( hFile, sBuffer )
.head 8 -  Set sBuffer = '           ' || sCdi ||' - ' || sNom 
.head 8 -  Set sBuffer = frmGenere.PalLongueur(sBuffer, lnLongTitre , ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) 
.head 7 +  If nNo = 4
.head 8 +  If gsLangueSoft = 'N'
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = '      ' || SalStrRepeatX(' ' , SalStrLength(SalStrUpperX('Ocmw')) ) || '  ' || sCom ||' - ' || sNom 
.head 9 +  Else
.head 10 -  Set sBuffer = '      ' || SalStrUpperX('Ocmw') || ': ' || sCom ||' - ' || sNom  
.head 8 +  Else
.head 9 +  If nNoPrec = nNo
.head 10 -  Set sBuffer = '         ' || SalStrRepeatX(' ' , SalStrLength(SalStrUpperX('Cpas')) ) || '  ' || sCom ||' - ' || sNom 
.head 9 +  Else
.head 10 -  Set sBuffer = '         ' || SalStrUpperX('Cpas') || ': ' || sCom ||' - ' || sNom  
.head 8 -  Set sBuffer = frmGenere.PalLongueur(sBuffer, lnLongTitre , ' ', '' ) || SalStrRightX( '   ' || sNbCdt, 3) 
.head 6 -  Set nNoPrec = nNo
.head 6 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  !
.head 5 -  ! Gestion des BV
.head 5 -  Set sBuffer = '
' || SalStrRepeatX('=', 78 ) 
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set sBuffer = 'Stembureaus'
.head 5 +  Else
.head 6 -  Set sBuffer = 'Bureaux de vote'
.head 5 -  Set sBuffer = sBuffer || '
' || SalStrRepeatX( '-', SalStrLength( sBuffer )) 
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set sBuffer = '    Gemeente' || SalStrRepeatX( ' ', 20) || '     Aantal stembureaus'
.head 5 +  Else
.head 6 -  Set sBuffer = '    Commune' || SalStrRepeatX( ' ', 20) || '     Nb. bureaux de vote'
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  Set sBuffer = SalStrRepeatX('-', 60 )
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  Set nBvTot = 0
.head 5 -  Set lsSelect = "Select com_ins, nom_f, Nom_n, @string(nb_Bv,0), can_ins, @decode( com_ins , can_ins, '', com_ins)   from base_commune A 
	where type = 'GE' and exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and " || gsMateriel || " )   and VOTE_EL = :gnTypeVote     
order by 5,6,1
"
.head 5 -  Set lsSelect = lsSelect ||"
into :sCom, :sNomF, :sNomN, :sNbBV, :sCan, :sType "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If gsLangueSoft = 'N' and SalStrTrimX(sNomN) = ''
.head 7 -  Set sNom = sNomF
.head 6 +  Else If gsLangueSoft != 'N' and SalStrTrimX(sNomF) = ''
.head 7 -  Set sNom = sNomN
.head 6 +  Else If gsLangueSoft = 'N' 
.head 7 -  Set sNom = sNomN
.head 6 +  Else
.head 7 -  Set sNom = sNomF
.head 6 -  !
.head 6 -  Set sNbBV_C = ''
.head 6 +  If sType = ''
.head 7 -  Set sBuffer = ''
.head 7 -  Call SalFilePutStr( hFile, sBuffer )
.head 7 -  Set sType = ' (C)'
.head 7 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select sum(nb_bv) from base_commune where can_ins = :sCom and type = 'GE' and VOTE_EL = :gnTypeVote into :sNbBV_C")
.head 7 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 6 +  Else
.head 7 -  Set sType = ''
.head 6 -  Set sBuffer = sCom || ' - ' || sNom || sType 
.head 6 -  Set sBuffer = frmGenere.PalLongueur(sBuffer, 43 , ' ', '' ) || SalStrRightX( '   ' || sNbBV, 3) 
.head 6 +  If sNbBV_C != ''
.head 7 -  Set sBuffer = sBuffer || '    ' || SalStrRightX( '    (' ||  sNbBV_C ||')', 5)
.head 6 -  Set nBvTot = nBvTot + SalStrToNumber( sNbBV )
.head 6 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  Set sBuffer = SalStrRepeatX(' ' , 42 ) || '=====
'||  SalStrRepeatX(' ' , 42 ) || SalStrRightX( '    ' || SalNumberToStrX( nBvTot, 0), 4) 
.head 5 -  Call SalFilePutStr( hFile, sBuffer )
.head 5 -  !
.head 5 -  Call SalFileClose(hFile)
.head 5 -  !
.head 5 -  Call frmGenere.PalEditFile( lsFile )
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call SalFileOpen( hFile, lsFile, OF_Delete )
.head 5 -  !
.head 5 -  Call SalBringWindowToTop( hWndForm )
.head 5 -  Call VisWaitCursor(FALSE)
.head 2 +  Window Parameters
.head 3 -  String: psCantonGere
.head 2 +  Window Variables
.head 3 -  Number: wnNoElection[10]
.head 3 -  Number: wnLigne
.head 3 -  Boolean: lbOk
.head 3 -  String: lsTmp
.head 3 -  Number: wnSiegeMax
.head 3 -  Number: wnSiegeMaxIni
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gnTypeVote = 1
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Beheer van de kandidaten, stembureaus en totalisatie PC")
.head 5 +  Else
.head 6 -  Call SalSetWindowText( hWndItem, "Gestion des sièges à pourvoir, des bureaux de vote et des PC de totalisation")
.head 4 +  Else
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalSetWindowText( hWndItem, "Beheer van de kandidaten en telbureaus")
.head 5 +  Else
.head 6 -  Call SalSetWindowText( hWndItem, "Gestion des sièges à pourvoir et des bureaux de dépouillement")
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalSendMsg( cmbElection , SAM_Click , 0,0 )
.head 4 +  If gsRestrRegion = "('BXL')" and frmGenere.wsScrutinEl = '1'
.head 5 -  Call SalListSetSelect( cmbElection, 1 )
.head 5 -  Call SalDisableWindow( cmbElection )
.head 5 -  Call SalSendMsg( cmbElection, SAM_Click, 0,0)
.head 1 -  ! ===========================================================================
.head 1 -  ! Systeme
.head 1 -  ! =======
.head 1 -  ! Gestion paramètres globaux appication
.head 1 +  Dialog Box: dlgGestionParam
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  7.583"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.595"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Date d'élection
.head 4 -  Resource Id: 45961
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.179"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDateEl
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.583"
.head 6 -  Top: 0.155"
.head 6 -  Width:  1.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 99/99/9999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Verkiezingsdatum")
.head 3 +  Data Field: dfTxt
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.283"
.head 6 -  Top: 0.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem)
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Titel van de verkiezing")
.head 6 +  Else
.head 7 -  Call SalSetWindowText( hWndItem, "Titres de l'élection")
.head 3 -  Background Text: NL
.head 4 -  Resource Id: 45963
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 0.845"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfTitreNl
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 100
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.583"
.head 6 -  Top: 0.821"
.head 6 -  Width:  5.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 -  Background Text: FR
.head 4 -  Resource Id: 45962
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.883"
.head 5 -  Top: 1.095"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfTitreFr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 100
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.583"
.head 6 -  Top: 1.071"
.head 6 -  Width:  5.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 -  Message Actions
.head 3 -  Background Text: Mot de passe master
.head 4 -  Resource Id: 45964
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 1.429"
.head 5 -  Width:  1.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPW1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 20
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.583"
.head 6 -  Top: 1.405"
.head 6 -  Width:  2.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Master wachtwoord")
.head 3 -  Background Text: Confirmation
.head 4 -  Resource Id: 45965
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 1.679"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfPW2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 20
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.583"
.head 6 -  Top: 1.655"
.head 6 -  Width:  2.3"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, "Bevestiging")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: OK
.head 4 -  Window Location and Size
.head 5 -  Left: 1.283"
.head 5 -  Top: 2.155"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If dfDateEl != DATETIME_Null and dfTitreFr != '' and dfTitreNl != ''
.head 7 -  Set wbOk = TRUE
.head 7 +  If dfPW1 != '' or dfPW2 != ''
.head 8 +  If dfPW1 = dfPW2
.head 9 -  Set wbOk = TRUE
.head 8 +  Else
.head 9 -  Call SalMessageBox( PalTraductMsg( 'PW01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 9 -  Set wbOk = FALSE
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'PAR01' ), PalTraductMsg( 'ERREUR' ), MB_Ok )
.head 7 -  Set wbOk = FALSE
.head 6 +  If wbOk
.head 7 -  Call PalUpdateParam()
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 4.383"
.head 5 -  Top: 2.155"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 3 +  Pushbutton: pbF12
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: F12
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalEnableWindow( dfDateEl )
.head 6 -  Call SalColorSet( dfDateEl, COLOR_IndexWindow, COLOR_White )
.head 6 -  Call SalSetFocus( dfDateEl )
.head 3 +  Check Box: cbEID
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Utilisation de la carte d'identité électronique
.head 4 -  Window Location and Size
.head 5 -  Left: 3.283"
.head 5 -  Top: 0.488"
.head 5 -  Width:  4.0"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalGetProfileString( 'DATABASE', 'USER_EID','1', wsEID , gsIniFilePathAndName )
.head 6 +  If wsEID = '1'
.head 7 -  Set cbEID = TRUE
.head 6 +  Else
.head 7 -  Set cbEID = FALSE
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Gebruik van de EID")
.head 2 +  Functions
.head 3 +  Function: PalChargeParam
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsDateEl
.head 5 -  Number: lnAnnee
.head 5 -  Number: lnMois
.head 5 -  Number: lnJour
.head 4 +  Actions
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Par_Date_El , par_scrutin_F, par_scrutin_N
	from PARAM 
	Into :lsDateEl, :dfTitreFr, :dfTitreNl ")
.head 5 +  If SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Set lnAnnee = SalStrToNumber( SalStrLeftX( lsDateEl, 4))
.head 6 -  Set lnMois = SalStrToNumber(SalStrMidX( lsDateEl, 4, 2))
.head 6 -  Set lnJour = SalStrToNumber(SalStrRightX( lsDateEl, 2))
.head 6 -  Set dfDateEl = SalDateConstruct( lnAnnee, lnMois, lnJour, 0,0,0)
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  !
.head 3 +  Function: PalUpdateParam
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsUpdate
.head 5 -  String: lsDateEl
.head 5 -  Number: lnAnnee
.head 5 -  Number: lnMois
.head 5 -  Number: lnJour
.head 4 +  Actions
.head 5 -  Set lnAnnee = SalDateYear( dfDateEl )
.head 5 -  Set lnMois = SalDateMonth( dfDateEl)
.head 5 -  Set lnJour = SalDateDay( dfDateEl )
.head 5 -  Set lsDateEl = SalStrRightX('0000' || SalNumberToStrX( lnAnnee,0),4) || 
	SalStrRightX('00' || SalNumberToStrX( lnMois,0) ,2) ||
	SalStrRightX('00' || SalNumberToStrX( lnJour,0) ,2)
.head 5 -  Set lsUpdate = "Update PARAM 
	set  Par_Date_El = :lsDateEl , par_scrutin_F = :dfTitreFr , par_scrutin_N = :dfTitreNl "
.head 5 +  If dfPW1 != '' and dfPW2 != ''
.head 6 -  Set lsUpdate = lsUpdate || ",Par_PW_Master = :dfPW1 "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsUpdate )
.head 5 -  Call SqlCommit( ghSqlMain )
.head 5 -  !
.head 5 -  Call SalSetProfileString( 'DATABASE', 'USER_EID', SalNumberToStrX( cbEID, 0) , gsIniFilePathAndName )
.head 5 -  !
.head 5 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Boolean: wbOk
.head 3 -  String: wsPath
.head 3 -  String: wsTitre
.head 3 -  String: wsEID
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Beheer van de parameters")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Gestion des parmètres")
.head 3 +  On SAM_CreateComplete
.head 4 -  Call PalChargeParam(  )
.head 1 -  ! Détermination de l'odre des lecteurs de disquettes
.head 1 +  Dialog Box: dlgLecteurs
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  5.15"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.726"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Lecteur 1:
.head 4 -  Resource Id: 7611
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.683"
.head 5 -  Top: 0.179"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfL1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 0.155"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Default
.head 5 -  Input Mask: A:
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[1] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 6 -  Call SalHideWindowAndLabel( hWndItem)
.head 3 -  Background Text: Lecteur 2:
.head 4 -  Resource Id: 7612
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.683"
.head 5 -  Top: 0.512"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfL2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 0.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Default
.head 5 -  Input Mask: A:
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[2] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 6 -  Call SalHideWindowAndLabel( hWndItem)
.head 3 -  Background Text: Lecteur 3:
.head 4 -  Resource Id: 7613
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.683"
.head 5 -  Top: 0.845"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfL3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 0.821"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Default
.head 5 -  Input Mask: A:
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[3] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 6 -  Call SalHideWindowAndLabel( hWndItem)
.head 3 -  Background Text: Lecteur 4:
.head 4 -  Resource Id: 7614
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.683"
.head 5 -  Top: 1.179"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfL4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 1.155"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Default
.head 5 -  Input Mask: A:
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[4] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 6 -  Call SalHideWindowAndLabel( hWndItem)
.head 3 -  Background Text: Lecteur 5:
.head 4 -  Resource Id: 33030
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.683"
.head 5 -  Top: 1.512"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfL5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 2
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.083"
.head 6 -  Top: 1.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Default
.head 5 -  Input Mask: A:
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[5] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 6 -  Call SalHideWindowAndLabel( hWndItem)
.head 3 +  Pushbutton: pbIdLecteur
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Identification
.head 4 -  Window Location and Size
.head 5 -  Left: 1.683"
.head 5 -  Top: 1.821"
.head 5 -  Width:  2.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, 'Identificatie' )
.head 6 +  If PalDtmFloppy( gnNbLecteur, sLettre, nNbTot)
.head 7 -  Call SalEnableWindow( hWndItem)
.head 6 +  Else
.head 7 -  Call SalDisableWindow( hWndItem)
.head 5 +  On SAM_Click
.head 6 +  If NOT PalDtmLettreLecteur()
.head 7 -  Call PalDtmLettreLecteur()
.head 3 +  Data Field: dfId_L1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.883"
.head 6 -  Top: 0.155"
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[6] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 3 +  Data Field: dfId_L2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.883"
.head 6 -  Top: 0.488"
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[7] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 3 +  Data Field: dfId_L3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.883"
.head 6 -  Top: 0.821"
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[8] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 3 +  Data Field: dfId_L4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.883"
.head 6 -  Top: 1.155"
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[9] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 3 +  Data Field: dfId_L5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.883"
.head 6 -  Top: 1.488"
.head 6 -  Width:  1.4"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set whDf[10] = SalNumberToWindowHandle(  SalWindowHandleToNumber( hWndItem ) )
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 0.783"
.head 5 -  Top: 2.238"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If PalSaveLecteur()
.head 7 -  Set gbCreateDisk = TRUE
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Cancel
.head 4 -  Window Location and Size
.head 5 -  Left: 3.583"
.head 5 -  Top: 2.238"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 2 +  Functions
.head 3 +  Function: PalSaveLecteur
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 5 -  String: lsLettre
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur
.head 6 +  If SalIsWindowVisible( whDf[i])
.head 7 -  Call SalGetWindowText( whDf[i], lsLettre, 1 )
.head 7 +  If lsLettre = ''
.head 8 -  Call SalMessageBox( PalTraductMsg( 'ERR') , PalTraductMsg( 'MSG' ), MB_Ok )
.head 8 -  Return (FALSE)
.head 7 -  Set gsLecteur[i] = lsLettre ||":"
.head 6 +  Else
.head 7 -  Set gsLecteur[i] = ""
.head 6 -  Set i = i + 1
.head 5 +  If SalFileCreateIniLocal()
.head 6 -  Return (TRUE)
.head 5 +  Else
.head 6 -  Return (FALSE)
.head 3 +  Function: PalLecteur
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( whDf[i], "Lezer " || SalNumberToStrX(i, 0) ||":")
.head 6 -  Call SalSetWindowText( whDf[i],  SalStrLeftX( gsLecteur[i] , 1) )
.head 6 -  Call SalShowWindowAndLabel( whDf[i] )
.head 6 -  Set i = i + 1
.head 5 +  While i <= 5
.head 6 -  Call SalSetWindowText( whDf[ i ],  '' )
.head 6 -  Call SalSetWindowText( whDf[ i + 5],  '' )
.head 6 -  Call SalHideWindowAndLabel( whDf[i] )
.head 6 -  Call SalHideWindowAndLabel( whDf[i+5] )
.head 6 -  Call SalColorSet( whDf[ i + 5], COLOR_IndexWindow, COLOR_Gray )
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i = i + 1
.head 3 +  Function: PalDtmLettreLecteur
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Boolean:
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsOk[*]
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 +  While i <= gnNbLecteur
.head 6 -  Call SalSetWindowText( whDf[ i ],  '' )
.head 6 -  Call SalSetWindowText( whDf[ i + 5],  '' )
.head 6 -  Call SalColorSet( whDf[ i + 5], COLOR_IndexWindow, COLOR_Gray )
.head 6 -  Set lsOk[i-1] = ''
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set i = i + 1
.head 5 +  If PalDtmFloppy( 999, sLettre, nNbTot)
.head 6 +  If nNbTot > 0
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 -  Set i = 0
.head 7 +  While i < nNbTot
.head 8 -  Set sBuffer = VisDosGetVolumeLabel( sLettre[i] )
.head 8 +  If SalStrUpperX( SalStrLeftX( sBuffer, 7) ) = 'LECTEUR'
.head 9 -  Set sNoLecteur = SalStrRightX( sBuffer,1)
.head 9 -  Call SalSetWindowText( whDf[ SalStrToNumber( sNoLecteur)],  SalStrLeftX( sLettre[i] , 1) )
.head 9 -  Call SalSetWindowText( whDf[ SalStrToNumber( sNoLecteur) + 5],  'Ok' )
.head 9 -  Call SalColorSet( whDf[ SalStrToNumber( sNoLecteur) + 5], COLOR_IndexWindow, COLOR_Green )
.head 9 -  Set lsOk[ SalStrToNumber( sNoLecteur) ] = 'OK'
.head 9 -  Call DispatchMessage(  )
.head 8 -  Set i = i + 1
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  !
.head 7 -  Set i = 1
.head 7 +  While i <= gnNbLecteur
.head 8 +  If lsOk[i] != 'OK'
.head 9 -  Return (FALSE)
.head 8 -  Set i = i + 1
.head 7 -  Return (TRUE)
.head 7 -  !
.head 6 +  Else
.head 7 -  Call SalMessageBox( PalTraductMsg( 'LECT01') , PalTraductMsg( 'MSG') , MB_Ok ) 
.head 7 -  Return (TRUE)
.head 5 +  Else
.head 6 -  Call SalMessageBox( PalTraductMsg( 'LECT01') , PalTraductMsg( 'MSG') , MB_Ok ) 
.head 6 -  Return (TRUE)
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Window Handle: whDf[20]
.head 3 -  Number: i
.head 3 -  String: sLettre[*]
.head 3 -  String: sBuffer
.head 3 -  String: sNoLecteur
.head 3 -  Number: nNbTot
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Diskettelezers")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Lecteurs de disquettes")
.head 3 +  On SAM_CreateComplete
.head 4 -  Call PalLecteur( )
.head 1 -  ! Qui a fait quoi .... quand ?
.head 1 +  Dialog Box: dlgQuiFaitQuoi
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  8.617"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 3.333"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Dark Gray
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Utilisateur:
.head 4 -  Resource Id: 43665
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.262"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbUser
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.883"
.head 5 -  Top: 0.155"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 2.905"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Gebruiker:' )
.head 6 -  Call SalListPopulate( cmbUser, ghSqlMain, "Select distinct utilisateur from trace_action " )
.head 6 -  Call SalListAdd( cmbUser, '' )
.head 5 +  On SAM_Click
.head 6 -  Call SalPicClear (pic2  )
.head 6 +  If gsUserEID = '1'
.head 7 +  If cmbUser != ''
.head 8 +  If cmbUser != 'SYSADM'
.head 9 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Photo from utilisateur where login = :cmbUser
	into :lsPhoto ")
.head 9 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 10 +  If lsPhoto != ''
.head 11 -  ! Call SalPicSetString( pic2, PIC_FormatObject, lsPhoto )
.head 11 -  Call SalPicSetImage( pic2, lsPhoto, PIC_ImageTypeJPEG )
.head 8 +  Else
.head 9 -  Call SalPicSetFile( pic2, gsPathApplic||"CLES_SYS.jpg" )
.head 3 -  Background Text: Date:
.head 4 -  Resource Id: 43667
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 0.595"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDate1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.883"
.head 6 -  Top: 0.571"
.head 6 -  Width:  1.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'Datum:' )
.head 6 -  Set MyValue = SalDateCurrent()
.head 3 -  Background Text: à
.head 4 -  Resource Id: 43668
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.683"
.head 5 -  Top: 0.595"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Center
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfDate2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 10
.head 5 -  Data Type: Date/Time
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.683"
.head 6 -  Top: 0.571"
.head 6 -  Width:  1.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: dd/MM/yyyy
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalSetWindowLabelText( hWndItem, 'tot' )
.head 3 -  Background Text: Commune:
.head 4 -  Resource Id: 37466
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.012"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfINS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 1.883"
.head 6 -  Top: 0.988"
.head 6 -  Width:  1.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 99999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfINS, "Gemeente")
.head 3 +  Pushbutton: pbSearchCom
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ...
.head 4 -  Window Location and Size
.head 5 -  Left: 2.983"
.head 5 -  Top: 0.988"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalModalDialog( dlgCommune, hWndForm, 'GE', wsIns )
.head 6 +  If wsIns != ''
.head 7 -  Set dfINS = wsIns
.head 3 -  Background Text: Type:
.head 4 -  Resource Id: 43666
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.429"
.head 5 -  Width:  0.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbType
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.883"
.head 5 -  Top: 1.405"
.head 5 -  Width:  6.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.821"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  ! If gsUserLog != 'SYSADM'
.head 7 -  Set wsWhere = " where tra_Type not like 'DEVALID%' "
.head 6 +  ! Else
.head 7 -  Set wsWhere = ""
.head 6 +  If gsLangueSoft ='N'
.head 7 -  Call SalListPopulate( cmbType, ghSqlMain, "Select Tra_Nl from Trace_type " || wsWhere)
.head 6 +  Else
.head 7 -  Call SalListPopulate( cmbType, ghSqlMain, "Select Tra_Fr from Trace_type " || wsWhere )
.head 6 -  Call SalListAdd( cmbType, '' )
.head 3 -  Background Text: PC:
.head 4 -  Resource Id: 32525
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.845"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Yellow
.head 4 -  Background Color: Default
.head 3 +  Combo Box: cmbPC
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.883"
.head 5 -  Top: 1.821"
.head 5 -  Width:  3.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.357"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  String Type: String
.head 4 -  Maximum Data Length: Default
.head 4 -  Sorted? Yes
.head 4 -  Always Show List? No
.head 4 -  Vertical Scroll? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Input Mask: Unformatted
.head 4 -  List Initialization
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalListPopulate( cmbPC, ghSqlMain, "Select distinct Nom_pc from trace_action " )
.head 6 -  Call SalListAdd( cmbPC, '' )
.head 5 +  On SAM_Click
.head 6 -  Call SalPicClear (pic2  )
.head 6 +  If cmbUser != ''
.head 7 +  If cmbUser != 'SYSADM'
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Photo from utilisateur where login = :cmbUser
	into :lsPhoto ")
.head 8 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 9 +  If lsPhoto != ''
.head 10 -  ! Call SalPicSetString( pic2, PIC_FormatObject, lsPhoto )
.head 10 -  Call SalPicSetImage( pic2, lsPhoto, PIC_ImageTypeJPEG )
.head 7 +  Else
.head 8 -  Call SalPicSetFile( pic2, gsPathApplic||"CLES_SYS.jpg" )
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Recherche
.head 4 -  Window Location and Size
.head 5 -  Left: 3.783"
.head 5 -  Top: 2.405"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.714"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalPopulateTrace()
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Zoeken")
.head 6 -  Call SalPicSet( hWndItem, resRetrieve , PIC_FormatBitmap )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 6.583"
.head 5 -  Top: 2.821"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 3 -  !
.head 3 +  Child Table: tblTrace
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.2"
.head 6 -  Top: 3.667"
.head 6 -  Width:  8.183"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 1.905"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 30000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colTitre
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Titre
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colType
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Type
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colTypeLabel
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Label_Type
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colLogin
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Login
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colTrace
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Action
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 60000
.head 6 -  Data Type: Long String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colDate
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Date_Heure
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Date/Time
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: DateTime
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPC
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Nom_PC
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: 250
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNomUser
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Login
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_FetchRowDone
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set tblTrace.colTitre = "Wie heeft wat gedaan ?"
.head 6 +  Else
.head 7 -  Set tblTrace.colTitre =  "Qui fait quoi ?"
.head 6 +  If gsUserEID = '1'
.head 7 -  Set AlsPhoto[ SalTblQueryContext( tblTrace ) ] = ""
.head 7 +  If tblTrace.colLogin  != 'SYSADM'
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Select Nom, Photo from utilisateur where login = :tblTrace.colLogin 
	into :tblTrace.colNomUser, :lsPhoto ")
.head 8 +  If SqlFetchNext( ghSqlSecondaire, Btmp )
.head 9 -  Set AlsPhoto[ SalTblQueryContext( tblTrace ) ] = lsPhoto
.head 7 +  Else
.head 8 -  Call SalPicGetString( pic2 , PIC_FormatObject, lsPhoto )
.head 8 -  Call SalPicSetFile( pic2, gsPathApplic||"CLES_SYS.jpg" )
.head 8 -  Call SalPicGetString( pic2 , PIC_FormatObject, AlsPhoto[ SalTblQueryContext( tblTrace ) ] )
.head 8 -  ! Call SalPicSetString( pic2, PIC_FormatObject, lsPhoto )
.head 8 -  Call SalPicSetImage( pic2, lsPhoto, PIC_ImageTypeJPEG )
.head 8 -  Set tblTrace.colNomUser = "Administrateur du système"
.head 3 +  Picture: pic2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 6.983"
.head 5 -  Top: 0.155"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Dark Gray
.head 4 -  Message Actions
.head 3 +  ! Pushbutton: pbUpdate
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Update
.head 4 -  Window Location and Size
.head 5 -  Left: 0.983"
.head 5 -  Top: 2.821"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.end
.head 4 +  Message Actions 
.head 5 +  On SAM_Click
.head 6 -  Call PalUpdateAction()
.head 5 +  On SAM_Create
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalShowWindow( hWndItem )
.head 3 +  ! Data Field: dfUpdate
.winattr
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.483"
.head 6 -  Top: 2.405"
.head 6 -  Width:  2.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.333"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Yellow
.head 5 -  Background Color: Dark Blue
.head 5 -  Input Mask: Unformatted
.end
.head 4 +  Message Actions 
.head 5 +  On SAM_Create
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalShowWindow( hWndItem )
.head 2 +  Functions
.head 3 +  Function: PalPopulateTrace
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsWhere
.head 5 -  String: lsType
.head 5 -  Date/Time: ldDate2
.head 5 -  Number: nError
.head 4 +  Actions
.head 5 +  If cmbUser != ''
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 -  Set lsWhere = lsWhere ||' Utilisateur = :cmbUser '
.head 5 +  If cmbPC != ''
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 -  Set lsWhere = lsWhere ||' Nom_Pc = :cmbPC '
.head 5 +  If cmbType != ''
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select tra_type from trace_Type where tra_Nl = :cmbType into :lsType")
.head 6 +  Else
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, "Select tra_type from trace_Type where tra_Fr = :cmbType into :lsType" )
.head 6 +  If SqlFetchNext( ghSqlMain, Btmp)
.head 7 -  Set lsWhere = lsWhere ||' Type = :lsType '
.head 5 +  If dfDate1 != DATETIME_Null
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 -  Set lsWhere = lsWhere ||' Quand >= :dfDate1 '
.head 5 +  If dfDate2 != DATETIME_Null
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 -  Set ldDate2 = dfDate2 + 1
.head 6 -  Set lsWhere = lsWhere ||' Quand < :ldDate2 '
.head 5 +  If dfINS != ''
.head 6 +  If lsWhere != ''
.head 7 -  Set lsWhere = lsWhere ||' and '
.head 6 -  Set lsWhere = lsWhere ||" Recherche like '%"|| dfINS ||"%' "
.head 5 +  If lsWhere = ''
.head 6 -  Call SalMessageBox(PalTraductMsg('CONDIT') , PalTraductMsg('MSG'), MB_Ok)
.head 6 -  Return (FALSE)
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalTblPopulate( tblTrace, ghSqlMain, "Select  Type, tra_NL, Utilisateur, Action, Quand, Nom_pc
from Trace_Action, trace_Type
where Type = Tra_type and " || lsWhere || "
order by 3,5
Into :tblTrace.colType, :tblTrace.colTypeLabel, :tblTrace.colLogin, :tblTrace.colTrace, :tblTrace.colDate, :tblTrace.colPC "
, TBL_FillAll )
.head 5 +  Else
.head 6 -  Call SalTblPopulate( tblTrace, ghSqlMain, "Select  Type, tra_FR, Utilisateur, Action, Quand, Nom_pc
from Trace_Action, trace_Type
where Type = Tra_type and " || lsWhere || "
order by 3,5
Into :tblTrace.colType, :tblTrace.colTypeLabel, :tblTrace.colLogin, :tblTrace.colTrace, :tblTrace.colDate, :tblTrace.colPC "
, TBL_FillAll )
.head 5 +  If SalTblAnyRows( tblTrace, 0,0)
.head 6 -  Call VisWaitCursor(FALSE)
.head 6 -  ! Set nError = NUMBER_Null
.head 6 -  ! Call SalReportTableView  ( tblTrace, frmPreview, gsPathRpt || "LIST01.QRP" , nError)
.head 6 -  Set sTitre = ''
.head 6 -  Set sType = ''
.head 6 -  Set sTypeLabel = ''
.head 6 -  Set sLogin = ''
.head 6 -  Set sTrace = ''
.head 6 -  Set dDate= DATETIME_Null
.head 6 -  Set sPC = ''
.head 6 -  Set sNomUser = ''
.head 6 -  Set lsPhoto = ''
.head 6 -  Set bOk_Photo = FALSE
.head 6 -  Call SalCreateWindow( frmPreview, hWndForm, hWndForm.tblTrace )
.head 6 -  Call SalReportView( hWndForm, frmPreview, gsPathRpt || "LIST01.QRP",
	':sTitre,:sType,:sTypeLabel,sLogin,:sTrace,:dDate,:sPC,:sNomUser,:lsPhoto,:bOk_Photo'
	, 'Titre,Type,TypeLabel,Login,Trace,Date,NomPC,NomUser,Photo,PhotoOK' , gnError )
.head 5 +  Else
.head 6 -  Call SalMessageBox(PalTraductMsg('AUCUN') , PalTraductMsg('MSG'), MB_Ok)
.head 6 -  Return (FALSE)
.head 3 +  ! Function: PalUpdateAction
.head 4 -  Description: 
.head 4 -  Returns 
.head 4 -  Parameters 
.head 4 -  Static Variables 
.head 4 +  Local variables 
.head 5 -  Long String: lsAction
.head 5 -  String: lsUser
.head 5 -  String: lsNb
.head 5 -  Number: i
.head 5 -  String: lsRech
.head 5 -  Date/Time: ldQuand
.head 4 +  Actions 
.head 5 -  Call SalShowWindow( dfUpdate )
.head 5 -  Call VisWaitCursor(TRUE)
.head 5 -  Call SalDisableWindow(hWndForm)
.head 5 -  !
.head 5 -  Set dfUpdate = 'Comptage ...'
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select   count(*)
from Trace_Action into :lsNb")
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Call SqlCommit( ghSqlMain)
.head 5 -  !
.head 5 -  Set i = 1
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, "Select Utilisateur, Action, Quand
from Trace_Action
into :lsUser, :lsAction, :ldQuand ")
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Set dfUpdate = SalNumberToStrX( i,0) ||" / " || lsNb
.head 6 -  Call DispatchMessage(  )
.head 6 -  Set lsRech = SalStrLeftX( lsAction, 50)
.head 6 -  Call SqlPrepareAndExecute( ghSqlSecondaire, "Update  Trace_Action
	set recherche = :lsRech
	Where Utilisateur = :lsUser and Quand = :ldQuand")
.head 6 -  Call SqlCommit( ghSqlSecondaire)
.head 6 -  Set i = i + 1
.head 5 -  Call SqlCommit( ghSqlMain)
.head 5 -  Call SalEnableWindow(hWndForm)
.head 5 -  Call SalHideWindow( dfUpdate )
.head 5 -  Call VisWaitCursor(FALSE)
.head 5 -  Call SalMessageBox('Actualisation terminée','Message', MB_Ok)
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: wsWhere
.head 3 -  String: wsIns
.head 3 -  !
.head 3 -  String: sTitre
.head 3 -  String: sType
.head 3 -  String: sTypeLabel
.head 3 -  String: sLogin
.head 3 -  Long String: sTrace
.head 3 -  Date/Time: dDate
.head 3 -  String: sPC
.head 3 -  String: sNomUser
.head 3 -  Long String: AlsPhoto[*]
.head 3 -  Long String: lsPhoto
.head 3 -  Number: wnRow
.head 3 -  Boolean: bOk_Photo
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Wie heeft wat gedaan ?")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Qui fait quoi ?")
.head 3 +  On SAM_ReportFetchInit
.head 4 -  Set wnRow = -1
.head 4 -  Return TRUE
.head 3 +  On SAM_ReportFetchNext
.head 4 +  If SalTblFindNextRow( tblTrace, wnRow, 0,0)
.head 5 -  Call SalTblSetContext( tblTrace, wnRow )
.head 5 -  Call SalTblSetFocusRow( tblTrace, wnRow )
.head 5 -  Set sTitre = tblTrace.colTitre
.head 5 -  Set sType = tblTrace.colType
.head 5 -  Set sTypeLabel = tblTrace.colTypeLabel
.head 5 -  Set sLogin = tblTrace.colLogin
.head 5 -  Set sTrace = tblTrace.colTrace
.head 5 -  Set dDate= tblTrace.colDate
.head 5 -  Set sPC = tblTrace.colPC
.head 5 -  Set sNomUser = tblTrace.colNomUser
.head 5 +  If gsUserEID = '1'
.head 6 +  If AlsPhoto[wnRow] != ''
.head 7 -  Set bOk_Photo = TRUE
.head 7 -  Set lsPhoto = AlsPhoto[wnRow]
.head 6 +  Else
.head 7 -  Set lsPhoto = ''
.head 7 -  Set bOk_Photo = FALSE
.head 5 +  Else
.head 6 -  Set lsPhoto = ''
.head 6 -  Set bOk_Photo = FALSE
.head 5 -  Return TRUE
.head 4 +  Else
.head 5 -  Set wnRow = -1
.head 5 -  Return FALSE
.head 1 -  ! Qui est connecté ?
.head 1 +  Dialog Box: dlgQuiConnect
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modeless
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  2.3"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.048"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  !
.head 3 +  Picture: pic1c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 0.238"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[0] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic2c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.883"
.head 5 -  Top: 0.238"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[1] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic3c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.283"
.head 5 -  Top: 0.238"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[2] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic4c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 0.238"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[3] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic5c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.983"
.head 5 -  Top: 0.238"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.179"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[4] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 1.429"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[0] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 1.429"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[1] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 1.429"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[2] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 1.429"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[3] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 1.429"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[4] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df1_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 1.679"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[0] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df2_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 1.679"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[1] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df3_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 1.679"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[2] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df4_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 1.679"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[3] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df5_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 1.679"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[4] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic6c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 2.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[5] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic7c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.883"
.head 5 -  Top: 2.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[6] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic8c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.283"
.head 5 -  Top: 2.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[7] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic9c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 2.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[8] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic10c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.983"
.head 5 -  Top: 2.071"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.179"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[9] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df6
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 3.262"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[5] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df7
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 3.262"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[6] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df8
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 3.262"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[7] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df9
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 3.262"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[8] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df10
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 3.262"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[9] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df6_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 3.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[5] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df7_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 3.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[6] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df8_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 3.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[7] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df9_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 3.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[8] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df10_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 3.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[9] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic11c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.483"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[10] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic12c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 2.883"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[11] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic13c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.283"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[12] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic14c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 7.583"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[13] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: pic15c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.983"
.head 5 -  Top: 3.905"
.head 5 -  Width:  1.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 1.179"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhPic[14] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df11
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 5.095"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[10] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df12
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 5.095"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[11] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df13
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 5.095"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[12] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df14
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 5.095"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[13] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df15
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 5.095"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf[14] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df11_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.083"
.head 6 -  Top: 5.345"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[10] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df12_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.483"
.head 6 -  Top: 5.345"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[11] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df13_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.883"
.head 6 -  Top: 5.345"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[12] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df14_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 7.283"
.head 6 -  Top: 5.345"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[13] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: df15_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.683"
.head 6 -  Top: 5.345"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nhDf2[14] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalDisableWindow( hWndItem )
.head 2 +  Functions
.head 3 +  Function: PalDtmConnect
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nNumber
.head 5 -  Number: nLarge
.head 5 -  Number: nLigne
.head 5 -  Number: nHauteur
.head 5 -  Number: bTmp
.head 5 -  String: sNom
.head 5 -  String: sPrepo
.head 5 -  String: saNomPc[*]
.head 5 -  Long String: lsPhoto
.head 5 -  String: lsPC
.head 5 -  Number: nPhoto
.head 5 -  Number: nI
.head 5 -  Number: nPipe
.head 4 +  Actions
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set sPrepo = 'op '
.head 5 +  Else
.head 6 -  Set sPrepo = 'sur '
.head 5 -  Call SqlPrepareAndExecute( hSqlConnect, "Select count(*) from utilisateur where connect = 1
	into :nNumber " )
.head 5 -  Call SqlFetchNext( hSqlConnect, bTmp)
.head 5 +  If nNumber > 0
.head 6 -  Set nNumber = 0
.head 6 -  Call SqlPrepareAndExecute( hSqlConnect, "Select PC_Nom from utilisateur where connect = 1
	into :lsPC " )
.head 6 +  While SqlFetchNext( hSqlConnect, bTmp ) 
.head 7 -  Set nPipe = SalStrTokenize( lsPC, '', '|', saNomPc )
.head 7 -  Set nNumber = nNumber + nPipe
.head 5 +  If gsUserLog = 'SYSADM'
.head 6 -  Set nNumber = nNumber+1
.head 5 -  !
.head 5 +  If nNumber = 0
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( nhDf[nPhoto] ), "NO USER" )
.head 5 +  Else
.head 6 +  If nNumber = 1
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalSetWindowText( hWndItem, SalNumberToStrX( nNumber, 0) || " persoon verbonden")
.head 7 +  Else
.head 8 -  Call SalSetWindowText( hWndItem, SalNumberToStrX( nNumber, 0) || " personne connectée")
.head 6 +  Else
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalSetWindowText( hWndItem, SalNumberToStrX( nNumber, 0) || " personen verbonden")
.head 7 +  Else
.head 8 -  Call SalSetWindowText( hWndItem, SalNumberToStrX( nNumber, 0) || " personnes connectées")
.head 6 -  Set nPhoto = 0
.head 6 -  Set nLarge = 1
.head 6 +  If nNumber <= 5
.head 7 -  Set nLarge = nNumber * 1.05
.head 7 -  Set nHauteur = 1
.head 6 +  Else If nNumber > 5 and nNumber <= 10
.head 7 -  Set nLarge = 5.25
.head 7 -  Set nHauteur = 1.8
.head 6 +  Else
.head 7 -  Set nLarge = 5.25
.head 7 -  Set nHauteur = 2.6
.head 6 -  Call SalSetWindowSize( hWndForm, nWidth*nLarge, nHeight*nHauteur )
.head 6 +  If (nNumber >= 1 and gsUserLog != 'SYSADM') or  (nNumber > 1 and gsUserLog = 'SYSADM')
.head 7 -  Call SqlPrepareAndExecute( hSqlConnect, "Select Nom,Photo, PC_Nom from utilisateur where connect = 1
	into :sNom, :lsPhoto, :lsPC " )
.head 7 +  While SqlFetchNext( hSqlConnect, bTmp ) AND nPhoto < 15
.head 8 -  Set nPipe = SalStrTokenize( lsPC, '', '|', saNomPc )
.head 8 -  Set nI = 0
.head 8 +  While nI < nPipe
.head 9 -  ! Call SalPicSetString( SalNumberToWindowHandle( nhPic[nPhoto] ), PIC_FormatObject, lsPhoto )
.head 9 -  Call SalPicSetImage( SalNumberToWindowHandle( nhPic[nPhoto] ), lsPhoto, PIC_ImageTypeJPEG )
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( nhDf[nPhoto] ), sNom )
.head 9 -  Call SalSetWindowText( SalNumberToWindowHandle( nhDf2[nPhoto] ), sPrepo || saNomPc[nI] )
.head 9 -  Set nPhoto = nPhoto + 1
.head 9 -  Set nI = nI + 1
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalPicSetFile( SalNumberToWindowHandle( nhPic[nPhoto] ), gsPathApplic||"CLES_SYS.jpg" )
.head 7 -  Call SalSetWindowText( SalNumberToWindowHandle( nhDf[nPhoto] ), "SYSADM" )
.head 7 -  Call SalSetWindowText( SalNumberToWindowHandle( nhDf2[nPhoto] ), sPrepo || gsNomPc )
.head 7 -  Set nPhoto = nPhoto + 1
.head 6 +  While nPhoto < 15
.head 7 -  Call SalPicClear( SalNumberToWindowHandle( nhPic[nPhoto] ) )
.head 7 -  Set nPhoto = nPhoto + 1
.head 5 -  Call SalTimerSet( dlgQuiConnect, 99, 3000 )
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  Sql Handle: hSqlConnect
.head 3 -  Number: nWidth
.head 3 -  Number: nHeight
.head 3 -  Number: nhPic[15]
.head 3 -  Number: nhDf[15]
.head 3 -  Number: nhDf2[15]
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Wie is verbonden ?")
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Qui est connecté ?")
.head 4 -  Call SqlConnect(hSqlConnect)
.head 4 -  Call SqlSetParameter( hSqlConnect, DBP_FETCHTHROUGH, TRUE, '' )
.head 4 -  Call SqlSetParameter( hSqlConnect, DBP_PRESERVE	, TRUE, '' )
.head 4 -  Call SqlSetIsolationLevel( hSqlConnect, 'RL' )
.head 4 -  Call SalGetWindowSize( hWndForm, nWidth, nHeight )
.head 4 -  Set gbWinConnect = TRUE
.head 3 +  On SAM_CreateComplete
.head 4 -  Call PalDtmConnect()
.head 4 -  Call SalCenterWindow( hWndForm )
.head 3 +  On SAM_Close
.head 4 -  Call SqlDisconnect( hSqlConnect )
.head 4 -  Set gbWinConnect = FALSE
.head 3 +  On SAM_Timer
.head 4 -  Call SalTimerKill( dlgQuiConnect, 99 )
.head 4 -  Call PalDtmConnect()
.head 1 -  ! Listes spéciales : suivi des créations et etat de controles des disquettes
.head 1 +  Dialog Box: dlgIdentif
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.633"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.083"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Commune:
.head 4 -  Resource Id: 44123
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 1.083"
.head 5 -  Top: 0.512"
.head 5 -  Width:  1.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.167"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Left
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 3 +  Data Field: dfINS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: 5
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.783"
.head 6 -  Top: 0.488"
.head 6 -  Width:  1.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: 99999
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfINS, "Gemeente")
.head 6 -  Call SalDisableWindow( dfINS)
.head 3 +  Pushbutton: pbSearchCom
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: ...
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 0.488"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalModalDialog( dlgCommune, hWndForm, wsType, wsIns )
.head 6 +  If wsIns != ''
.head 7 -  Set dfINS = wsIns
.head 3 +  Check Box: cbToute
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Toutes les communes
.head 4 -  Window Location and Size
.head 5 -  Left: 1.083"
.head 5 -  Top: 0.821"
.head 5 -  Width:  4.8"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.25"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If cbToute 
.head 7 -  Set dfINS = '' 
.head 7 -  Call SalDisableWindow( pbSearchCom )
.head 6 +  Else
.head 7 -  Call SalEnableWindow( pbSearchCom )
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( cbToute, "Alle Gemeente")
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Recherche
.head 4 -  Window Location and Size
.head 5 -  Left: 1.083"
.head 5 -  Top: 1.238"
.head 5 -  Width:  1.6"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.714"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call PalPopulateTbl()
.head 6 +  If SalTblAnyRows( tblListe, 0,0)
.head 7 -  Call SalCreateWindow( frmPreview, hWndForm, hWndForm.tblListe )
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Set nError = NUMBER_Null
.head 7 +  If nType = 1 or nType = 2
.head 8 -  Call SalReportTableView  ( tblListe, frmPreview, gsPathRpt || "LIST02.QRP" , nError)
.head 7 +  Else
.head 8 -  Call SalReportTableView  ( tblListe, frmPreview, gsPathRpt || "LIST03.QRP" , nError)
.head 6 +  Else
.head 7 +  If nType = 1 or nType = 3
.head 8 -  Call SalMessageBox(PalTraductMsg('BV38') , PalTraductMsg('MSG'), MB_Ok)
.head 7 +  Else
.head 8 -  Call SalMessageBox(PalTraductMsg('NO_PCTOT') , PalTraductMsg('MSG'), MB_Ok)
.head 7 -  Return (FALSE)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Zoeken")
.head 6 -  Call SalPicSet( hWndItem, resRetrieve , PIC_FormatBitmap )
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Fermer
.head 4 -  Window Location and Size
.head 5 -  Left: 4.583"
.head 5 -  Top: 1.655"
.head 5 -  Width:  1.7"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.298"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 5 +  On SAM_Create
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowText( hWndItem, "Sluiten")
.head 3 -  !
.head 3 +  Data Field: dfTitre
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 0.095"
.head 6 -  Width:  6.1"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 12
.head 5 -  Font Enhancement: Bold-Underline
.head 5 -  Text Color: Blue
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Child Table: tblListe
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.2"
.head 6 -  Top: 2.25"
.head 6 -  Width:  9.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.5"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 10000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colEntite
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colType
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colNo
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colDesc
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colGenere
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colDiskNonControle
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colTitre
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colLangue
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 -  Functions
.head 4 +  Window Variables
.head 5 -  Number: i
.head 5 -  Number: nNbCtrl
.head 5 -  String: lsCtrl
.head 4 +  Message Actions
.head 5 +  On SAM_FetchRowDone
.head 6 -  Set colLangue = gsLangueSoft
.head 6 -  Set colTitre= dfTitre
.head 6 -  Set lsCtrl = ''
.head 6 +  If colDiskNonControle != ''
.head 7 -  Set i = 1
.head 7 -  Set nNbCtrl = 0
.head 7 +  While i <= SalStrLength( colDiskNonControle )
.head 8 +  If SalStrMidX( colDiskNonControle, i-1, 1) = '1'
.head 9 +  If lsCtrl != ''
.head 10 -  Set lsCtrl = lsCtrl ||', '
.head 9 -  Set lsCtrl = lsCtrl || 'D'|| SalNumberToStrX( (i+1)/2 ,0)
.head 9 -  Set nNbCtrl = nNbCtrl + 1
.head 8 -  Set i = i + 2
.head 6 +  Else
.head 7 -  Set nNbCtrl = 0
.head 6 +  If nType = 1 or nType = 2
.head 7 +  If lsCtrl = ''
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Set colDiskNonControle = 'Geen enkele'
.head 8 +  Else
.head 9 -  Set colDiskNonControle = 'Aucune'
.head 7 +  Else
.head 8 -  Set colDiskNonControle = lsCtrl
.head 6 +  Else
.head 7 +  If SalStrUpperX( SalStrLeftX(tblListe.colGenere, 3)) = 'ECR'
.head 8 -  Set colGenere = 'Ok'
.head 8 +  If nNbCtrl = gnNbDiskBV and nType = 3
.head 9 -  Set colDiskNonControle = 'Ok'
.head 8 +  Else If nNbCtrl = gnNbDiskPCT and nType = 4
.head 9 -  Set colDiskNonControle = 'Ok'
.head 8 +  Else If nNbCtrl > 0
.head 9 +  If gsLangueSoft = 'N'
.head 10 -  Set colDiskNonControle = 'Gedeeltelijk'
.head 9 +  Else
.head 10 -  Set colDiskNonControle = 'Partiel'
.head 8 +  Else
.head 9 -  Set colDiskNonControle = ''
.head 7 +  Else If SalStrUpperX(SalStrLeftX(tblListe.colGenere, 3)) = 'ERR'
.head 8 -  Set colGenere = 'Err.'
.head 8 -  Set colDiskNonControle = ''
.head 7 +  Else If SalStrUpperX(SalStrLeftX(tblListe.colGenere, 4)) = 'PREP'
.head 8 -  Set colGenere = PalTraductMsg( 'EN_COURS') 
.head 8 -  Set colDiskNonControle = ''
.head 7 +  Else
.head 8 -  Set colDiskNonControle = ''
.head 2 +  Functions
.head 3 +  Function: PalPopulateTbl
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsTemp
.head 4 +  Actions
.head 5 +  If dfINS != ''
.head 6 -  Set lsTemp = ' AND A.Com_ins = :dfINS '
.head 5 +  Else
.head 6 -  Set lsTemp = ''
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsTemp = lsTemp || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If nType = 1
.head 6 -  Call SalHideWindow( tblListe.colGenere)
.head 6 -  Call SalTblPopulate( tblListe, ghSqlMain, "select A.com_ins, " || frmGenere.wsLabelCommune ||" , '', @right('000' || bv_no,3), bv_description, bv_identif ,   A.Can_ins || @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from bur_vote A, base_commune B 
	where A.com_ins = b.com_ins and B.Type = 'GE' and (bv_identif like '%0%' or bv_identif is null) and bv_statut like 'Ecr%' " || lsTemp ||"
	order by 7,3,4
	Into :tblListe.colIns,:tblListe.colEntite,:tblListe.colType,:tblListe.colNo,:tblListe.colDesc,:tblListe.colDiskNonControle " , TBL_FillAll )
.head 5 +  Else If nType = 2
.head 6 -  Call SalHideWindow( tblListe.colGenere)
.head 6 -  Call SalTblPopulate( tblListe, ghSqlMain, "select A.com_ins, " || frmGenere.wsLabelCommune ||" , pct_type, @right('00' || pct_no, 2 ), pct_description, pct_identif ,    A.Can_ins || @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from pc_tot A, base_commune B 
	where A.com_ins = b.com_ins and B.Type = 'GE' and (pct_identif like '%0%' or pct_identif is null) and pct_statut like 'Ecr%' " || lsTemp ||"
	order by 7,3,4
	Into :tblListe.colIns,:tblListe.colEntite,:tblListe.colType,:tblListe.colNo,:tblListe.colDesc,:tblListe.colDiskNonControle " , TBL_FillAll )
.head 5 +  Else If nType = 3
.head 6 -  Call SalShowWindow( tblListe.colGenere)
.head 6 -  Call SalTblPopulate( tblListe, ghSqlMain, "select A.com_ins, " || frmGenere.wsLabelCommune ||" , '', @right('000' || bv_no,3), bv_description, bv_identif , bv_statut,    A.Can_ins || @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from bur_vote A, base_commune B 
	where A.com_ins = b.com_ins and B.Type = 'GE'  " || lsTemp ||"
	order by 8,3,4
	Into :tblListe.colIns,:tblListe.colEntite,:tblListe.colType,:tblListe.colNo,:tblListe.colDesc,:tblListe.colDiskNonControle, :tblListe.colGenere " , TBL_FillAll )
.head 5 +  Else If nType = 4
.head 6 -  Call SalShowWindow( tblListe.colGenere)
.head 6 -  Call SalTblPopulate( tblListe, ghSqlMain, "select A.com_ins, " || frmGenere.wsLabelCommune ||" , pct_type, @right('00' || pct_no, 2 ), pct_description, pct_identif , pct_Statut,   A.Can_ins || @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from pc_tot A, base_commune B 
	where A.com_ins = b.com_ins and B.Type = 'GE'  " || lsTemp ||"
	order by 8,3,4
	Into :tblListe.colIns,:tblListe.colEntite,:tblListe.colType,:tblListe.colNo,:tblListe.colDesc,:tblListe.colDiskNonControle,:tblListe.colGenere " , TBL_FillAll )
.head 2 +  Window Parameters
.head 3 -  Number: nType
.head 2 +  Window Variables
.head 3 -  String: wsWhere
.head 3 -  String: wsIns
.head 3 -  String: wsType
.head 3 -  String: wsTemp
.head 3 -  Number: nError
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If nType = 1 or nType = 3
.head 5 -  Set wsType = 'GE'
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set wsTemp = 'STEMBUREAUS'
.head 5 +  Else
.head 6 -  Set wsTemp = 'BUREAUX DE VOTE'
.head 4 +  Else If nType = 2 or nType = 4
.head 5 -  Set wsType = 'CA'
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set wsTemp = 'TOTALISATIE PC'
.head 5 +  Else
.head 6 -  Set wsTemp = 'PC DE TOTALISATION'
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Speciale Lijsten - " || wsTemp)
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndItem, "Listes spéciales - " || wsTemp )
.head 3 +  On SAM_CreateComplete
.head 4 +  If nType = 1 or nType = 2
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set dfTitre = wsTemp|| ' niet geïdentificeerd'
.head 5 +  Else
.head 6 -  Set dfTitre = wsTemp || ' non controlés'
.head 4 +  Else
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Set dfTitre = wsTemp|| ' - Stand van aanmaken'
.head 5 +  Else
.head 6 -  Set dfTitre = wsTemp || ' - Etat d\'avancement'
.head 1 -  ! Recherche d'une commune
.head 1 +  Dialog Box: dlgCommune
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Communes
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Type of Dialog: Modal
.head 3 -  Allow Dock to Parent? No
.head 3 -  Docking Orientation: All
.head 3 -  Window Location and Size
.head 4 -  Left: Default
.head 4 -  Top: Default
.head 4 -  Width:  6.383"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 2.976"
.head 4 -  Height Editable? Yes
.head 3 -  Absolute Screen Location? Yes
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 3 -  Resizable? No
.head 3 -  Vertical Scroll? Yes
.head 3 -  Horizontal Scroll? Yes
.head 2 -  Description:
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 +  Data Field: dfComS
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? Yes
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.188"
.head 6 -  Top: 0.073"
.head 6 -  Width:  4.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Uppercase
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_AnyEdit
.head 6 -  Call tblCom.PalPopulateTbl()
.head 3 +  Child Table: tblCom
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.188"
.head 6 -  Top: 0.406"
.head 6 -  Width:  5.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.083"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 1000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colLabel
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: Libellé
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  4.383"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalSetWindowText( hWndItem, "Gemeente")
.head 5 +  Column: colIns
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title: INS
.head 6 -  Visible? Yes
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  0.763"
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 +  Message Actions
.head 7 +  On SAM_Create
.head 8 +  If gsLangueSoft = 'N'
.head 9 -  Call SalSetWindowText( hWndItem, "NIS")
.head 5 +  Column: colLabel2
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? No
.head 6 -  Editable? No
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 +  Functions
.head 5 +  Function: PalPopulateTbl
.head 6 -  Description:
.head 6 -  Returns
.head 6 -  Parameters
.head 6 -  Static Variables
.head 6 +  Local variables
.head 7 -  String: lsWhere
.head 7 -  String: lsTmp
.head 6 +  Actions
.head 7 +  If dfComS != ''
.head 8 -  Set lsWhere = " and (Nom_F like '"|| dfComS || "%' or Nom_n like '"|| dfComS || "%' ) "
.head 7 +  Else
.head 8 -  Set lsWhere = ""
.head 7 +  If gsRestrCom != ''
.head 8 -  Set lsWhere = lsWhere || " and  can_INS in (" || gsRestrCom || ") "
.head 7 +  If gsMateriel != ''
.head 8 -  Set lsWhere = lsWhere || " and " || gsMateriel 
.head 7 +  If gsLangueSoft = 'F'
.head 8 -  Set lsTmp = "@IF(@Length(nom_f),Nom_f , nom_n)"
.head 7 +  Else
.head 8 -  Set lsTmp = "@IF(@Length(nom_N),Nom_N, nom_F)"
.head 7 +  If sType = 'CA'
.head 8 -  Set lsWhere = lsWhere || " and COM_INS = CAN_Ins "
.head 7 +  If gsRestrRegion != ''
.head 8 -  Call SalTblPopulate( tblCom, ghSqlMain, "Select "|| lsTmp ||", Nom_N, Com_ins from base_commune where type = 'GE' and Region in " || gsRestrRegion || " " || lsWhere ||"
	Order by 1
	into :tblCom.colLabel, :tblCom.colLabel2, :tblCom.colIns ", TBL_FillAll )
.head 7 +  Else
.head 8 -  Call SalTblPopulate( tblCom, ghSqlMain, "Select "|| lsTmp ||", Nom_N, Com_ins from base_commune where type = 'GE' " || lsWhere ||"
	Order by 1
	into :tblCom.colLabel, :tblCom.colLabel2, :tblCom.colIns ", TBL_FillAll )
.head 4 -  Window Variables
.head 4 +  Message Actions
.head 5 +  On SAM_FetchRowDone
.head 6 +  If tblCom.colLabel = ''
.head 7 -  Set tblCom.colLabel = tblCom.colLabel2
.head 5 +  On SAM_Create
.head 6 -  Call SalTblSetTableFlags(hWndItem,TBL_Flag_SingleSelection,TRUE)
.head 6 -  Call PalPopulateTbl()
.head 5 +  On SAM_DoubleClick
.head 6 -  Call SalSendMsg( pbOk, SAM_Click, 0,0)
.head 3 +  Pushbutton: pbOk
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Ok
.head 4 -  Window Location and Size
.head 5 -  Left: 1.183"
.head 5 -  Top: 2.571"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 +  If SalTblAnyRows( tblCom, ROW_Selected, 0)
.head 7 -  Set sInsCom = tblCom.colIns
.head 7 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  Pushbutton: pbCancel
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title: Annuler
.head 4 -  Window Location and Size
.head 5 -  Left: 4.083"
.head 5 -  Top: 2.571"
.head 5 -  Width:  1.2"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.292"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  String: sType
.head 3 -  Receive String: sInsCom
.head 2 -  Window Variables
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Set sInsCom = ''
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndItem, "Gemeente")
.head 1 -  ! Fenetre pour les QRP de preview
.head 1 +  Form Window: frmPreview
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title: Visualisation & Impression
.head 2 -  Icon File:
.head 2 -  Accessories Enabled? Yes
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? No
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Maximized
.head 3 -  Maximizable? No
.head 3 -  Minimizable? No
.head 3 -  Allow Child Docking? No
.head 3 -  Docking Orientation: All
.head 3 -  System Menu? Yes
.head 3 -  Resizable? No
.head 3 -  Window Location and Size
.head 4 -  Left: -0.013"
.head 4 -  Top: -0.021"
.head 4 -  Width:  14.425"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 8.805"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Standard
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: 0.323"
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: 10
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Resizable? No
.head 3 +  Contents
.head 4 +  Pushbutton: pbSetup
.head 5 -  Class Child Ref Key: 0
.head 5 -  Class ChildKey: 0
.head 5 -  Class:
.head 5 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 5 -  Class DLL Name: QUIKPDLG.DLL
.head 5 -  Title: Setup
.head 5 -  Window Location and Size
.head 6 -  Left: 0.088"
.head 6 -  Top: 0.05"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.24"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Picture File Name:
.head 5 -  Picture Transparent Color: Gray
.head 5 -  Image Style: Single
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Button Appearance: Standard
.head 5 +  Message Actions
.head 6 +  On SAM_Click
.head 7 -  Call SalDisableWindow( hWndItem)
.head 7 -  Call SalPrtSetup( gsPrinterChoisi, gsDriverChoisi, gsPortChoisi , TRUE )
.head 7 -  Call SalPrtSetDefault( gsPrinterChoisi, gsDriverChoisi, gsPortChoisi  )
.head 7 -  Set dfPrinterDef = gsPrinterChoisi
.head 7 -  Set frmGenere.dfPrinterDefaut = gsPrinterChoisi
.head 7 -  Call SalEnableWindow( hWndItem)
.head 4 +  Pushbutton: pbClose
.head 5 -  Class Child Ref Key: 0
.head 5 -  Class ChildKey: 0
.head 5 -  Class:
.head 5 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 5 -  Class DLL Name: QUIKPDLG.DLL
.head 5 -  Title: Fermer
.head 5 -  Window Location and Size
.head 6 -  Left: 11.2"
.head 6 -  Top: 0.052"
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.24"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Picture File Name:
.head 5 -  Picture Transparent Color: Gray
.head 5 -  Image Style: Single
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Button Appearance: Standard
.head 5 +  Message Actions
.head 6 +  On SAM_Click
.head 7 -  Call SalSendMsg( hWndForm , SAM_Close, 0,0)
.head 6 +  On SAM_Create
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalSetWindowText( hWndItem, 'Sluiten' )
.head 4 +  Data Field: dfPrinterDef
.head 5 -  Class Child Ref Key: 0
.head 5 -  Class ChildKey: 0
.head 5 -  Class:
.head 5 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 5 -  Class DLL Name: QUIKPDLG.DLL
.head 5 -  Data
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Editable? No
.head 5 -  Display Settings
.head 6 -  Window Location and Size
.head 7 -  Left: 0.988"
.head 7 -  Top: 0.1"
.head 7 -  Width:  4.7"
.head 7 -  Width Editable? Yes
.head 7 -  Height: 0.208"
.head 7 -  Height Editable? Yes
.head 6 -  Visible? Yes
.head 6 -  Border? No
.head 6 -  Justify: Left
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Font Name: Default
.head 6 -  Font Size: Default
.head 6 -  Font Enhancement: Default
.head 6 -  Text Color: Red
.head 6 -  Background Color: Light Gray
.head 6 -  Input Mask: Unformatted
.head 5 +  Message Actions
.head 6 +  On SAM_Create
.head 7 -  Set dfPrinterDef = gsPrinterChoisi
.head 7 -  Call SalDisableWindow( hWndItem )
.head 4 +  ! Pushbutton: pbTableur
.winattr
.head 5 -  Class Child Ref Key: 0
.head 5 -  Class ChildKey: 0
.head 5 -  Class:
.head 5 -  Property Template: C:\p_lib32\LANGUE\QO_LANG.EXE,frmPropertiesLanguage,,,N,N
.head 5 -  Class DLL Name: QUIKPDLG.DLL
.head 5 -  Title: sur Tableur ...
.head 5 -  Window Location and Size
.head 6 -  Left: 5.786"
.head 6 -  Top: 0.073"
.head 6 -  Width:  1.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.24"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Keyboard Accelerator: (none)
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Picture File Name:
.head 5 -  Picture Transparent Color: Gray
.head 5 -  Image Style: Single
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Button Appearance: Standard
.end
.head 5 +  Message Actions 
.head 6 +  On SAM_Click
.head 7 -  Call VisWaitCursor(TRUE)
.head 7 -  Call SalFileOpen( lhFile, "C:\\TABLE.SLK", OF_Delete )
.head 7 -  Call ExportTableur( hTableau, "C:\\TABLE.SLK")
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Call ShellExecute( hWndForm, 'Open', "C:\\TABLE.SLK", ''
,''  , SW_SHOWMAXIMIZED  )
.head 6 +  On SAM_Create
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Call SalSetWindowText( hWndItem, 'Op een rekenblad ...' )
.head 2 -  Contents
.head 2 -  Functions
.head 2 +  Window Parameters
.head 3 -  Window Handle: hTableau
.head 2 +  Window Variables
.head 3 -  File Handle: lhFile
.head 3 -  String: wsPrinterChoisi
.head 3 -  String: wsDriverChoisi
.head 3 -  String: wsPortChoisi
.head 2 +  Message Actions
.head 3 +  On SAM_Close
.head 4 -  Call SalBringWindowToTop( hWndForm)
.head 3 +  On SAM_Create
.head 4 -  Call VisWaitCursor(TRUE)
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndForm, 'Visualisatie & Impressie' )
.head 4 -  Set gnError = NUMBER_Null
.head 3 +  On SAM_CreateComplete
.head 4 -  Call VisWaitCursor(FALSE)
.head 4 -  Call SalSetWindowLoc( hWndForm, 0,0)
.head 3 +  On PAM_Dirty
.head 4 -  !
.head 1 -  ! Fenetre de stat.
.head 1 +  Form Window: frmStat
.head 2 -  Class:
.head 2 -  Property Template:
.head 2 -  Class DLL Name:
.head 2 -  Title:
.head 2 -  Icon File: D:\Applic\LEG2007\Win_ico.ico
.data RESOURCE 2 0 1 2264674452
0000: FE0200008C010000 0000000000000000 0200A20001000120 3010000000E80200
0020: 0000160000002800 0000002000000040 0008000001040000 00A380020000FFFF
0040: 8F80000003008080 0080006800008080 800D008000C0C080 C0000000FF000003
0060: 00FFFF00FF006800 00FFFFFF0D00FF00 88887E8880000FFF FFF0088888887F00
0080: 6AFFFF0088BF80EB FFF0BE8800DDFF00 DE88801DFFF08888 DE88003EFF8888EE
00A0: 888090FFF00FFFFF 886E8800FF990000 FF88768880FFA0F0 00000FFF88B68800
00C0: FFAA0000FF883A88 80FFF0AB000F885A 8800FF00ED000F8C 8880FFFFF0AD00FF
00E0: 88AC8800FF00B600 0F88C280F0FFFFF0 9600FFFF885200F0 0F00000B0FFFFF88
0100: 8001FFF000F00000 0023FFFFFF8800DB F000050FFFFFF080 0FD70000D5FFFF00
0120: D9FFF000060FFFF0 080FFFD1FFF00000 8AFFFF00880059FF F0000F83FFF00888
0140: 80570000FF15FF00 8888005BF0000F17 08888880D3F00000 DAFF0088DA00F000
0160: D80FF00888E680FF FFED0088E500FFFF ECF00888DD80FFF6 00885B00FFF0F788
0180: 3B80FF00FB88B700 F03B880000FE00FF FFFFFFFFFFFFFFFF FFFFFFFFFF3F
.enddata
.head 2 -  Accessories Enabled? No
.head 2 -  Visible? Yes
.head 2 -  Display Settings
.head 3 -  Display Style? Default
.head 3 -  Visible at Design time? Yes
.head 3 -  Automatically Created at Runtime? No
.head 3 -  Initial State: Normal
.head 3 -  Maximizable? No
.head 3 -  Minimizable? Yes
.head 3 -  Allow Child Docking? No
.head 3 -  Docking Orientation: All
.head 3 -  System Menu? Yes
.head 3 -  Resizable? No
.head 3 -  Window Location and Size
.head 4 -  Left: 12.063"
.head 4 -  Top: 0.188"
.head 4 -  Width:  15.2"
.head 4 -  Width Editable? Yes
.head 4 -  Height: 8.226"
.head 4 -  Height Editable? Yes
.head 3 -  Form Size
.head 4 -  Width:  Default
.head 4 -  Height: Default
.head 4 -  Number of Pages: Dynamic
.head 3 -  Font Name: Default
.head 3 -  Font Size: Default
.head 3 -  Font Enhancement: Default
.head 3 -  Text Color: Default
.head 3 -  Background Color: Default
.head 2 -  Description:
.head 2 -  Named Menus
.head 2 -  Menu
.head 2 +  Tool Bar
.head 3 -  Display Settings
.head 4 -  Display Style? Default
.head 4 -  Location? Top
.head 4 -  Visible? Yes
.head 4 -  Size: Default
.head 4 -  Size Editable? Yes
.head 4 -  Docking Toolbar? No
.head 4 -  Toolbar Docking Orientation: Top | Bottom
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Resizable? No
.head 3 -  Contents
.head 2 +  Contents
.head 3 -  Background Text: Bureaux de vote:
.head 4 -  Resource Id: 7177
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.095"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.226"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Red
.head 4 -  Background Color: Light Periwinkle
.head 3 +  Data Field: dfBV
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.283"
.head 6 -  Top: 0.071"
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfBV, 'Stembureaus:' )
.head 3 +  Data Field: dfBV_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.483"
.head 6 -  Top: 0.095"
.head 6 -  Width:  0.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Light Periwinkle
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 -  Background Text: PC de totalisation:
.head 4 -  Resource Id: 7178
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.083"
.head 5 -  Top: 0.429"
.head 5 -  Width:  2.1"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.226"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Justify: Right
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold-Underline
.head 4 -  Text Color: Dark Green
.head 4 -  Background Color: Light Periwinkle
.head 3 +  Data Field: dfPCT
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 2.283"
.head 6 -  Top: 0.405"
.head 6 -  Width:  1.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Call SalSetWindowLabelText( dfPCT, 'Totalisatie PC:' )
.head 3 +  Data Field: dfPCT_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.483"
.head 6 -  Top: 0.429"
.head 6 -  Width:  0.7"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Default
.head 5 -  Background Color: Light Periwinkle
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Custom Control: ccBV_Glob
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 4.183"
.head 6 -  Top: 0.071"
.head 6 -  Width:  10.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 -  Message Actions
.head 3 +  Custom Control: ccPCT_Glob
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 4.183"
.head 6 -  Top: 0.405"
.head 6 -  Width:  10.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? Class Default
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Class Default
.head 5 -  Font Size: Class Default
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 -  Message Actions
.head 3 -  !
.head 3 +  Pushbutton: pb1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 1.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 1)
.head 3 +  Custom Control: ccP1_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df1_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 1.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP1_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 1.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df1_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 1.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df1_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 1.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 1 )
.head 3 +  Data Field: df1_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 1.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 1 )
.head 3 +  Picture: pic1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 1.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 1.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 2)
.head 3 +  Custom Control: ccP2_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 1.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df2_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 1.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP2_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 1.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df2_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 1.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df2_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 1.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 2 )
.head 3 +  Data Field: df2_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 1.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 2 )
.head 3 +  Picture: pic2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 1.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 2.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 3)
.head 3 +  Custom Control: ccP3_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 2.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df3_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 2.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP3_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 2.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df3_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 2.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df3_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 2.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 3 )
.head 3 +  Data Field: df3_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 2.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 3 )
.head 3 +  Picture: pic3
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 2.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 2.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 4)
.head 3 +  Custom Control: ccP4_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 2.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df4_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 2.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP4_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 2.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df4_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 2.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df4_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 2.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 4 )
.head 3 +  Data Field: df4_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 2.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 4 )
.head 3 +  Picture: pic4
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 2.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 3.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 5)
.head 3 +  Custom Control: ccP5_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 3.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df5_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 3.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP5_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 3.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df5_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 3.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df5_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 3.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 5 )
.head 3 +  Data Field: df5_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 3.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 5 )
.head 3 +  Picture: pic5
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb6
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 3.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 6)
.head 3 +  Custom Control: ccP6_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 3.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df6_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 3.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP6_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 3.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df6_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 3.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df6_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 3.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 6 )
.head 3 +  Data Field: df6_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 3.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 6 )
.head 3 +  Picture: pic6
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 3.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb7
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 4.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 7)
.head 3 +  Custom Control: ccP7_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 4.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df7_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 4.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP7_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 4.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df7_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 4.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df7_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 4.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 7 )
.head 3 +  Data Field: df7_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 4.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 7 )
.head 3 +  Picture: pic7
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 4.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb8
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 4.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 8)
.head 3 +  Custom Control: ccP8_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 4.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df8_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 4.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP8_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 4.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df8_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 4.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df8_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 4.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 8 )
.head 3 +  Data Field: df8_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 4.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 8 )
.head 3 +  Picture: pic8
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 4.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb9
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 5.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 9)
.head 3 +  Custom Control: ccP9_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 5.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df9_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 5.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP9_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 5.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df9_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 5.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df9_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 5.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 9)
.head 3 +  Data Field: df9_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 5.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 9 )
.head 3 +  Picture: pic9
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 5.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb10
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 5.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 10)
.head 3 +  Custom Control: ccP10_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 5.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df10_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 5.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP10_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 5.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df10_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 5.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df10_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 5.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 10 )
.head 3 +  Data Field: df10_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 5.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 10 )
.head 3 +  Picture: pic10
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 5.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb11
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 6.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 11)
.head 3 +  Custom Control: ccP11_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 6.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df11_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 6.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP11_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 6.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df11_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 6.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df11_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 6.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 11)
.head 3 +  Data Field: df11_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 6.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 11)
.head 3 +  Picture: pic11
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 6.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb12
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 6.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 12)
.head 3 +  Custom Control: ccP12_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 6.488"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df12_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 6.488"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP12_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 6.655"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df12_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 6.655"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df12_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 6.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 12 )
.head 3 +  Data Field: df12_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 6.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 12 )
.head 3 +  Picture: pic12
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 6.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb13
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.183"
.head 5 -  Top: 7.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 13)
.head 3 +  Custom Control: ccP13_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 7.471"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df13_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 7.471"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP13_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 0.183"
.head 6 -  Top: 7.638"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df13_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 3.683"
.head 6 -  Top: 7.638"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df13_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 7.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 13)
.head 3 +  Data Field: df13_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 4.583"
.head 6 -  Top: 7.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 13 )
.head 3 +  Picture: pic13
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 3.883"
.head 5 -  Top: 7.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Pushbutton: pb14
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 5.583"
.head 5 -  Top: 7.071"
.head 5 -  Width:  4.9"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.4"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPb[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 5 +  On SAM_Click
.head 6 -  Call SalSendMsg( hWndForm, SAM_Timer, 5, 14)
.head 3 +  Custom Control: ccP14_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 7.471"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df14_Bv
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 7.471"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BV[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Custom Control: ccP14_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 5.583"
.head 6 -  Top: 7.638"
.head 6 -  Width:  3.5"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.179"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? Class Default
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: Light Green
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnPCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df14_Pct
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.083"
.head 6 -  Top: 7.638"
.head 6 -  Width:  0.9"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_PCT[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 3 +  Data Field: df14_Bv_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 7.488"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvThHandle( hWndItem, 14 )
.head 3 +  Data Field: df14_Pct_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 9.983"
.head 6 -  Top: 7.655"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Dark Green
.head 5 -  Background Color: 3D Face Color
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalPctThHandle( hWndItem, 14 )
.head 3 +  Picture: pic14
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.283"
.head 5 -  Top: 7.488"
.head 5 -  Width:  0.5"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: No Border
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: 3D Face Color
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  ! Set wnPic[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call PalPicHandle( hWndItem )
.head 3 -  !
.head 3 +  Data Field: dfTitre
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 0.023"
.head 6 -  Top: 0.71"
.head 6 -  Width:  10.667"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.357"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: 14
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Blue
.head 5 -  Background Color: Maize
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 +  If gsLangueSoft = 'N'
.head 7 -  Set dfTitre = 'De kantons'
.head 6 +  Else
.head 7 -  Set dfTitre = 'Les cantons'
.head 3 -  !
.head 3 +  Pushbutton: pb1c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 1.512"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = 1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP1_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 1.845"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df1_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 1.845"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df1_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 1.845"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 1 )
.head 3 +  Pushbutton: pb2c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 2.179"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP2_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 2.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df2_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 2.512"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df2_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 2.512"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 2 )
.head 3 +  Pushbutton: pb3c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 2.845"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP3_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 3.179"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df3_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 3.179"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df3_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 3.179"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 3 )
.head 3 +  Pushbutton: pb4c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 3.512"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP4_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 3.845"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.167"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df4_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 3.845"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df4_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 3.845"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 4 )
.head 3 +  Pushbutton: pb5c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 4.179"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP5_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 4.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df5_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 4.512"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df5_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 4.512"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 5 )
.head 3 +  Pushbutton: pb6c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 4.845"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP6_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 5.179"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df6_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 5.179"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df6_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 5.179"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 6 )
.head 3 +  Pushbutton: pb7c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 5.512"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP7_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 5.845"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df7_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 5.845"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df7_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 5.845"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 7 )
.head 3 +  Pushbutton: pb8c
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.25"
.head 5 -  Top: 6.179"
.head 5 -  Width:  3.3"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.333"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Bold
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Light Gray
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set nIndice = nIndice+1
.head 6 -  Set wnPbc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Custom Control: ccP8_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class: cMeter
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  DLL Name:
.head 5 -  MS Windows Class Name:
.head 5 -  Style:  Class Default
.head 5 -  ExStyle:  Class Default
.head 5 -  Title:
.head 5 -  Window Location and Size
.head 6 -  Left: 11.25"
.head 6 -  Top: 6.512"
.head 6 -  Width:  2.0"
.head 6 -  Width Editable? Class Default
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Class Default
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Etched Border? Class Default
.head 5 -  Hollow? Class Default
.head 5 -  Vertical Scroll? Class Default
.head 5 -  Horizontal Scroll? Class Default
.head 5 -  Tab Stop? Class Default
.head 5 -  Tile To Parent? Class Default
.head 5 -  Font Name: Arial Black
.head 5 -  Font Size: 10
.head 5 -  Font Enhancement: Class Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Salmon
.head 5 -  DLL Settings
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Set wnBVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df8_Bvc
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 13.25"
.head 6 -  Top: 6.512"
.head 6 -  Width:  0.8"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Dark Red
.head 5 -  Background Color: Light Green
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Set wnDf_BVc[nIndice] = SalWindowHandleToNumber( hWndItem )
.head 6 -  Call SalHideWindow( hWndItem )
.head 3 +  Data Field: df8_Bvc_Th
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 14.05"
.head 6 -  Top: 6.512"
.head 6 -  Width:  0.5"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.18"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Light Green
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 6 -  Call PalBvcThHandle( hWndItem, 8 )
.head 3 -  Frame
.head 4 -  Resource Id: 7179
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 0.023"
.head 5 -  Top: 0.021"
.head 5 -  Width:  14.767"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.667"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Border Color: Default
.head 4 -  Background Color: Light Periwinkle
.head 3 -  Frame
.head 4 -  Resource Id: 7180
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Window Location and Size
.head 5 -  Left: 11.183"
.head 5 -  Top: 0.821"
.head 5 -  Width:  3.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.583"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Corners: Round
.head 4 -  Border Style: Raised-Shadow
.head 4 -  Border Thickness: 2
.head 4 -  Border Color: Jade
.head 4 -  Background Color: Teal
.head 3 +  Data Field: dfTitre2_1
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 11.283"
.head 6 -  Top: 0.929"
.head 6 -  Width:  3.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.226"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Maize
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Data Field: dfTitre2_2
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 11.283"
.head 6 -  Top: 1.095"
.head 6 -  Width:  3.2"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.25"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? No
.head 5 -  Justify: Center
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Bold
.head 5 -  Text Color: Maize
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Pushbutton: pbPlay
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.183"
.head 5 -  Top: 0.748"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.278"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set wbPlay = TRUE
.head 6 -  Call SalEnableWindow( pbPause )
.head 6 -  Call SalDisableWindow( pbPlay )
.head 6 -  Call SalSetFocus( SalNumberToWindowHandle( wnPb[nIndice] ) )
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( pbPlay )
.head 6 -  Call SalPicSet( hWndItem, resPlay, PIC_FormatBitmap )
.head 3 +  Pushbutton: pbPause
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 9.683"
.head 5 -  Top: 0.748"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.278"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Set wbPlay = FALSE
.head 6 -  Call SalDisableWindow( pbPause )
.head 6 -  Call SalEnableWindow( pbPlay )
.head 6 -  Call SalSetFocus( SalNumberToWindowHandle( wnPb[nIndice] ) )
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPause, PIC_FormatBitmap )
.head 3 +  Pushbutton: pbPrint
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Title:
.head 4 -  Window Location and Size
.head 5 -  Left: 10.183"
.head 5 -  Top: 0.748"
.head 5 -  Width:  0.4"
.head 5 -  Width Editable? Yes
.head 5 -  Height: 0.278"
.head 5 -  Height Editable? Yes
.head 4 -  Visible? Yes
.head 4 -  Keyboard Accelerator: (none)
.head 4 -  Font Name: Default
.head 4 -  Font Size: Default
.head 4 -  Font Enhancement: Default
.head 4 -  Picture File Name:
.head 4 -  Picture Transparent Color: None
.head 4 -  Image Style: Single
.head 4 -  Text Color: Default
.head 4 -  Background Color: Default
.head 4 -  Button Appearance: Standard
.head 4 +  Message Actions
.head 5 +  On SAM_Click
.head 6 -  Call VisWaitCursor(TRUE)
.head 6 -  Call PalChargeDonneeReport( )
.head 6 +  If SalTblAnyRows( tblReport, 0, 0 )
.head 7 -  Call SalCreateWindow( frmPreview, hWndForm, hWndForm.tblReport )
.head 7 -  Call VisWaitCursor(FALSE)
.head 7 -  Set nError = NUMBER_Null
.head 7 -  ! Call SalReportTableView  ( tblReport, frmPreview, gsPathRpt || "LIST04.QRP" , nError)
.head 7 -  Set wsTitre = ''
.head 7 -  Set wnBVT = NUMBER_Null
.head 7 -  Set wnBVTOk = NUMBER_Null
.head 7 -  Set wnBVTTh = NUMBER_Null
.head 7 -  Set wnPCTT = NUMBER_Null
.head 7 -  Set wnPCTTOk = NUMBER_Null
.head 7 -  Set wnPCTTTh = NUMBER_Null
.head 7 -  Set wsCanton = ''
.head 7 -  Set wnBVca = NUMBER_Null
.head 7 -  Set wnBVcOk = NUMBER_Null
.head 7 -  Set wnBVcTh = NUMBER_Null
.head 7 -  Set wnPCTca = NUMBER_Null
.head 7 -  Set wnPCTcaOk = NUMBER_Null
.head 7 -  Set wnPCTcaTh = NUMBER_Null
.head 7 -  Set wsCommune = ''
.head 7 -  Set wnBVco = NUMBER_Null
.head 7 -  Set wnBVcoOk = NUMBER_Null
.head 7 -  Set wnBVcoTh =  NUMBER_Null
.head 7 -  Set wsLangue=''
.head 7 -  Set lsPhoto = ''
.head 7 -  Set lsCtrlBV = ''
.head 7 -  Set lsCtrlPcTot = ''
.head 7 -  Call SalReportView( hWndForm, frmPreview, gsPathRpt || "LIST04.QRP",
	
':wsTitre,:wnBVT,:wnBVTOk,:wnBVTTh,:wnPCTT,:wnPCTTOk,:wnPCTTTh,:wsCanton,:wnBVca,:wnBVcOk,:wnBVcTh,:wnPCTca,:wnPCTcaOk,:wnPCTcaTh,:wsCommune,:wnBVco,:wnBVcoOk,:wnBVcoTh,:wsLangue,:lsPhoto,:lsCtrlBV,:lsCtrlPcTot'
	, 'Titre,Bv_Tot,Bv_ok_Tot,Bv_Tot_Th,Pct_tot,Pct_Ok_Tot,Pct_Tot_Th,Canton,Bv_Can,Bv_Can_ok,Bv_Can_Th,Pct_can,Pct_can_Ok,Pct_can_Th,Commune,Bv_Com,Bv_Com_ok,Bv_Com_Th,Langue,Photo,CtrlBV,CtrlPcTot' , nError )
.head 6 -  Call VisWaitCursor(FALSE)
.head 5 +  On SAM_Create
.head 6 -  Call SalPicSet( hWndItem, resPrint, PIC_FormatBitmap )
.head 3 +  Child Table: tblReport
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 15.0"
.head 6 -  Top: 0.167"
.head 6 -  Width:  17.083"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 2.571"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? No
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Default
.head 5 -  View: Table
.head 5 -  Allow Row Sizing? No
.head 5 -  Lines Per Row: Default
.head 4 -  Memory Settings
.head 5 -  Maximum Rows in Memory: 2000
.head 5 -  Discardable? Yes
.head 4 +  Contents
.head 5 +  Column: colTitre
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBv
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvOk
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvTh
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPct
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPctOk
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPctTh
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colInsCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvCantonOk
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvCantonTh
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPctCanton
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPctCantonOk
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colPctCantonTh
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colCommune
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvCom
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvComOk
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colBvComTh
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: Number
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 5 +  Column: colLangue
.head 6 -  Class Child Ref Key: 0
.head 6 -  Class ChildKey: 0
.head 6 -  Class:
.head 6 -  Property Template:
.head 6 -  Class DLL Name:
.head 6 -  Title:
.head 6 -  Visible? Yes
.head 6 -  Editable? Yes
.head 6 -  Maximum Data Length: Default
.head 6 -  Data Type: String
.head 6 -  Justify: Left
.head 6 -  Width:  Default
.head 6 -  Width Editable? Yes
.head 6 -  Format: Unformatted
.head 6 -  Country: Default
.head 6 -  Input Mask: Unformatted
.head 6 -  Cell Options
.head 7 -  Cell Type? Standard
.head 7 -  Multiline Cell? No
.head 7 -  Cell DropDownList
.head 8 -  Sorted? Yes
.head 8 -  Vertical Scroll? Yes
.head 8 -  Auto Drop Down? No
.head 8 -  Allow Text Editing? Yes
.head 7 -  Cell CheckBox
.head 8 -  Check Value:
.head 8 -  Uncheck Value:
.head 8 -  Ignore Case? Yes
.head 6 -  List Values
.head 6 -  Message Actions
.head 4 -  Functions
.head 4 -  Window Variables
.head 4 -  Message Actions
.head 3 +  Data Field: dfBack
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Data
.head 5 -  Maximum Data Length: Default
.head 5 -  Data Type: String
.head 5 -  Editable? No
.head 4 -  Display Settings
.head 5 -  Window Location and Size
.head 6 -  Left: 11.083"
.head 6 -  Top: 1.405"
.head 6 -  Width:  3.6"
.head 6 -  Width Editable? Yes
.head 6 -  Height: 0.75"
.head 6 -  Height Editable? Yes
.head 5 -  Visible? Yes
.head 5 -  Border? Yes
.head 5 -  Justify: Left
.head 5 -  Format: Unformatted
.head 5 -  Country: Default
.head 5 -  Font Name: Default
.head 5 -  Font Size: Default
.head 5 -  Font Enhancement: Default
.head 5 -  Text Color: Default
.head 5 -  Background Color: Teal
.head 5 -  Input Mask: Unformatted
.head 4 +  Message Actions
.head 5 +  On SAM_Create
.head 6 -  Call SalDisableWindow( hWndItem )
.head 3 +  Picture: PicCtrl
.head 4 -  Class Child Ref Key: 0
.head 4 -  Class ChildKey: 0
.head 4 -  Class:
.head 4 -  Property Template:
.head 4 -  Class DLL Name:
.head 4 -  Window Location and Size
.head 5 -  Left: Default
.head 5 -  Top: Default
.head 5 -  Width:  Default
.head 5 -  Width Editable? Yes
.head 5 -  Height: Default
.head 5 -  Height Editable? Yes
.head 4 -  Visible? No
.head 4 -  Editable? No
.head 4 -  File Name:
.head 4 -  Storage: External
.head 4 -  Picture Transparent Color: None
.head 4 -  Fit: Size for Best Fit
.head 4 -  Scaling
.head 5 -  Width:  100
.head 5 -  Height:  100
.head 4 -  Corners: Square
.head 4 -  Border Style: Solid
.head 4 -  Border Thickness: 1
.head 4 -  Tile To Parent? No
.head 4 -  Border Color: Default
.head 4 -  Background Color: Default
.head 4 -  Message Actions
.head 2 +  Functions
.head 3 +  Function: PalDtmCanton
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Number: nType
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsCanton
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 -  Set lsSelect = "Select " || frmGenere.wsLabelCommune || " , can_ins from base_commune A
	where A.type = 'CA' and exists (select com_ins from base_commune B where A.Can_ins = B.Can_Ins and type ='GE' and vote_el = 1 and " || gsMateriel || ") "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect || "
	Order by 2
	into :lsCanton,:wsInsCan[i] ")
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Call SalEnableWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( wnPb[i] ), lsCanton || ' ('||wsInsCan[i]||')'  )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnBV[i] ) )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnPCT[i] ) )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnDf_BV[i] ) )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnDf_PCT[i] ) )
.head 6 -  Call SalShowWindow( wnBvTh[i]  )
.head 6 -  Call SalShowWindow( wnPctTh[i]  )
.head 6 -  Set i = i + 1
.head 5 +  ! If i > 3
.head 6 -  Call SalSetWindowSize( frmStat, nL, nH + (0.980 * SalNumberRound( (i-2) /2 - 0.49 )) )
.head 5 +  While i <= 14
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Call SalDisableWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnBV[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnPCT[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnDf_BV[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnDf_PCT[i] ) )
.head 6 -  Call SalHideWindow( wnPic[i]  )
.head 6 -  Call SalHideWindow( wnBvTh[i]  )
.head 6 -  Call SalHideWindow( wnPctTh[i]  )
.head 6 -  Set i = i + 1
.head 5 +  If nType = 0
.head 6 -  Call SalGetWindowSize( frmStat, nL, nH )
.head 6 -  Call SalGetWindowSize( dfBack, x, y )
.head 6 -  Call SalSetWindowSize( dfBack, x , nH-4 )
.head 3 +  Function: PalEtatGenTh
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  ! BV
.head 5 -  Set lsSelect = "select sum(NB_BV) from base_commune A where type = 'GE' and NB_BV is not null 
	and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ")  and A.Vote_El = :gnTypeVote "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect = lsSelect || " into :dfBV_Th "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Set dfBV_Th = "(" || dfBV_Th ||")"
.head 5 -  ! PC_Tot
.head 5 -  Set lsSelect = "select sum(CAN_NB_PC_TOT) from base_commune A where type = 'CA' and CAN_NB_PC_TOT is not null 
	and  exists( Select B.Can_ins from Base_commune B where A.Can_Ins = B.Can_ins and VOTE_EL = :gnTypeVote and "|| gsMateriel || ") "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect = lsSelect || " into :dfPCT_Th "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Set dfPCT_Th = "(" || dfPCT_Th ||")"
.head 3 +  Function: PalEtatGen
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Call PalEtatGenTh(  )
.head 5 -  ! Bureau de Votes
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Call frmStat.ccBV_Glob.SetProgress (0)
.head 5 +  If lnNbBV != 0
.head 6 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and @Upper(Bv_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 +  If gsRestrCom != ''
.head 7 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 6 +  If gsRestrRegion != ''
.head 7 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 6 -  Set lsSelect =  lsSelect ||  " into :lnNbBV_ok "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call frmStat.ccBV_Glob.SetProgress ( lnNbBV_ok / lnNbBV * 100)
.head 6 -  !
.head 6 -  Set dfBV = SalNumberToStrX( lnNbBV_ok,0) ||" / " || SalNumberToStrX( lnNbBV,0)
.head 6 -  ! Pc Totalisation
.head 6 -  Set lsSelect = "Select count(*) from Pc_tot A, Base_commune B where Pct_no like '%' and A.Can_ins = B.Can_ins and B.Type = 'CA' 
	and exists (Select C.can_ins from Bur_vote C where C.BV_no like '%' and A.Can_ins = C.Can_ins ) "
.head 6 +  If gsRestrCom != ''
.head 7 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 6 +  If gsRestrRegion != ''
.head 7 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 6 -  Set lsSelect =  lsSelect || " into :lnNbPCT "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call frmStat.ccPCT_Glob.SetProgress (0)
.head 6 +  If lnNbPCT != 0
.head 7 -  Set lsSelect = "Select count(*) from Pc_tot  A, Base_commune B where Pct_no like '%' and @Upper(Pct_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 7 +  If gsRestrCom != ''
.head 8 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 7 +  If gsRestrRegion != ''
.head 8 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 7 -  Set lsSelect = lsSelect || " into :lnNbPCT_ok "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call frmStat.ccPCT_Glob.SetProgress ( lnNbPCT_ok / lnNbPCT * 100)
.head 6 -  Set dfPCT = SalNumberToStrX( lnNbPCT_ok,0) ||" / " || SalNumberToStrX( lnNbPCT,0)
.head 6 -  ! Par canton
.head 6 -  Set wbActif = FALSE
.head 6 -  Set i = 1
.head 6 +  While i <= 14
.head 7 +  If SalIsWindowEnabled( SalNumberToWindowHandle( wnPb[i] ) )
.head 8 -  Set wbActif = TRUE
.head 7 -  Set i = i + 1
.head 6 -  !
.head 6 -  !
.head 6 -  ! Par canton
.head 6 +  If wbActif
.head 7 -  Set i = 1
.head 7 +  While i <= 14
.head 8 +  If SalIsWindowVisible( SalNumberToWindowHandle( wnPb[i] ) )
.head 9 -  Call PalEtatIndiv( wsInsCan[i] , i )
.head 8 -  Set i = i + 1
.head 7 -  !
.head 3 +  Function: PalEtatIndivTh
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsNbBV
.head 5 -  String: lsNbPCT
.head 4 +  Actions
.head 5 -  ! BV
.head 5 -  Set lsSelect = "select sum(NB_BV) from base_commune A where type = 'GE' and can_ins = :sIns and Vote_el = :gnTypeVote "
.head 5 -  Set lsSelect = lsSelect || " into :lsNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Call SalSetWindowText( wnBvTh[i] , "(" || lsNbBV ||")" )
.head 5 -  ! PC_Tot
.head 5 -  Set lsSelect = "select sum(CAN_NB_PC_TOT) from base_commune A where type = 'CA' and can_ins = :sIns "
.head 5 -  Set lsSelect = lsSelect || " into :lsNbPCT "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Call SalSetWindowText( wnPctTh[i] , "(" || lsNbPCT ||")" )
.head 3 +  Function: PalEtatIndiv
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_V
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Window Handle: hWnd
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindowText , COLOR_Black )
.head 5 -  Set wnEtat[i] = 0
.head 5 -  Call PalEtatIndivTh( sIns, i )
.head 5 -  ! Bureau de Votes
.head 5 -  Set hWnd = SalNumberToWindowHandle( wnBV[i] )
.head 5 -  Call hWnd.cMeter.SetProgress ( 0)
.head 5 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_BV[i] ),'---'  )
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_Ins = :sIns and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_Ins = :sIns and bv_valide = 1 and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV_V "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 +  If lnNbBV != 0
.head 6 -  Call SalEnableWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and A.Can_Ins = :sIns and @Upper(Bv_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 -  Set lsSelect =  lsSelect ||  " into :lnNbBV_ok "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call hWnd.cMeter.SetProgress ( lnNbBV_ok / lnNbBV * 100)
.head 6 +  If lnNbBV_V != lnNbBV
.head 7 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindow, COLOR_Salmon )
.head 7 -  Set wnEtat[i] = -1
.head 6 +  Else If lnNbBV_ok = lnNbBV
.head 7 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindow, COLOR_LightGreen )
.head 7 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindowText , COLOR_DarkGreen )
.head 7 -  Set wnEtat[i] = 1
.head 6 +  Else
.head 7 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindow, COLOR_LightAqua )
.head 7 -  Set wnEtat[i] = 0
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_BV[i] ), SalNumberToStrX(lnNbBV_ok,0) || '/' || SalNumberToStrX(lnNbBV,0)  )
.head 5 +  Else
.head 6 -  Call SalDisableWindow( SalNumberToWindowHandle( wnPb[i] ) )
.head 6 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindow, COLOR_LightGray )
.head 6 -  Set wnEtat[i] = -2
.head 5 -  ! Pc Totalisation
.head 5 -  Set hWnd = SalNumberToWindowHandle( wnPCT[i] )
.head 5 -  Call hWnd.cMeter.SetProgress ( 0)
.head 5 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_PCT[i] ), '---'  )
.head 5 +  If lnNbBV > 0 and wnEtat[i] >= -1
.head 6 -  Set lsSelect = "Select count(*) from Pc_tot A, Base_commune B where Pct_no like '%' and A.Can_Ins = :sIns and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 -  Set lsSelect =  lsSelect || " into :lnNbPCT "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lnNbPCT != 0
.head 7 -  Set lsSelect = "Select count(*) from Pc_tot  A, Base_commune B where Pct_no like '%' and A.Can_Ins = :sIns and @Upper(Pct_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 7 -  Set lsSelect = lsSelect || " into :lnNbPCT_ok "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 -  Call hWnd.cMeter.SetProgress ( lnNbPCT_ok / lnNbPCT * 100)
.head 7 +  If lnNbPCT_ok = lnNbPCT
.head 8 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindow, COLOR_DarkGreen )
.head 8 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[i] ), COLOR_IndexWindowText , COLOR_LightGreen )
.head 8 -  Set wnEtat[i] = 2
.head 8 -  Set nRet = PalCtrlCanton( SalStrToNumber(sIns) )
.head 8 +  If nRet > 0
.head 9 -  Call SalHideWindow( SalNumberToWindowHandle( wnDf_BV[i] ) )
.head 9 -  Call SalHideWindow( SalNumberToWindowHandle( wnDf_PCT[i] ) )
.head 9 +  If nRet = 2
.head 10 -  Call SalPicSet( wnPic[i], resOk, PIC_FormatBitmap )
.head 9 -  Call SalShowWindow( wnPic[i] )
.head 7 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_PCT[i] ), SalNumberToStrX(lnNbPCT_ok,0) || '/' || SalNumberToStrX(lnNbPCT,0)  )
.head 5 -  !
.head 3 +  Function: PalClick
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsCanton
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 +  While i <= 14
.head 6 +  If SalIsWindowEnabled( SalNumberToWindowHandle( wnPb[i] ) )
.head 7 -  Call SalSendMsg( SalNumberToWindowHandle( wnPb[i] ), SAM_Click, 0,0 )
.head 6 -  Set i = i + 1
.head 3 +  Function: PalPicHandle
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWnd
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNom
.head 5 -  Number: nI
.head 4 +  Actions
.head 5 -  Set lsNom =  SalGetItemNameX( hWnd )
.head 5 -  Set nI = SalStrToNumber( SalStrMidX( lsNom, 3, SalStrLength(lsNom)) )
.head 5 -  Set wnPic[nI] = hWnd
.head 5 -  Call SalPicSet(  hWnd , resOkBV, PIC_FormatBitmap )
.head 5 -  Call SalHideWindow( hWnd )
.head 3 +  Function: PalBvThHandle
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWnd
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNom
.head 5 -  Number: nI
.head 4 +  Actions
.head 5 -  Set wnBvTh[i] = hWnd
.head 3 +  Function: PalPctThHandle
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWnd
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNom
.head 5 -  Number: nI
.head 4 +  Actions
.head 5 -  Set wnPctTh[i] = hWnd
.head 3 +  Function: PalCtrlCanton
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  Number: nIns
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nRet
.head 4 +  Actions
.head 5 +  If NOT frmGenere.PalDtmCtrl( 'BV', nIns, 'CAN' )
.head 6 -  Set nRet = 1
.head 6 +  If NOT frmGenere.PalDtmCtrl( 'PCT', nIns, 'CAN' )
.head 7 -  Set nRet = 2
.head 6 -  Return nRet
.head 5 -  Return 0 
.head 3 -  !
.head 3 +  Function: PalActiveCommune
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 -  Local variables
.head 4 +  Actions
.head 5 -  Set sInsCanton = frmStat.wsInsCan[ frmStat.nIndice]
.head 5 -  Call PalDtmCommune()
.head 5 -  Call PalEtatGen_C()
.head 3 +  Function: PalDtmCommune
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsCanton
.head 5 -  String: lsTmp
.head 5 -  Number: i
.head 5 -  Number: nL2
.head 4 +  Actions
.head 5 -  Call SalBringWindowToTop(SalNumberToWindowHandle( wnPbc[i] ) )
.head 5 -  Set i = 1
.head 5 -  Set lsSelect = "Select " || frmGenere.wsLabelCommune || " , com_ins, @decode( com_ins , can_ins, '', com_ins)  from base_commune A
	where A.type = 'GE' and can_ins = :sInsCanton and A.Vote_El = :gnTypeVote "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect || "
	Order by 3
	into :lsCanton,:wsInsCom[i] , :lsTmp")
.head 5 +  While SqlFetchNext( ghSqlMain, Btmp)
.head 6 +  If i = 1
.head 7 +  If gsLangueSoft = 'N'
.head 8 -  Set dfTitre2_1 = 'Kanton van'
.head 7 +  Else
.head 8 -  Set dfTitre2_1 = 'Canton de'
.head 7 -  Set dfTitre2_2 = lsCanton
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnPbc[i] ) )
.head 6 -  Call SalBringWindowToTop(SalNumberToWindowHandle( wnPbc[i] ) )
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( wnPbc[i] ), lsCanton )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnBVc[i] ) )
.head 6 -  Call SalBringWindowToTop(SalNumberToWindowHandle( wnBVc[i] ) )
.head 6 -  Call SalShowWindow( SalNumberToWindowHandle( wnDf_BVc[i] ) )
.head 6 -  Call SalBringWindowToTop(SalNumberToWindowHandle( wnDf_BVc[i] ) )
.head 6 -  Call SalShowWindow( wnBvcTh[i]  )
.head 6 -  Call SalBringWindowToTop( wnBvcTh[i] )
.head 6 -  Set i = i + 1
.head 5 -  !
.head 5 -  Call SalSetWindowSize( dfBack, x , (i-1) * 0.667 + 0.1  )
.head 5 -  !
.head 5 +  ! If (0.700 *  (i-2) ) + 2.7 > nH
.head 6 -  Call SalSetWindowSize( frmStat, nL,  (0.700 *  (i-2) ) + 2.7 )
.head 6 -  Set nH = (0.700 *  (i-2) ) + 2.7 
.head 5 +  ! Else
.head 6 -  Call SalSetWindowSize( frmStat, nL, nH  )
.head 5 -  Call SalSetWindowSize( frmStat, nL, nH  )
.head 5 -  ! Call SalGetWindowSize( frmStat, nL2, nH )
.head 5 -  Set nMiliSec = (5+ (i-1) ) * 1000
.head 5 +  If nMiliSec > 10000
.head 6 -  Set nMiliSec = 10000
.head 5 +  While i <= 8
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnPbc[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnBVc[i] ) )
.head 6 -  Call SalHideWindow( SalNumberToWindowHandle( wnDf_BVc[i] ) )
.head 6 -  Call SalHideWindow( wnBvcTh[i]  )
.head 6 -  Set i = i + 1
.head 3 +  Function: PalEtatGen_C
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Number: i
.head 4 +  Actions
.head 5 -  Set i = 1
.head 5 +  While i <= 8
.head 6 +  If SalIsWindowVisible( SalNumberToWindowHandle( wnPbc[i] ) )
.head 7 -  Call PalEtatIndiv_C( wsInsCom[i] , i )
.head 6 -  Set i = i + 1
.head 3 +  Function: PalEtatIndiv_C
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Window Handle: hWnd
.head 4 +  Actions
.head 5 -  ! Bureau de Votes
.head 5 -  Call PalEtatIndiv_CTh( sIns, i)
.head 5 -  !
.head 5 -  Set hWnd = SalNumberToWindowHandle( wnBVc[i] )
.head 5 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_BVc[i] ),'---'  )
.head 5 -  Call hWnd.cMeter.SetProgress ( 0)
.head 5 -  Call SalColorSet(SalNumberToWindowHandle( wnPbc[i] ), COLOR_IndexWindow, COLOR_LightGray )
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Com_Ins = :sIns and A.Com_ins = B.Com_ins and B.Type = 'GE'  "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 +  If lnNbBV != 0
.head 6 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and A.Com_Ins = :sIns and @Upper(Bv_Statut) like 'ECR%' and A.Com_ins = B.Com_ins and B.Type = 'GE' "
.head 6 -  Set lsSelect =  lsSelect ||  " into :lnNbBV_ok "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 -  Call hWnd.cMeter.SetProgress ( lnNbBV_ok / lnNbBV * 100)
.head 6 +  If lnNbBV_ok = lnNbBV
.head 7 -  Call SalColorSet(SalNumberToWindowHandle( wnPbc[i] ), COLOR_IndexWindow, COLOR_LightGreen )
.head 6 -  Call SalSetWindowText( SalNumberToWindowHandle( wnDf_BVc[i] ), SalNumberToStrX(lnNbBV_ok,0) || '/' || SalNumberToStrX(lnNbBV,0)  )
.head 3 +  Function: PalEtatIndiv_CTh
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  String: lsNbBV
.head 5 -  String: lsNbPCT
.head 4 +  Actions
.head 5 -  ! BV
.head 5 -  Set lsSelect = "select NB_BV from base_commune A where type = 'GE' and com_ins = :sIns  "
.head 5 -  Set lsSelect = lsSelect || " into :lsNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Call SalSetWindowText( wnBvcTh[i] , "(" || lsNbBV ||")" )
.head 3 +  Function: PalBvcThHandle
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  Window Handle: hWnd
.head 5 -  Number: i
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsNom
.head 5 -  Number: nI
.head 4 +  Actions
.head 5 -  Set wnBvcTh[i] = hWnd
.head 3 -  !
.head 3 +  Function: PalChargeDonneeReport
.head 4 -  Description:
.head 4 -  Returns
.head 4 -  Parameters
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nBv
.head 5 -  Number: nNbBV_ok
.head 5 -  String: lsSelect
.head 5 -  Number: lnBVcTh
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Number: lnCanton_Bv[*]
.head 5 -  Number: lnCanton_Pct[*]
.head 5 -  Number: lnCanton_BvOk[*]
.head 5 -  Number: lnCanton_PctOk[*]
.head 5 -  Number: i
.head 5 -  Number: nRow
.head 5 -  String: sIns
.head 5 -  String: sTemp
.head 5 -  String: sCommune
.head 5 -  Long String: lsPhoto
.head 4 +  Actions
.head 5 -  Call SalTblReset( tblReport )
.head 5 -  ! Bureau de Votes Global
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and @Upper(Bv_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect =  lsSelect ||  " into :lnNbBV_ok "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  ! Pc Totalisation Global
.head 5 -  Set lsSelect = "Select count(*) from Pc_tot A, Base_commune B where Pct_no like '%' and A.Can_ins = B.Can_ins and B.Type = 'CA' 
	and exists (Select C.can_ins from Bur_vote C where C.BV_no like '%' and A.Can_ins = C.Can_ins  ) "
.head 5 +  If gsRestrCom != ''
.head 6 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 5 +  If gsRestrRegion != ''
.head 6 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 5 -  Set lsSelect =  lsSelect || " into :lnNbPCT "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 +  If lnNbPCT != 0
.head 6 -  Set lsSelect = "Select count(*) from Pc_tot  A, Base_commune B where Pct_no like '%' and @Upper(Pct_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 +  If gsRestrCom != ''
.head 7 -  Set lsSelect = lsSelect || " and  A.can_INS in (" || gsRestrCom || ") "
.head 6 +  If gsRestrRegion != ''
.head 7 -  Set lsSelect = lsSelect || " and Region in " || gsRestrRegion || " "
.head 6 -  Set lsSelect = lsSelect || " into :lnNbPCT_ok "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  ! Par canton
.head 5 -  Set wbActif = FALSE
.head 5 -  Set i = 1
.head 5 +  While i <= 14
.head 6 +  If SalIsWindowVisible( SalNumberToWindowHandle( wnPb[i] ) ) 
.head 7 -  Call PalEtatIndiv_Report( wsInsCan[i], i, lnCanton_Bv[i],lnCanton_BvOk[i],lnCanton_Pct[i],lnCanton_PctOk[i] )
.head 7 -  Set lsSelect = "Select "|| frmGenere.wsLabelCommune ||", A.com_ins , @decode( A.com_ins , A.can_ins, '', A.com_ins) 
	from Base_commune A 
	where A.Can_Ins = :wsInsCan[i] and A.Type = 'GE'  AND A.Vote_EL = :gnTypeVote
	Order by 3 ,2 "
.head 7 -  Set lsSelect = lsSelect || " into :sCommune, :sIns,:sTemp "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 +  While SqlFetchNext( ghSqlMain, Btmp )
.head 8 -  Set lsSelect = "Select count(*) from Bur_Vote where com_ins =:sIns "
.head 8 -  Set lsSelect = lsSelect || " into :nBv "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect )
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 -  !
.head 8 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and A.Com_Ins = :sIns and @Upper(Bv_Statut) like 'ECR%' and A.Com_ins = B.Com_ins and B.Type = 'GE' "
.head 8 -  Set lsSelect =  lsSelect ||  " into :nNbBV_ok "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect )
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 -  !
.head 8 -  Set lsSelect = "select NB_BV from base_commune A where type = 'GE' and com_ins = :sIns  "
.head 8 -  Set lsSelect = lsSelect || " into :lnBVcTh "
.head 8 -  Call SqlPrepareAndExecute( ghSqlSecondaire, lsSelect )
.head 8 -  Call SqlFetchNext( ghSqlSecondaire, Btmp )
.head 8 -  !
.head 8 -  Set nRow = SalTblInsertRow( tblReport, TBL_MaxRow )
.head 8 +  If nRow != TBL_Error
.head 9 -  Call SalTblSetContext( tblReport, nRow )
.head 9 -  Call SalTblSetFocusRow( tblReport, nRow )
.head 9 -  Set tblReport.colTitre = SalGetWindowTextX( frmStat  )
.head 9 -  Set tblReport.colBv = lnNbBV
.head 9 -  Set tblReport.colBvOk = lnNbBV_ok
.head 9 -  Set tblReport.colBvTh = PalStrThToNumber( dfBV_Th)
.head 9 -  Set tblReport.colPct = lnNbPCT
.head 9 -  Set tblReport.colPctOk = lnNbPCT_ok
.head 9 -  Set tblReport.colPctTh = PalStrThToNumber( dfPCT_Th)
.head 9 +  If wsInsCan[i] = sIns
.head 10 -  Set tblReport.colInsCanton = wsInsCan[i]
.head 9 +  Else
.head 10 -  Set tblReport.colInsCanton = ''
.head 9 -  Set tblReport.colCanton = SalGetWindowTextX( SalNumberToWindowHandle( wnPb[i] )  )
.head 9 -  Set tblReport.colBvCanton = lnCanton_Bv[i]
.head 9 -  Set tblReport.colBvCantonOk = lnCanton_BvOk[i]
.head 9 -  Set tblReport.colBvCantonTh = PalStrThToNumber(SalGetWindowTextX( wnBvTh[i] ))
.head 9 -  Set tblReport.colPctCanton = lnCanton_Pct[i]
.head 9 -  Set tblReport.colPctCantonOk = lnCanton_PctOk[i]
.head 9 -  Set tblReport.colPctCantonTh = PalStrThToNumber(SalGetWindowTextX( wnPctTh[i] ))
.head 9 -  Set tblReport.colCommune = sIns || ' - ' || sCommune
.head 9 -  Set tblReport.colBvCom = nBv
.head 9 -  Set tblReport.colBvComOk = nNbBV_ok
.head 9 -  Set tblReport.colBvComTh = lnBVcTh
.head 9 -  Set tblReport.colLangue = gsLangueSoft
.head 6 -  Set i = i + 1
.head 3 +  Function: PalEtatIndiv_Report
.head 4 -  Description:
.head 4 -  Returns
.head 4 +  Parameters
.head 5 -  String: sIns
.head 5 -  Number: i
.head 5 -  Receive Number: nBv
.head 5 -  Receive Number: nBvoK
.head 5 -  Receive Number: nPct
.head 5 -  Receive Number: nPctoK
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  String: lsSelect
.head 5 -  Number: lnNbBV
.head 5 -  Number: lnNbBV_V
.head 5 -  Number: lnNbBV_ok
.head 5 -  Number: lnNbPCT
.head 5 -  Number: lnNbPCT_ok
.head 5 -  Window Handle: hWnd
.head 5 -  Number: nEtat[*]
.head 4 +  Actions
.head 5 -  Set nEtat[i] = 0
.head 5 -  ! Bureau de Votes
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_Ins = :sIns and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 -  Set lsSelect = "Select count(*) from Bur_Vote A, Base_commune B where BV_no like '%' and A.Can_Ins = :sIns and bv_valide = 1 and A.Can_ins = B.Can_ins and B.Type = 'CA'  "
.head 5 -  Set lsSelect = lsSelect || " into :lnNbBV_V "
.head 5 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 5 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 5 +  If lnNbBV != 0
.head 6 -  Set lsSelect = "Select count(*) from Bur_vote A, Base_commune B where BV_no  like '%' and A.Can_Ins = :sIns and @Upper(Bv_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 -  Set lsSelect =  lsSelect ||  " into :lnNbBV_ok "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lnNbBV_V != lnNbBV
.head 7 -  Set nEtat[i] = -1
.head 6 +  Else If lnNbBV_ok = lnNbBV
.head 7 -  Set nEtat[i] = 1
.head 6 +  Else
.head 7 -  Set nEtat[i] = 0
.head 5 +  Else
.head 6 -  Set lnNbBV = 0
.head 6 -  Set lnNbBV_ok = 0
.head 5 -  ! Pc Totalisation
.head 5 -  Set lnNbPCT = 0
.head 5 -  Set lnNbPCT_ok = 0
.head 5 +  If lnNbBV > 0 and nEtat[i] >= -1
.head 6 -  Set lsSelect = "Select count(*) from Pc_tot A, Base_commune B where Pct_no like '%' and A.Can_Ins = :sIns and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 6 -  Set lsSelect =  lsSelect || " into :lnNbPCT "
.head 6 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 6 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 6 +  If lnNbPCT != 0
.head 7 -  Set lsSelect = "Select count(*) from Pc_tot  A, Base_commune B where Pct_no like '%' and A.Can_Ins = :sIns and @Upper(Pct_Statut) like 'ECR%' and A.Can_ins = B.Can_ins and B.Type = 'CA' "
.head 7 -  Set lsSelect = lsSelect || " into :lnNbPCT_ok "
.head 7 -  Call SqlPrepareAndExecute( ghSqlMain, lsSelect )
.head 7 -  Call SqlFetchNext( ghSqlMain, Btmp )
.head 7 +  If lnNbPCT_ok = lnNbPCT
.head 8 -  Set nEtat[i] = 2
.head 5 -  !
.head 5 -  Set nBv = lnNbBV
.head 5 -  Set nBvoK = lnNbBV_ok
.head 5 -  Set nPct = lnNbPCT
.head 5 -  Set nPctoK = lnNbPCT_ok
.head 3 +  Function: PalStrThToNumber
.head 4 -  Description:
.head 4 +  Returns
.head 5 -  Number:
.head 4 +  Parameters
.head 5 -  String: sIn
.head 4 -  Static Variables
.head 4 +  Local variables
.head 5 -  Number: nOut
.head 5 -  String: sTemp
.head 4 +  Actions
.head 5 -  Set sTemp = VisStrSubstitute( sIn, '(', '')
.head 5 -  Set sTemp = VisStrSubstitute( sTemp, ')', '')
.head 5 -  Set nOut = SalStrToNumber( sTemp )
.head 5 -  Return nOut
.head 2 -  Window Parameters
.head 2 +  Window Variables
.head 3 -  String: wsInsCan[*]
.head 3 -  Number: wnPb[*]
.head 3 -  Number: wnEtat[*]
.head 3 -  Number: wnBV[*]
.head 3 -  Window Handle: wnPic[*]
.head 3 -  Window Handle: wnBvTh[*]
.head 3 -  Window Handle: wnPctTh[*]
.head 3 -  Window Handle: wnBvcTh[*]
.head 3 -  Number: wnDf_BV[*]
.head 3 -  Number: wnPCT[*]
.head 3 -  Number: wnDf_PCT[*]
.head 3 -  Number: wnPbc[*]
.head 3 -  Number: wnBVc[*]
.head 3 -  Number: wnDf_BVc[*]
.head 3 -  Number: wnPCTc[*]
.head 3 -  Number: wnDf_PCTc[*]
.head 3 -  Number: nIndice
.head 3 -  String: wsInsCom[*]
.head 3 -  String: sInsCanton
.head 3 -  Number: nH
.head 3 -  Number: nL
.head 3 -  Number: nPassage
.head 3 -  Number: nMiliSec
.head 3 -  Boolean: wbPlay
.head 3 -  Boolean: wbActif
.head 3 -  Number: x
.head 3 -  Number: y
.head 3 -  !
.head 3 -  Number: nError
.head 3 -  !
.head 3 -  Number: wnRow
.head 3 -  Long String: lsPhoto
.head 3 -  Long String: lsCtrlBV
.head 3 -  Long String: lsCtrlPcTot
.head 3 -  String: wsTitre
.head 3 -  Number: wnBVT
.head 3 -  Number: wnBVTOk
.head 3 -  Number: wnBVTTh
.head 3 -  Number: wnPCTT
.head 3 -  Number: wnPCTTOk
.head 3 -  Number: wnPCTTTh
.head 3 -  String: wsCanton
.head 3 -  Number: wnBVca
.head 3 -  Number: wnBVcOk
.head 3 -  Number: wnBVcTh
.head 3 -  Number: wnPCTca
.head 3 -  Number: wnPCTcaOk
.head 3 -  Number: wnPCTcaTh
.head 3 -  String: wsCommune
.head 3 -  Number: wnBVco
.head 3 -  Number: wnBVcoOk
.head 3 -  Number: wnBVcoTh
.head 3 -  String: wsLangue
.head 3 -  Number: nReturn
.head 2 +  Message Actions
.head 3 +  On SAM_Create
.head 4 -  Call SalHideWindow( hWndForm )
.head 4 -  Set gbWinStat = TRUE
.head 4 -  Set wbPlay = TRUE
.head 4 -  Call SalCenterWindow( hWndForm )
.head 4 -  Set nIndice = 0
.head 3 +  On SAM_CreateComplete
.head 4 -  Call SalGetWindowSize( frmStat, nL, nH )
.head 4 -  Call PalDtmCanton(0)
.head 4 -  Call PalEtatGen()
.head 4 +  If gsLangueSoft = 'N'
.head 5 -  Call SalSetWindowText( hWndForm, 'Algemene stand van vooruitgang' )
.head 4 +  Else
.head 5 -  Call SalSetWindowText( hWndForm, 'Etat d\'avancement général' )
.head 4 -  ! !
.head 4 +  If wbActif
.head 5 -  Call PalClick()
.head 5 -  Call SalShowWindow( hWndForm )
.head 5 -  Call SalCenterWindow( hWndForm )
.head 5 -  Set nIndice = 0
.head 5 -  Call SalTimerSet( hWndForm, 50, 1 )
.head 5 -  Call SalCenterWindow( hWndForm )
.head 5 -  ! !
.head 4 +  Else
.head 5 +  If gsLangueSoft = 'N'
.head 6 -  Call SalMessageBox('Geen stembureau aanmakt voor deze kantons !!','Pas Op', MB_Ok | MB_IconHand )
.head 5 +  Else
.head 6 -  Call SalMessageBox('Aucun bureau de vote créé pour les cantons gérés !!','Message', MB_Ok | MB_IconHand )
.head 5 -  Call SalSendMsg( hWndForm, SAM_Close, 0,0)
.head 3 +  On SAM_Close
.head 4 -  Set gbWinStat = FALSE
.head 4 -  Call VisWinShow( frmGenere, SHOW_Normal )
.head 4 -  Call SalBringWindowToTop( frmGenere )
.head 4 -  Call SalTimerKill( hWndForm, 50 )
.head 3 +  On SAM_Timer
.head 4 -  Call SalTimerKill( hWndForm, 50 )
.head 4 -  Call PalEtatGen()
.head 4 +  If wParam != 5
.head 5 +  If wbPlay
.head 6 -  Set nIndice = nIndice + 1
.head 5 +  Else
.head 6 -  Set nIndice = nIndice
.head 5 +  If nIndice > 14 or NOT SalIsWindowVisible( SalNumberToWindowHandle( wnPb[nIndice] ) ) 
.head 6 -  Set nIndice = 1
.head 5 +  If wbActif
.head 6 +  While NOT SalIsWindowEnabled(  SalNumberToWindowHandle( wnPb[nIndice] )  )
.head 7 -  Set nIndice = nIndice + 1
.head 7 +  If nIndice > 14 or NOT SalIsWindowVisible( SalNumberToWindowHandle( wnPb[nIndice] ) ) 
.head 8 -  Set nIndice = 1
.head 4 +  Else
.head 5 -  Set nIndice = lParam
.head 4 +  If wbActif
.head 5 +  If wnEtat[nIndice] <= 0
.head 6 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[nIndice] ), COLOR_IndexWindowText, COLOR_Maize )
.head 6 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[nIndice] ), COLOR_IndexWindow, COLOR_Periwinkle )
.head 5 +  Else
.head 6 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[nIndice] ), COLOR_IndexWindowText, COLOR_DarkGreen )
.head 6 -  Call SalColorSet(SalNumberToWindowHandle( wnPb[nIndice] ), COLOR_IndexWindow, COLOR_Green )
.head 4 -  Call SalSetFocus( SalNumberToWindowHandle( wnPb[nIndice] ) )
.head 4 -  Call PalActiveCommune()
.head 4 -  Call SalTimerSet( hWndForm, 50, nMiliSec )
.head 4 +  If VisWinIsMinimized( frmStat )
.head 5 -  Call SalBringWindowToTop( frmGenere )
.head 3 +  On SAM_ReportFetchInit
.head 4 -  Set wnRow = -1
.head 4 -  Return TRUE
.head 3 +  On SAM_ReportFetchNext
.head 4 +  If SalTblFindNextRow( tblReport, wnRow, 0,0)
.head 5 -  Call SalTblSetContext( tblReport, wnRow )
.head 5 -  Call SalTblSetFocusRow( tblReport, wnRow )
.head 5 -  Set wsTitre = tblReport.colTitre
.head 5 -  Set wnBVT = tblReport.colBv 
.head 5 -  Set wnBVTOk = tblReport.colBvOk 
.head 5 -  Set wnBVTTh = tblReport.colBvTh 
.head 5 -  Set wnPCTT = tblReport.colPct
.head 5 -  Set wnPCTTOk = tblReport.colPctOk
.head 5 -  Set wnPCTTTh = tblReport.colPctTh
.head 5 -  Set wsCanton = tblReport.colCanton
.head 5 -  Set wnBVca = tblReport.colBvCanton
.head 5 -  Set wnBVcOk = tblReport.colBvCantonOk
.head 5 -  Set wnBVcTh = tblReport.colBvCantonTh
.head 5 -  Set wnPCTca = tblReport.colPctCanton 
.head 5 -  Set wnPCTcaOk = tblReport.colPctCantonOk
.head 5 -  Set wnPCTcaTh = tblReport.colPctCantonTh
.head 5 -  Set wsCommune = tblReport.colCommune
.head 5 -  Set wnBVco = tblReport.colBvCom
.head 5 -  Set wnBVcoOk = tblReport.colBvComOk
.head 5 -  Set wnBVcoTh =  tblReport.colBvComTh
.head 5 -  Set wsLangue=tblReport.colLangue
.head 5 +  If gsUserEID = '1'
.head 6 +  If gsUserLog = 'SYSADM'
.head 7 -  Call SalPicGetString( frmGenere.picUser_Photo, PIC_FormatObject, lsPhoto )
.head 6 +  Else
.head 7 -  Set lsPhoto = glsUserPhoto
.head 5 +  Else
.head 6 -  Set lsPhoto = ''
.head 5 -  Set lsCtrlBV = ''
.head 5 -  Set lsCtrlPcTot = ''
.head 5 +  If tblReport.colInsCanton != '' and wnPCTca = wnPCTcaOk and wnPCTca > 0
.head 6 -  Set nReturn = PalCtrlCanton( SalStrToNumber( tblReport.colInsCanton ) )
.head 6 +  If nReturn = 1
.head 7 -  Call SalPicSet(  PicCtrl , resOkBV, PIC_FormatBitmap )
.head 7 -  Call SalPicGetString( PicCtrl, PIC_FormatObject, lsCtrlBV )
.head 6 +  Else If nReturn = 2
.head 7 -  Call SalPicSet(  PicCtrl , resOkBV, PIC_FormatBitmap )
.head 7 -  Call SalPicGetString( PicCtrl, PIC_FormatObject, lsCtrlBV )
.head 7 -  Call SalPicSet(  PicCtrl , resOk, PIC_FormatBitmap )
.head 7 -  Call SalPicGetString( PicCtrl, PIC_FormatObject, lsCtrlPcTot )
.head 5 -  Return TRUE
.head 4 +  Else
.head 5 -  Set wnRow = -1
.head 5 -  Return FALSE
.head 1 -  !
.head 1 -  !
